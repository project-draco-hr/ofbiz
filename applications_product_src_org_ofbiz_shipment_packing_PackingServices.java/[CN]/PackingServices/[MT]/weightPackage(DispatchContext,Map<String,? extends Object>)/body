{
  PackingSession session=(PackingSession)context.get("packingSession");
  Locale locale=(Locale)context.get("locale");
  String packageLength=(String)context.get("packageLength");
  String packageWidth=(String)context.get("packageWidth");
  String packageHeight=(String)context.get("packageHeight");
  String packageSeqId=(String)context.get("packageSeqId");
  String packageWeight=(String)context.get("packageWeight");
  String shipmentBoxTypeId=(String)context.get("shipmentBoxTypeId");
  String weightPackageSeqId=(String)context.get("weightPackageSeqId");
  if (UtilValidate.isNotEmpty(packageLength) || UtilValidate.isNotEmpty(packageWidth) || UtilValidate.isNotEmpty(packageHeight)) {
    if (UtilValidate.isNotEmpty(shipmentBoxTypeId)) {
      session.setDimensionAndShipmentBoxType(packageSeqId);
      return ServiceUtil.returnError(UtilProperties.getMessage("ProductErrorUiLabels","ProductErrorEnteredBothDimensionAndPackageInputBoxField",locale));
    }
 else     if (!(UtilValidate.isNotEmpty(packageLength) && UtilValidate.isNotEmpty(packageWidth) && UtilValidate.isNotEmpty(packageHeight))) {
      session.setDimensionAndShipmentBoxType(packageSeqId);
      return ServiceUtil.returnError(UtilProperties.getMessage("ProductErrorUiLabels","ProductErrorNotEnteredAllFieldsInDimension",locale));
    }
  }
  if (UtilValidate.isEmpty(packageWeight) || new BigDecimal(packageWeight).compareTo(ZERO) <= 0) {
    return ServiceUtil.returnError(UtilProperties.getMessage("ProductErrorUiLabels","ProductErrorPackageWeightCannotBeNullOrZero",locale));
  }
  BigDecimal shippableWeight=ZERO;
  Map<String,Object> response=FastMap.newInstance();
  session.setPackageLength(packageSeqId,packageLength);
  session.setPackageWidth(packageSeqId,packageWidth);
  session.setPackageHeight(packageSeqId,packageHeight);
  session.setShipmentBoxTypeId(packageSeqId,shipmentBoxTypeId);
  if (UtilValidate.isNotEmpty(packageWeight)) {
    BigDecimal packWeight=new BigDecimal(packageWeight);
    session.setPackageWeight(Integer.parseInt(packageSeqId),packWeight);
    shippableWeight=shippableWeight.add(packWeight);
  }
 else {
    session.setPackageWeight(Integer.parseInt(packageSeqId),null);
  }
  session.setWeightPackageSeqId(packageSeqId,weightPackageSeqId);
  response.put("dimensionSavedInSession",true);
  return response;
}
