{
  Map result=new HashMap();
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  String workEffortId=(String)context.get("workEffortId");
  String limitService=(String)context.get("serviceName");
  Map limitContext=(Map)context.get("serviceContext");
  try {
    WorkflowClient client=WfFactory.getClient(ctx);
    String state=client.getState(workEffortId);
    if (state.startsWith("open")) {
      dispatcher.runSync(limitService,limitContext);
    }
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  }
 catch (  WfException we) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,we.getMessage());
  }
catch (  GenericServiceException se) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,se.getMessage());
  }
  return result;
}
