{
  List allConditions=new ArrayList();
  if (facilityId != null) {
    allConditions.add(EntityCondition.makeCondition("originFacilityId",EntityOperator.EQUALS,facilityId));
  }
  if (filterDate != null) {
    List andExprs=new ArrayList();
    andExprs.add(EntityCondition.makeCondition("orderDate",EntityOperator.GREATER_THAN_EQUAL_TO,UtilDateTime.getDayStart(filterDate)));
    andExprs.add(EntityCondition.makeCondition("orderDate",EntityOperator.LESS_THAN_EQUAL_TO,UtilDateTime.getDayEnd(filterDate)));
    allConditions.add(EntityCondition.makeCondition(andExprs,EntityOperator.AND));
  }
  List statusConditions=new ArrayList();
  for (Iterator iter=orderStatusState.keySet().iterator(); iter.hasNext(); ) {
    String status=(String)iter.next();
    if (!hasStatus(status))     continue;
    statusConditions.add(EntityCondition.makeCondition("statusId",EntityOperator.EQUALS,parameterToOrderStatusId.get(status)));
  }
  List typeConditions=new ArrayList();
  for (Iterator iter=orderTypeState.keySet().iterator(); iter.hasNext(); ) {
    String type=(String)iter.next();
    if (!hasType(type))     continue;
    typeConditions.add(EntityCondition.makeCondition("orderTypeId",EntityOperator.EQUALS,parameterToOrderTypeId.get(type)));
  }
  EntityCondition statusConditionsList=EntityCondition.makeCondition(statusConditions,EntityOperator.OR);
  EntityCondition typeConditionsList=EntityCondition.makeCondition(typeConditions,EntityOperator.OR);
  if (statusConditions.size() > 0) {
    allConditions.add(statusConditionsList);
  }
  if (typeConditions.size() > 0) {
    allConditions.add(typeConditionsList);
  }
  EntityCondition queryConditionsList=EntityCondition.makeCondition(allConditions,EntityOperator.AND);
  EntityFindOptions options=new EntityFindOptions(true,EntityFindOptions.TYPE_SCROLL_INSENSITIVE,EntityFindOptions.CONCUR_READ_ONLY,true);
  options.setMaxRows(viewSize * (viewIndex + 1));
  EntityListIterator iterator=delegator.find("OrderHeader",queryConditionsList,null,null,UtilMisc.toList("orderDate DESC"),options);
  List orders=iterator.getPartialList(viewSize * viewIndex,viewSize);
  orderListSize=iterator.getResultsSizeAfterPartialList();
  iterator.close();
  return orders;
}
