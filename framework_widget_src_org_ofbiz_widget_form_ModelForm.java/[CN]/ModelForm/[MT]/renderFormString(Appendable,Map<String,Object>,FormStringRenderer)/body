{
  if ("list".equals(this.type) || "multi".equals(this.type)) {
    this.incrementPaginatorNumber(context);
  }
  context.put("viewIndex",this.getViewIndex(context));
  context.put("viewSize",this.getViewSize(context));
  runFormActions(context);
  setWidgetBoundaryComments(context);
  if ("list".equals(this.type) || "multi".equals(this.type)) {
    context.put("useRequestParameters",Boolean.FALSE);
  }
  int positions=1;
  for (  ModelFormField modelFormField : this.fieldList) {
    int curPos=modelFormField.getPosition();
    if (curPos > positions) {
      positions=curPos;
    }
    ModelFormField.FieldInfo currentFieldInfo=modelFormField.getFieldInfo();
    if (currentFieldInfo != null) {
      ModelFormField fieldInfoFormField=currentFieldInfo.getModelFormField();
      if (fieldInfoFormField != null) {
        fieldInfoFormField.setModelForm(this);
      }
    }
 else {
      throw new IllegalArgumentException("Error rendering form, a field has no FieldInfo, ie no sub-element for the type of field for field named: " + modelFormField.getName());
    }
  }
  if ("single".equals(this.type)) {
    this.renderSingleFormString(writer,context,formStringRenderer,positions);
  }
 else   if ("list".equals(this.type)) {
    this.renderListFormString(writer,context,formStringRenderer,positions);
  }
 else   if ("multi".equals(this.type)) {
    this.renderMultiFormString(writer,context,formStringRenderer,positions);
  }
 else   if ("upload".equals(this.type)) {
    this.renderSingleFormString(writer,context,formStringRenderer,positions);
  }
 else {
    if (UtilValidate.isEmpty(this.getType())) {
      throw new IllegalArgumentException("The form 'type' tag is missing or empty on the form with the name " + this.getName());
    }
 else {
      throw new IllegalArgumentException("The form type " + this.getType() + " is not supported for form with name "+ this.getName());
    }
  }
}
