{
  autoFieldsServices.add(autoFieldsService);
  ModelService modelService=null;
  try {
    modelService=this.dispatchContext.getModelService(autoFieldsService.serviceName);
  }
 catch (  GenericServiceException e) {
    String errmsg="Error finding Service with name " + autoFieldsService.serviceName + " for auto-fields-service in a form widget";
    Debug.logError(e,errmsg,module);
    throw new IllegalArgumentException(errmsg);
  }
  for (  ModelParam modelParam : modelService.getInModelParamList()) {
    if ("userLogin".equals(modelParam.name) || "locale".equals(modelParam.name) || "timeZone".equals(modelParam.name)|| "login.username".equals(modelParam.name)|| "login.password".equals(modelParam.name)) {
      continue;
    }
    if (modelParam.formDisplay) {
      if (UtilValidate.isNotEmpty(modelParam.entityName) && UtilValidate.isNotEmpty(modelParam.fieldName)) {
        ModelEntity modelEntity;
        try {
          modelEntity=this.entityModelReader.getModelEntity(modelParam.entityName);
          if (modelEntity != null) {
            ModelField modelField=modelEntity.getField(modelParam.fieldName);
            if (modelField != null) {
              ModelFormField modelFormField=this.addFieldFromEntityField(modelEntity,modelField,autoFieldsService.defaultFieldType,autoFieldsService.defaultPosition);
              if (UtilValidate.isNotEmpty(autoFieldsService.mapName)) {
                modelFormField.setMapName(autoFieldsService.mapName);
              }
              modelFormField.setRequiredField(!modelParam.optional);
              continue;
            }
          }
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,module);
        }
      }
      ModelFormField modelFormField=this.addFieldFromServiceParam(modelService,modelParam,autoFieldsService.defaultFieldType,autoFieldsService.defaultPosition);
      if (UtilValidate.isNotEmpty(autoFieldsService.mapName)) {
        modelFormField.setMapName(autoFieldsService.mapName);
      }
    }
  }
}
