{
  if (!modelFormField.isUseWhenEmpty() || useWhenFields.contains(modelFormField.getName())) {
    useWhenFields.add(modelFormField.getName());
    boolean inserted=false;
    for (int i=0; i < fieldList.size(); i++) {
      ModelFormField curField=fieldList.get(i);
      if (curField.getName() != null && curField.getName().equals(modelFormField.getName())) {
        fieldList.add(i,modelFormField);
        inserted=true;
        break;
      }
    }
    if (!inserted) {
      fieldList.add(modelFormField);
    }
    return modelFormField;
  }
 else {
    ModelFormField existingField=fieldMap.get(modelFormField.getName());
    if (existingField != null) {
      existingField.mergeOverrideModelFormField(modelFormField);
      return existingField;
    }
 else {
      fieldList.add(modelFormField);
      fieldMap.put(modelFormField.getName(),modelFormField);
      return modelFormField;
    }
  }
}
