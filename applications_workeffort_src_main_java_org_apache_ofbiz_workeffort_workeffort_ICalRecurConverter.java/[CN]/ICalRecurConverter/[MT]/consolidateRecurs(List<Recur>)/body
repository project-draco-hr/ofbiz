{
  Set<Integer> monthList=new HashSet<Integer>();
  Set<Integer> monthDayList=new HashSet<Integer>();
  Set<WeekDay> weekDayList=new HashSet<WeekDay>();
  Set<Integer> hourList=new HashSet<Integer>();
  Set<Integer> minuteList=new HashSet<Integer>();
  String freq=null;
  int freqCount=0;
  for (  Recur recur : recurList) {
    monthList.addAll(recur.getMonthList());
    monthDayList.addAll(recur.getMonthDayList());
    weekDayList.addAll(recur.getDayList());
    hourList.addAll(recur.getHourList());
    minuteList.addAll(recur.getMinuteList());
    if (recur.getInterval() != 0) {
      freq=recur.getFrequency();
      freqCount=recur.getInterval();
    }
  }
  if (freq == null && monthList.size() > 0) {
    freq=Recur.MONTHLY;
  }
 else   if (freq == null && (monthDayList.size() > 0 || weekDayList.size() > 0)) {
    freq=Recur.DAILY;
  }
 else   if (freq == null && hourList.size() > 0) {
    freq=Recur.HOURLY;
  }
 else   if (freq == null && minuteList.size() > 0) {
    freq=Recur.MINUTELY;
  }
  if (freq == null) {
    throw new IllegalStateException("Unable to convert intersection");
  }
  Recur newRecur=new Recur(freq,0);
  if (freqCount != 0) {
    newRecur.setInterval(freqCount);
  }
  newRecur.getMonthList().addAll(monthList);
  newRecur.getMonthDayList().addAll(monthDayList);
  newRecur.getDayList().addAll(weekDayList);
  newRecur.getHourList().addAll(hourList);
  newRecur.getMinuteList().addAll(minuteList);
  return newRecur;
}
