{
  this.type=UtilXml.checkEmpty(fieldTypeElement.getAttribute("type")).intern();
  this.javaType=UtilXml.checkEmpty(fieldTypeElement.getAttribute("java-type")).intern();
  this.sqlType=UtilXml.checkEmpty(fieldTypeElement.getAttribute("sql-type")).intern();
  this.sqlTypeAlias=UtilXml.checkEmpty(fieldTypeElement.getAttribute("sql-type-alias")).intern();
  NodeList validateList=fieldTypeElement.getElementsByTagName("validate");
  for (int i=0; i < validateList.getLength(); i++) {
    Element element=(Element)validateList.item(i);
    String methodName=element.getAttribute("method");
    String className=element.getAttribute("class");
    if (methodName != null) {
      this.validators.add(new ModelFieldValidator(className.intern(),methodName.intern()));
    }
  }
  ((ArrayList<ModelFieldValidator>)this.validators).trimToSize();
  if (this.javaType != null) {
    ClassLoader loader=Thread.currentThread().getContextClassLoader();
    try {
      this.javaClass=loader.loadClass(this.javaType);
    }
 catch (    ClassNotFoundException e) {
      Debug.logError(e,module);
    }
  }
}
