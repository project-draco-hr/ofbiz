{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.attributeNames(simpleMethod,element,"service-name","map","to-map","mode");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"service-name","map","to-map");
    MiniLangValidate.constantPlusExpressionAttributes(simpleMethod,element,"service-name");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"map","to-map");
    MiniLangValidate.constantAttributes(simpleMethod,element,"mode");
    MiniLangValidate.noChildElements(simpleMethod,element);
  }
  boolean elementModified=autoCorrect(element);
  if (elementModified && MiniLangUtil.autoCorrectOn()) {
    MiniLangUtil.flagDocumentAsCorrected(element);
  }
  serviceNameFse=FlexibleStringExpander.getInstance(element.getAttribute("service-name"));
  mapFma=FlexibleMapAccessor.getInstance(element.getAttribute("map"));
  toMapFma=FlexibleMapAccessor.getInstance(element.getAttribute("to-map"));
  mode=ModelService.OUT_PARAM.equals(element.getAttribute("mode")) ? ModelService.OUT_PARAM : ModelService.IN_PARAM;
}
