{
  Map<String,? extends Object> fromMap=mapFma.get(methodContext.getEnvMap());
  if (fromMap == null) {
    if (Debug.verboseOn()) {
      Debug.logVerbose("The from map in set-service-field was not found with name: " + mapFma,module);
    }
    return true;
  }
  String serviceName=serviceNameFse.expandString(methodContext.getEnvMap());
  ModelService modelService=null;
  try {
    modelService=methodContext.getDispatcher().getDispatchContext().getModelService(serviceName);
  }
 catch (  GenericServiceException e) {
    throw new MiniLangRuntimeException("Could not get service definition for service name \"" + serviceName + "\": "+ e.getMessage(),this);
  }
  Map<String,Object> toMap=toMapFma.get(methodContext.getEnvMap());
  if (toMap == null) {
    toMap=new HashMap<String,Object>();
    toMapFma.put(methodContext.getEnvMap(),toMap);
  }
  List<Object> errorMessages=new LinkedList<Object>();
  Map<String,Object> validAttributes=modelService.makeValid(fromMap,mode,true,errorMessages,methodContext.getTimeZone(),methodContext.getLocale());
  if (errorMessages.size() > 0) {
    for (    Object obj : errorMessages) {
      simpleMethod.addErrorMessage(methodContext,(String)obj);
    }
    throw new MiniLangRuntimeException("Errors encountered while setting service attributes for service name \"" + serviceName + "\"",this);
  }
  toMap.putAll(validAttributes);
  return true;
}
