{
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> result=FastMap.newInstance();
  String externalId=(String)context.get("externalId");
  List orderList=(List)context.get("orderList");
  try {
    if (UtilValidate.isNotEmpty(orderList)) {
      Iterator<Map<String,Object>> orderListIter=orderList.iterator();
      while (orderListIter.hasNext()) {
        Map<String,Object> orderMapCtx=orderListIter.next();
        if (externalId.equals(orderMapCtx.get("externalId").toString())) {
          context.clear();
          context.putAll(orderMapCtx);
          break;
        }
      }
    }
    result=createShoppingCart(delegator,dispatcher,locale,context,true);
  }
 catch (  Exception e) {
    Debug.logError("Exception in importOrderFromEbay " + e,module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.exceptionInImportOrderFromEbay",locale));
  }
  if (UtilValidate.isNotEmpty(orderImportSuccessMessageList)) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
    result.put(ModelService.SUCCESS_MESSAGE_LIST,orderImportSuccessMessageList);
  }
  if (UtilValidate.isNotEmpty(orderImportSuccessMessageList)) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_FAIL);
    result.put(ModelService.ERROR_MESSAGE_LIST,orderImportFailureMessageList);
  }
  return result;
}
