{
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> result=FastMap.newInstance();
  try {
    Map<String,Object> eBayConfigResult=EbayHelper.buildEbayConfig(context,delegator);
    StringBuffer getOrdersXml=new StringBuffer();
    if (!ServiceUtil.isFailure(buildGetOrdersRequest(context,getOrdersXml,eBayConfigResult.get("token").toString()))) {
      result=EbayHelper.postItem(eBayConfigResult.get("xmlGatewayUri").toString(),getOrdersXml,eBayConfigResult.get("devID").toString(),eBayConfigResult.get("appID").toString(),eBayConfigResult.get("certID").toString(),"GetOrders",eBayConfigResult.get("compatibilityLevel").toString(),eBayConfigResult.get("siteID").toString());
      String responseMsg=(String)result.get(ModelService.SUCCESS_MESSAGE);
      if (responseMsg != null) {
        result=checkOrders(delegator,dispatcher,locale,context,responseMsg);
      }
    }
  }
 catch (  Exception e) {
    String errMsg=UtilProperties.getMessage(resource,"buildEbayConfig.exceptionInGetOrdersFromEbay" + e.getMessage(),locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (orderImportSuccessMessageList != null && orderImportSuccessMessageList.size() > 0) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
    result.put(ModelService.SUCCESS_MESSAGE_LIST,orderImportSuccessMessageList);
  }
  if (orderImportFailureMessageList != null && orderImportFailureMessageList.size() > 0) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_FAIL);
    result.put(ModelService.ERROR_MESSAGE_LIST,orderImportFailureMessageList);
  }
  return result;
}
