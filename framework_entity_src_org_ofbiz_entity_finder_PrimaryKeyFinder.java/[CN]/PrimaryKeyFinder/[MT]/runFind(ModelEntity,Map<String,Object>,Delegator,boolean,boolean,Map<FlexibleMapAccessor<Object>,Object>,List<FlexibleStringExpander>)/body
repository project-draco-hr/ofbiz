{
  Map<String,Object> entityContext=FastMap.newInstance();
  if (autoFieldMap) {
    GenericValue tempVal=delegator.makeValue(modelEntity.getEntityName());
    Map<String,Object> parametersObj=UtilMisc.toMap(UtilGenerics.checkMap(context.get("parameters")));
    if (parametersObj != null && parametersObj instanceof Map<?,?>) {
      parametersObj.put("locale",context.get("locale"));
      parametersObj.put("timeZone",context.get("timeZone"));
      modelEntity.convertFieldMapInPlace(parametersObj,delegator);
      entityContext.remove("locale");
      entityContext.remove("timeZone");
      tempVal.setAllFields(parametersObj,true,null,Boolean.TRUE);
    }
    tempVal.setAllFields(context,true,null,Boolean.TRUE);
    entityContext.putAll(tempVal);
  }
  EntityFinderUtil.expandFieldMapToContext(fieldMap,context,entityContext);
  Set<String> fieldsToSelect=EntityFinderUtil.makeFieldsToSelect(selectFieldExpanderList,context);
  if (fieldsToSelect != null && useCache) {
    throw new IllegalArgumentException("Error in entity-one definition, cannot specify select-field elements when use-cache is set to true");
  }
  try {
    GenericValue valueOut=null;
    GenericPK entityPK=delegator.makePK(modelEntity.getEntityName(),entityContext);
    if (entityPK.containsPrimaryKey(true)) {
      if (useCache) {
        valueOut=delegator.findOne(entityPK.getEntityName(),entityPK,true);
      }
 else {
        if (fieldsToSelect != null) {
          valueOut=delegator.findByPrimaryKeyPartial(entityPK,fieldsToSelect);
        }
 else {
          valueOut=delegator.findOne(entityPK.getEntityName(),entityPK,false);
        }
      }
    }
 else {
      if (Debug.infoOn())       Debug.logInfo("Returning null because found incomplete primary key in find: " + entityPK,module);
    }
    return valueOut;
  }
 catch (  GenericEntityException e) {
    String errMsg="Error finding entity value by primary key with entity-one: " + e.toString();
    Debug.logError(e,errMsg,module);
    throw new GeneralException(errMsg,e);
  }
}
