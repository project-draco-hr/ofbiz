{
  List<GenericValue> assocValueList=null;
  try {
    assocValueList=delegator.findByAndCache("Content",UtilMisc.toMap("contentTypeId",parentPlaceholderId));
  }
 catch (  GenericEntityException e) {
    throw new GeneralException(e.getMessage());
  }
  List<Map<String,Object>> staticValueList=FastList.newInstance();
  Iterator<GenericValue> it=assocValueList.iterator();
  int counter=0;
  while (it.hasNext()) {
    GenericValue content=it.next();
    String contentId=(String)content.get("contentId");
    String contentName=(String)content.get("contentName");
    String description=(String)content.get("description");
    Map<String,Object> map=FastMap.newInstance();
    map.put("contentId",contentId);
    map.put("contentName",contentName);
    map.put("description",description);
    Iterator<String[]> it2=permittedPublishPointList.iterator();
    while (it2.hasNext()) {
      String[] publishPointArray=it2.next();
      String publishPointId=publishPointArray[0];
      String fieldName=publishPointId;
      List<GenericValue> contentAssocList=content.getRelatedByAnd("ToContentAssoc",UtilMisc.toMap("contentId",publishPointId));
      List<GenericValue> filteredList=EntityUtil.filterByDate(contentAssocList);
      if (filteredList.size() > 0) {
        map.put(fieldName,"Y");
        GenericValue assoc=filteredList.get(0);
        Timestamp fromDate=(Timestamp)assoc.get("fromDate");
        map.put(fieldName + "FromDate",fromDate);
      }
 else {
        map.put(fieldName,"N");
      }
    }
    staticValueList.add(map);
    counter++;
  }
  return staticValueList;
}
