{
  GenericValue thisContent=delegator.findByPrimaryKey("Content",UtilMisc.toMap("contentId",contentId));
  if (thisContent == null)   throw new RuntimeException("No entity found for id=" + contentId);
  List condList=new ArrayList();
  Iterator iterType=typeList.iterator();
  while (iterType.hasNext()) {
    String type=(String)iterType.next();
    condList.add(new EntityExpr("contentAssocTypeId",EntityOperator.EQUALS,type));
  }
  EntityCondition conditionType=new EntityConditionList(condList,EntityOperator.OR);
  EntityCondition conditionMain=new EntityConditionList(UtilMisc.toList(new EntityExpr("contentId",EntityOperator.EQUALS,contentId),conditionType),EntityOperator.AND);
  List listAll=delegator.findByConditionCache("ContentAssoc",conditionMain,null,null);
  List listFiltered=EntityUtil.filterByDate(listAll);
  Iterator iter=listFiltered.iterator();
  while (iter.hasNext()) {
    GenericValue contentAssoc=(GenericValue)iter.next();
    String contentIdTo=contentAssoc.getString("contentIdTo");
    GenericValue contentTo=delegator.findByPrimaryKey("Content",UtilMisc.toMap("contentId",contentIdTo));
    int intLeafCount=0;
    Long leafCount=(Long)contentTo.get("childLeafCount");
    if (leafCount != null) {
      intLeafCount=leafCount.intValue();
    }
    contentTo.set("childLeafCount",new Long(intLeafCount + leafChangeAmount));
    if (branchChangeAmount != 0) {
      int intBranchCount=0;
      Long branchCount=(Long)contentTo.get("childBranchCount");
      if (branchCount != null) {
        intBranchCount=branchCount.intValue();
      }
      contentTo.set("childBranchCount",new Long(intBranchCount + branchChangeAmount));
    }
    contentTo.store();
    updateStatsBottomUp(delegator,contentIdTo,typeList,0,leafChangeAmount);
  }
  return;
}
