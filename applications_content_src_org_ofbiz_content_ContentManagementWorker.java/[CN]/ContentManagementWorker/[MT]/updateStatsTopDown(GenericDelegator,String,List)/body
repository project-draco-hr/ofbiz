{
  int subLeafCount=0;
  GenericValue thisContent=delegator.findByPrimaryKey("Content",UtilMisc.toMap("contentId",contentId));
  if (thisContent == null)   throw new RuntimeException("No entity found for id=" + contentId);
  List condList=new ArrayList();
  Iterator iterType=typeList.iterator();
  while (iterType.hasNext()) {
    String type=(String)iterType.next();
    condList.add(new EntityExpr("contentAssocTypeId",EntityOperator.EQUALS,type));
  }
  EntityCondition conditionMain=null;
  if (condList.size() > 0) {
    EntityCondition conditionType=new EntityConditionList(condList,EntityOperator.OR);
    conditionMain=new EntityConditionList(UtilMisc.toList(new EntityExpr("contentIdTo",EntityOperator.EQUALS,contentId),conditionType),EntityOperator.AND);
  }
 else {
    conditionMain=new EntityExpr("contentIdTo",EntityOperator.EQUALS,contentId);
  }
  List listAll=delegator.findByConditionCache("ContentAssoc",conditionMain,null,null);
  List listFiltered=EntityUtil.filterByDate(listAll);
  Iterator iter=listFiltered.iterator();
  while (iter.hasNext()) {
    GenericValue contentAssoc=(GenericValue)iter.next();
    String subContentId=contentAssoc.getString("contentId");
    subLeafCount+=updateStatsTopDown(delegator,subContentId,typeList);
  }
  if (subLeafCount == 0)   subLeafCount=1;
  thisContent.put("childBranchCount",new Long(listFiltered.size()));
  thisContent.put("childLeafCount",new Long(subLeafCount));
  thisContent.store();
  return subLeafCount;
}
