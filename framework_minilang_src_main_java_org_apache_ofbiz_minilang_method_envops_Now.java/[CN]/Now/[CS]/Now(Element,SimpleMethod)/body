{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    String tagName=element.getTagName();
    if ("now-date-to-env".equals(tagName) || "now-timestamp".equals(tagName)) {
      MiniLangValidate.handleError("Deprecated - use <now>",simpleMethod,element);
    }
    MiniLangValidate.attributeNames(simpleMethod,element,"field","type");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"field");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"field");
    MiniLangValidate.constantAttributes(simpleMethod,element,"type");
    MiniLangValidate.noChildElements(simpleMethod,element);
  }
  boolean elementModified=autoCorrect(element);
  if (elementModified && MiniLangUtil.autoCorrectOn()) {
    MiniLangUtil.flagDocumentAsCorrected(element);
  }
  this.fieldFma=FlexibleMapAccessor.getInstance(element.getAttribute("field"));
  this.type=element.getAttribute("type");
  Class<?> targetClass=null;
  try {
    if (!this.type.isEmpty()) {
      targetClass=ObjectType.loadClass(this.type);
    }
    if (targetClass == null) {
      targetClass=java.sql.Timestamp.class;
    }
    this.converter=Converters.getConverter(Long.class,targetClass);
  }
 catch (  ClassNotFoundException e) {
    throw new ValidationException(e.getMessage(),simpleMethod,element);
  }
}
