{
  basicTest(label,toConvert);
  Locale defaultLocale=Locale.getDefault();
  TimeZone defaultTimeZone=TimeZone.getDefault();
  try {
    Locale.setDefault(localeData.goodLocale);
    TimeZone.setDefault(localeData.goodTimeZone);
    assertEquals(label + ":default-timezone/locale",wanted,simpleTypeConvert(toConvert,type,format,null,null,true));
    assertNotEquals(label + ":bad-passed-timezone/locale",wanted,simpleTypeConvert(toConvert,type,format,localeData.badTimeZone,localeData.badLocale,true));
    Locale.setDefault(localeData.badLocale);
    TimeZone.setDefault(localeData.badTimeZone);
    assertNotEquals(label + ":bad-default-timezone/locale",wanted,simpleTypeConvert(toConvert,type,format,null,null,true));
    assertEquals(label + ":passed-timezone/locale",wanted,simpleTypeConvert(toConvert,type,format,localeData.goodTimeZone,localeData.goodLocale,true));
  }
  finally {
    Locale.setDefault(defaultLocale);
    TimeZone.setDefault(defaultTimeZone);
  }
}
