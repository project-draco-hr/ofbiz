{
  int[] idxToRemove=new int[chars.length];
  boolean process=false;
  int remIdx=0;
  for (int i=0; i < chars.length; i++) {
    if (((int)chars[i]) == 10 || ((int)chars[i]) == 8 || ((int)chars[i] == 27)) {
      idxToRemove[remIdx++]=i + 1;
    }
 else {
      process=true;
    }
  }
  if (chars.length == 1) {
    return process;
  }
  int toRemove=0;
  for (int i=0; i < idxToRemove.length; i++) {
    if (idxToRemove[i] > 0) {
      toRemove++;
    }
  }
  if (toRemove > 0) {
    if (chars.length - toRemove < 1) {
      return false;
    }
    char[] newChars=new char[chars.length - toRemove];
    int currentIndex=0;
    for (int i=0; i < chars.length; i++) {
      boolean appendChar=true;
      for (int x=0; x < idxToRemove.length; x++) {
        if ((idxToRemove[x] - 1) == i) {
          appendChar=false;
          continue;
        }
 else {
        }
      }
      if (appendChar) {
        newChars[currentIndex]=chars[i];
        currentIndex++;
      }
    }
  }
  return process;
}
