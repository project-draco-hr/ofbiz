{
  ModelService modelService=null;
  try {
    modelService=dispatchContext.getModelService(autoFieldsService.serviceName);
  }
 catch (  GenericServiceException e) {
    String errmsg="Error finding Service with name " + autoFieldsService.serviceName + " for auto-fields-service in a form widget";
    Debug.logError(e,errmsg,module);
    throw new IllegalArgumentException(errmsg);
  }
  for (  ModelParam modelParam : modelService.getInModelParamList()) {
    if (modelParam.internal) {
      continue;
    }
    if (modelParam.formDisplay) {
      if (UtilValidate.isNotEmpty(modelParam.entityName) && UtilValidate.isNotEmpty(modelParam.fieldName)) {
        ModelEntity modelEntity;
        try {
          modelEntity=entityModelReader.getModelEntity(modelParam.entityName);
          if (modelEntity != null) {
            ModelField modelField=modelEntity.getField(modelParam.fieldName);
            if (modelField != null) {
              ModelFormFieldBuilder builder=new ModelFormFieldBuilder();
              builder.setModelForm(this);
              builder.setName(modelField.getName());
              builder.setEntityName(modelEntity.getEntityName());
              builder.setFieldName(modelField.getName());
              builder.induceFieldInfoFromEntityField(modelEntity,modelField,autoFieldsService.defaultFieldType);
              if (UtilValidate.isNotEmpty(autoFieldsService.mapName)) {
                builder.setMapName(autoFieldsService.mapName);
              }
              builder.setRequiredField(!modelParam.optional);
              addUpdateField(builder,useWhenFields,fieldBuilderList,fieldBuilderMap);
              continue;
            }
          }
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,module);
        }
      }
      ModelFormFieldBuilder builder=new ModelFormFieldBuilder();
      builder.setModelForm(this);
      builder.setName(modelParam.name);
      builder.setServiceName(modelService.name);
      builder.setAttributeName(modelParam.name);
      builder.setTitle(modelParam.formLabel);
      builder.setRequiredField(!modelParam.optional);
      builder.induceFieldInfoFromServiceParam(modelService,modelParam,autoFieldsService.defaultFieldType);
      builder.setPosition(autoFieldsService.defaultPosition);
      if (UtilValidate.isNotEmpty(autoFieldsService.mapName)) {
        builder.setMapName(autoFieldsService.mapName);
      }
      addUpdateField(builder,useWhenFields,fieldBuilderList,fieldBuilderMap);
    }
  }
}
