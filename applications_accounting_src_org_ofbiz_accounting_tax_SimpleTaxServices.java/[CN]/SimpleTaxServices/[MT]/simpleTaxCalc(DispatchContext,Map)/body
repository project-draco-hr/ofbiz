{
  GenericDelegator delegator=dctx.getDelegator();
  String productStoreId=(String)context.get("productStoreId");
  String billToPartyId=(String)context.get("billToPartyId");
  List itemProductList=(List)context.get("itemProductList");
  List itemAmountList=(List)context.get("itemAmountList");
  List itemPriceList=(List)context.get("itemPriceList");
  List itemShippingList=(List)context.get("itemShippingList");
  Double orderShippingAmount=(Double)context.get("orderShippingAmount");
  GenericValue shippingAddress=(GenericValue)context.get("shippingAddress");
  String countryCode=null;
  String stateCode=null;
  if (shippingAddress != null) {
    countryCode=shippingAddress.getString("countryGeoId");
    stateCode=shippingAddress.getString("stateProvinceGeoId");
  }
  List orderAdjustments=new ArrayList();
  List itemAdjustments=new ArrayList();
  for (int i=0; i < itemProductList.size(); i++) {
    GenericValue product=(GenericValue)itemProductList.get(i);
    Double itemAmount=(Double)itemAmountList.get(i);
    Double itemPrice=(Double)itemPriceList.get(i);
    Double shippingAmount=(Double)itemShippingList.get(i);
    List taxList=null;
    if (shippingAddress != null) {
      taxList=getTaxAmount(delegator,product,productStoreId,billToPartyId,countryCode,stateCode,itemPrice.doubleValue(),itemAmount.doubleValue(),shippingAmount.doubleValue());
    }
    itemAdjustments.add(taxList);
  }
  if (orderShippingAmount.doubleValue() > 0) {
    List taxList=getTaxAmount(delegator,null,productStoreId,billToPartyId,countryCode,stateCode,0.00,0.00,orderShippingAmount.doubleValue());
    orderAdjustments.addAll(taxList);
  }
  Map result=UtilMisc.toMap("orderAdjustments",orderAdjustments,"itemAdjustments",itemAdjustments);
  return result;
}
