{
  String payPal=(String)context.get("paymentPayPal");
  String payPalEmail=(String)context.get("payPalEmail");
  String visaMC=(String)context.get("paymentVisaMC");
  String amEx=(String)context.get("paymentAmEx");
  String discover=(String)context.get("paymentDiscover");
  String ccAccepted=(String)context.get("paymentCCAccepted");
  String cashInPerson=(String)context.get("paymentCashInPerson");
  String cashOnPickup=(String)context.get("paymentCashOnPickup");
  String cod=(String)context.get("paymentCOD");
  String codPrePayDelivery=(String)context.get("paymentCODPrePayDelivery");
  String mocc=(String)context.get("paymentMOCC");
  String moneyXferAccepted=(String)context.get("paymentMoneyXferAccepted");
  String personalCheck=(String)context.get("paymentPersonalCheck");
  if (UtilValidate.isNotEmpty(payPal) && "on".equals(payPal)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","PayPal",itemDocument);
    if (UtilValidate.isNotEmpty(payPalEmail)) {
      UtilXml.addChildElementValue(itemElem,"PayPalEmailAddress",payPalEmail,itemDocument);
    }
  }
  if (UtilValidate.isNotEmpty(visaMC) && "on".equals(visaMC)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","VisaMC",itemDocument);
  }
  if (UtilValidate.isNotEmpty(amEx) && "on".equals(amEx)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","AmEx",itemDocument);
  }
  if (UtilValidate.isNotEmpty(discover) && "on".equals(discover)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","Discover",itemDocument);
  }
  if (UtilValidate.isNotEmpty(ccAccepted) && "on".equals(ccAccepted)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","CCAccepted",itemDocument);
  }
  if (UtilValidate.isNotEmpty(cashInPerson) && "on".equals(cashInPerson)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","CashInPerson",itemDocument);
  }
  if (UtilValidate.isNotEmpty(cashOnPickup) && "on".equals(cashOnPickup)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","CashOnPickup",itemDocument);
  }
  if (UtilValidate.isNotEmpty(cod) && "on".equals(cod)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","COD",itemDocument);
  }
  if (UtilValidate.isNotEmpty(codPrePayDelivery) && "on".equals(codPrePayDelivery)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","CODPrePayDelivery",itemDocument);
  }
  if (UtilValidate.isNotEmpty(mocc) && "on".equals(mocc)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","MOCC",itemDocument);
  }
  if (UtilValidate.isNotEmpty(moneyXferAccepted) && "on".equals(moneyXferAccepted)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","MoneyXferAccepted",itemDocument);
  }
  if (UtilValidate.isNotEmpty(personalCheck) && "on".equals(personalCheck)) {
    UtilXml.addChildElementValue(itemElem,"PaymentMethods","PersonalCheck",itemDocument);
  }
}
