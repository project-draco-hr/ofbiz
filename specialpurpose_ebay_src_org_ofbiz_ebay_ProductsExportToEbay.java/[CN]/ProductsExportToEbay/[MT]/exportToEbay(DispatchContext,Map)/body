{
  Locale locale=(Locale)context.get("locale");
  GenericDelegator delegator=dctx.getDelegator();
  Map result=null;
  try {
    List selectResult=(List)context.get("selectResult");
    List productsList=delegator.findList("Product",EntityCondition.makeCondition("productId",EntityOperator.IN,selectResult),null,null,null,false);
    if (UtilValidate.isNotEmpty(productsList)) {
      Iterator productsListIter=productsList.iterator();
      while (productsListIter.hasNext()) {
        GenericValue product=(GenericValue)productsListIter.next();
        Map<String,Object> eBayConfigResult=EbayHelper.buildEbayConfig(context,delegator);
        StringBuffer dataItemsXml=new StringBuffer();
        Map resultMap=buildDataItemsXml(dctx,context,dataItemsXml,eBayConfigResult.get("token").toString(),product);
        if (!ServiceUtil.isFailure(resultMap)) {
          result=postItem(eBayConfigResult.get("xmlGatewayUri").toString(),dataItemsXml,eBayConfigResult.get("devID").toString(),eBayConfigResult.get("appID").toString(),eBayConfigResult.get("certID").toString(),"AddItem",eBayConfigResult.get("compatibilityLevel").toString(),eBayConfigResult.get("siteID").toString());
          if (ServiceUtil.isFailure(result)) {
            return ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(result));
          }
        }
 else {
          return ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(resultMap));
        }
      }
    }
  }
 catch (  Exception e) {
    Debug.logError("Exception in exportToEbay " + e,module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToEbay.exceptionInExportToEbay",locale));
  }
  String responseMessage=UtilProperties.getMessage(resource,"productsExportToEbay.productItemsSentToEbay",locale);
  if (result != null) {
    Map response=exportToEbayResponse((String)result.get("successMessage"));
    if (UtilValidate.isNotEmpty(response) && "fail".equals(response.get("responseMessage"))) {
      responseMessage=(String)response.get("errorMessage");
      return ServiceUtil.returnError(responseMessage);
    }
 else     if (UtilValidate.isNotEmpty(response) && "success".equals(response.get("responseMessage"))) {
      responseMessage=(String)response.get("successMessage");
      return ServiceUtil.returnSuccess(responseMessage);
    }
  }
  return ServiceUtil.returnSuccess(responseMessage);
}
