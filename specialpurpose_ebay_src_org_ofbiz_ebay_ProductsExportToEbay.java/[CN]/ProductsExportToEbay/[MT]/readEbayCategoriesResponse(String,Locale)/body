{
  Map<String,Object> results=null;
  List<Map<String,Object>> categories=new LinkedList<Map<String,Object>>();
  try {
    Document docResponse=UtilXml.readXmlDocument(msg,true);
    Element elemResponse=docResponse.getDocumentElement();
    String ack=UtilXml.childElementValue(elemResponse,"Ack","Failure");
    if (ack != null && "Failure".equals(ack)) {
      String errorMessage="";
      for (      Element errorElement : UtilXml.childElementList(elemResponse,"Errors")) {
        errorMessage=UtilXml.childElementValue(errorElement,"ShortMessage","");
      }
      return ServiceUtil.returnFailure(errorMessage);
    }
 else {
      for (      Element categoryArrayElement : UtilXml.childElementList(elemResponse,"CategoryArray")) {
        for (        Element categoryElement : UtilXml.childElementList(categoryArrayElement,"Category")) {
          Map<String,Object> categ=new HashMap<String,Object>();
          String categoryCode=("true".equalsIgnoreCase((UtilXml.childElementValue(categoryElement,"LeafCategory","").trim())) ? "Y" : "N") + "_" + UtilXml.childElementValue(categoryElement,"CategoryID","").trim()+ "_"+ UtilXml.childElementValue(categoryElement,"CategoryLevel","").trim();
          categ.put("CategoryCode",categoryCode);
          categ.put("CategoryName",UtilXml.childElementValue(categoryElement,"CategoryName"));
          categories.add(categ);
        }
      }
      categories=UtilGenerics.cast(UtilMisc.sortMaps(UtilGenerics.<List<Map<Object,Object>>>cast(categories),UtilMisc.toList("CategoryName")));
      results=UtilMisc.toMap("categories",(Object)categories);
    }
  }
 catch (  Exception e) {
    return ServiceUtil.returnFailure();
  }
  return results;
}
