{
  List<String> availableLanguages=new ArrayList<String>();
  if (article == null || !article.getLocalized()) {
    Debug.logWarning("No Article is loaded from the repository, please load an article first before requesting the version list.",module);
    return availableLanguages;
  }
  Session session=super.access.getSession();
  try {
    Node node=session.getNode(article.getPath()).getParent();
    NodeIterator nodeList=node.getNodes();
    while (nodeList.hasNext()) {
      Node currentNodeToExtractLanguage=nodeList.nextNode();
      if (checkIfNodeHaveValidLanguageMixIn(currentNodeToExtractLanguage)) {
        String languageFlag=extractLanguageFlagFromNodePath(currentNodeToExtractLanguage.getPath());
        availableLanguages.add(languageFlag);
      }
    }
  }
 catch (  PathNotFoundException e) {
    Debug.logError(e,module);
  }
catch (  RepositoryException e) {
    Debug.logError(e,module);
  }
  return availableLanguages;
}
