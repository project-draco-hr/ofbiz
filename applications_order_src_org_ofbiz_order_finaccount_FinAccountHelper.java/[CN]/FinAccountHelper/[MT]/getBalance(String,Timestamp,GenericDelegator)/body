{
  BigDecimal incrementTotal=ZERO;
  BigDecimal decrementTotal=ZERO;
  GenericValue finAccount=delegator.findByPrimaryKeyCache("FinAccount",UtilMisc.toMap("finAccountId",finAccountId));
  String currencyUomId=finAccount.getString("currencyUomId");
  EntityConditionList incrementConditions=new EntityConditionList(UtilMisc.toList(new EntityExpr("finAccountId",EntityOperator.EQUALS,finAccountId),new EntityExpr("transactionDate",EntityOperator.LESS_THAN_EQUAL_TO,asOfDateTime),new EntityExpr("currencyUomId",EntityOperator.EQUALS,currencyUomId),new EntityConditionList(UtilMisc.toList(new EntityExpr("finAccountTransTypeId",EntityOperator.EQUALS,"DEPOSIT"),new EntityExpr("finAccountTransTypeId",EntityOperator.EQUALS,"ADJUSTMENT")),EntityOperator.OR)),EntityOperator.AND);
  List transSums=delegator.findByCondition("FinAccountTransSum",incrementConditions,UtilMisc.toList("amount"),null);
  incrementTotal=addFirstEntryAmount(incrementTotal,transSums,"amount",(decimals + 1),rounding);
  EntityConditionList decrementConditions=new EntityConditionList(UtilMisc.toList(new EntityExpr("finAccountId",EntityOperator.EQUALS,finAccountId),new EntityExpr("transactionDate",EntityOperator.LESS_THAN_EQUAL_TO,asOfDateTime),new EntityExpr("currencyUomId",EntityOperator.EQUALS,currencyUomId),new EntityExpr("finAccountTransTypeId",EntityOperator.EQUALS,"WITHDRAWAL")),EntityOperator.AND);
  transSums=delegator.findByCondition("FinAccountTransSum",decrementConditions,UtilMisc.toList("amount"),null);
  decrementTotal=addFirstEntryAmount(decrementTotal,transSums,"amount",(decimals + 1),rounding);
  return incrementTotal.subtract(decrementTotal).setScale(decimals,rounding);
}
