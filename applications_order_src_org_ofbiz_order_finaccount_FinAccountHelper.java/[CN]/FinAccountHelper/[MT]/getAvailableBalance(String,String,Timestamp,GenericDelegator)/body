{
  BigDecimal netBalance=getBalance(finAccountId,currencyUomId,asOfDateTime,delegator);
  EntityConditionList authorizationConditions=new EntityConditionList(UtilMisc.toList(new EntityExpr("finAccountId",EntityOperator.EQUALS,finAccountId),new EntityExpr("authorizationDate",EntityOperator.LESS_THAN_EQUAL_TO,asOfDateTime),new EntityExpr("currencyUomId",EntityOperator.EQUALS,currencyUomId),EntityUtil.getFilterByDateExpr(asOfDateTime)),EntityOperator.AND);
  List authSums=delegator.findByCondition("FinAccountAuthSum",authorizationConditions,UtilMisc.toList("amount"),null);
  BigDecimal authorizationsTotal=addFirstEntryAmount(ZERO,authSums,"amount",(decimals + 1),rounding);
  BigDecimal netAvailableBalance=netBalance.subtract(authorizationsTotal).setScale(decimals,rounding);
  return netAvailableBalance;
}
