{
  if (strElems == null) {
    return;
  }
  StringBuilder expr=new StringBuilder(this.hint);
  for (  StrElem elem : this.strElems) {
    elem.append(expr,context,timeZone,locale);
  }
  if (expr.length() > this.hint) {
synchronized (this) {
      this.hint=expr.length();
    }
  }
  try {
    Object obj=UelUtil.evaluate(context,openBracket + expr.toString() + closeBracket);
    if (obj != null) {
      buffer.append((String)ObjectType.simpleTypeConvert(obj,"String",null,timeZone,locale,false));
    }
  }
 catch (  PropertyNotFoundException e) {
    if (Debug.verboseOn()) {
      Debug.logVerbose("Error evaluating expression: " + e,module);
    }
  }
catch (  Exception e) {
    Debug.logError("Error evaluating expression: " + e,module);
  }
}
