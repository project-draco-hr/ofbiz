{
  if (length == 0) {
    return nullExpr;
  }
  if (!useCache) {
    return parse(chars,offset,length);
  }
  if (!expression.contains(openBracket)) {
    if (chars.length == length) {
      return new ConstSimpleElem(chars);
    }
 else {
      return new ConstOffsetElem(chars,offset,length);
    }
  }
  Key key=chars.length == length ? new SimpleKey(chars) : new OffsetKey(chars,offset,length);
  FlexibleStringExpander fse=exprCache.get(key);
  if (fse == null) {
synchronized (exprCache) {
      fse=parse(chars,offset,length);
      exprCache.put(key,fse);
    }
  }
  return fse;
}
