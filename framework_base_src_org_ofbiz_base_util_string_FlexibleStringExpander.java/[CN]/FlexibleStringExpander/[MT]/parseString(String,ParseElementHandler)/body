{
  if (original == null || original.length() == 0) {
    return;
  }
  int start=original.indexOf("${");
  if (start == -1) {
    handler.handleConstant(original,0);
    return;
  }
  int currentInd=0;
  int end=-1;
  while (start != -1) {
    end=original.indexOf("}",start);
    if (end == -1) {
      Debug.logWarning("Found a ${ without a closing } (curly-brace) in the String: " + original,module);
      break;
    }
    int possibleNestedStart=original.lastIndexOf("${",end);
    if (start != possibleNestedStart) {
      start=possibleNestedStart;
    }
    handler.handleConstant(original,currentInd,start);
    if (original.indexOf("bsh:",start + 2) == start + 2) {
      handler.handleBsh(original,start + 6,end);
    }
 else {
      handler.handleVariable(original,start + 2,end);
    }
    currentInd=end + 1;
    start=original.indexOf("${",currentInd);
  }
  if (currentInd < original.length()) {
    handler.handleConstant(original,currentInd);
  }
}
