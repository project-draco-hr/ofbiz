{
  if (UtilValidate.isEmpty(expression)) {
    return nullExpr;
  }
  if (!useCache) {
    return parse(expression);
  }
  if (!expression.contains(openBracket)) {
    return new ConstElem(expression.toCharArray(),0,expression.length());
  }
  FlexibleStringExpander fse=exprCache.get(expression);
  if (fse == null) {
synchronized (exprCache) {
      fse=parse(expression);
      exprCache.put(expression,fse);
    }
  }
  return fse;
}
