{
  Map result=new HashMap();
  GenericDelegator delegator=ctx.getDelegator();
  Security security=ctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  if (!security.hasEntityPermission("PARTYMGR","_REL_UPDATE",userLogin)) {
    String partyId=ServiceUtil.getPartyIdCheckSecurity(userLogin,security,context,result,"PARTYMGR","_UPDATE");
  }
  Locale locale=(Locale)context.get("locale");
  String errMsg=null;
  if (result.size() > 0)   return result;
  String partyIdFrom=(String)context.get("partyIdFrom");
  if (partyIdFrom == null) {
    partyIdFrom=(String)userLogin.getString("partyId");
  }
  String partyIdTo=(String)context.get("partyIdTo");
  if (partyIdTo == null) {
    errMsg=UtilProperties.getMessage(resource,"partyrelationshipservices.cannot_create_party_relationship_partyIdTo_null",locale);
    return ServiceUtil.returnError(errMsg);
  }
  String roleTypeIdFrom=(String)context.get("roleTypeIdFrom");
  if (roleTypeIdFrom == null) {
    roleTypeIdFrom="_NA_";
  }
  String roleTypeIdTo=(String)context.get("roleTypeIdTo");
  if (roleTypeIdTo == null) {
    roleTypeIdTo="_NA_";
  }
  GenericValue partyRelationship=null;
  try {
    partyRelationship=delegator.findByPrimaryKey("PartyRelationship",UtilMisc.toMap("partyIdFrom",partyIdFrom,"partyIdTo",partyIdTo,"roleTypeIdFrom",roleTypeIdFrom,"roleTypeIdTo",roleTypeIdTo,"fromDate",context.get("fromDate")));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    Map messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyrelationshipservices.could_not_update_party_relation_read",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (partyRelationship == null) {
    errMsg=UtilProperties.getMessage(resource,"partyrelationshipservices.could_not_update_party_relation_not_found",locale);
    return ServiceUtil.returnError(errMsg);
  }
  partyRelationship.setNonPKFields(context);
  try {
    partyRelationship.store();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    errMsg=UtilProperties.getMessage(resource,"partyrelationshipservices.could_not_update_party_relation_write",locale);
    return ServiceUtil.returnError(errMsg);
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
