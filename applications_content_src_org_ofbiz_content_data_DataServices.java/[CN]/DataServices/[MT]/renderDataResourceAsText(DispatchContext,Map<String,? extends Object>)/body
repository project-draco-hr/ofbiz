{
  Map<String,Object> results=new HashMap<String,Object>();
  Delegator delegator=dctx.getDelegator();
  Writer out=(Writer)context.get("outWriter");
  Map<String,Object> templateContext=UtilGenerics.checkMap(context.get("templateContext"));
  String dataResourceId=(String)context.get("dataResourceId");
  if (templateContext != null && UtilValidate.isEmpty(dataResourceId)) {
    dataResourceId=(String)templateContext.get("dataResourceId");
  }
  String mimeTypeId=(String)context.get("mimeTypeId");
  if (templateContext != null && UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId=(String)templateContext.get("mimeTypeId");
  }
  Locale locale=(Locale)context.get("locale");
  if (templateContext == null) {
    templateContext=new HashMap<String,Object>();
  }
  Writer outWriter=new StringWriter();
  DataResourceWorker.renderDataResourceAsText(delegator,dataResourceId,outWriter,templateContext,locale,mimeTypeId,true);
  try {
    out.write(outWriter.toString());
    results.put("textData",outWriter.toString());
  }
 catch (  IOException e) {
    Debug.logError(e,"Error rendering sub-content text",module);
    return ServiceUtil.returnError(e.toString());
  }
  return results;
}
