{
  loadData="1";
  sleepTime=1000;
  assertGetObject("Fetch data first time, blocking",loadData,1,950000000,1200000000);
  loadData="2";
  sleepTime=100;
  assertGetObject("Not called all the time","1",1,0,100000000);
  Thread.sleep(300);
  assertGetObject("Stale data, starting regen","1",1,0,100000000);
  Thread.sleep(300);
  assertGetObject("Refreshed with old data",loadData,2,0,100000000);
  loadData="3";
  sleepTime=1000;
  Thread.sleep(200);
  assertGetObject("Load called, serve stale data","2",2,0,100000000);
  Thread.sleep(200);
  assertGetObject("Load called, serve stale data","2",2,0,100000000);
  Thread.sleep(200);
  assertGetObject("Load called, serve stale data","2",2,0,100000000);
  Thread.sleep(800);
  assertGetObject("Serve new data",loadData,3,0,100000000);
  object.set("a");
  assertGetObject("Serve set data(a)","a",3,0,100000000);
  Thread.sleep(500);
  object.set("b");
  assertGetObject("Serve set data(b)","b",3,0,100000000);
  Thread.sleep(300);
  loadData="4";
  sleepTime=200;
  Future<Void> future=schedule(new Callable<Void>(){
    public Void call(){
      object.refresh();
      return null;
    }
  }
,50);
  assertGetObject("Refreshed with old data","b",3,0,100000000);
  Thread.sleep(100);
  assertGetObject("Refreshed with old data","b",3,0,100000000);
  Thread.sleep(350);
  assertGetObject("Refreshed with old data","4",5,0,100000000);
  object.set("5");
  assertGetObject("set new data","5",5,0,100000000);
  TTLObject.pulseAll();
  sleepTime=200;
  loadData="c";
  object.set("5");
  object.refresh();
  assertGetObject("refresh after set","5",5,0,100000000);
  Thread.sleep(300);
  assertGetObject("refresh after set","c",6,0,100000000);
}
