{
  GenericValue newValue=(GenericValue)context.get("newValue");
  String fieldName=(String)context.get("fieldName");
  if (newValue == null) {
    return ServiceUtil.returnSuccess();
  }
  GenericValue currentValue=null;
  try {
    currentValue=dctx.getDelegator().findOne(newValue.getEntityName(),newValue.getPrimaryKey(),false);
  }
 catch (  GenericEntityException e) {
    String errMsg="Error finding currentValue for primary key [" + newValue.getPrimaryKey() + "]: "+ e.toString();
    Debug.logError(e,errMsg,module);
  }
  if (currentValue != null) {
    if (UtilValidate.isNotEmpty(fieldName)) {
      Object currentFieldValue=currentValue.get(fieldName);
      Object newFieldValue=newValue.get(fieldName);
      boolean changed=false;
      if (currentFieldValue != null) {
        if (!currentFieldValue.equals(newFieldValue)) {
          changed=true;
        }
      }
 else {
        if (newFieldValue != null) {
          changed=true;
        }
      }
      if (changed) {
        String errMsg="Watching entity [" + currentValue.getEntityName() + "] field ["+ fieldName+ "] value changed from ["+ currentFieldValue+ "] to ["+ newFieldValue+ "] for pk ["+ newValue.getPrimaryKey()+ "]";
        Debug.log(new Exception(errMsg),errMsg,module);
      }
    }
 else {
      if (!currentValue.equals(newValue)) {
        String errMsg="Watching entity [" + currentValue.getEntityName() + "] values changed from ["+ currentValue+ "] to ["+ newValue+ "] for pk ["+ newValue.getPrimaryKey()+ "]";
        Debug.log(new Exception(errMsg),errMsg,module);
      }
    }
  }
 else {
    if (UtilValidate.isNotEmpty(fieldName)) {
      Object newFieldValue=newValue.get(fieldName);
      String errMsg="Watching entity [" + newValue.getEntityName() + "] field ["+ fieldName+ "] value changed from [null] to ["+ newFieldValue+ "] for pk ["+ newValue.getPrimaryKey()+ "]";
      Debug.log(new Exception(errMsg),errMsg,module);
    }
 else {
      String errMsg="Watching entity [" + newValue.getEntityName() + "] values changed from [null] to ["+ newValue+ "] for pk ["+ newValue.getPrimaryKey()+ "]";
      Debug.log(new Exception(errMsg),errMsg,module);
    }
  }
  return ServiceUtil.returnSuccess();
}
