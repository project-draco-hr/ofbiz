{
  int genericsStart=className.indexOf("<");
  if (genericsStart != -1)   className=className.substring(0,genericsStart);
  if (className.endsWith("[]")) {
    if (Character.isLowerCase(className.charAt(0)) && className.indexOf(".") < 0) {
      String prefix=className.substring(0,1).toUpperCase();
      if (className.startsWith("long")) {
        prefix="J";
      }
 else       if (className.startsWith("boolean")) {
        prefix="Z";
      }
      className="[" + prefix;
    }
 else {
      Class<?> arrayClass=loadClass(className.replace("[]",""),loader);
      className="[L" + arrayClass.getName().replace("[]","") + ";";
    }
  }
  Class<?> theClass=CachedClassLoader.globalClassNameClassMap.get(className);
  if (theClass != null)   return theClass;
  if (loader == null)   loader=Thread.currentThread().getContextClassLoader();
  try {
    theClass=loader.loadClass(className);
  }
 catch (  Exception e) {
    theClass=classCache.get(className);
    if (theClass == null) {
      theClass=Class.forName(className);
      if (theClass != null) {
        if (classCache.putIfAbsent(className,theClass) == null) {
          if (Debug.verboseOn())           Debug.logVerbose("Loaded Class: " + theClass.getName(),module);
        }
      }
    }
  }
  return theClass;
}
