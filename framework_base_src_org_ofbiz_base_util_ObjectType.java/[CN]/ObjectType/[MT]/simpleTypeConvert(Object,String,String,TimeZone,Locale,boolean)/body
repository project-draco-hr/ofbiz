{
  if (obj == null) {
    return null;
  }
  int genericsStart=type.indexOf("<");
  if (genericsStart != -1) {
    type=type.substring(0,genericsStart);
  }
  if ("PlainString".equals(type)) {
    return obj.toString();
  }
  Class<?> sourceClass=obj.getClass();
  Class<?> targetClass=null;
  try {
    targetClass=loadClass(type);
  }
 catch (  ClassNotFoundException e) {
    Debug.logError(e,module);
    return obj;
  }
  if (sourceClass.equals(targetClass)) {
    return obj;
  }
  Converter<Object,Object> converter=null;
  try {
    converter=(Converter<Object,Object>)Converters.getConverter(sourceClass,targetClass);
  }
 catch (  ClassNotFoundException e) {
  }
  if (converter != null) {
    LocalizedConverter<Object,Object> localizedConverter=null;
    try {
      localizedConverter=(LocalizedConverter)converter;
    }
 catch (    Exception e) {
    }
    if (localizedConverter != null) {
      if (timeZone == null) {
        timeZone=TimeZone.getDefault();
      }
      if (locale == null) {
        locale=Locale.getDefault();
      }
      try {
        return localizedConverter.convert(obj,locale,timeZone,format);
      }
 catch (      ConversionException e) {
        Debug.logError(e,module);
      }
    }
    try {
      return converter.convert(obj);
    }
 catch (    ConversionException e) {
      Debug.logError(e,module);
    }
  }
  if (obj instanceof Node) {
    Node node=(Node)obj;
    String nodeValue=node.getTextContent();
    if (targetClass.equals(String.class)) {
      return nodeValue;
    }
 else {
      return simpleTypeConvert(nodeValue,type,format,timeZone,locale,noTypeFail);
    }
  }
  if (targetClass.equals(String.class)) {
    Debug.logWarning("No special conversion available for " + obj.getClass().getName() + " to String, returning object.toString().",module);
    return obj.toString();
  }
  if (noTypeFail) {
    throw new GeneralException("Conversion from " + obj.getClass().getName() + " to "+ type+ " not currently supported");
  }
 else {
    if (Debug.infoOn())     Debug.logInfo("No type conversion available for " + obj.getClass().getName() + " to "+ targetClass.getName()+ ", returning original object.",module);
    return obj;
  }
}
