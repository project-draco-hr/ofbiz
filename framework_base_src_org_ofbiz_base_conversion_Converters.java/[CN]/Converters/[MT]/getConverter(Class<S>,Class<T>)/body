{
  String key=sourceClass.getName().concat(DELIMITER).concat(targetClass.getName());
  if (Debug.verboseOn()) {
    Debug.logVerbose("Getting converter: " + key,module);
  }
  Converter<?,?> result=converterMap.get(key);
  if (result == null) {
    if (!noConversions.contains(key)) {
synchronized (converterMap) {
        Collection<Converter<?,?>> values=converterMap.values();
        for (        Converter<?,?> value : values) {
          if (value.canConvert(sourceClass,targetClass)) {
            converterMap.put(key,value);
            return (Converter<S,T>)value;
          }
        }
        if (nullConverter.canConvert(sourceClass,targetClass)) {
          converterMap.put(key,nullConverter);
          return (Converter<S,T>)nullConverter;
        }
        noConversions.add(key);
        Debug.logWarning("*** No converter found, converting from " + sourceClass.getName() + " to "+ targetClass.getName()+ ". Please report this message to the developer community so "+ "a suitable converter can be created. ***",module);
      }
    }
    throw new ClassNotFoundException("No converter found for " + key);
  }
  return (Converter<S,T>)result;
}
