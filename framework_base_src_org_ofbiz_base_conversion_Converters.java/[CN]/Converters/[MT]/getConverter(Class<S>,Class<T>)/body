{
  String key=sourceClass.getName().concat(DELIMITER).concat(targetClass.getName());
  if (Debug.verboseOn()) {
    Debug.logVerbose("Getting converter: " + key,module);
  }
  OUTER:   do {
    Converter<?,?> result=converterMap.get(key);
    if (result != null) {
      return UtilGenerics.cast(result);
    }
    if (noConversions.contains(key)) {
      throw new ClassNotFoundException("No converter found for " + key);
    }
    for (    Converter<?,?> value : converterMap.values()) {
      if (value.canConvert(sourceClass,targetClass)) {
        converterMap.putIfAbsent(key,value);
        continue OUTER;
      }
    }
    for (    ConverterCreater value : creaters) {
      result=createConverter(value,sourceClass,targetClass);
      if (result != null) {
        converterMap.putIfAbsent(key,result);
        continue OUTER;
      }
    }
    if (noConversions.add(key)) {
      Debug.logWarning("*** No converter found, converting from " + sourceClass.getName() + " to "+ targetClass.getName()+ ". Please report this message to the developer community so "+ "a suitable converter can be created. ***",module);
    }
    throw new ClassNotFoundException("No converter found for " + key);
  }
 while (true);
}
