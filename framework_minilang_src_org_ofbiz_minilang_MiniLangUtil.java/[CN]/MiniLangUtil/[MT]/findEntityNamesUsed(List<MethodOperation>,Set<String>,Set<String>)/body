{
  for (  MethodOperation methodOperation : methodOperations) {
    if (methodOperation instanceof FindByPrimaryKey) {
      String entName=((FindByPrimaryKey)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof FindByAnd) {
      String entName=((FindByAnd)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityOne) {
      String entName=((EntityOne)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityAnd) {
      String entName=((EntityAnd)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityCondition) {
      String entName=((EntityCondition)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityCount) {
      String entName=((EntityCount)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof MakeValue) {
      String entName=((MakeValue)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof GetRelated) {
      String relationName=((GetRelated)methodOperation).getRelationName();
      if (UtilValidate.isNotEmpty(relationName))       allEntityNames.add(relationName);
    }
 else     if (methodOperation instanceof GetRelatedOne) {
      String relationName=((GetRelatedOne)methodOperation).getRelationName();
      if (UtilValidate.isNotEmpty(relationName))       allEntityNames.add(relationName);
    }
 else     if (methodOperation instanceof CallSimpleMethod) {
      CallSimpleMethod csm=(CallSimpleMethod)methodOperation;
      try {
        SimpleMethod calledMethod=csm.getSimpleMethodToCall(null);
        if (calledMethod == null) {
          Debug.logWarning("Could not find simple-method [" + csm.getMethodName() + "] in ["+ csm.getXmlResource()+ "] from the SimpleMethod ["+ csm.getSimpleMethod().getMethodName()+ "] in ["+ csm.getSimpleMethod().getFromLocation()+ "]",module);
        }
 else {
          if (!simpleMethodsVisited.contains(calledMethod.getLocationAndName())) {
            simpleMethodsVisited.add(calledMethod.getLocationAndName());
            findEntityNamesUsed(calledMethod.getMethodOperations(),allEntityNames,simpleMethodsVisited);
          }
        }
      }
 catch (      MiniLangException e) {
        Debug.logWarning("Error getting simple-method info in the [" + csm.getSimpleMethod().getMethodName() + "] in ["+ csm.getSimpleMethod().getFromLocation()+ "]: "+ e.toString(),module);
      }
    }
 else     if (methodOperation instanceof Iterate) {
      findEntityNamesUsed(((Iterate)methodOperation).getSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof IterateMap) {
      findEntityNamesUsed(((IterateMap)methodOperation).getSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof Loop) {
      findEntityNamesUsed(((Loop)methodOperation).getSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof MasterIf) {
      findEntityNamesUsed(((MasterIf)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof While) {
      findEntityNamesUsed(((While)methodOperation).getThenSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof ValidateMethodCondition) {
      findEntityNamesUsed(((ValidateMethodCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof IfInstanceOf) {
      findEntityNamesUsed(((IfInstanceOf)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof CompareCondition) {
      findEntityNamesUsed(((CompareCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof CompareFieldCondition) {
      findEntityNamesUsed(((CompareFieldCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof RegexpCondition) {
      findEntityNamesUsed(((RegexpCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof EmptyCondition) {
      findEntityNamesUsed(((EmptyCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof IfNotEmpty) {
      findEntityNamesUsed(((IfNotEmpty)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
 else     if (methodOperation instanceof HasPermissionCondition) {
      findEntityNamesUsed(((HasPermissionCondition)methodOperation).getAllSubOps(),allEntityNames,simpleMethodsVisited);
    }
  }
}
