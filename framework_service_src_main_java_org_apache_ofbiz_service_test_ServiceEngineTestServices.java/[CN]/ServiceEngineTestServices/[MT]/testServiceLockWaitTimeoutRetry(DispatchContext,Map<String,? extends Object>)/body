{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  try {
    GenericResultWaiter grabberWaiter=dispatcher.runAsyncWait("testServiceLockWaitTimeoutRetryGrabber",null,false);
    GenericResultWaiter waiterWaiter=dispatcher.runAsyncWait("testServiceLockWaitTimeoutRetryWaiter",null,false);
    Map<String,Object> grabberResult=grabberWaiter.waitForResult();
    Map<String,Object> waiterResult=waiterWaiter.waitForResult();
    List<Object> errorList=new LinkedList<Object>();
    if (ServiceUtil.isError(grabberResult)) {
      errorList.add("Error running testServiceLockWaitTimeoutRetryGrabber: " + ServiceUtil.getErrorMessage(grabberResult));
    }
    if (ServiceUtil.isError(waiterResult)) {
      errorList.add("Error running testServiceLockWaitTimeoutRetryWaiter: " + ServiceUtil.getErrorMessage(waiterResult));
    }
    if (errorList.size() > 0) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestLockWaitTimeoutRetry",locale),errorList,null,null);
    }
  }
 catch (  Exception e) {
    Debug.logError(e,"Error running deadlock test services: " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestDeadLockError",UtilMisc.toMap("errorString",e.toString()),locale));
  }
  return ServiceUtil.returnSuccess();
}
