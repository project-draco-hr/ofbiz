{
  boolean shouldIgnore=true;
  String ignoreWhen=this.getIgnoreWhen(context);
  if (UtilValidate.isEmpty(ignoreWhen))   return false;
  try {
    Object retVal=GroovyUtil.eval(StringUtil.convertOperatorSubstitutions(ignoreWhen),context);
    boolean condTrue=false;
    if (retVal instanceof Boolean) {
      shouldIgnore=(Boolean)retVal;
    }
 else {
      throw new IllegalArgumentException("Return value from ignore-when condition eval was not a Boolean: " + (retVal != null ? retVal.getClass().getName() : "null") + " ["+ retVal+ "] on the field "+ this.name+ " of form "+ this.modelForm.getName());
    }
  }
 catch (  CompilationFailedException e) {
    String errMsg="Error evaluating BeanShell ignore-when condition [" + ignoreWhen + "] on the field "+ this.name+ " of form "+ this.modelForm.getName()+ ": "+ e.toString();
    Debug.logError(e,errMsg,module);
    throw new IllegalArgumentException(errMsg);
  }
  return shouldIgnore;
}
