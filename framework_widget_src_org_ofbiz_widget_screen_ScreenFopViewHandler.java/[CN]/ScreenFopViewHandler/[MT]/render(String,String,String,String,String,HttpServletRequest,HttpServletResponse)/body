{
  Writer writer=new StringWriter();
  try {
    ScreenRenderer screens=new ScreenRenderer(writer,null,foScreenRenderer);
    screens.populateContextForRequest(request,response,servletContext);
    screens.getContext().put("formStringRenderer",new FoFormRenderer(request,response));
    screens.render(page);
  }
 catch (  Exception e) {
    renderError("Problems with the response writer/output stream",e,request,response);
    return;
  }
  Reader reader=new StringReader(writer.toString());
  StreamSource src=new StreamSource(reader);
  if (Debug.verboseOn()) {
    Debug.logVerbose("Transforming the following xsl-fo template: " + writer.toString(),module);
  }
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  try {
    Fop fop=ApacheFopWorker.createFopInstance(out,contentType);
    ApacheFopWorker.transform(src,null,fop);
  }
 catch (  Exception e) {
    renderError("Unable to transform FO file",e,request,response);
    return;
  }
  response.setContentType(contentType);
  response.setContentLength(out.size());
  try {
    out.writeTo(response.getOutputStream());
    response.getOutputStream().flush();
  }
 catch (  IOException e) {
    renderError("Unable to write to OutputStream",e,request,response);
  }
}
