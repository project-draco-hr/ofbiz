{
  GenericValue value=valueFma.get(methodContext.getEnvMap());
  if (value == null) {
    throw new MiniLangRuntimeException("Entity value not found with name: " + valueFma,this);
  }
  String seqFieldName=seqFieldNameFse.expandString(methodContext.getEnvMap());
  String numericPaddingStr=numericPaddingFse.expandString(methodContext.getEnvMap());
  String incrementByStr=incrementByFse.expandString(methodContext.getEnvMap());
  int numericPadding=5;
  if (!numericPaddingStr.isEmpty()) {
    try {
      numericPadding=Integer.parseInt(numericPaddingStr);
    }
 catch (    Exception e) {
      throw new MiniLangRuntimeException("Invalid number in \"numeric-padding\" attribute",this);
    }
  }
  int incrementBy=1;
  if (!incrementByStr.isEmpty()) {
    try {
      incrementBy=Integer.parseInt(incrementByStr);
    }
 catch (    Exception e) {
      throw new MiniLangRuntimeException("Invalid number in \"increment-by\" attribute",this);
    }
  }
  value.getDelegator().setNextSubSeqId(value,seqFieldName,numericPadding,incrementBy);
  return true;
}
