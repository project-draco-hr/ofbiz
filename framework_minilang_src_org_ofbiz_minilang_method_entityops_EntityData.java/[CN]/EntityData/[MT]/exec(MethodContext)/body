{
  List<Object> messages=errorListFma.get(methodContext.getEnvMap());
  if (messages == null) {
    messages=new ArrayList<Object>();
    errorListFma.put(methodContext.getEnvMap(),messages);
  }
  String location=this.locationFse.expandString(methodContext.getEnvMap());
  String delegatorName=this.delegatorNameFse.expandString(methodContext.getEnvMap());
  Delegator delegator=methodContext.getDelegator();
  if (UtilValidate.isNotEmpty(delegatorName)) {
    delegator=DelegatorFactory.getDelegator(delegatorName);
  }
  URL dataUrl=null;
  try {
    dataUrl=FlexibleLocation.resolveLocation(location,methodContext.getLoader());
  }
 catch (  MalformedURLException e) {
    messages.add("Could not find Entity Data document in resource: " + location + "; error was: "+ e.toString());
  }
  if (dataUrl == null) {
    messages.add("Could not find Entity Data document in resource: " + location);
  }
  if ("assert".equals(mode)) {
    try {
      EntityDataAssert.assertData(dataUrl,delegator,messages);
    }
 catch (    Exception e) {
      String xmlError="Error checking/asserting XML Resource \"" + dataUrl.toExternalForm() + "\"; Error was: "+ e.getMessage();
      messages.add(xmlError);
      Debug.logWarning(e,xmlError,module);
    }
  }
 else {
    try {
      EntitySaxReader reader=null;
      if (timeout > 0) {
        reader=new EntitySaxReader(delegator,timeout);
      }
 else {
        reader=new EntitySaxReader(delegator);
      }
      reader.parse(dataUrl);
    }
 catch (    Exception e) {
      String xmlError="Error loading XML Resource \"" + dataUrl.toExternalForm() + "\"; Error was: "+ e.getMessage();
      messages.add(xmlError);
      Debug.logWarning(e,xmlError,module);
    }
  }
  return true;
}
