{
  List messages=(List)errorListAcsr.get(methodContext);
  String location=this.locationExdr.expandString(methodContext.getEnvMap());
  String delegatorName=this.delegatorNameExdr.expandString(methodContext.getEnvMap());
  GenericDelegator delegator=methodContext.getDelegator();
  if (delegatorName != null && delegatorName.length() > 0) {
    delegator=GenericDelegator.getGenericDelegator(delegatorName);
  }
  URL dataUrl=null;
  try {
    dataUrl=FlexibleLocation.resolveLocation(location,methodContext.getLoader());
  }
 catch (  MalformedURLException e) {
    messages.add("Could not find Entity Data document in resource: " + location + "; error was: "+ e.toString());
  }
  if (dataUrl == null) {
    messages.add("Could not find Entity Data document in resource: " + location);
  }
  String timeout=this.timeoutExdr.expandString(methodContext.getEnvMap());
  int txTimeout=-1;
  if (UtilValidate.isNotEmpty(timeout)) {
    try {
      txTimeout=Integer.parseInt(timeout);
    }
 catch (    NumberFormatException e) {
      Debug.logWarning("Timeout not formatted properly in entity-data operation, defaulting to container default",module);
    }
  }
  if ("assert".equals(mode)) {
    try {
      EntityDataAssert.assertData(dataUrl,delegator,messages);
    }
 catch (    Exception e) {
      String xmlError="Error checking/asserting XML Resource \"" + dataUrl.toExternalForm() + "\"; Error was: "+ e.getMessage();
      messages.add(xmlError);
    }
  }
 else {
    try {
      EntitySaxReader reader=null;
      if (txTimeout > 0) {
        reader=new EntitySaxReader(delegator,txTimeout);
      }
 else {
        reader=new EntitySaxReader(delegator);
      }
      long rowsChanged=reader.parse(dataUrl);
    }
 catch (    Exception e) {
      String xmlError="Error loading XML Resource \"" + dataUrl.toExternalForm() + "\"; Error was: "+ e.getMessage();
      messages.add(xmlError);
      Debug.logError(e,xmlError,module);
    }
  }
  return true;
}
