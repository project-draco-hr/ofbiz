{
  StringBuffer message=new StringBuffer();
  try {
    Document docResponse=UtilXml.readXmlDocument(msg,true);
    Element elemResponse=docResponse.getDocumentElement();
    List atomEntryList=UtilXml.childElementList(elemResponse,"atom:entry");
    Iterator atomEntryElemIter=atomEntryList.iterator();
    while (atomEntryElemIter.hasNext()) {
      Element atomEntryElement=(Element)atomEntryElemIter.next();
      List batchInterruptedEntryList=UtilXml.childElementList(atomEntryElement,"batch:interrupted");
      Iterator batchInterruptedEntryElemIter=batchInterruptedEntryList.iterator();
      while (batchInterruptedEntryElemIter.hasNext()) {
        Element batchInterruptedEntryElement=(Element)batchInterruptedEntryElemIter.next();
        String reason=batchInterruptedEntryElement.getAttribute("reason");
        message.append(reason);
      }
    }
  }
 catch (  Exception e) {
    Debug.logError("Exception reading response from Google",module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToGoogle.exceptionReadingResponseFromGoogle",locale));
  }
  if (message.length() > 0) {
    Debug.logError("Error in the response from Google " + message.toString(),module);
    message.insert(0,UtilProperties.getMessage(resource,"productsExportToGoogle.errorInTheResponseFromGoogle",locale));
    return ServiceUtil.returnFailure(message.toString());
  }
  return ServiceUtil.returnSuccess();
}
