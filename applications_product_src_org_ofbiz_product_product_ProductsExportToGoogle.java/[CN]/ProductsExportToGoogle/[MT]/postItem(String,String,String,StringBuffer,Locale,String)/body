{
  if (Debug.verboseOn()) {
    Debug.logVerbose("Request To Google Base :\n" + dataItems.toString(),module);
  }
  HttpURLConnection connection=(HttpURLConnection)(new URL(postItemsUrl)).openConnection();
  if (UtilValidate.isNotEmpty(testMode) && "Y".equals(testMode)) {
    connection.setRequestProperty("dry-run","true");
  }
  connection.setDoInput(true);
  connection.setDoOutput(true);
  connection.setRequestMethod("POST");
  connection.setRequestProperty("Content-Type","application/atom+xml");
  connection.setRequestProperty("Authorization","GoogleLogin auth=" + token);
  connection.setRequestProperty("X-Google-Key","key=" + developerKey);
  OutputStream outputStream=connection.getOutputStream();
  outputStream.write(dataItems.toString().getBytes());
  outputStream.close();
  int responseCode=connection.getResponseCode();
  InputStream inputStream;
  Map result=FastMap.newInstance();
  String response="";
  if (responseCode == HttpURLConnection.HTTP_CREATED || responseCode == HttpURLConnection.HTTP_OK) {
    inputStream=connection.getInputStream();
    response=toString(inputStream);
    if (response != null && response.length() > 0) {
      result=readResponseFromGoogle(response,locale);
      String msg=ServiceUtil.getErrorMessage(result);
      if (msg != null && msg.length() > 0) {
        result=ServiceUtil.returnFailure(msg);
      }
 else {
        result=ServiceUtil.returnSuccess();
      }
    }
  }
 else {
    inputStream=connection.getErrorStream();
    response=toString(inputStream);
    result=ServiceUtil.returnFailure(response);
  }
  if (Debug.verboseOn()) {
    Debug.logVerbose("Response From Google Base :\n" + response,module);
  }
  return result;
}
