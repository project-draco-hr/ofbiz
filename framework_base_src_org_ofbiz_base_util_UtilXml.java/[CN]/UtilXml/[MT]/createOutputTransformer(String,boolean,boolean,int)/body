{
  StringBuilder sb=new StringBuilder();
  sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
  sb.append("<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xalan=\"http://xml.apache.org/xslt\" version=\"1.0\">\n");
  sb.append("<xsl:output method=\"xml\" encoding=\"");
  sb.append(encoding == null ? "UTF-8" : encoding);
  sb.append("\"");
  if (omitXmlDeclaration) {
    sb.append(" omit-xml-declaration=\"yes\"");
  }
  sb.append(" indent=\"");
  sb.append(indent ? "yes" : "no");
  sb.append("\"");
  if (indent) {
    sb.append(" xalan:indent-amount=\"");
    sb.append(indentAmount <= 0 ? 4 : indentAmount);
    sb.append("\"");
  }
  sb.append("/>\n<xsl:strip-space elements=\"*\"/>\n");
  sb.append("<xsl:template match=\"@*|node()\">\n");
  sb.append("<xsl:copy><xsl:apply-templates select=\"@*|node()\"/></xsl:copy>\n");
  sb.append("</xsl:template>\n</xsl:stylesheet>\n");
  ByteArrayInputStream bis=new ByteArrayInputStream(sb.toString().getBytes());
  TransformerFactory transformerFactory=TransformerFactory.newInstance();
  return transformerFactory.newTransformer(new StreamSource(bis));
}
