{
  ShoppingCart cart=getCartObject(request);
  Locale locale=UtilHttp.getLocale(request);
  String termTypeId=request.getParameter("termTypeId");
  String termValueStr=request.getParameter("termValue");
  String termDaysStr=request.getParameter("termDays");
  String textValue=request.getParameter("textValue");
  BigDecimal termValue=null;
  Long termDays=null;
  if (UtilValidate.isEmpty(termTypeId)) {
    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermTypeIsRequired",locale));
    return "error";
  }
  if (UtilValidate.isNotEmpty(termValueStr)) {
    try {
      termValue=new BigDecimal(termValueStr);
    }
 catch (    NumberFormatException e) {
      request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermValueError",UtilMisc.toMap("orderTermValue",termValueStr),locale));
      return "error";
    }
  }
  if (UtilValidate.isNotEmpty(termDaysStr)) {
    try {
      termDays=Long.valueOf(termDaysStr);
    }
 catch (    NumberFormatException e) {
      request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermDaysError",UtilMisc.toMap("orderTermDays",termDaysStr),locale));
      return "error";
    }
  }
  removeOrderTerm(request,response);
  cart.addOrderTerm(termTypeId,termValue,termDays,textValue);
  return "success";
}
