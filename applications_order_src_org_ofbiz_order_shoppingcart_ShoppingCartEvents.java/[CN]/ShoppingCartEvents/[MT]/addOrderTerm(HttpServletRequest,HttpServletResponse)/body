{
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  ShoppingCart cart=getCartObject(request);
  ShoppingCartHelper cartHelper=new ShoppingCartHelper(delegator,dispatcher,cart);
  String termTypeId=request.getParameter("termTypeId");
  String termValueStr=request.getParameter("termValue");
  String termDaysStr=request.getParameter("termDays");
  String termIndex=request.getParameter("termIndex");
  String textValue=request.getParameter("textValue");
  Locale locale=UtilHttp.getLocale(request);
  BigDecimal termValue=null;
  Long termDays=null;
  if (termValueStr.trim().equals("")) {
    termValue=null;
  }
  if (termDaysStr.trim().equals("")) {
    termDays=null;
  }
  if (UtilValidate.isEmpty(termTypeId)) {
    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermTypeIsRequired",locale));
    return "error";
  }
  if (!UtilValidate.isSignedDouble(termValueStr)) {
    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermValueError",UtilMisc.toMap("orderTermValue",UtilValidate.isSignedFloatMsg),locale));
    return "error";
  }
  if (termValue != null) {
    termValue=new BigDecimal(termValueStr);
  }
  if (!UtilValidate.isInteger(termDaysStr)) {
    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderOrderTermDaysError",UtilMisc.toMap("orderTermDays",UtilValidate.isLongMsg),locale));
    return "error";
  }
  if (termDays != null) {
    termDays=new Long(termDaysStr);
  }
  if ((termIndex != null) && (!"-1".equals(termIndex)) && (UtilValidate.isInteger(termIndex))) {
    cartHelper.removeOrderTerm(Integer.parseInt(termIndex));
  }
  Map result=cartHelper.addOrderTerm(termTypeId,termValue,termDays,textValue);
  if (ServiceUtil.isError(result)) {
    request.setAttribute("_ERROR_MESSAGE_",ServiceUtil.getErrorMessage(result));
    return "error";
  }
  return "success";
}
