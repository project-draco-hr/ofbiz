{
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  ShoppingCart cart=getCartObject(request);
  List<GenericValue> manualPromotions=new LinkedList<GenericValue>();
  Map<String,Object> context=UtilHttp.getParameterMap(request);
  String keyPrefix="productPromoId_";
  for (int i=1; i <= 50; i++) {
    String productPromoId=(String)context.get(keyPrefix + i);
    if (UtilValidate.isNotEmpty(productPromoId)) {
      try {
        GenericValue promo=delegator.findOne("ProductPromo",UtilMisc.toMap("productPromoId",productPromoId),false);
        if (promo != null) {
          manualPromotions.add(promo);
        }
      }
 catch (      GenericEntityException gee) {
        request.setAttribute("_ERROR_MESSAGE_",gee.getMessage());
        return "error";
      }
    }
 else {
      break;
    }
  }
  ProductPromoWorker.doPromotions(cart,manualPromotions,dispatcher);
  return "success";
}
