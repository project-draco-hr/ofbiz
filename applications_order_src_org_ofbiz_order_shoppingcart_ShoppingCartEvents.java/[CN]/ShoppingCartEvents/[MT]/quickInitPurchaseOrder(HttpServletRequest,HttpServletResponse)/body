{
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  HttpSession session=request.getSession();
  Locale locale=UtilHttp.getLocale(request);
  ShoppingCart cart=new WebShoppingCart(request);
  String billToCustomerPartyId=request.getParameter("billToCustomerPartyId_o_0");
  String supplierPartyId=request.getParameter("supplierPartyId_o_0");
  if (UtilValidate.isEmpty(billToCustomerPartyId) && UtilValidate.isEmpty(supplierPartyId)) {
    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resource_error,"OrderCouldNotInitPurchaseOrder",locale));
    return "error";
  }
  cart.setBillToCustomerPartyId(billToCustomerPartyId);
  cart.setBillFromVendorPartyId(supplierPartyId);
  cart.setOrderPartyId(supplierPartyId);
  String agreementId=request.getParameter("agreementId_o_0");
  if (agreementId != null && agreementId.length() > 0) {
    ShoppingCartHelper sch=new ShoppingCartHelper(delegator,dispatcher,cart);
    sch.selectAgreement(agreementId);
  }
  cart.setOrderType("PURCHASE_ORDER");
  session.setAttribute("shoppingCart",cart);
  session.setAttribute("productStoreId",cart.getProductStoreId());
  session.setAttribute("orderMode",cart.getOrderType());
  session.setAttribute("orderPartyId",cart.getOrderPartyId());
  return "success";
}
