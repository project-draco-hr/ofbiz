{
  boolean beganTransaction=false;
  try {
    beganTransaction=TransactionUtil.begin();
    Map<String,Object> context=new HashMap<String,Object>();
    context.put("request",request);
    context.put("response",response);
    HttpSession session=request.getSession();
    context.put("session",session);
    context.put("dispatcher",request.getAttribute("dispatcher"));
    context.put("delegator",request.getAttribute("delegator"));
    context.put("security",request.getAttribute("security"));
    context.put("locale",UtilHttp.getLocale(request));
    context.put("timeZone",UtilHttp.getTimeZone(request));
    context.put("userLogin",session.getAttribute("userLogin"));
    context.put(ScriptUtil.PARAMETERS_KEY,UtilHttp.getCombinedMap(request,UtilMisc.toSet("delegator","dispatcher","security","locale","timeZone","userLogin")));
    Object result=null;
    try {
      ScriptContext scriptContext=ScriptUtil.createScriptContext(context,protectedKeys);
      ScriptHelper scriptHelper=(ScriptHelper)scriptContext.getAttribute(ScriptUtil.SCRIPT_HELPER_KEY);
      if (scriptHelper != null) {
        context.put(ScriptUtil.SCRIPT_HELPER_KEY,scriptHelper);
      }
      Script script=InvokerHelper.createScript(GroovyUtil.getScriptClassFromLocation(event.path),GroovyUtil.getBinding(context));
      if (UtilValidate.isEmpty(event.invoke)) {
        result=script.run();
      }
 else {
        result=script.invokeMethod(event.invoke,EMPTY_ARGS);
      }
      if (result == null) {
        result=scriptContext.getAttribute(ScriptUtil.RESULT_KEY);
      }
    }
 catch (    Exception e) {
      Debug.logWarning(e,"Error running event " + event.path + ": ",module);
      request.setAttribute("_ERROR_MESSAGE_",e.getMessage());
      return "error";
    }
    if (result instanceof Map) {
      Map resultMap=(Map)result;
      String successMessage=(String)resultMap.get("_event_message_");
      if (successMessage != null) {
        request.setAttribute("_EVENT_MESSAGE_",successMessage);
      }
      String errorMessage=(String)resultMap.get("_error_message_");
      if (errorMessage != null) {
        request.setAttribute("_ERROR_MESSAGE_",errorMessage);
      }
      return (String)resultMap.get("_response_code_");
    }
    if (result != null && !(result instanceof String)) {
      throw new EventHandlerException("Event did not return a String result, it returned a " + result.getClass().getName());
    }
    return (String)result;
  }
 catch (  Exception e) {
    throw new EventHandlerException("Groovy Event Error",e);
  }
 finally {
    try {
      TransactionUtil.commit(beganTransaction);
    }
 catch (    GenericTransactionException e) {
      Debug.logError(e,module);
    }
  }
}
