{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  String partyId=getPartyId(context);
  if (UtilValidate.isEmpty(partyId)) {
    return ServiceUtil.returnError(UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.party_id_missing",locale));
  }
  GenericValue partyGroup=null;
  GenericValue party=null;
  try {
    partyGroup=delegator.findByPrimaryKey("PartyGroup",UtilMisc.toMap("partyId",partyId));
    party=delegator.findByPrimaryKey("Party",UtilMisc.toMap("partyId",partyId));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.could_not_update_party_information_read",UtilMisc.toMap("errMessage",e.getMessage()),locale));
  }
  if (partyGroup == null || party == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.could_not_update_party_information_not_found",locale));
  }
  String oldStatusId=party.getString("statusId");
  partyGroup.setNonPKFields(context);
  party.setNonPKFields(context);
  party.set("statusId",oldStatusId);
  try {
    partyGroup.store();
    party.store();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.could_not_update_party_information_write",UtilMisc.toMap("errMessage",e.getMessage()),locale));
  }
  if (UtilValidate.isNotEmpty(context.get("statusId")) && !context.get("statusId").equals(oldStatusId)) {
    try {
      dispatcher.runSync("setPartyStatus",UtilMisc.toMap("partyId",partyId,"statusId",context.get("statusId"),"userLogin",context.get("userLogin")));
    }
 catch (    GenericServiceException e) {
      Debug.logWarning(e.getMessage(),module);
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"person.update.write_failure",new Object[]{e.getMessage()},locale));
    }
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
