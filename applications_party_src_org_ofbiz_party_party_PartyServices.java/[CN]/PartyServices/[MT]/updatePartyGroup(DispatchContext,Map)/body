{
  Map result=new HashMap();
  GenericDelegator delegator=ctx.getDelegator();
  Security security=ctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String partyId=null;
  if (security.hasEntityPermission("PARTYMGR","_GRP_UPDATE",userLogin)) {
    partyId=(String)context.get("partyId");
  }
 else {
    partyId=ServiceUtil.getPartyIdCheckSecurity(userLogin,security,context,result,"PARTYMGR","_UPDATE");
  }
  Locale locale=(Locale)context.get("locale");
  String errMsg=null;
  if (result.size() > 0)   return result;
  GenericValue partyGroup=null;
  GenericValue party=null;
  try {
    partyGroup=delegator.findByPrimaryKey("PartyGroup",UtilMisc.toMap("partyId",partyId));
    party=delegator.findByPrimaryKey("Party",UtilMisc.toMap("partyId",partyId));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    Map messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_party_information_read",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (partyGroup == null || party == null) {
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_party_information_not_found",locale);
    return ServiceUtil.returnError(errMsg);
  }
  partyGroup.setNonPKFields(context);
  party.setNonPKFields(context);
  try {
    partyGroup.store();
    party.store();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    Map messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_party_information_write",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
