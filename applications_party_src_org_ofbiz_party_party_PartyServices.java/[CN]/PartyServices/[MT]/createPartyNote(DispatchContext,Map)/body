{
  Map result=new HashMap();
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String noteString=(String)context.get("note");
  String partyId=(String)context.get("partyId");
  String noteId=(String)context.get("noteId");
  String errMsg=null;
  Locale locale=(Locale)context.get("locale");
  if (noteId == null) {
    Map noteRes=null;
    try {
      noteRes=dispatcher.runSync("createNote",UtilMisc.toMap("partyId",userLogin.getString("partyId"),"note",noteString,"userLogin",userLogin,"locale",locale));
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,e.getMessage(),module);
      return ServiceUtil.returnError("Unable to create Note: " + e.getMessage());
    }
    if (noteRes.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_ERROR))     return noteRes;
    noteId=(String)noteRes.get("noteId");
    if (noteId == null || noteId.length() == 0) {
      errMsg=UtilProperties.getMessage(resource,"partyservices.problem_creating_note_no_noteId_returned",locale);
      return ServiceUtil.returnError(errMsg);
    }
  }
  result.put("noteId",noteId);
  try {
    Map fields=UtilMisc.toMap("partyId",partyId,"noteId",noteId);
    GenericValue v=delegator.makeValue("PartyNote",fields);
    delegator.create(v);
  }
 catch (  GenericEntityException ee) {
    Debug.logError(ee,module);
    Map messageMap=UtilMisc.toMap("errMessage",ee.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyservices.problem_associating_note_with_party",messageMap,locale);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,errMsg);
  }
  return result;
}
