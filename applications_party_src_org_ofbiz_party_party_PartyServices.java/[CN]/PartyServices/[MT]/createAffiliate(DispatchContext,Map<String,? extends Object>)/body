{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  Timestamp now=UtilDateTime.nowTimestamp();
  String partyId=getPartyId(context);
  if (UtilValidate.isNotEmpty(partyId) && partyId.matches("\\d+")) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.cannot_create_affiliate_digit",locale));
  }
  if (UtilValidate.isEmpty(partyId)) {
    try {
      partyId=delegator.getNextSeqId("Party");
    }
 catch (    IllegalArgumentException e) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.cannot_create_affiliate_generation_failure",locale));
    }
  }
  GenericValue party=null;
  try {
    party=EntityQuery.use(delegator).from("Party").where("partyId",partyId).queryOne();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
  }
  if (party == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.cannot_create_affiliate_no_party_entity",locale));
  }
  GenericValue affiliate=null;
  try {
    affiliate=EntityQuery.use(delegator).from("Affiliate").where("partyId",partyId).queryOne();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
  }
  if (affiliate != null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.cannot_create_affiliate_ID_already_exists",locale));
  }
  affiliate=delegator.makeValue("Affiliate",UtilMisc.toMap("partyId",partyId));
  affiliate.setNonPKFields(context);
  affiliate.set("dateTimeCreated",now,false);
  try {
    delegator.create(affiliate);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyservices.could_not_add_affiliate_info_write",UtilMisc.toMap("errMessage",e.getMessage()),locale));
  }
  result.put("partyId",partyId);
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
