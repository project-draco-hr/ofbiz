{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=dctx.getDelegator();
  Collection<Map<String,GenericValue>> parties=FastList.newInstance();
  String firstName=(String)context.get("firstName");
  String lastName=(String)context.get("lastName");
  Locale locale=(Locale)context.get("locale");
  if (firstName == null) {
    firstName="";
  }
  if (lastName == null) {
    lastName="";
  }
  if (firstName.length() == 0 && lastName.length() == 0) {
    String errMsg=UtilProperties.getMessage(resource,"partyservices.both_names_cannot_be_empty",locale);
    return ServiceUtil.returnError(errMsg);
  }
  try {
    EntityConditionList<EntityExpr> ecl=EntityCondition.makeCondition(EntityOperator.AND,EntityCondition.makeCondition(EntityFunction.UPPER_FIELD("firstName"),EntityOperator.LIKE,EntityFunction.UPPER("%" + firstName.toUpperCase() + "%")),EntityCondition.makeCondition(EntityFunction.UPPER_FIELD("lastName"),EntityOperator.LIKE,EntityFunction.UPPER("%" + lastName.toUpperCase() + "%")));
    Collection<GenericValue> pc=delegator.findList("Person",ecl,null,UtilMisc.toList("lastName","firstName","partyId"),null,false);
    if (Debug.infoOn())     Debug.logInfo("PartyFromPerson number found: " + pc.size(),module);
    if (pc != null) {
      for (      GenericValue person : pc) {
        GenericValue party=delegator.makeValue("Party",UtilMisc.toMap("partyId",person.get("partyId"),"partyTypeId","PERSON"));
        parties.add(UtilMisc.<String,GenericValue>toMap("person",person,"party",party));
      }
    }
  }
 catch (  GenericEntityException e) {
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    String errMsg=UtilProperties.getMessage(resource,"partyservices.cannot_get_party_entities_read",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (parties.size() > 0) {
    result.put("parties",parties);
  }
  return result;
}
