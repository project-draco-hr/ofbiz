{
  GenericDelegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String partyId=getPartyId(context);
  if (UtilValidate.isEmpty(partyId)) {
    return ServiceUtil.returnError(UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.party_id_missing",locale));
  }
  String errMsg=null;
  GenericValue affiliate=null;
  try {
    affiliate=delegator.findByPrimaryKey("Affiliate",UtilMisc.toMap("partyId",partyId));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_affiliate_information_read",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (affiliate == null) {
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_affiliate_information_not_found",locale);
    return ServiceUtil.returnError(errMsg);
  }
  affiliate.setNonPKFields(context);
  try {
    affiliate.store();
  }
 catch (  GenericEntityException e) {
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"partyservices.could_not_update_affiliate_information_write",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  return ServiceUtil.returnSuccess();
}
