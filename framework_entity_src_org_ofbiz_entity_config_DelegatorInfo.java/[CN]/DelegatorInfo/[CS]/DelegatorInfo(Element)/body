{
  super(element);
  this.entityModelReader=element.getAttribute("entity-model-reader");
  this.entityGroupReader=element.getAttribute("entity-group-reader");
  this.entityEcaReader=element.getAttribute("entity-eca-reader");
  this.useEntityEca=!"false".equalsIgnoreCase(element.getAttribute("entity-eca-enabled"));
  this.entityEcaHandlerClassName=element.getAttribute("entity-eca-handler-class-name");
  this.useDistributedCacheClear="true".equalsIgnoreCase(element.getAttribute("distributed-cache-clear-enabled"));
  this.distributedCacheClearClassName=element.getAttribute("distributed-cache-clear-class-name");
  if (UtilValidate.isEmpty(this.distributedCacheClearClassName))   this.distributedCacheClearClassName="org.ofbiz.entityext.cache.EntityCacheServices";
  this.distributedCacheClearUserLoginId=element.getAttribute("distributed-cache-clear-user-login-id");
  if (UtilValidate.isEmpty(this.distributedCacheClearUserLoginId))   this.distributedCacheClearUserLoginId="admin";
  this.sequencedIdPrefix=element.getAttribute("sequenced-id-prefix");
  List groupMapList=UtilXml.childElementList(element,"group-map");
  Iterator groupMapIter=groupMapList.iterator();
  while (groupMapIter.hasNext()) {
    Element groupMapElement=(Element)groupMapIter.next();
    groupMap.put(groupMapElement.getAttribute("group-name"),groupMapElement.getAttribute("datasource-name"));
  }
}
