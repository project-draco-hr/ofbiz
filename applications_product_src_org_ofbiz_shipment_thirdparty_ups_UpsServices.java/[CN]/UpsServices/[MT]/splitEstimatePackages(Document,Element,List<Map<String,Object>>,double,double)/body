{
  List<Map<String,Double>> packages=getPackageSplit(shippableItemInfo,maxWeight);
  if (UtilValidate.isNotEmpty(packages)) {
    Iterator<Map<String,Double>> i=packages.iterator();
    while (i.hasNext()) {
      Map<String,Double> packageMap=i.next();
      addPackageElement(requestDoc,shipmentElement,shippableItemInfo,packageMap,minWeight);
    }
  }
 else {
    String totalWeightStr=UtilProperties.getPropertyValue("shipment","shipment.ups.min.estimate.weight","1");
    double packageWeight=1;
    try {
      packageWeight=Double.parseDouble(totalWeightStr);
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,module);
    }
    Element packageElement=UtilXml.addChildElement(shipmentElement,"Package",requestDoc);
    Element packagingTypeElement=UtilXml.addChildElement(packageElement,"PackagingType",requestDoc);
    UtilXml.addChildElementValue(packagingTypeElement,"Code","00",requestDoc);
    Element packageWeightElement=UtilXml.addChildElement(packageElement,"PackageWeight",requestDoc);
    UtilXml.addChildElementValue(packageWeightElement,"Weight","" + packageWeight,requestDoc);
  }
}
