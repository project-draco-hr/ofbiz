{
  List<Map<String,BigDecimal>> packages=getPackageSplit(shippableItemInfo,maxWeight);
  if (UtilValidate.isNotEmpty(packages)) {
    for (    Map<String,BigDecimal> packageMap : packages) {
      addPackageElement(requestDoc,shipmentElement,shippableItemInfo,packageMap,minWeight);
    }
  }
 else {
    String totalWeightStr=UtilProperties.getPropertyValue("shipment","shipment.ups.min.estimate.weight","1");
    BigDecimal packageWeight=BigDecimal.ONE;
    try {
      packageWeight=new BigDecimal(totalWeightStr);
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,module);
    }
    Element packageElement=UtilXml.addChildElement(shipmentElement,"Package",requestDoc);
    Element packagingTypeElement=UtilXml.addChildElement(packageElement,"PackagingType",requestDoc);
    UtilXml.addChildElementValue(packagingTypeElement,"Code","00",requestDoc);
    Element packageWeightElement=UtilXml.addChildElement(packageElement,"PackageWeight",requestDoc);
    UtilXml.addChildElementValue(packageWeightElement,"Weight","" + packageWeight,requestDoc);
  }
}
