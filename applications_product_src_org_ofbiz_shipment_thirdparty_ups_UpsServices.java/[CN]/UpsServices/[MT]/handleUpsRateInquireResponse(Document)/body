{
  Element rateResponseElement=rateResponseDocument.getDocumentElement();
  Element responseElement=UtilXml.firstChildElement(rateResponseElement,"Response");
  String responseStatusCode=UtilXml.childElementValue(responseElement,"ResponseStatusCode");
  List<Object> errorList=FastList.newInstance();
  UpsServices.handleErrors(responseElement,errorList);
  if ("1".equals(responseStatusCode)) {
    List<? extends Element> rates=UtilXml.childElementList(rateResponseElement,"RatedShipment");
    Map<String,BigDecimal> rateMap=FastMap.newInstance();
    BigDecimal firstRate=null;
    if (rates == null || rates.size() == 0) {
      return ServiceUtil.returnError("No rates available at this time");
    }
 else {
      for (      Element element : rates) {
        Element service=UtilXml.firstChildElement(element,"Service");
        String serviceCode=UtilXml.childElementValue(service,"Code");
        Element totalCharges=UtilXml.firstChildElement(element,"TotalCharges");
        String totalString=UtilXml.childElementValue(totalCharges,"MonetaryValue");
        rateMap.put(serviceCode,new BigDecimal(totalString));
        if (firstRate == null) {
          firstRate=rateMap.get(serviceCode);
        }
      }
    }
    Debug.log("UPS Rate Map : " + rateMap,module);
    Map<String,Object> resp=ServiceUtil.returnSuccess();
    resp.put("upsRateCodeMap",rateMap);
    resp.put("shippingEstimateAmount",firstRate);
    return resp;
  }
 else {
    errorList.add("Error status code : " + responseStatusCode);
    return ServiceUtil.returnFailure(errorList);
  }
}
