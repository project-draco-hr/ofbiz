{
  Element timeInTransitResponseElement=timeInTransitResponseDocument.getDocumentElement();
  Debug.log("======timeInTransitResponseElement==========" + timeInTransitResponseElement);
  Element responseElement=UtilXml.firstChildElement(timeInTransitResponseElement,"Response");
  String responseStatusCode=UtilXml.childElementValue(responseElement,"ResponseStatusCode");
  List<Object> errorList=FastList.newInstance();
  UpsServices.handleErrors(responseElement,errorList);
  if ("1".equals(responseStatusCode)) {
    List<? extends Element> serviceSummaries=UtilXml.childElementList(timeInTransitResponseElement,"ServiceSummary");
    Map<String,String> dateMap=FastMap.newInstance();
    if (serviceSummaries == null || serviceSummaries.size() == 0) {
      return ServiceUtil.returnError("No Dates available at this time");
    }
 else {
      for (      Element element : serviceSummaries) {
        Element service=UtilXml.firstChildElement(element,"Service");
        String serviceCode=UtilXml.childElementValue(service,"Code");
        Element EstimatedArrival=UtilXml.firstChildElement(element,"EstimatedArrival");
        String Date=UtilXml.childElementValue(EstimatedArrival,"Date");
        dateMap.put(serviceCode,Date);
      }
    }
    Debug.log("UPS Rate Map : " + dateMap,module);
    Map<String,Object> resp=ServiceUtil.returnSuccess();
    resp.put("upsDateCodeMap",dateMap);
    Debug.log("========resp=====2891=====" + resp);
    return resp;
  }
 else {
    errorList.add("Error status code : " + responseStatusCode);
    return ServiceUtil.returnFailure(errorList);
  }
}
