{
  Delegator delegator=ctx.getDelegator();
  GenericValue dimensionValue=(GenericValue)context.get("dimensionValue");
  List<String> naturalKeyFields=UtilGenerics.checkList(context.get("naturalKeyFields"),String.class);
  String updateMode=(String)context.get("updateMode");
  Locale locale=(Locale)context.get("locale");
  try {
    Map<String,Object> andCondition=FastMap.newInstance();
    for (    String naturalKeyField : naturalKeyFields) {
      andCondition.put(naturalKeyField,dimensionValue.get(naturalKeyField));
    }
    if (andCondition.isEmpty()) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"BusinessIntelligenceNaturalKeyWithourDimension",UtilMisc.toMap("naturalKeyFields",naturalKeyFields,"dimensionValue",dimensionValue),locale));
    }
    List<GenericValue> existingDimensionValues=null;
    try {
      existingDimensionValues=delegator.findByAnd(dimensionValue.getEntityName(),UtilMisc.toMap(andCondition),null,false);
    }
 catch (    GenericEntityException gee) {
      return ServiceUtil.returnError(gee.getMessage());
    }
    if (UtilValidate.isEmpty(existingDimensionValues)) {
      dimensionValue.set("dimensionId",delegator.getNextSeqId(dimensionValue.getEntityName()));
      dimensionValue.create();
    }
 else {
      if ("TYPE1".equals(updateMode)) {
        for (        GenericValue existingDimensionValue : existingDimensionValues) {
          GenericValue updatedValue=delegator.makeValue(dimensionValue.getEntityName(),dimensionValue);
          updatedValue.set("dimensionId",existingDimensionValue.getString("dimensionId"));
          updatedValue.store();
        }
      }
 else       if ("TYPE2".equals(updateMode)) {
        dimensionValue.set("dimensionId",delegator.getNextSeqId(dimensionValue.getEntityName()));
        dimensionValue.create();
      }
 else {
        return ServiceUtil.returnError(UtilProperties.getMessage(resource,"BusinessIntelligenceUpdateModeStillNotSupported",UtilMisc.toMap("updateMode",updateMode),locale));
      }
    }
  }
 catch (  GenericEntityException gee) {
    return ServiceUtil.returnError(gee.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
