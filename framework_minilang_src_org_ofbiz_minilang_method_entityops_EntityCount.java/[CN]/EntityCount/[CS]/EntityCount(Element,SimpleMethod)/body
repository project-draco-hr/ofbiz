{
  super(element,simpleMethod);
  this.entityNameExdr=new FlexibleStringExpander(element.getAttribute("entity-name"));
  this.delegatorNameExdr=new FlexibleStringExpander(element.getAttribute("delegator-name"));
  this.countAcsr=new FlexibleMapAccessor<Long>(element.getAttribute("count-name"));
  Element conditionExprElement=UtilXml.firstChildElement(element,"condition-expr");
  Element conditionListElement=UtilXml.firstChildElement(element,"condition-list");
  Element conditionObjectElement=UtilXml.firstChildElement(element,"condition-object");
  if (conditionExprElement != null && conditionListElement != null) {
    throw new IllegalArgumentException("In entity find by condition element, cannot have condition-expr and condition-list sub-elements");
  }
  if (conditionExprElement != null) {
    this.whereCondition=new ConditionExpr(conditionExprElement);
  }
 else   if (conditionListElement != null) {
    this.whereCondition=new ConditionList(conditionListElement);
  }
 else   if (conditionObjectElement != null) {
    this.whereCondition=new ConditionObject(conditionObjectElement);
  }
  Element havingConditionListElement=UtilXml.firstChildElement(element,"having-condition-list");
  if (havingConditionListElement != null) {
    this.havingCondition=new ConditionList(havingConditionListElement);
  }
}
