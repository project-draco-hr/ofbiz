{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.attributeNames(simpleMethod,element,"entity-name","count-field","delegator-name");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"entity-name","count-field");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"count-field");
    MiniLangValidate.childElements(simpleMethod,element,"condition-expr","condition-list","condition-object","having-condition-list");
    MiniLangValidate.requireAnyChildElement(simpleMethod,element,"condition-expr","condition-list","condition-object");
  }
  this.entityNameFse=FlexibleStringExpander.getInstance(element.getAttribute("entity-name"));
  this.delegatorNameFse=FlexibleStringExpander.getInstance(element.getAttribute("delegator-name"));
  this.countFma=FlexibleMapAccessor.getInstance(element.getAttribute("count-field"));
  int conditionElementCount=0;
  Element conditionExprElement=UtilXml.firstChildElement(element,"condition-expr");
  conditionElementCount=conditionExprElement == null ? conditionElementCount : conditionElementCount++;
  Element conditionListElement=UtilXml.firstChildElement(element,"condition-list");
  conditionElementCount=conditionListElement == null ? conditionElementCount : conditionElementCount++;
  Element conditionObjectElement=UtilXml.firstChildElement(element,"condition-object");
  conditionElementCount=conditionObjectElement == null ? conditionElementCount : conditionElementCount++;
  if (conditionElementCount > 1) {
    MiniLangValidate.handleError("Element must include only one condition child element",simpleMethod,conditionObjectElement);
  }
  if (conditionExprElement != null) {
    this.whereCondition=new ConditionExpr(conditionExprElement);
  }
 else   if (conditionListElement != null) {
    this.whereCondition=new ConditionList(conditionListElement);
  }
 else   if (conditionObjectElement != null) {
    this.whereCondition=new ConditionObject(conditionObjectElement);
  }
 else {
    this.whereCondition=null;
  }
  Element havingConditionListElement=UtilXml.firstChildElement(element,"having-condition-list");
  if (havingConditionListElement != null) {
    this.havingCondition=new ConditionList(havingConditionListElement);
  }
 else {
    this.havingCondition=null;
  }
}
