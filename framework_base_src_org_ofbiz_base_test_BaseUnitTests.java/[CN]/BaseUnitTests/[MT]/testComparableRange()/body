{
  ComparableRange<Integer> pointTest=new ComparableRange<Integer>(1,1);
  assertTrue("isPoint",pointTest.isPoint());
  assertTrue("equality",pointTest.equals(new ComparableRange<Integer>(1,1)));
  ComparableRange<Integer> range1=new ComparableRange<Integer>(3,1);
  ComparableRange<Integer> range2=new ComparableRange<Integer>(4,6);
  assertTrue("after range",range2.after(range1));
  assertTrue("before range",range1.before(range2));
  assertFalse("excludes value",range1.includes(0));
  assertTrue("includes value",range1.includes(1));
  assertTrue("includes value",range1.includes(2));
  assertTrue("includes value",range1.includes(3));
  assertFalse("excludes value",range1.includes(4));
  assertTrue("includes range",range1.includes(pointTest));
  assertFalse("excludes range",range1.includes(range2));
  ComparableRange<Integer> overlapTest=new ComparableRange<Integer>(2,5);
  assertTrue("overlaps range",range1.overlaps(overlapTest));
  assertTrue("overlaps range",range2.overlaps(overlapTest));
  assertFalse("does not overlap range",range1.overlaps(range2));
  try {
    ComparableRange<java.util.Date> range3=new ComparableRange<java.util.Date>(new java.util.Date(),new java.sql.Timestamp(System.currentTimeMillis()));
    assertTrue("mismatched classes",range3 != null);
  }
 catch (  IllegalArgumentException e) {
  }
}
