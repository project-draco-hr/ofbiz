{
  if ("true".equals(this.ignoreExdr.expandString(context))) {
    return null;
  }
  if (modelEntity.getField(fieldName) == null) {
    throw new IllegalArgumentException("Error in Entity Find: could not find field [" + fieldName + "] in entity with name ["+ modelEntity.getEntityName()+ "]");
  }
  Object value=envNameAcsr.get(context);
  if (value == null && !valueExdr.isEmpty()) {
    value=valueExdr.expandString(context);
  }
  if (this.ignoreIfNull && value == null) {
    return null;
  }
  if ((operator.equals(EntityOperator.IN) || operator.equals(EntityOperator.BETWEEN) || operator.equals(EntityOperator.NOT_IN)) && value instanceof String) {
    String delim=null;
    if (((String)value).indexOf("|") >= 0) {
      delim="|";
    }
 else     if (((String)value).indexOf(",") >= 0) {
      delim=",";
    }
    if (delim != null) {
      value=StringUtil.split((String)value,delim);
    }
  }
  if (!((operator.equals(EntityOperator.IN) || operator.equals(EntityOperator.BETWEEN) || operator.equals(EntityOperator.NOT_IN)) && value instanceof Collection<?>)) {
    value=modelEntity.convertFieldValue(modelEntity.getField(fieldName),value,modelFieldTypeReader,context);
  }
  if (Debug.verboseOn())   Debug.logVerbose("Got value for fieldName [" + fieldName + "]: "+ value,module);
  if (this.ignoreIfEmpty && ObjectType.isEmpty(value)) {
    return null;
  }
  if (operator == EntityOperator.NOT_EQUAL && value != null) {
    if (ignoreCase) {
      return EntityCondition.makeCondition(EntityCondition.makeCondition(EntityFunction.UPPER_FIELD(fieldName),UtilGenerics.<EntityComparisonOperator<?,?>>cast(operator),EntityFunction.UPPER(value)),EntityOperator.OR,EntityCondition.makeCondition(fieldName,EntityOperator.EQUALS,null));
    }
 else {
      return EntityCondition.makeCondition(EntityCondition.makeCondition(fieldName,UtilGenerics.<EntityComparisonOperator<?,?>>cast(operator),value),EntityOperator.OR,EntityCondition.makeCondition(fieldName,EntityOperator.EQUALS,null));
    }
  }
 else {
    if (ignoreCase) {
      return EntityCondition.makeCondition(EntityFunction.UPPER_FIELD(fieldName),UtilGenerics.<EntityComparisonOperator<?,?>>cast(operator),EntityFunction.UPPER(value));
    }
 else {
      return EntityCondition.makeCondition(fieldName,UtilGenerics.<EntityComparisonOperator<?,?>>cast(operator),value);
    }
  }
}
