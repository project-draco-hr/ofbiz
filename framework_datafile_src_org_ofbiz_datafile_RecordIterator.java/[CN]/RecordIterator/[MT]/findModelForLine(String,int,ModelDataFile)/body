{
  ModelRecord modelRecord=null;
  for (int i=0; i < modelDataFile.records.size(); i++) {
    ModelRecord curModelRecord=(ModelRecord)modelDataFile.records.get(i);
    if (curModelRecord.tcPosition < 0) {
      modelRecord=curModelRecord;
      break;
    }
    String typeCode=line.substring(curModelRecord.tcPosition,curModelRecord.tcPosition + curModelRecord.tcLength);
    if (curModelRecord.typeCode.length() > 0) {
      if (typeCode != null && typeCode.equals(curModelRecord.typeCode)) {
        modelRecord=curModelRecord;
        break;
      }
    }
 else     if (curModelRecord.tcMin.length() > 0 || curModelRecord.tcMax.length() > 0) {
      if (curModelRecord.tcIsNum) {
        long typeCodeNum=Long.parseLong(typeCode);
        if ((curModelRecord.tcMinNum < 0 || typeCodeNum >= curModelRecord.tcMinNum) && (curModelRecord.tcMaxNum < 0 || typeCodeNum <= curModelRecord.tcMaxNum)) {
          modelRecord=curModelRecord;
          break;
        }
      }
 else {
        if ((typeCode.compareTo(curModelRecord.tcMin) >= 0) && (typeCode.compareTo(curModelRecord.tcMax) <= 0)) {
          modelRecord=curModelRecord;
          break;
        }
      }
    }
  }
  if (modelRecord == null) {
    throw new DataFileException("Could not find record definition for line " + lineNum + "; first bytes: "+ line.substring(0,(line.length() > 5) ? 5 : line.length()));
  }
  return modelRecord;
}
