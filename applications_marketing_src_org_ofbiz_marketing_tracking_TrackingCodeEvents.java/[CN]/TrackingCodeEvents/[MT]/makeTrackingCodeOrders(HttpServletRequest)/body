{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  java.sql.Timestamp nowStamp=UtilDateTime.nowTimestamp();
  List<GenericValue> trackingCodeOrders=FastList.newInstance();
  Cookie[] cookies=request.getCookies();
  Timestamp affiliateReferredTimeStamp=null;
  String siteId=null;
  String isBillable=null;
  String trackingCodeId=null;
  if (cookies != null && cookies.length > 0) {
    for (int i=0; i < cookies.length; i++) {
      String cookieName=cookies[i].getName();
      Debug.logInfo(" cookieName is " + cookieName,module);
      Debug.logInfo(" cookieValue is " + cookies[i].getValue(),module);
      if ("Ofbiz.TKCD.SiteId".equals(cookieName)) {
        siteId=cookies[i].getValue();
      }
      if ("Ofbiz.TKCD.UpdatedTimeStamp".equals(cookieName)) {
        String affiliateReferredTime=cookies[i].getValue();
        if (affiliateReferredTime != null && !affiliateReferredTime.equals("")) {
          try {
            affiliateReferredTimeStamp=Timestamp.valueOf(affiliateReferredTime);
          }
 catch (          IllegalArgumentException e) {
            Debug.logError(e,"Error parsing affiliateReferredTimeStamp value from cookie",module);
          }
        }
      }
      if (cookieName.startsWith("TKCDB_")) {
        isBillable="Y";
        trackingCodeId=cookies[i].getValue();
      }
 else       if (cookieName.startsWith("TKCDT_")) {
        isBillable="N";
        trackingCodeId=cookies[i].getValue();
      }
    }
  }
  GenericValue trackingCode=null;
  try {
    trackingCode=delegator.findByPrimaryKeyCache("TrackingCode",UtilMisc.toMap("trackingCodeId",trackingCodeId));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error looking up TrackingCode with trackingCodeId [" + trackingCodeId + "], ignoring this trackingCodeId",module);
  }
  if (trackingCode != null) {
    if (trackingCode.get("fromDate") != null && nowStamp.before(trackingCode.getTimestamp("fromDate"))) {
      if (Debug.infoOn())       Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has not yet gone into effect, ignoring this trackingCodeId",module);
    }
    if (trackingCode.get("thruDate") != null && nowStamp.after(trackingCode.getTimestamp("thruDate"))) {
      if (Debug.infoOn())       Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has expired, ignoring this trackingCodeId",module);
    }
    GenericValue trackingCodeOrder=delegator.makeValue("TrackingCodeOrder",UtilMisc.toMap("trackingCodeTypeId",trackingCode.get("trackingCodeTypeId"),"trackingCodeId",trackingCodeId,"isBillable",isBillable,"siteId",siteId,"hasExported","N","affiliateReferredTimeStamp",affiliateReferredTimeStamp));
    Debug.logInfo(" trackingCodeOrder is " + trackingCodeOrder,module);
    trackingCodeOrders.add(trackingCodeOrder);
  }
 else {
    if (trackingCodeId != null) {
      Debug.logError("TrackingCode not found for trackingCodeId [" + trackingCodeId + "], ignoring this trackingCodeId.",module);
    }
  }
  return trackingCodeOrders;
}
