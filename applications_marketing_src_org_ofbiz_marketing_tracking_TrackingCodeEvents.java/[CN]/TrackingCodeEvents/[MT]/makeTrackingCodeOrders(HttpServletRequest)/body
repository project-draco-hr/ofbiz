{
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  java.sql.Timestamp nowStamp=UtilDateTime.nowTimestamp();
  List trackingCodeOrders=new LinkedList();
  Cookie[] cookies=request.getCookies();
  if (cookies != null && cookies.length > 0) {
    for (int i=0; i < cookies.length; i++) {
      String isBillable=null;
      String cookieName=cookies[i].getName();
      if (cookieName.startsWith("TKCDB_")) {
        isBillable="Y";
      }
 else       if (cookieName.startsWith("TKCDT_")) {
        isBillable="N";
      }
      if (isBillable != null) {
        String trackingCodeId=cookies[i].getValue();
        GenericValue trackingCode=null;
        try {
          trackingCode=delegator.findByPrimaryKeyCache("TrackingCode",UtilMisc.toMap("trackingCodeId",trackingCodeId));
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,"Error looking up TrackingCode with trackingCodeId [" + trackingCodeId + "], ignoring this trackingCodeId",module);
          continue;
        }
        if (trackingCode == null) {
          Debug.logError("TrackingCode not found for trackingCodeId [" + trackingCodeId + "], ignoring this trackingCodeId.",module);
          continue;
        }
        if (trackingCode.get("fromDate") != null && nowStamp.before(trackingCode.getTimestamp("fromDate"))) {
          if (Debug.infoOn())           Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has not yet gone into effect, ignoring this trackingCodeId",module);
          continue;
        }
        if (trackingCode.get("thruDate") != null && nowStamp.after(trackingCode.getTimestamp("thruDate"))) {
          if (Debug.infoOn())           Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has expired, ignoring this trackingCodeId",module);
          continue;
        }
        String cookieTrackingCodeTypeId=cookieName.substring("TKCDB_".length());
        if (cookieTrackingCodeTypeId == null || cookieTrackingCodeTypeId.length() == 0) {
          Debug.logWarning("The trackingCodeTypeId as part of the cookie name was null or empty",module);
        }
 else         if (!cookieTrackingCodeTypeId.equals(trackingCode.getString("trackingCodeTypeId"))) {
          Debug.logWarning("The trackingCodeTypeId [" + cookieTrackingCodeTypeId + "] as part of the cookie name was equal to the current trackingCodeTypeId ["+ trackingCode.getString("trackingCodeTypeId")+ "] associated with the trackingCodeId ["+ trackingCodeId+ "]",module);
        }
        GenericValue trackingCodeOrder=delegator.makeValue("TrackingCodeOrder",UtilMisc.toMap("trackingCodeTypeId",trackingCode.get("trackingCodeTypeId"),"trackingCodeId",trackingCodeId,"isBillable",isBillable));
        trackingCodeOrders.add(trackingCodeOrder);
      }
    }
  }
  return trackingCodeOrders;
}
