{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String trackingCodeId=trackingCode.getString("trackingCodeId");
  java.sql.Timestamp nowStamp=UtilDateTime.nowTimestamp();
  if (trackingCode.get("fromDate") != null && nowStamp.before(trackingCode.getTimestamp("fromDate"))) {
    if (Debug.infoOn())     Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has not yet gone into effect, ignoring this trackingCodeId",module);
    return "success";
  }
  if (trackingCode.get("thruDate") != null && nowStamp.after(trackingCode.getTimestamp("thruDate"))) {
    if (Debug.infoOn())     Debug.logInfo("The TrackingCode with ID [" + trackingCodeId + "] has expired, ignoring this trackingCodeId",module);
    return "success";
  }
  GenericValue visit=VisitHandler.getVisit(request.getSession());
  if (visit != null) {
    GenericValue trackingCodeVisit=delegator.makeValue("TrackingCodeVisit",UtilMisc.toMap("trackingCodeId",trackingCodeId,"visitId",visit.get("visitId"),"fromDate",UtilDateTime.nowTimestamp(),"sourceEnumId",sourceEnumId));
    try {
      trackingCodeVisit.create();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Error while saving TrackingCodeVisit",module);
    }
  }
  String cookieDomain=null;
  String webSiteId=WebSiteWorker.getWebSiteId(request);
  if (webSiteId != null) {
    try {
      GenericValue webSite=EntityQuery.use(delegator).from("WebSite").where("webSiteId",webSiteId).cache().queryOne();
      if (webSite != null) {
        cookieDomain=webSite.getString("cookieDomain");
      }
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,"Problems with WebSite entity; using global default cookie domain",module);
    }
  }
  if (cookieDomain == null) {
    cookieDomain=UtilProperties.getPropertyValue("url","cookie.domain","");
  }
  Long trackableLifetime=trackingCode.getLong("trackableLifetime");
  if (trackableLifetime != null && (trackableLifetime.longValue() > 0 || trackableLifetime.longValue() == -1)) {
    Cookie trackableCookie=new Cookie("TKCDT_" + trackingCode.getString("trackingCodeTypeId"),trackingCode.getString("trackingCodeId"));
    if (trackableLifetime.longValue() > 0)     trackableCookie.setMaxAge(trackableLifetime.intValue());
    trackableCookie.setPath("/");
    if (cookieDomain.length() > 0)     trackableCookie.setDomain(cookieDomain);
    response.addCookie(trackableCookie);
  }
  Long billableLifetime=trackingCode.getLong("billableLifetime");
  if (billableLifetime != null && (billableLifetime.longValue() > 0 || billableLifetime.longValue() == -1)) {
    Cookie billableCookie=new Cookie("TKCDB_" + trackingCode.getString("trackingCodeTypeId"),trackingCode.getString("trackingCodeId"));
    if (billableLifetime.longValue() > 0)     billableCookie.setMaxAge(billableLifetime.intValue());
    billableCookie.setPath("/");
    if (cookieDomain.length() > 0)     billableCookie.setDomain(cookieDomain);
    response.addCookie(billableCookie);
  }
  int siteIdCookieAge=(60 * 60 * 24* 365);
  String siteId=request.getParameter("siteId");
  if (UtilValidate.isNotEmpty(siteId)) {
    String visitorSiteIdCookieName="Ofbiz.TKCD.SiteId";
    String visitorSiteId=null;
    javax.servlet.http.Cookie[] cookies=request.getCookies();
    if (cookies != null) {
      for (int i=0; i < cookies.length; i++) {
        if (cookies[i].getName().equals(visitorSiteIdCookieName)) {
          visitorSiteId=cookies[i].getValue();
          break;
        }
      }
    }
    if (visitorSiteId == null || (visitorSiteId != null && !visitorSiteId.equals(siteId))) {
      Cookie siteIdCookie=new Cookie("Ofbiz.TKCD.SiteId",siteId);
      siteIdCookie.setMaxAge(siteIdCookieAge);
      siteIdCookie.setPath("/");
      if (cookieDomain.length() > 0)       siteIdCookie.setDomain(cookieDomain);
      response.addCookie(siteIdCookie);
      Cookie updatedTimeStampCookie=new Cookie("Ofbiz.TKCD.UpdatedTimeStamp",UtilDateTime.nowTimestamp().toString());
      updatedTimeStampCookie.setMaxAge(siteIdCookieAge);
      updatedTimeStampCookie.setPath("/");
      if (cookieDomain.length() > 0)       updatedTimeStampCookie.setDomain(cookieDomain);
      response.addCookie(updatedTimeStampCookie);
    }
  }
  HttpSession session=request.getSession();
  String overrideLogo=trackingCode.getString("overrideLogo");
  if (overrideLogo != null)   session.setAttribute("overrideLogo",overrideLogo);
  String overrideCss=trackingCode.getString("overrideCss");
  if (overrideCss != null)   session.setAttribute("overrideCss",overrideCss);
  String prodCatalogId=trackingCode.getString("prodCatalogId");
  if (UtilValidate.isNotEmpty(prodCatalogId)) {
    session.setAttribute("CURRENT_CATALOG_ID",prodCatalogId);
    CategoryWorker.setTrail(request,FastList.<String>newInstance());
  }
  String redirectUrl=trackingCode.getString("redirectUrl");
  if (UtilValidate.isNotEmpty(redirectUrl)) {
    try {
      response.sendRedirect(redirectUrl);
    }
 catch (    java.io.IOException e) {
      Debug.logError(e,"Could not redirect as requested in the trackingCode to: " + redirectUrl,module);
    }
    return null;
  }
  return "success";
}
