{
  if (cart != null) {
    BigDecimal taxAmount=cart.getTotalSalesTax();
    BigDecimal total=cart.getGrandTotal();
    List adjustments=cart.getAdjustments();
    BigDecimal itemsAdjustmentsAmount=BigDecimal.ZERO;
    Iterator i=cart.iterator();
    while (i.hasNext()) {
      ShoppingCartItem item=(ShoppingCartItem)i.next();
      BigDecimal adjustment=item.getOtherAdjustments();
      if (adjustment.compareTo(BigDecimal.ZERO) != 0) {
        itemsAdjustmentsAmount=itemsAdjustmentsAmount.add(adjustment);
      }
    }
    if (UtilValidate.isNotEmpty(adjustments)) {
      Iterator iter=adjustments.iterator();
      while (iter.hasNext()) {
        GenericValue orderAdjustment=(GenericValue)iter.next();
        BigDecimal amount=orderAdjustment.getBigDecimal("amount");
      }
      iter=adjustments.iterator();
      while (iter.hasNext()) {
        GenericValue orderAdjustment=(GenericValue)iter.next();
        BigDecimal amount=orderAdjustment.getBigDecimal("amount");
        BigDecimal sourcePercentage=orderAdjustment.getBigDecimal("sourcePercentage");
        XModel adjustmentLine=Journal.appendNode(model,"tr","adjustment","");
        Journal.appendNode(adjustmentLine,"td","sku","");
        Journal.appendNode(adjustmentLine,"td","desc",UtilProperties.getMessage(PosTransaction.resource,"PosSalesDiscount",defaultLocale));
        if (UtilValidate.isNotEmpty(amount)) {
          Journal.appendNode(adjustmentLine,"td","qty","");
          Journal.appendNode(adjustmentLine,"td","price",UtilFormatOut.formatPrice(amount));
        }
 else         if (UtilValidate.isNotEmpty(sourcePercentage)) {
          BigDecimal percentage=sourcePercentage.movePointLeft(2).negate();
          Journal.appendNode(adjustmentLine,"td","qty",UtilFormatOut.formatPercentage(percentage));
          amount=cart.getItemTotal().add(itemsAdjustmentsAmount).multiply(percentage);
          Journal.appendNode(adjustmentLine,"td","price",UtilFormatOut.formatPrice(amount.negate()));
        }
        Journal.appendNode(adjustmentLine,"td","index","-1");
      }
    }
    XModel taxLine=Journal.appendNode(model,"tr","tax","");
    Journal.appendNode(taxLine,"td","sku","");
    Journal.appendNode(taxLine,"td","desc",UtilProperties.getMessage(PosTransaction.resource,"PosSalesTax",defaultLocale));
    Journal.appendNode(taxLine,"td","qty","");
    Journal.appendNode(taxLine,"td","price",UtilFormatOut.formatPrice(taxAmount));
    Journal.appendNode(taxLine,"td","index","-1");
    XModel totalLine=Journal.appendNode(model,"tr","total","");
    Journal.appendNode(totalLine,"td","sku","");
    Journal.appendNode(totalLine,"td","desc",UtilProperties.getMessage(PosTransaction.resource,"PosGrandTotal",defaultLocale));
    Journal.appendNode(totalLine,"td","qty","");
    Journal.appendNode(totalLine,"td","price",UtilFormatOut.formatPrice(total));
    Journal.appendNode(totalLine,"td","index","-1");
  }
}
