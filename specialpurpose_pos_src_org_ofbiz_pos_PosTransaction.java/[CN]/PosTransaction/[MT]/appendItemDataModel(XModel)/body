{
  if (cart != null) {
    Iterator<?> i=cart.iterator();
    while (i.hasNext()) {
      ShoppingCartItem item=(ShoppingCartItem)i.next();
      BigDecimal quantity=item.getQuantity();
      BigDecimal unitPrice=item.getBasePrice();
      BigDecimal subTotal=unitPrice.multiply(quantity);
      BigDecimal adjustment=item.getOtherAdjustments();
      XModel line=Journal.appendNode(new JournalLineParams(model,"tr","" + cart.getItemIndex(item),""));
      JournalLineParams sku=new JournalLineParams(line,"td","sku",item.getProductId());
      JournalLineParams desc=new JournalLineParams(line,"td","desc",item.getName());
      JournalLineParams qty=new JournalLineParams(line,"td","qty",UtilFormatOut.formatQuantity(quantity));
      JournalLineParams price=new JournalLineParams(line,"td","price",UtilFormatOut.formatPrice(subTotal));
      JournalLineParams index=new JournalLineParams(line,"td","index",Integer.toString(cart.getItemIndex(item)));
      JournalLineParams[] journalLineParamses=new JournalLineParams[]{sku,desc,qty,price,index};
      appendJouralLine(journalLineParamses);
      if (this.isAggregatedItem(item.getProductId())) {
        ProductConfigWrapper pcw=null;
        pcw=item.getConfigWrapper();
        List<ConfigOption> selected=pcw.getSelectedOptions();
        for (        ConfigOption configoption : selected) {
          if (configoption.isSelected()) {
            XModel option=Journal.appendNode(new JournalLineParams(model,"tr","" + cart.getItemIndex(item),""));
            sku=new JournalLineParams(option,"td","sku","");
            desc=new JournalLineParams(option,"td","desc",configoption.getDescription());
            qty=new JournalLineParams(option,"td","qty","");
            price=new JournalLineParams(option,"td","price",UtilFormatOut.formatPrice(configoption.getPrice()));
            index=new JournalLineParams(option,"td","index",Integer.toString(cart.getItemIndex(item)));
            journalLineParamses=new JournalLineParams[]{sku,desc,qty,price,index};
            appendJouralLine(journalLineParamses);
          }
        }
      }
      if (adjustment.compareTo(BigDecimal.ZERO) != 0) {
        XModel promo=Journal.appendNode(new JournalLineParams(model,"tr","itemadjustment",""));
        sku=new JournalLineParams(promo,"td","sku","");
        desc=new JournalLineParams(promo,"td","desc",UtilProperties.getMessage(resource,"PosItemDiscount",locale));
        qty=new JournalLineParams(promo,"td","qty","");
        price=new JournalLineParams(promo,"td","price",UtilFormatOut.formatPrice(adjustment));
        journalLineParamses=new JournalLineParams[]{sku,desc,qty,price,index};
        appendJouralLine(journalLineParamses);
      }
    }
  }
}
