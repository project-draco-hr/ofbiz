{
  if (cart != null) {
    int paymentInfoSize=cart.selectedPayments();
    for (int i=0; i < paymentInfoSize; i++) {
      ShoppingCart.CartPaymentInfo inf=cart.getPaymentInfo(i);
      GenericValue paymentInfoObj=inf.getValueObject(session.getDelegator());
      GenericValue paymentMethodType=null;
      GenericValue paymentMethod=null;
      if ("PaymentMethod".equals(paymentInfoObj.getEntityName())) {
        paymentMethod=paymentInfoObj;
        try {
          paymentMethodType=paymentMethod.getRelatedOne("PaymentMethodType",false);
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,module);
        }
      }
 else {
        paymentMethodType=paymentInfoObj;
      }
      Object desc=paymentMethodType != null ? paymentMethodType.get("description",locale) : "??";
      String descString=desc.toString();
      BigDecimal amount=BigDecimal.ZERO;
      if (inf.amount == null) {
        amount=cart.getGrandTotal().subtract(cart.getPaymentTotal());
      }
 else {
        amount=inf.amount;
      }
      XModel paymentLine=Journal.appendNode(model,"tr",Integer.toString(i),"");
      Journal.appendNode(paymentLine,"td","sku","");
      Journal.appendNode(paymentLine,"td","desc",descString);
      Journal.appendNode(paymentLine,"td","qty","-");
      Journal.appendNode(paymentLine,"td","price",UtilFormatOut.formatPrice(amount.negate()));
      Journal.appendNode(paymentLine,"td","index",Integer.toString(i));
    }
  }
}
