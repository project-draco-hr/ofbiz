{
  this.session=session;
  this.terminalId=session.getId();
  this.partyId="_NA_";
  this.trace=defaultPrintWriter;
  this.productStoreId=(String)session.getAttribute("productStoreId");
  this.facilityId=(String)session.getAttribute("facilityId");
  this.currency=(String)session.getAttribute("currency");
  this.locale=Locale.getDefault();
  this.cart=new ShoppingCart(session.getDelegator(),productStoreId,locale,currency);
  this.ch=new CheckOutHelper(session.getDispatcher(),session.getDelegator(),cart);
  cart.setChannelType("POS_SALES_CHANNEL");
  cart.setTransactionId(transactionId);
  cart.setFacilityId(facilityId);
  cart.setTerminalId(terminalId);
  if (session.getUserLogin() != null) {
    cart.addAdditionalPartyRole(session.getUserLogin().getString("partyId"),"SALES_REP");
  }
  this.transactionId=session.getDelegator().getNextSeqId("PosTerminalLog");
  txLog=session.getDelegator().makeValue("PosTerminalLog");
  txLog.set("posTerminalLogId",this.transactionId);
  txLog.set("posTerminalId",terminalId);
  txLog.set("transactionId",transactionId);
  txLog.set("userLoginId",session.getUserId());
  txLog.set("statusId","POSTX_ACTIVE");
  txLog.set("logStartDateTime",UtilDateTime.nowTimestamp());
  try {
    txLog.create();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Unable to create TX log - not fatal",module);
  }
  currentTx=this;
  trace("transaction created");
}
