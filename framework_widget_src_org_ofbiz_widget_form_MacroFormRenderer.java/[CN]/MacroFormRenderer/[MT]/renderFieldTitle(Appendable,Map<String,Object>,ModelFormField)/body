{
  String tempTitleText=modelFormField.getTitle(context);
  String titleText=UtilHttp.encodeAmpersands(tempTitleText);
  String style=modelFormField.getTitleStyle();
  StringBuilder sb=new StringBuilder();
  if (UtilValidate.isNotEmpty(titleText)) {
    if (" ".equals(titleText)) {
      sb.append("&nbsp;");
    }
 else {
      titleText=encode(titleText,modelFormField,context);
      if (UtilValidate.isNotEmpty(modelFormField.getHeaderLink())) {
        StringBuilder targetBuffer=new StringBuilder();
        FlexibleStringExpander target=FlexibleStringExpander.getInstance(modelFormField.getHeaderLink());
        String fullTarget=target.expandString(context);
        targetBuffer.append(fullTarget);
        String targetType=HyperlinkField.DEFAULT_TARGET_TYPE;
        if (UtilValidate.isNotEmpty(targetBuffer.toString()) && targetBuffer.toString().toLowerCase().startsWith("javascript:")) {
          targetType="plain";
        }
        StringWriter sr=new StringWriter();
        makeHyperlinkString(sr,modelFormField.getHeaderLinkStyle(),targetType,targetBuffer.toString(),null,titleText,"",modelFormField,this.request,this.response,context,"");
        String title=sr.toString().replace("\"","\'");
        sr=new StringWriter();
        sr.append("<@renderHyperlinkTitle ");
        sr.append(" name=\"");
        sr.append(modelFormField.getModelForm().getName());
        sr.append("\" title=\"");
        sr.append(FreeMarkerWorker.encodeDoubleQuotes(title));
        sr.append("\" />");
        executeMacro(writer,sr.toString());
      }
 else       if (modelFormField.isSortField()) {
        renderSortField(writer,context,modelFormField,titleText);
      }
 else       if (modelFormField.isRowSubmit()) {
        StringWriter sr=new StringWriter();
        sr.append("<@renderHyperlinkTitle ");
        sr.append(" name=\"");
        sr.append(modelFormField.getModelForm().getName());
        sr.append("\" title=\"");
        sr.append(titleText);
        sr.append("\" showSelectAll=\"Y\"/>");
        executeMacro(writer,sr.toString());
      }
 else {
        sb.append(titleText);
      }
    }
  }
  if (!sb.toString().isEmpty()) {
    if ("single".equals(modelFormField.getModelForm().getType()) && modelFormField.getRequiredField()) {
      String requiredStyle=modelFormField.getRequiredFieldStyle();
      if (UtilValidate.isNotEmpty(requiredStyle)) {
        style=requiredStyle;
      }
    }
    Delegator delegator=(Delegator)request.getAttribute("delegator");
    Locale locale=(Locale)context.get("locale");
    String entityName=modelFormField.getEntityName();
    String fieldName=modelFormField.getFieldName();
    String helpText=UtilHelpText.getHelp(entityName,fieldName,delegator,locale);
    String displayHelpText=UtilProperties.getPropertyValue("widget.properties","widget.form.displayhelpText");
    StringWriter sr=new StringWriter();
    sr.append("<@renderFieldTitle ");
    sr.append(" style=\"");
    sr.append(style);
    if ("Y".equals(displayHelpText)) {
      sr.append("\" fieldHelpText=\"");
      sr.append(FreeMarkerWorker.encodeDoubleQuotes(helpText));
    }
    sr.append("\" fieldTitle=\"");
    sr.append(sb.toString());
    sr.append("\" />");
    executeMacro(writer,sr.toString());
  }
}
