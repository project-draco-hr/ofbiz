{
  ModelFormField modelFormField=imageField.getModelFormField();
  String value=modelFormField.getEntry(context,imageField.getValue(context));
  String description=imageField.getDescription(context);
  String alternate=imageField.getAlternate(context);
  String style=imageField.getStyle(context);
  if (UtilValidate.isEmpty(description)) {
    description=imageField.getModelFormField().getTitle(context);
  }
  if (UtilValidate.isEmpty(alternate)) {
    alternate=description;
  }
  if (UtilValidate.isNotEmpty(value)) {
    if (!value.startsWith("http")) {
      StringBuilder buffer=new StringBuilder();
      ContentUrlTag.appendContentPrefix(request,buffer);
      buffer.append(value);
      value=buffer.toString();
    }
  }
 else   if (value == null) {
    value="";
  }
  String event=modelFormField.getEvent();
  String action=modelFormField.getAction(context);
  StringWriter sr=new StringWriter();
  sr.append("<@renderImageField ");
  sr.append(" value=\"");
  sr.append(value);
  sr.append("\" description=\"");
  sr.append(encode(description,modelFormField,context));
  sr.append("\" alternate=\"");
  sr.append(encode(alternate,modelFormField,context));
  sr.append("\" style=\"");
  sr.append(style);
  sr.append("\" event=\"");
  sr.append(event == null ? "" : event);
  sr.append("\" action=\"");
  sr.append(action == null ? "" : action);
  sr.append("\" />");
  executeMacro(writer,sr.toString());
  this.makeHyperlinkString(writer,imageField.getSubHyperlink(),context);
  this.appendTooltip(writer,context,modelFormField);
}
