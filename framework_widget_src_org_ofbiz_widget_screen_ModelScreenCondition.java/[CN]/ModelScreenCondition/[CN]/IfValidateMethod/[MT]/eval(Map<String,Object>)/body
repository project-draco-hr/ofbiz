{
  String methodName=this.methodExdr.expandString(context);
  String className=this.classExdr.expandString(context);
  Object fieldVal=this.fieldAcsr.get(context);
  String fieldString=null;
  if (fieldVal != null) {
    try {
      fieldString=(String)ObjectType.simpleTypeConvert(fieldVal,"String",null,(TimeZone)context.get("timeZone"),(Locale)context.get("locale"),true);
    }
 catch (    GeneralException e) {
      Debug.logError(e,"Could not convert object to String, using empty String",module);
    }
  }
  if (fieldString == null)   fieldString="";
  Class[] paramTypes=new Class[]{String.class};
  Object[] params=new Object[]{fieldString};
  Class valClass;
  try {
    valClass=ObjectType.loadClass(className);
  }
 catch (  ClassNotFoundException cnfe) {
    Debug.logError("Could not find validation class: " + className,module);
    return false;
  }
  Method valMethod;
  try {
    valMethod=valClass.getMethod(methodName,paramTypes);
  }
 catch (  NoSuchMethodException cnfe) {
    Debug.logError("Could not find validation method: " + methodName + " of class "+ className,module);
    return false;
  }
  Boolean resultBool=Boolean.FALSE;
  try {
    resultBool=(Boolean)valMethod.invoke(null,params);
  }
 catch (  Exception e) {
    Debug.logError(e,"Error in IfValidationMethod " + methodName + " of class "+ className+ ", defaulting to false ",module);
  }
  return resultBool.booleanValue();
}
