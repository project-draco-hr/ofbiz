{
  GenericValue testValue=delegator.findOne("TestingType",true,"testingTypeId","TEST-3");
  assertEquals("Retrieved from cache value has the correct description","Testing Type #3",testValue.getString("description"));
  try {
    testValue.put("description","New Testing Type #3");
    fail("Modified an immutable GenericValue");
  }
 catch (  IllegalStateException e) {
  }
  try {
    testValue.remove("description");
    fail("Modified an immutable GenericValue");
  }
 catch (  UnsupportedOperationException e) {
  }
  testValue=(GenericValue)testValue.clone();
  testValue.put("description","New Testing Type #3");
  testValue.store();
  testValue=delegator.findOne("TestingType",true,"testingTypeId","TEST-3");
  assertEquals("Retrieved from cache value has the correct description","New Testing Type #3",testValue.getString("description"));
  testValue=(GenericValue)testValue.clone();
  testValue.remove();
  testValue=delegator.findOne("TestingType",true,"testingTypeId","TEST-3");
  assertEquals("Retrieved from cache value is null",null,testValue);
  EntityCondition testCondition=EntityCondition.makeCondition("description",EntityOperator.EQUALS,"Testing Type #2");
  List<GenericValue> testList=delegator.findList("TestingType",testCondition,null,null,null,true);
  assertEquals("Delegator findList returned one value",1,testList.size());
  testValue=testList.get(0);
  assertEquals("Retrieved from cache value has the correct description","Testing Type #2",testValue.getString("description"));
  try {
    testValue.put("description","New Testing Type #2");
    fail("Modified an immutable GenericValue");
  }
 catch (  IllegalStateException e) {
  }
  try {
    testValue.remove("description");
    fail("Modified an immutable GenericValue");
  }
 catch (  UnsupportedOperationException e) {
  }
  testValue=(GenericValue)testValue.clone();
  testValue.put("testingTypeId","TEST-9");
  testValue.create();
  testList=delegator.findList("TestingType",testCondition,null,null,null,true);
  assertEquals("Delegator findList returned two values",2,testList.size());
  testValue.put("description","New Testing Type #2");
  testValue.store();
  testList=delegator.findList("TestingType",testCondition,null,null,null,true);
  assertEquals("Delegator findList returned one value",1,testList.size());
  testValue=testList.get(0);
  testValue=(GenericValue)testValue.clone();
  testValue.remove();
  testList=delegator.findList("TestingType",testCondition,null,null,null,true);
  assertEquals("Delegator findList returned empty list",0,testList.size());
}
