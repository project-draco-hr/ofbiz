{
  String quantityStr=request.getParameter("quantity");
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  GenericValue userLogin=(GenericValue)request.getSession().getAttribute("userLogin");
  Locale locale=UtilHttp.getLocale(request);
  BigDecimal quantity=null;
  try {
    quantity=new BigDecimal(quantityStr);
  }
 catch (  Exception e) {
  }
  Map<String,Object> serviceInMap=FastMap.newInstance();
  serviceInMap.put("shoppingListId",request.getParameter("shoppingListId"));
  serviceInMap.put("shoppingListItemSeqId",request.getParameter("shoppingListItemSeqId"));
  serviceInMap.put("productId",request.getParameter("add_product_id"));
  serviceInMap.put("userLogin",userLogin);
  if (quantity != null)   serviceInMap.put("quantity",quantity);
  Map<String,Object> result=null;
  try {
    result=dispatcher.runSync("updateShoppingListItem",serviceInMap);
  }
 catch (  GenericServiceException e) {
    String errMsg=UtilProperties.getMessage(resource_error,"shoppingListEvents.error_calling_update",locale) + ": " + e.toString();
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    String errorMsg="Error calling the updateShoppingListItem in handleShoppingListItemVariant: " + e.toString();
    Debug.logError(e,errorMsg,module);
    return "error";
  }
  ServiceUtil.getMessages(request,result,"","","","","","","");
  if ("error".equals(result.get(ModelService.RESPONSE_MESSAGE))) {
    return "error";
  }
 else {
    return "success";
  }
}
