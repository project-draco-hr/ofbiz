{
  if (listAcsr.isEmpty()) {
    Debug.logWarning("No list-name specified in iterate tag, doing nothing: " + rawString(),module);
    return true;
  }
  Object oldEntryValue=entryAcsr.get(methodContext);
  Object objList=listAcsr.get(methodContext);
  if (objList instanceof EntityListIterator) {
    EntityListIterator eli=(EntityListIterator)objList;
    GenericValue theEntry;
    while ((theEntry=(GenericValue)eli.next()) != null) {
      entryAcsr.put(methodContext,theEntry);
      if (!SimpleMethod.runSubOps(subOps,methodContext)) {
        return false;
      }
    }
    try {
      eli.close();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
      String errMsg="ERROR: Error closing entityListIterator in " + simpleMethod.getShortDescription() + " ["+ e.getMessage()+ "]: "+ rawString();
      if (methodContext.getMethodType() == MethodContext.EVENT) {
        methodContext.putEnv(simpleMethod.getEventErrorMessageName(),errMsg);
        methodContext.putEnv(simpleMethod.getEventResponseCodeName(),simpleMethod.getDefaultErrorCode());
      }
 else       if (methodContext.getMethodType() == MethodContext.SERVICE) {
        methodContext.putEnv(simpleMethod.getServiceErrorMessageName(),errMsg);
        methodContext.putEnv(simpleMethod.getServiceResponseMessageName(),simpleMethod.getDefaultErrorCode());
      }
      return false;
    }
  }
 else {
    Collection theList=(Collection)objList;
    if (theList == null) {
      if (Debug.infoOn())       Debug.logInfo("List not found with name " + listAcsr + ", doing nothing: "+ rawString(),module);
      return true;
    }
    if (theList.size() == 0) {
      if (Debug.verboseOn())       Debug.logVerbose("List with name " + listAcsr + " has zero entries, doing nothing: "+ rawString(),module);
      return true;
    }
    Iterator theIterator=theList.iterator();
    while (theIterator.hasNext()) {
      Object theEntry=theIterator.next();
      entryAcsr.put(methodContext,theEntry);
      if (!SimpleMethod.runSubOps(subOps,methodContext)) {
        return false;
      }
    }
  }
  entryAcsr.put(methodContext,oldEntryValue);
  return true;
}
