{
  List<ModelFormField> hiddenIgnoredFieldList=new LinkedList<ModelFormField>();
  for (  ModelFormField modelFormField : fieldList) {
    if (position != -1 && modelFormField.getPosition() != position) {
      continue;
    }
    FieldInfo fieldInfo=modelFormField.getFieldInfo();
switch (fieldInfo.getFieldType()) {
case FieldInfo.HIDDEN:
case FieldInfo.IGNORED:
      if (modelFormField.shouldUse(context)) {
        hiddenIgnoredFieldList.add(modelFormField);
        if (alreadyRendered != null)         alreadyRendered.add(modelFormField.getName());
      }
    break;
case FieldInfo.DISPLAY:
case FieldInfo.DISPLAY_ENTITY:
  ModelFormField.DisplayField displayField=(ModelFormField.DisplayField)fieldInfo;
if (displayField.getAlsoHidden() && modelFormField.shouldUse(context)) {
  hiddenIgnoredFieldList.add(modelFormField);
}
break;
case FieldInfo.HYPERLINK:
ModelFormField.HyperlinkField hyperlinkField=(ModelFormField.HyperlinkField)fieldInfo;
if (hyperlinkField.getAlsoHidden() && modelFormField.shouldUse(context)) {
hiddenIgnoredFieldList.add(modelFormField);
}
break;
}
}
return hiddenIgnoredFieldList;
}
