{
  Locale locale=(Locale)context.get("locale");
  Delegator delegator=dctx.getDelegator();
  Map<String,Object> result=FastMap.newInstance();
  Map response=null;
  Map<String,Object> eBayConfigResult=EbayHelper.buildEbayConfig(context,delegator);
  StringBuffer dataStoreXml=new StringBuffer();
  try {
    Map resultMap=buildGetStoreXml(context,dataStoreXml,eBayConfigResult.get("token").toString(),eBayConfigResult.get("siteID").toString());
    if (!ServiceUtil.isFailure(resultMap)) {
      response=postItem(eBayConfigResult.get("xmlGatewayUri").toString(),dataStoreXml,eBayConfigResult.get("devID").toString(),eBayConfigResult.get("appID").toString(),eBayConfigResult.get("certID").toString(),"GetStore",eBayConfigResult.get("compatibilityLevel").toString(),eBayConfigResult.get("siteID").toString());
      String successMessage=(String)response.get("successMessage");
      if (successMessage != null) {
        String isSuccess=readEbayResponse(successMessage,context.get("productStoreId").toString());
        if (isSuccess == "success") {
          List<GenericValue> catalogCategories=null;
          if (UtilValidate.isNotEmpty(context.get("prodCatalogId"))) {
            catalogCategories=delegator.findByAnd("ProdCatalogCategory",UtilMisc.toMap("prodCatalogId",context.get("prodCatalogId").toString()));
          }
          if (catalogCategories != null) {
            String isSuccess2="";
            Iterator categoriesListIter=catalogCategories.iterator();
            while (categoriesListIter.hasNext()) {
              GenericValue catalogCategory=(GenericValue)categoriesListIter.next();
              String prodCategoryId=catalogCategory.getString("productCategoryId").toString();
              StringBuffer dataCategoriesXml=new StringBuffer();
              Map resultCategoriesMap=buildSetStoreCategoriesXml(dctx,context,dataCategoriesXml,eBayConfigResult.get("token").toString(),eBayConfigResult.get("siteID").toString(),prodCategoryId);
              if (!ServiceUtil.isFailure(resultCategoriesMap)) {
                response=postItem(eBayConfigResult.get("xmlGatewayUri").toString(),dataCategoriesXml,eBayConfigResult.get("devID").toString(),eBayConfigResult.get("appID").toString(),eBayConfigResult.get("certID").toString(),"SetStoreCategories",eBayConfigResult.get("compatibilityLevel").toString(),eBayConfigResult.get("siteID").toString());
                String successMessage2=(String)response.get("successMessage");
                if (successMessage2 != null) {
                  isSuccess2=readEbayResponse(successMessage2,context.get("productStoreId").toString());
                }
              }
            }
          }
        }
      }
 else {
        ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(response));
      }
    }
 else {
      return ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(resultMap));
    }
    result.put(ModelService.SUCCESS_MESSAGE,"Export categories success...");
  }
 catch (  Exception e) {
    Debug.logError("Exception in exportCategoriesSelectedToEbayStore : " + e,module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToEbay.exceptionInGetEbayCategories",locale));
  }
  return result;
}
