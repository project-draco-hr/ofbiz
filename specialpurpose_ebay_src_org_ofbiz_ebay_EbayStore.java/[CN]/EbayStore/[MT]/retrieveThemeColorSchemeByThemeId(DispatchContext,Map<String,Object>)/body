{
  Locale locale=(Locale)context.get("locale");
  Delegator delegator=dctx.getDelegator();
  Map<String,Object> result=FastMap.newInstance();
  GetStoreOptionsRequestType req=null;
  GetStoreOptionsResponseType resp=null;
  StoreThemeArrayType returnedBasicThemeArray=null;
  StoreThemeArrayType returnedAdvanceThemeArray=null;
  try {
    if (context.get("productStoreId") != null) {
      String themeId=(String)context.get("themeId");
      GetStoreOptionsCall call=new GetStoreOptionsCall(EbayHelper.getApiContext((String)context.get("productStoreId"),locale,delegator));
      req=new GetStoreOptionsRequestType();
      resp=(GetStoreOptionsResponseType)call.execute(req);
      if (resp != null && "SUCCESS".equals(resp.getAck().toString())) {
        returnedBasicThemeArray=resp.getBasicThemeArray();
        StoreThemeType[] storeBasicTheme=returnedBasicThemeArray.getTheme();
        int i=0;
        String colorSchemeId=themeId.substring(themeId.indexOf("-") + 1);
        themeId=themeId.substring(0,themeId.indexOf("-"));
        Map<String,Object> storeColorSchemeMap=null;
        boolean flag=false;
        while (i < storeBasicTheme.length) {
          StoreThemeType storeThemeType=(StoreThemeType)storeBasicTheme[i];
          if (themeId.equals(storeThemeType.getThemeID().toString())) {
            StoreColorSchemeType colorSchemeType=storeThemeType.getColorScheme();
            if (colorSchemeType != null) {
              if (colorSchemeId.equals(colorSchemeType.getColorSchemeID().toString())) {
                storeColorSchemeMap=FastMap.newInstance();
                StoreFontType storeFontType=colorSchemeType.getFont();
                storeColorSchemeMap.put("storeFontTypeFontFaceValue",storeFontType.getNameFace().value());
                storeColorSchemeMap.put("storeFontTypeSizeFaceValue",storeFontType.getNameSize().value());
                storeColorSchemeMap.put("storeFontTypeFontTitleValue",storeFontType.getTitleFace().value());
                storeColorSchemeMap.put("storeFontSizeTitleValue",storeFontType.getTitleSize().value());
                storeColorSchemeMap.put("storeFontTypeFontDescValue",storeFontType.getDescFace().value());
                storeColorSchemeMap.put("storeDescSizeValue",storeFontType.getDescSize().value());
                flag=true;
                break;
              }
            }
          }
          i++;
        }
        result.put("storeFontScheme",storeColorSchemeMap);
      }
    }
  }
 catch (  ApiException e) {
    e.printStackTrace();
  }
catch (  SdkSoapException e) {
    e.printStackTrace();
  }
catch (  SdkException e) {
    e.printStackTrace();
  }
  return result;
}
