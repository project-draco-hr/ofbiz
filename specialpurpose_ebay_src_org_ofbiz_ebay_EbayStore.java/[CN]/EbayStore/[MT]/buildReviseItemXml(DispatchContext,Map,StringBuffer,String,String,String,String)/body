{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  try {
    StringUtil.SimpleEncoder encoder=StringUtil.getEncoder("xml");
    try {
      Document itemDocument=UtilXml.makeEmptyXmlDocument("ReviseItemRequest");
      Element itemRequestElem=itemDocument.getDocumentElement();
      itemRequestElem.setAttribute("xmlns","urn:ebay:apis:eBLBaseComponents");
      appendRequesterCredentials(itemRequestElem,itemDocument,token);
      UtilXml.addChildElementValue(itemRequestElem,"Version","643",itemDocument);
      UtilXml.addChildElementValue(itemRequestElem,"ErrorLanguage","en_US",itemDocument);
      UtilXml.addChildElementValue(itemRequestElem,"WarningLevel","High",itemDocument);
      Element ItemCategoriesElem=UtilXml.addChildElement(itemRequestElem,"Item",itemDocument);
      UtilXml.addChildElementValue(ItemCategoriesElem,"ItemID",productId,itemDocument);
      Element customCategoryElem=UtilXml.addChildElement(ItemCategoriesElem,"PrimaryCategory",itemDocument);
      UtilXml.addChildElementValue(customCategoryElem,"CategoryID",primaryCategoryId,itemDocument);
      dataStoreXml.append(UtilXml.writeXmlDocument(itemDocument));
    }
 catch (    Exception e) {
      Debug.logError("Exception during building data to eBay: " + e.getMessage(),module);
      return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToEbay.exceptionDuringBuildingDataItemsToEbay",locale));
    }
  }
 catch (  Exception e) {
    Debug.logError("Exception during building data to eBay: " + e.getMessage(),module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToEbay.exceptionDuringBuildingDataItemsToEbay",locale));
  }
  return ServiceUtil.returnSuccess();
}
