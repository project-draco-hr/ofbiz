{
  UtilCodec.SimpleEncoder encoder=UtilCodec.getEncoder(encoderType);
  String candidateFieldName=ModelUtil.dbNameToVarName(confItemContentTypeId);
  String cacheKey=confItemContentTypeId + SEPARATOR + locale+ SEPARATOR+ mimeTypeId+ SEPARATOR+ productConfigItem.get("configItemId");
  try {
    String cachedValue=configItemContentCache.get(cacheKey);
    if (cachedValue != null) {
      return cachedValue;
    }
    Writer outWriter=new StringWriter();
    getProductConfigItemContentAsText(null,productConfigItem,confItemContentTypeId,locale,mimeTypeId,delegator,dispatcher,outWriter,false);
    String outString=outWriter.toString();
    if (UtilValidate.isEmpty(outString)) {
      outString=productConfigItem.getModelEntity().isField(candidateFieldName) ? productConfigItem.getString(candidateFieldName) : "";
      outString=outString == null ? "" : outString;
    }
    outString=encoder.encode(outString);
    if (configItemContentCache != null) {
      configItemContentCache.put(cacheKey,outString);
    }
    return outString;
  }
 catch (  GeneralException e) {
    Debug.logError(e,"Error rendering ProdConfItemContent, inserting empty String",module);
    String candidateOut=productConfigItem.getModelEntity().isField(candidateFieldName) ? productConfigItem.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : encoder.encode(candidateOut);
  }
catch (  IOException e) {
    Debug.logError(e,"Error rendering ProdConfItemContent, inserting empty String",module);
    String candidateOut=productConfigItem.getModelEntity().isField(candidateFieldName) ? productConfigItem.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : encoder.encode(candidateOut);
  }
}
