{
  if (configItemId == null && productConfigItem != null) {
    configItemId=productConfigItem.getString("configItemId");
  }
  if (delegator == null && productConfigItem != null) {
    delegator=productConfigItem.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId="text/html";
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(confItemContentTypeId);
  ModelEntity productConfigItemModel=delegator.getModelEntity("ProductConfigItem");
  if (productConfigItemModel.isField(candidateFieldName)) {
    if (productConfigItem == null) {
      productConfigItem=EntityQuery.use(delegator).from("ProductConfigItem").where("configItemId",configItemId).cache().queryOne();
    }
    if (productConfigItem != null) {
      String candidateValue=productConfigItem.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
  GenericValue productConfigItemContent=EntityQuery.use(delegator).from("ProdConfItemContent").where("configItemId",configItemId,"confItemContentTypeId",confItemContentTypeId).orderBy("-fromDate").cache(true).filterByDate().queryFirst();
  if (productConfigItemContent != null) {
    Map<String,Object> inContext=new HashMap<String,Object>();
    inContext.put("productConfigItem",productConfigItem);
    inContext.put("productConfigItemContent",productConfigItemContent);
    ContentWorker.renderContentAsText(dispatcher,delegator,productConfigItemContent.getString("contentId"),outWriter,inContext,locale,mimeTypeId,null,null,false);
  }
}
