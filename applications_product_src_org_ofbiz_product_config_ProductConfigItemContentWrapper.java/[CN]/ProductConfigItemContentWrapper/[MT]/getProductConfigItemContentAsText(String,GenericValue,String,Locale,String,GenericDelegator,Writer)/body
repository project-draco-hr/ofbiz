{
  if (configItemId == null && productConfigItem != null) {
    configItemId=productConfigItem.getString("configItemId");
  }
  if (delegator == null && productConfigItem != null) {
    delegator=productConfigItem.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId="text/html";
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(confItemContentTypeId);
  ModelEntity productConfigItemModel=delegator.getModelEntity("ProductConfigItem");
  if (productConfigItemModel.isField(candidateFieldName)) {
    if (productConfigItem == null) {
      productConfigItem=delegator.findByPrimaryKeyCache("ProductConfigItem",UtilMisc.toMap("configItemId",configItemId));
    }
    if (productConfigItem != null) {
      String candidateValue=productConfigItem.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
  List productConfigItemContentList=delegator.findByAndCache("ProdConfItemContent",UtilMisc.toMap("configItemId",configItemId,"confItemContentTypeId",confItemContentTypeId),UtilMisc.toList("-fromDate"));
  productConfigItemContentList=EntityUtil.filterByDate(productConfigItemContentList);
  GenericValue productConfigItemContent=EntityUtil.getFirst(productConfigItemContentList);
  if (productConfigItemContent != null) {
    Map inContext=new HashMap();
    inContext.put("productConfigItem",productConfigItem);
    inContext.put("productConfigItemContent",productConfigItemContent);
    ContentWorker.renderContentAsText(delegator,productConfigItemContent.getString("contentId"),outWriter,inContext,null,locale,mimeTypeId);
  }
}
