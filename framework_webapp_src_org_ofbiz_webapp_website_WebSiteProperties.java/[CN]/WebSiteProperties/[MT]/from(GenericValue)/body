{
  Assert.notNull("webSiteValue",webSiteValue);
  if (!"WebSite".equals(webSiteValue.getEntityName())) {
    throw new IllegalArgumentException("webSiteValue is not a WebSite entity value");
  }
  WebSiteProperties defaults=new WebSiteProperties();
  String httpPort=(webSiteValue.get("httpPort") != null) ? webSiteValue.getString("httpPort") : defaults.getHttpPort();
  String httpHost=(webSiteValue.get("httpHost") != null) ? webSiteValue.getString("httpHost") : defaults.getHttpHost();
  String httpsPort=(webSiteValue.get("httpsPort") != null) ? webSiteValue.getString("httpsPort") : defaults.getHttpsPort();
  String httpsHost=(webSiteValue.get("httpsHost") != null) ? webSiteValue.getString("httpsHost") : defaults.getHttpsHost();
  boolean enableHttps=(webSiteValue.get("enableHttps") != null) ? webSiteValue.getBoolean("enableHttps") : defaults.getEnableHttps();
  if (ClassLoaderContainer.portOffset != 0) {
    Integer httpPortValue=Integer.valueOf(httpPort);
    httpPortValue+=ClassLoaderContainer.portOffset;
    httpPort=httpPortValue.toString();
    Integer httpsPortValue=Integer.valueOf(httpsPort);
    httpsPortValue+=ClassLoaderContainer.portOffset;
    httpsPort=httpsPortValue.toString();
  }
  return new WebSiteProperties(httpPort,httpHost,httpsPort,httpsHost,enableHttps);
}
