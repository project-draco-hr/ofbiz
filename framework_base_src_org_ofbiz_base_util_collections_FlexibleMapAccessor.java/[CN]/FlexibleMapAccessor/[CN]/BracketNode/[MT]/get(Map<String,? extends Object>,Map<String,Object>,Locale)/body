{
  String key=getExprString(context,this.base);
  Object property=getProperty(context);
  Integer index=UtilMisc.toIntegerObject(property);
  if (index != null) {
    List<Object> list=getListElementFromMap(base,key,true);
    if (this.child == null) {
      return list.get(index);
    }
    Map<String,Object> newBase=null;
    try {
      newBase=UtilGenerics.<Map<String,Object>>cast(list.get(index));
    }
 catch (    Exception e) {
      throw new RuntimeException("Variable is not a Map: " + this.original);
    }
    return this.child.get(context,newBase,locale);
  }
 else {
    Map<String,Object> newBase=getMapPutElement(base,key,true);
    String newKey=property.toString();
    if (this.child == null) {
      return legacyGet(newBase,newKey,locale);
    }
 else {
      Map<String,Object> thisElement=getMapPutElement(newBase,newKey,true);
      return this.child.get(context,thisElement,locale);
    }
  }
}
