{
  boolean isAddAtEnd=false;
  boolean isAddAtIndex=false;
  int listIndex=-1;
  int openBrace=original.indexOf('[');
  int closeBrace=(openBrace == -1 ? -1 : original.indexOf(']',openBrace));
  if (closeBrace == -1) {
    throw new RuntimeException("Missing ] in expression: " + original);
  }
  String base=original.substring(0,openBrace);
  String property=original.substring(openBrace + 1,closeBrace).trim();
  if (property.length() == 0) {
    isAddAtEnd=true;
  }
 else   if (property.charAt(0) == '+') {
    property=property.substring(1);
    isAddAtIndex=true;
  }
  try {
    listIndex=Integer.parseInt(property);
  }
 catch (  Exception e) {
  }
  if (listIndex != -1 || isAddAtEnd || isAddAtIndex) {
    return new ListNode(original,base,isAddAtEnd,isAddAtIndex,listIndex);
  }
 else {
    return new BracketNode(original,base,property);
  }
}
