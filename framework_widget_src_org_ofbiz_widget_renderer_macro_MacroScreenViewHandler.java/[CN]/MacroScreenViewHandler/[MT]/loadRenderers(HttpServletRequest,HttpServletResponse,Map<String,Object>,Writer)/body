{
  String screenMacroLibraryPath=UtilProperties.getPropertyValue("widget",getName() + ".screenrenderer");
  String formMacroLibraryPath=UtilProperties.getPropertyValue("widget",getName() + ".formrenderer");
  String treeMacroLibraryPath=UtilProperties.getPropertyValue("widget",getName() + ".treerenderer");
  String menuMacroLibraryPath=UtilProperties.getPropertyValue("widget",getName() + ".menurenderer");
  Map<String,Object> userPreferences=UtilGenerics.cast(context.get("userPreferences"));
  if (userPreferences != null) {
    String visualThemeId=(String)userPreferences.get("VISUAL_THEME");
    if (visualThemeId != null) {
      LocalDispatcher dispatcher=(LocalDispatcher)context.get("dispatcher");
      Map<String,Object> serviceCtx=dispatcher.getDispatchContext().makeValidContext("getVisualThemeResources",ModelService.IN_PARAM,context);
      serviceCtx.put("visualThemeId",visualThemeId);
      Map<String,Object> serviceResult=dispatcher.runSync("getVisualThemeResources",serviceCtx);
      if (ServiceUtil.isSuccess(serviceResult)) {
        Map<String,List<String>> themeResources=UtilGenerics.cast(serviceResult.get("themeResources"));
        List<String> resourceList=UtilGenerics.cast(themeResources.get("VT_SCRN_MACRO_LIB"));
        if (resourceList != null && !resourceList.isEmpty()) {
          String macroLibraryPath=resourceList.get(0);
          if (macroLibraryPath != null) {
            screenMacroLibraryPath=macroLibraryPath;
          }
        }
        resourceList=UtilGenerics.cast(themeResources.get("VT_FORM_MACRO_LIB"));
        if (resourceList != null && !resourceList.isEmpty()) {
          String macroLibraryPath=resourceList.get(0);
          if (macroLibraryPath != null) {
            formMacroLibraryPath=macroLibraryPath;
          }
        }
        resourceList=UtilGenerics.cast(themeResources.get("VT_TREE_MACRO_LIB"));
        if (resourceList != null && !resourceList.isEmpty()) {
          String macroLibraryPath=resourceList.get(0);
          if (macroLibraryPath != null) {
            treeMacroLibraryPath=macroLibraryPath;
          }
        }
        resourceList=UtilGenerics.cast(themeResources.get("VT_MENU_MACRO_LIB"));
        if (resourceList != null && !resourceList.isEmpty()) {
          String macroLibraryPath=resourceList.get(0);
          if (macroLibraryPath != null) {
            menuMacroLibraryPath=macroLibraryPath;
          }
        }
      }
    }
  }
  ScreenStringRenderer screenStringRenderer=new MacroScreenRenderer(UtilProperties.getPropertyValue("widget",getName() + ".name"),screenMacroLibraryPath);
  if (!formMacroLibraryPath.isEmpty()) {
    FormStringRenderer formStringRenderer=new MacroFormRenderer(formMacroLibraryPath,request,response);
    context.put("formStringRenderer",formStringRenderer);
  }
  if (!treeMacroLibraryPath.isEmpty()) {
    TreeStringRenderer treeStringRenderer=new MacroTreeRenderer(treeMacroLibraryPath,writer);
    context.put("treeStringRenderer",treeStringRenderer);
  }
  if (!menuMacroLibraryPath.isEmpty()) {
    MenuStringRenderer menuStringRenderer=new MacroMenuRenderer(menuMacroLibraryPath,request,response);
    context.put("menuStringRenderer",menuStringRenderer);
  }
  return screenStringRenderer;
}
