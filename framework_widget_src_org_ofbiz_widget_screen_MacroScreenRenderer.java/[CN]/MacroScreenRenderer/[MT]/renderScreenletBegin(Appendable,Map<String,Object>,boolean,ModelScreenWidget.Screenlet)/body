{
  HttpServletRequest request=(HttpServletRequest)context.get("request");
  HttpServletResponse response=(HttpServletResponse)context.get("response");
  boolean javaScriptEnabled=UtilHttp.isJavaScriptEnabled(request);
  ModelScreenWidget.Menu tabMenu=screenlet.getTabMenu();
  if (tabMenu != null) {
    tabMenu.renderWidgetString(writer,context,this);
  }
  String title=screenlet.getTitle(context);
  boolean collapsible=screenlet.collapsible();
  ModelScreenWidget.Menu navMenu=screenlet.getNavigationMenu();
  ModelScreenWidget.Form navForm=screenlet.getNavigationForm();
  String collapsibleAreaId="";
  String expandToolTip="";
  String collapseToolTip="";
  String fullUrlString="";
  boolean padded=screenlet.padded();
  String menuString="";
  boolean showMore=false;
  if (UtilValidate.isNotEmpty(title) || navMenu != null || navForm != null || collapsible) {
    showMore=true;
    if (collapsible) {
      collapsibleAreaId=this.getNextElementId();
      Map<String,Object> uiLabelMap=UtilGenerics.checkMap(context.get("uiLabelMap"));
      Map<String,Object> paramMap=UtilGenerics.checkMap(context.get("requestParameters"));
      Map<String,Object> requestParameters=new HashMap<String,Object>(paramMap);
      if (uiLabelMap != null) {
        expandToolTip=(String)uiLabelMap.get("CommonExpand");
        collapseToolTip=(String)uiLabelMap.get("CommonCollapse");
      }
      if (!javaScriptEnabled) {
        requestParameters.put(screenlet.getPreferenceKey(context) + "_collapsed","false");
        String queryString=UtilHttp.urlEncodeArgs(requestParameters);
        fullUrlString=request.getRequestURI() + "?" + queryString;
      }
    }
    if (!collapsed) {
      StringWriter sb=new StringWriter();
      if (navMenu != null) {
        MenuStringRenderer savedRenderer=(MenuStringRenderer)context.get("menuStringRenderer");
        MenuStringRenderer renderer=new ScreenletMenuRenderer(request,response);
        context.put("menuStringRenderer",renderer);
        navMenu.renderWidgetString(sb,context,this);
        context.put("menuStringRenderer",savedRenderer);
      }
 else       if (navForm != null) {
        renderScreenletPaginateMenu(sb,context,navForm);
      }
      menuString=sb.toString();
    }
  }
  StringWriter sr=new StringWriter();
  sr.append("<@renderScreenletBegin ");
  sr.append("id=\"");
  sr.append(screenlet.getId(context));
  sr.append("\" title=\"");
  sr.append(title);
  sr.append("\" collapsible=");
  sr.append(Boolean.toString(collapsible));
  sr.append(" collapsibleAreaId=\"");
  sr.append(collapsibleAreaId);
  sr.append("\" expandToolTip=\"");
  sr.append(expandToolTip);
  sr.append("\" collapseToolTip=\"");
  sr.append(collapseToolTip);
  sr.append("\" fullUrlString=\"");
  sr.append(fullUrlString);
  sr.append("\" padded=");
  sr.append(Boolean.toString(padded));
  sr.append(" menuString=\"");
  sr.append(menuString.replaceAll("\"","'"));
  sr.append("\" showMore=");
  sr.append(Boolean.toString(showMore));
  sr.append(" collapsed=");
  sr.append(Boolean.toString(collapsed));
  sr.append(" javaScriptEnabled=");
  sr.append(Boolean.toString(javaScriptEnabled));
  sr.append(" />");
  executeMacro(sr.toString());
}
