{
  HttpServletResponse response=(HttpServletResponse)context.get("response");
  HttpServletRequest request=(HttpServletRequest)context.get("request");
  String target=link.getTarget(context);
  String linkType=WidgetWorker.determineAutoLinkType(link.getLinkType(),target,link.getUrlMode(),request);
  String actionUrl="";
  StringBuilder targetParameters=new StringBuilder();
  if ("hidden-form".equals(linkType)) {
    StringBuilder sb=new StringBuilder();
    WidgetWorker.buildHyperlinkUrl(sb,target,link.getUrlMode(),null,link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),request,response,context);
    actionUrl=sb.toString();
    targetParameters.append("[");
    for (    Map.Entry<String,String> parameter : link.getParameterMap(context).entrySet()) {
      if (targetParameters.length() > 1) {
        targetParameters.append(",");
      }
      targetParameters.append("{'name':'");
      targetParameters.append(parameter.getKey());
      targetParameters.append("'");
      targetParameters.append(",'value':'");
      targetParameters.append(parameter.getValue());
      targetParameters.append("'}");
    }
    targetParameters.append("]");
  }
  String linkUrl="";
  if (UtilValidate.isNotEmpty(target)) {
    if (!"hidden-form".equals(linkType)) {
      StringBuilder sb=new StringBuilder();
      WidgetWorker.buildHyperlinkUrl(sb,target,link.getUrlMode(),link.getParameterMap(context),link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),request,response,context);
      linkUrl=sb.toString();
    }
  }
  String imgStr="";
  ModelScreenWidget.Image img=link.getImage();
  if (img != null) {
    StringWriter sw=new StringWriter();
    renderImage(sw,context,img);
    imgStr=sw.toString();
  }
  Map<String,Object> parameters=FastMap.newInstance();
  parameters.put("parameterList",targetParameters.toString());
  parameters.put("targetWindow",link.getTargetWindow(context));
  parameters.put("target",target);
  String uniqueItemName=link.getModelScreen().getName() + "_LF_" + UtilMisc.<String>addToBigDecimalInMap(context,"screenUniqueItemIndex",BigDecimal.ONE);
  parameters.put("uniqueItemName",uniqueItemName);
  parameters.put("linkType",linkType);
  parameters.put("actionUrl",actionUrl);
  parameters.put("id",link.getId(context));
  parameters.put("style",link.getStyle(context));
  parameters.put("name",link.getName(context));
  parameters.put("linkUrl",linkUrl);
  parameters.put("text",link.getText(context));
  parameters.put("imgStr",imgStr);
  executeMacro(writer,"renderLink",parameters);
}
