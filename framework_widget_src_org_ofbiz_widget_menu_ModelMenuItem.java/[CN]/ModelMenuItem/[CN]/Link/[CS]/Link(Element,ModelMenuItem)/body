{
  this.linkMenuItem=parentMenuItem;
  setText(linkElement.getAttribute("text"));
  setId(linkElement.getAttribute("id"));
  setStyle(linkElement.getAttribute("style"));
  setTarget(linkElement.getAttribute("target"));
  setTargetWindow(linkElement.getAttribute("target-window"));
  setPrefix(linkElement.getAttribute("prefix"));
  setUrlMode(linkElement.getAttribute("url-mode"));
  setFullPath(linkElement.getAttribute("full-path"));
  setSecure(linkElement.getAttribute("secure"));
  setEncode(linkElement.getAttribute("encode"));
  setName(linkElement.getAttribute("name"));
  Element imageElement=UtilXml.firstChildElement(linkElement,"image");
  if (imageElement != null) {
    this.image=new Image(imageElement);
  }
  this.linkType=linkElement.getAttribute("link-type");
  this.parametersMapAcsr=FlexibleMapAccessor.getInstance(linkElement.getAttribute("parameters-map"));
  List<? extends Element> parameterElementList=UtilXml.childElementList(linkElement,"parameter");
  for (  Element parameterElement : parameterElementList) {
    this.parameterList.add(new WidgetWorker.Parameter(parameterElement));
  }
  setRequestConfirmation("true".equals(linkElement.getAttribute("request-confirmation")));
  setConfirmationMsg(linkElement.getAttribute("confirmation-message"));
  Element autoServiceParamsElement=UtilXml.firstChildElement(linkElement,"auto-parameters-service");
  if (autoServiceParamsElement != null) {
    autoServiceParameters=new WidgetWorker.AutoServiceParameters(autoServiceParamsElement);
  }
  Element autoEntityParamsElement=UtilXml.firstChildElement(linkElement,"auto-parameters-entity");
  if (autoEntityParamsElement != null) {
    autoEntityParameters=new WidgetWorker.AutoEntityParameters(autoEntityParamsElement);
  }
}
