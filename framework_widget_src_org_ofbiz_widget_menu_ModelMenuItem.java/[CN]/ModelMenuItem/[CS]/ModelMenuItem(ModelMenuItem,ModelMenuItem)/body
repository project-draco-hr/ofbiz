{
  super(existingMenuItem.getName());
  this.modelMenu=existingMenuItem.modelMenu;
  if (UtilValidate.isNotEmpty(overrideMenuItem.getName())) {
    this.overrideName=overrideMenuItem.getName();
  }
 else {
    this.overrideName=existingMenuItem.getName();
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.entityName)) {
    this.entityName=overrideMenuItem.entityName;
  }
 else {
    this.entityName=existingMenuItem.entityName;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.parentPortalPageId)) {
    this.parentPortalPageId=overrideMenuItem.parentPortalPageId;
  }
 else {
    this.parentPortalPageId=existingMenuItem.parentPortalPageId;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.title)) {
    this.title=overrideMenuItem.title;
  }
 else {
    this.title=existingMenuItem.title;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.tooltip)) {
    this.tooltip=overrideMenuItem.tooltip;
  }
 else {
    this.tooltip=existingMenuItem.tooltip;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.titleStyle)) {
    this.titleStyle=overrideMenuItem.titleStyle;
  }
 else {
    this.titleStyle=existingMenuItem.titleStyle;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.selectedStyle)) {
    this.selectedStyle=overrideMenuItem.selectedStyle;
  }
 else {
    this.selectedStyle=existingMenuItem.selectedStyle;
  }
  if (UtilValidate.isNotEmpty(overrideMenuItem.widgetStyle)) {
    this.widgetStyle=overrideMenuItem.widgetStyle;
  }
 else {
    this.widgetStyle=existingMenuItem.widgetStyle;
  }
  if (overrideMenuItem.position != null) {
    this.position=overrideMenuItem.position;
  }
 else {
    this.position=existingMenuItem.position;
  }
  this.actions=existingMenuItem.actions;
  this.align=existingMenuItem.align;
  this.alignStyle=existingMenuItem.alignStyle;
  this.associatedContentId=existingMenuItem.associatedContentId;
  this.cellWidth=existingMenuItem.cellWidth;
  this.condition=existingMenuItem.condition;
  this.disabledTitleStyle=existingMenuItem.disabledTitleStyle;
  this.disableIfEmpty=existingMenuItem.disableIfEmpty;
  this.hideIfSelected=existingMenuItem.hideIfSelected;
  this.menuItemList=existingMenuItem.menuItemList;
  this.parentMenuItem=existingMenuItem.parentMenuItem;
  this.subMenu=existingMenuItem.subMenu;
  this.tooltipStyle=existingMenuItem.tooltipStyle;
  this.link=existingMenuItem.link;
}
