{
  boolean passed=true;
  if (this.condition != null) {
    if (!this.condition.eval(context)) {
      passed=false;
    }
  }
  Locale locale=(Locale)context.get("locale");
  if (passed) {
    ModelMenuAction.runSubActions(this.actions,context);
    String parentPortalPageId=this.getParentPortalPageId(context);
    if (UtilValidate.isNotEmpty(parentPortalPageId)) {
      List<GenericValue> portalPages=PortalPageWorker.getPortalPages(parentPortalPageId,context);
      if (UtilValidate.isNotEmpty(portalPages)) {
        for (        GenericValue portalPage : portalPages) {
          if (UtilValidate.isNotEmpty(portalPage.getString("portalPageName"))) {
            ModelMenuItem localItem=new ModelMenuItem(this.getModelMenu());
            localItem.name=portalPage.getString("portalPageId");
            localItem.setTitle((String)portalPage.get("portalPageName",locale));
            localItem.link=new Link(this);
            List<WidgetWorker.Parameter> linkParams=localItem.link.getParameterList();
            linkParams.add(new WidgetWorker.Parameter("portalPageId",portalPage.getString("portalPageId"),false));
            linkParams.add(new WidgetWorker.Parameter("parentPortalPageId",parentPortalPageId,false));
            if (link != null) {
              localItem.link.setTarget(link.targetExdr.getOriginal());
              linkParams.addAll(link.parameterList);
            }
 else {
              localItem.link.setTarget("showPortalPage");
            }
            localItem.link.setText((String)portalPage.get("portalPageName",locale));
            menuStringRenderer.renderMenuItem(writer,context,localItem);
          }
        }
      }
    }
 else {
      menuStringRenderer.renderMenuItem(writer,context,this);
    }
  }
}
