{
  List<GenericValue> resultList=null;
  EntityListIterator eli=(EntityListIterator)context.get("workEffortIterator");
  if (eli != null) {
    try {
      Set<String> keys=new HashSet<String>();
      resultList=new LinkedList<GenericValue>();
      GenericValue workEffort=eli.next();
      while (workEffort != null) {
        String workEffortId=workEffort.getString("workEffortId");
        if (!keys.contains(workEffortId)) {
          resultList.add(workEffort);
          keys.add(workEffortId);
        }
        workEffort=eli.next();
      }
    }
 catch (    Exception e) {
      Debug.logError(e,module);
    }
 finally {
      try {
        eli.close();
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Error while closing EntityListIterator: ",module);
      }
    }
  }
 else {
    List<GenericValue> workEfforts=UtilGenerics.checkList(context.get("workEfforts"));
    if (workEfforts != null) {
      resultList=WorkEffortWorker.removeDuplicateWorkEfforts(workEfforts);
    }
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  result.put("workEfforts",resultList);
  return result;
}
