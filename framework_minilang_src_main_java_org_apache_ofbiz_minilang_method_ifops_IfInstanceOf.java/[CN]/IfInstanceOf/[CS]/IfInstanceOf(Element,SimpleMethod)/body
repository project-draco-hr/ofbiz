{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.attributeNames(simpleMethod,element,"field","class");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"field","class");
    MiniLangValidate.constantAttributes(simpleMethod,element,"class");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"field");
  }
  this.fieldFma=FlexibleMapAccessor.getInstance(element.getAttribute("field"));
  this.className=element.getAttribute("class");
  Class<?> compareClass=null;
  if (!className.isEmpty()) {
    try {
      compareClass=ObjectType.loadClass(className);
    }
 catch (    ClassNotFoundException e) {
      MiniLangValidate.handleError("Invalid class name " + className,simpleMethod,element);
    }
  }
  this.compareClass=compareClass;
  this.subOps=Collections.unmodifiableList(SimpleMethod.readOperations(element,simpleMethod));
  Element elseElement=UtilXml.firstChildElement(element,"else");
  if (elseElement != null) {
    this.elseSubOps=Collections.unmodifiableList(SimpleMethod.readOperations(elseElement,simpleMethod));
  }
 else {
    this.elseSubOps=null;
  }
}
