{
  final String packageId=(String)application.get("packageId");
  final String packageVersion=(String)application.get("packageVersion");
  final String processId=(String)application.get("processId");
  final String processVersion=(String)application.get("processVersion");
  final String applicationId=(String)application.get("toolId");
  Map expresions=new HashMap();
  expresions.putAll(UtilMisc.toMap("packageId",packageId));
  expresions.putAll(UtilMisc.toMap("packageVersion",packageVersion));
  expresions.putAll(UtilMisc.toMap("processId",processId));
  expresions.putAll(UtilMisc.toMap("processVersion",processVersion));
  expresions.putAll(UtilMisc.toMap("applicationId",applicationId));
  final Collection params=delegator.findByAnd("WorkflowFormalParam",expresions);
  Iterator i=params.iterator();
  while (i.hasNext()) {
    GenericValue param=(GenericValue)i.next();
    String name=param.getString("formalParamId");
    String mode=param.getString("modeEnumId");
    String type=param.getString("dataTypeEnumId");
    if (mode.equals("WPM_IN") || mode.equals("WPM_INOUT"))     contextSignature.put(name,WfUtil.getJavaType(type));
 else     if (mode.equals("WPM_OUT") || mode.equals("WPM_INOUT"))     resultSignature.put(name,WfUtil.getJavaType(type));
  }
}
