{
  String postalCode=addr.getPostalCode();
  String postalCodeExt=null;
  if (postalCode.length() == 10 && postalCode.indexOf("-") != -1) {
    String[] strSplit=postalCode.split("-",2);
    postalCode=strSplit[0];
    postalCodeExt=strSplit[1];
  }
  Map<String,Object> addrMap=FastMap.newInstance();
  addrMap.put("partyId",partyId);
  addrMap.put("toName",addr.getContactName());
  addrMap.put("address1",addr.getAddress1());
  addrMap.put("address2",addr.getAddress2());
  addrMap.put("city",addr.getCity());
  addrMap.put("stateProvinceGeoId",addr.getRegion());
  addrMap.put("countryGeoId",getCountryGeoId(addr.getCountryCode()));
  addrMap.put("postalCode",postalCode);
  addrMap.put("postalCodeExt",postalCodeExt);
  addrMap.put("allowSolicitation","Y");
  addrMap.put("contactMechPurposeTypeId","GENERAL_LOCATION");
  addrMap.put("userLogin",system);
  Map<String,Object> addrResp=dispatcher.runSync("createPartyPostalAddress",addrMap);
  if (ServiceUtil.isError(addrResp)) {
    throw new GeneralException("Unable to create new customer address record: " + ServiceUtil.getErrorMessage(addrResp));
  }
  String contactMechId=(String)addrResp.get("contactMechId");
  Debug.logInfo("Created new address for partyId [" + partyId + "] :"+ contactMechId,module);
  return contactMechId;
}
