{
  String shipCmId=null;
  String billCmId=null;
  String partyId=null;
  List<GenericValue> shipInfo=PartyWorker.findMatchingPartyAndPostalAddress(delegator,shipAddr.getAddress1(),(UtilValidate.isEmpty(shipAddr.getAddress2()) ? null : shipAddr.getAddress2()),shipAddr.getCity(),shipAddr.getRegion(),shipAddr.getPostalCode(),null,getCountryGeoId(shipAddr.getCountryCode()),shipAddr.getStructuredName().getFirstName(),null,shipAddr.getStructuredName().getLastName());
  if (shipInfo != null && shipInfo.size() > 0) {
    GenericValue first=EntityUtil.getFirst(shipInfo);
    shipCmId=first.getString("contactMechId");
    partyId=first.getString("partyId");
    Debug.logInfo("Existing shipping address found : " + shipCmId + " (party: "+ partyId+ ")",module);
  }
  List<GenericValue> billInfo=PartyWorker.findMatchingPartyAndPostalAddress(delegator,billAddr.getAddress1(),(UtilValidate.isEmpty(billAddr.getAddress2()) ? null : billAddr.getAddress2()),billAddr.getCity(),billAddr.getRegion(),billAddr.getPostalCode(),null,getCountryGeoId(billAddr.getCountryCode()),billAddr.getStructuredName().getFirstName(),null,billAddr.getStructuredName().getLastName());
  if (billInfo != null && billInfo.size() > 0) {
    GenericValue first=EntityUtil.getFirst(billInfo);
    billCmId=first.getString("contactMechId");
    if (partyId == null) {
      partyId=first.getString("partyId");
    }
 else {
      String billPartyId=first.getString("partyId");
      if (!billPartyId.equals(partyId)) {
        Debug.logWarning("Duplicate partyId found : " + billPartyId + " -> "+ partyId,module);
      }
    }
    Debug.logInfo("Existing billing address found : " + billCmId + " (party: "+ partyId+ ")",module);
  }
  if (partyId == null) {
    partyId=createPerson(shipAddr.getStructuredName());
  }
  if (shipCmId == null) {
    shipCmId=createPartyAddress(partyId,shipAddr);
    addPurposeToAddress(partyId,shipCmId,SHIPPING_ADDRESS);
  }
  if (billCmId == null) {
    billInfo=PartyWorker.findMatchingPartyAndPostalAddress(delegator,billAddr.getAddress1(),billAddr.getAddress2(),billAddr.getCity(),billAddr.getRegion(),billAddr.getPostalCode(),null,getCountryGeoId(billAddr.getCountryCode()),billAddr.getStructuredName().getFirstName(),null,billAddr.getStructuredName().getLastName());
    if (billInfo != null && billInfo.size() > 0) {
      GenericValue first=EntityUtil.getFirst(billInfo);
      billCmId=first.getString("contactMechId");
    }
 else {
      billCmId=createPartyAddress(partyId,shipAddr);
      addPurposeToAddress(partyId,billCmId,BILLING_ADDRESS);
    }
  }
  return new String[]{partyId,shipCmId,billCmId};
}
