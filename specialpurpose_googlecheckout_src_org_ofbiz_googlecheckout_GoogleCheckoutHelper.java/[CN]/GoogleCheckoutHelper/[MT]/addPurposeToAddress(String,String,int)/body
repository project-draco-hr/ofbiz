{
  String contactMechPurposeTypeId=getAddressType(addrType);
  List<GenericValue> values=delegator.findByAnd("PartyContactWithPurpose",UtilMisc.toMap("partyId",partyId,"contactMechId",contactMechId,"contactMechPurposeTypeId",contactMechPurposeTypeId),null,false);
  values=EntityUtil.filterByDate(values,null,"contactFromDate","contactThruDate",true);
  values=EntityUtil.filterByDate(values,null,"purposeFromDate","purposeThruDate",true);
  if (UtilValidate.isEmpty(values)) {
    Map<String,Object> addPurposeMap=FastMap.newInstance();
    addPurposeMap.put("contactMechId",contactMechId);
    addPurposeMap.put("partyId",partyId);
    addPurposeMap.put("contactMechPurposeTypeId",contactMechPurposeTypeId);
    addPurposeMap.put("userLogin",system);
    Map<String,Object> addPurposeResp=dispatcher.runSync("createPartyContactMechPurpose",addPurposeMap);
    if (addPurposeResp != null && ServiceUtil.isError(addPurposeResp)) {
      throw new GeneralException(ServiceUtil.getErrorMessage(addPurposeResp));
    }
  }
}
