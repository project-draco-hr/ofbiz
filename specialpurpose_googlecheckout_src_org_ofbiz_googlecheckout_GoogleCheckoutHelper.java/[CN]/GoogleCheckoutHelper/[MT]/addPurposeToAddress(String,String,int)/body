{
  String contactMechPurposeTypeId=getAddressType(addrType);
  List<GenericValue> values=EntityQuery.use(delegator).from("PartyContactWithPurpose").where("partyId",partyId,"contactMechId",contactMechId,"contactMechPurposeTypeId",contactMechPurposeTypeId).filterByDate("contactFromDate","contactThruDate","purposeFromDate","purposeThruDate").queryList();
  if (UtilValidate.isEmpty(values)) {
    Map<String,Object> addPurposeMap=FastMap.newInstance();
    addPurposeMap.put("contactMechId",contactMechId);
    addPurposeMap.put("partyId",partyId);
    addPurposeMap.put("contactMechPurposeTypeId",contactMechPurposeTypeId);
    addPurposeMap.put("userLogin",system);
    Map<String,Object> addPurposeResp=dispatcher.runSync("createPartyContactMechPurpose",addPurposeMap);
    if (addPurposeResp != null && ServiceUtil.isError(addPurposeResp)) {
      throw new GeneralException(ServiceUtil.getErrorMessage(addPurposeResp));
    }
  }
}
