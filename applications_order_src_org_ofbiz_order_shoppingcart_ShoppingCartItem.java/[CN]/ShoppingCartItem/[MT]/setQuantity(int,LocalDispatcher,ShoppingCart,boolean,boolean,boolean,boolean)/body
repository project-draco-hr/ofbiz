{
  if (this.quantity == quantity) {
    return;
  }
  if (this.isPromo) {
    throw new CartItemModifyException("Sorry, you can't change the quantity on the promotion item " + this.getName() + " (product ID: "+ productId+ "), not setting quantity.");
  }
  String productStoreId=cart.getProductStoreId();
  if (!skipInventoryChecks && !"PURCHASE_ORDER".equals(cart.getOrderType())) {
    if (_product != null && quantity > this.quantity) {
      if (!isInventoryAvailableOrNotRequired(quantity,productStoreId,dispatcher)) {
        String excMsg="Sorry, we do not have enough (you tried " + UtilFormatOut.formatQuantity(quantity) + ") of the product "+ this.getName()+ " (product ID: "+ productId+ ") in stock, not adding to cart. Please try a lower quantity, try again later, or call customer service for more information.";
        Debug.logWarning(excMsg,module);
        throw new CartItemModifyException(excMsg);
      }
    }
  }
  this.quantity=quantity;
  if (updateProductPrice) {
    this.updatePrice(dispatcher,cart);
  }
  if (triggerExternalOps) {
    ProductPromoWorker.doPromotions(cart,dispatcher);
  }
  if (!"PURCHASE_ORDER".equals(cart.getOrderType())) {
    if (triggerExternalOps && ProductStoreWorker.autoSaveCart(delegator,productStoreId)) {
      try {
        ShoppingListEvents.fillAutoSaveList(cart,dispatcher);
      }
 catch (      GeneralException e) {
        Debug.logWarning(e,UtilProperties.getMessage(resource_error,"OrderUnableToStoreAutoSaveCart",locale));
      }
    }
  }
  if (resetShipGroup) {
    cart.clearItemShipInfo(this);
    cart.setItemShipGroupQty(this,quantity,0);
  }
}
