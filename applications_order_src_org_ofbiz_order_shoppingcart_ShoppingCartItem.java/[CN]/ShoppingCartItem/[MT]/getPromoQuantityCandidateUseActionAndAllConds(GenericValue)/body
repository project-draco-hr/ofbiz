{
  BigDecimal totalUse=BigDecimal.ZERO;
  String productPromoId=productPromoAction.getString("productPromoId");
  String productPromoRuleId=productPromoAction.getString("productPromoRuleId");
  GenericPK productPromoActionPK=productPromoAction.getPrimaryKey();
  BigDecimal existingValue=this.quantityUsedPerPromoCandidate.get(productPromoActionPK);
  if (existingValue != null) {
    totalUse=existingValue;
  }
  for (  Map.Entry<GenericPK,BigDecimal> entry : this.quantityUsedPerPromoCandidate.entrySet()) {
    GenericPK productPromoCondActionPK=entry.getKey();
    BigDecimal quantityUsed=entry.getValue();
    if (quantityUsed != null) {
      if (productPromoId.equals(productPromoCondActionPK.getString("productPromoId")) && productPromoRuleId.equals(productPromoCondActionPK.getString("productPromoRuleId")) && productPromoCondActionPK.containsKey("productPromoCondSeqId")) {
        totalUse=totalUse.add(quantityUsed);
      }
    }
  }
  return totalUse;
}
