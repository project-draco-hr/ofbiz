{
  double totalUse=0;
  String productPromoId=productPromoAction.getString("productPromoId");
  String productPromoRuleId=productPromoAction.getString("productPromoRuleId");
  GenericPK productPromoActionPK=productPromoAction.getPrimaryKey();
  Double existingValue=(Double)this.quantityUsedPerPromoCandidate.get(productPromoActionPK);
  if (existingValue != null) {
    totalUse=existingValue.doubleValue();
  }
  Iterator entryIter=this.quantityUsedPerPromoCandidate.entrySet().iterator();
  while (entryIter.hasNext()) {
    Map.Entry entry=(Map.Entry)entryIter.next();
    GenericPK productPromoCondActionPK=(GenericPK)entry.getKey();
    Double quantityUsed=(Double)entry.getValue();
    if (quantityUsed != null) {
      if (productPromoId.equals(productPromoCondActionPK.getString("productPromoId")) && productPromoRuleId.equals(productPromoCondActionPK.getString("productPromoRuleId")) && productPromoCondActionPK.containsKey("productPromoCondSeqId")) {
        totalUse+=quantityUsed.doubleValue();
      }
    }
  }
  return totalUse;
}
