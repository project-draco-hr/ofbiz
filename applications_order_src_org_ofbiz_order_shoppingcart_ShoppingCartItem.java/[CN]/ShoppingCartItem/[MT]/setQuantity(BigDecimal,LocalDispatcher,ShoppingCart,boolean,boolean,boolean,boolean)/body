{
  if (this.quantity == quantity) {
    return;
  }
  if (this.isPromo) {
    Map messageMap=UtilMisc.toMap("productName",this.getName(),"productId",productId);
    String excMsg=UtilProperties.getMessage(resource,"OrderCannotChangeQuantityInPromotion",messageMap,cart.getLocale());
    throw new CartItemModifyException(excMsg);
  }
  String productStoreId=cart.getProductStoreId();
  if (!skipInventoryChecks && !"PURCHASE_ORDER".equals(cart.getOrderType())) {
    if (_product != null && quantity.compareTo(this.quantity) > 0) {
      if (!isInventoryAvailableOrNotRequired(quantity,productStoreId,dispatcher)) {
        Map messageMap=UtilMisc.toMap("requestedQuantity",UtilFormatOut.formatQuantity(quantity.doubleValue()),"productName",this.getName(),"productId",productId);
        String excMsg=UtilProperties.getMessage(resource,"OrderDoNotHaveEnoughProducts",messageMap,cart.getLocale());
        Debug.logWarning(excMsg,module);
        throw new CartItemModifyException(excMsg);
      }
    }
  }
  this.quantity=quantity;
  if (updateProductPrice) {
    this.updatePrice(dispatcher,cart);
  }
  if (triggerExternalOps) {
    ProductPromoWorker.doPromotions(cart,dispatcher);
  }
  if (!"PURCHASE_ORDER".equals(cart.getOrderType())) {
    if (triggerExternalOps && ProductStoreWorker.autoSaveCart(delegator,productStoreId)) {
      try {
        ShoppingListEvents.fillAutoSaveList(cart,dispatcher);
      }
 catch (      GeneralException e) {
        Debug.logWarning(e,UtilProperties.getMessage(resource_error,"OrderUnableToStoreAutoSaveCart",locale));
      }
    }
  }
  if (resetShipGroup) {
    cart.clearItemShipInfo(this);
    cart.setItemShipGroupQty(this,quantity,0);
  }
}
