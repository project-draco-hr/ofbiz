{
  GenericDelegator delegator=cart.getDelegator();
  List selFixedAssetProduct=null;
  GenericValue fixedAssetProduct=null;
  try {
    List allFixedAssetProduct=delegator.findByAnd("FixedAssetProduct",UtilMisc.toMap("productId",productId,"fixedAssetProductTypeId","FAPT_USE"));
    selFixedAssetProduct=EntityUtil.filterByDate(allFixedAssetProduct,UtilDateTime.nowTimestamp(),"fromDate","thruDate",true);
  }
 catch (  GenericEntityException e) {
    Map messageMap=UtilMisc.toMap("productId",productId);
    String msg=UtilProperties.getMessage(resource,"item.cannot_find_Fixed_Asset",messageMap,cart.getLocale());
    return msg;
  }
  if (UtilValidate.isNotEmpty(selFixedAssetProduct)) {
    Iterator firstOne=selFixedAssetProduct.iterator();
    fixedAssetProduct=(GenericValue)firstOne.next();
  }
 else {
    Map messageMap=UtilMisc.toMap("productId",productId);
    String msg=UtilProperties.getMessage(resource,"item.cannot_find_Fixed_Asset",messageMap,cart.getLocale());
    return msg;
  }
  GenericValue fixedAsset=null;
  try {
    fixedAsset=fixedAssetProduct.getRelatedOne("FixedAsset");
  }
 catch (  GenericEntityException e) {
    Map messageMap=UtilMisc.toMap("fixedAssetId",fixedAssetProduct.getString("fixedAssetId"));
    String msg=UtilProperties.getMessage(resource,"item.fixed_Asset_not_found",messageMap,cart.getLocale());
    return msg;
  }
  if (fixedAsset == null) {
    Map messageMap=UtilMisc.toMap("fixedAssetId",fixedAssetProduct.getString("fixedAssetId"));
    String msg=UtilProperties.getMessage(resource,"item.fixed_Asset_not_found",messageMap,cart.getLocale());
    return msg;
  }
  GenericValue techDataCalendar=null;
  try {
    techDataCalendar=fixedAsset.getRelatedOne("TechDataCalendar");
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  if (techDataCalendar == null) {
    if (fixedAsset.getDouble("productionCapacity").doubleValue() >= quantity) {
      String msg=UtilProperties.getMessage(resource,"item.availableOk",cart.getLocale());
      return msg;
    }
 else {
      Map messageMap=UtilMisc.toMap("quantityReq",(new Double(quantity)).toString(),"quantityAvail",fixedAsset.getString("productionCapacity"));
      String msg=UtilProperties.getMessage(resource,"item.availableQnt",messageMap,cart.getLocale());
      return msg;
    }
  }
  long dayCount=0;
  String resultMessage="";
  while (dayCount < (long)reservLength) {
    GenericValue techDataCalendarExcDay=null;
    Timestamp exceptionDateStartTime=new Timestamp((long)(reservStart.getTime() + (dayCount++ * 86400000)));
    try {
      techDataCalendarExcDay=delegator.findByPrimaryKey("TechDataCalendarExcDay",UtilMisc.toMap("calendarId",fixedAsset.get("calendarId"),"exceptionDateStartTime",exceptionDateStartTime));
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
    }
    if (techDataCalendarExcDay == null) {
      if (fixedAsset.get("productionCapacity") != null && fixedAsset.getDouble("productionCapacity").doubleValue() < quantity)       resultMessage=resultMessage.concat(exceptionDateStartTime.toString().substring(0,10) + ", ");
    }
 else {
      double exceptionCapacity=0.00;
      if (techDataCalendarExcDay.get("exceptionCapacity") != null)       exceptionCapacity=techDataCalendarExcDay.getDouble("exceptionCapacity").doubleValue();
      if (exceptionCapacity == 0.00 && fixedAsset.get("productionCapacity") != null)       exceptionCapacity=fixedAsset.getDouble("productionCapacity").doubleValue();
      if (exceptionCapacity != 0.00) {
        double usedCapacity=0.00;
        if (techDataCalendarExcDay.get("usedCapacity") != null)         usedCapacity=techDataCalendarExcDay.getDouble("usedCapacity").doubleValue();
        if (exceptionCapacity < (quantity + usedCapacity)) {
          resultMessage=resultMessage.concat(exceptionDateStartTime.toString().substring(0,10) + ", ");
          Debug.logInfo("No rental fixed Asset available: " + exceptionCapacity + " already used: "+ usedCapacity+ " Requested now: "+ quantity,module);
        }
      }
    }
  }
  if (resultMessage.compareTo("") == 0) {
    String msg=UtilProperties.getMessage(resource,"item.availableOk",cart.getLocale());
    return msg;
  }
 else {
    Map messageMap=UtilMisc.toMap("resultMessage",resultMessage);
    String msg=UtilProperties.getMessage(resource,"item.notAvailable",messageMap,cart.getLocale());
    return msg;
  }
}
