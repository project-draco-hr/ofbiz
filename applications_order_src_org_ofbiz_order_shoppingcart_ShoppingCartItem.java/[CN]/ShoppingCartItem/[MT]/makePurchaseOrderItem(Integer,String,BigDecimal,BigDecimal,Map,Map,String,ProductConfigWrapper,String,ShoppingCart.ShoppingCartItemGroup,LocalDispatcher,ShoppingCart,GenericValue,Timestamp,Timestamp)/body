{
  GenericDelegator delegator=cart.getDelegator();
  GenericValue product=null;
  try {
    product=delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",productId));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.toString(),module);
    product=null;
  }
  if (product == null) {
    Map messageMap=UtilMisc.toMap("productId",productId);
    String excMsg=UtilProperties.getMessage(resource,"item.product_not_found",messageMap,cart.getLocale());
    Debug.logWarning(excMsg,module);
    throw new ItemNotFoundException(excMsg);
  }
  ShoppingCartItem newItem=new ShoppingCartItem(product,additionalProductFeatureAndAppls,attributes,prodCatalogId,configWrapper,cart.getLocale(),itemType,itemGroup,null);
  if ("Y".equals(product.getString("isVirtual"))) {
    Map messageMap=UtilMisc.toMap("productName",product.getString("productName"),"productId",product.getString("productId"));
    String excMsg=UtilProperties.getMessage(resource,"item.cannot_add_product_virtual",messageMap,cart.getLocale());
    Debug.logWarning(excMsg,module);
    throw new CartItemModifyException(excMsg);
  }
  if ("AGGREGATED".equals(product.getString("productTypeId"))) {
    if (configWrapper == null || !configWrapper.isCompleted()) {
      Map messageMap=UtilMisc.toMap("productName",product.getString("productName"),"productId",product.getString("productId"));
      String excMsg=UtilProperties.getMessage(resource,"item.cannot_add_product_not_configured_correctly",messageMap,cart.getLocale());
      Debug.logWarning(excMsg,module);
      throw new CartItemModifyException(excMsg);
    }
  }
  if (cartLocation == null) {
    cart.addItemToEnd(newItem);
  }
 else {
    cart.addItem(cartLocation.intValue(),newItem);
  }
  if (selectedAmount != null) {
    newItem.setSelectedAmount(selectedAmount);
  }
  newItem.setShipBeforeDate(shipBeforeDate != null ? shipBeforeDate : cart.getDefaultShipBeforeDate());
  newItem.setShipAfterDate(shipAfterDate != null ? shipAfterDate : cart.getDefaultShipAfterDate());
  try {
    newItem.setQuantity(quantity,dispatcher,cart,true);
  }
 catch (  CartItemModifyException e) {
    cart.removeCartItem(cart.getItemIndex(newItem),dispatcher);
    cart.clearItemShipInfo(newItem);
    cart.removeEmptyCartItems();
    throw e;
  }
  if (supplierProduct != null) {
    newItem.setName(getPurchaseOrderItemDescription(product,supplierProduct,cart.getLocale()));
    newItem.setBasePrice(supplierProduct.getBigDecimal("lastPrice"));
  }
 else {
    newItem.setName(product.getString("internalName"));
  }
  return newItem;
}
