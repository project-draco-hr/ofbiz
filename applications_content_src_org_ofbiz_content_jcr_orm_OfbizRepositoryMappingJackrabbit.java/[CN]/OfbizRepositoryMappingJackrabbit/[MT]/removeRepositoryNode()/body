{
  if (node.hasNodes()) {
    checkOutChildNodes(node);
  }
  checkOutNode(node);
  node.remove();
  try {
    GenericValue content=delegator.findOne("Content",false,UtilMisc.toMap("contentId",this.content.getString("contentId")));
    List<GenericValue> relatedContents=getAllRelatedContents(content);
    if (UtilValidate.isNotEmpty(relatedContents)) {
      delegator.removeAll(relatedContents);
    }
    saveSessionAndCheckinNode();
  }
 catch (  GenericEntityException e) {
    throw new GenericEntityException(e);
  }
}
