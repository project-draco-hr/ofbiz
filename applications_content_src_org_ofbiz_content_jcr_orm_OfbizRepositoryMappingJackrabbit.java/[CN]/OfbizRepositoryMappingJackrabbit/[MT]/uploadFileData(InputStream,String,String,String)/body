{
  if (UtilValidate.isEmpty(language)) {
    language=UtilProperties.getPropertyValue("general","locale.properties.fallback");
  }
  Node folder=null;
  Boolean update=Boolean.FALSE;
  if (!this.node.hasNode(fileName)) {
    folder=(Node)createNewRepositoryNode(this.node.getPath() + "/" + fileName,PROPERTY_FIELDS.FILE.getType()).get("node");
    folder.addMixin(PROPERTY_FIELDS.mixInLANGUAGE.getType());
    folder.addMixin(PROPERTY_FIELDS.mixInTITLE.getType());
  }
 else {
    folder=this.node.getNode(fileName);
    checkOutNode(folder);
    update=Boolean.TRUE;
  }
  folder.setProperty(PROPERTY_FIELDS.LANGUAGE.getType(),language);
  folder.setProperty(PROPERTY_FIELDS.TITLE.getType(),fileName);
  if (UtilValidate.isNotEmpty(description)) {
    folder.setProperty(PROPERTY_FIELDS.DESCRIPTION.getType(),description);
  }
  Node resource=null;
  if (!update) {
    resource=(Node)createNewRepositoryNode(folder.getPath() + "/jcr:content",PROPERTY_FIELDS.RESOURCE.getType()).get("node");
  }
 else {
    resource=folder.getNode("jcr:content");
    checkOutNode(resource);
  }
  Binary binary=this.session.getValueFactory().createBinary(file);
  String mimeType=getMimeTypeFromInputStream(file);
  resource.setProperty(PROPERTY_FIELDS.MIMETYPE.getType(),mimeType);
  resource.setProperty(PROPERTY_FIELDS.DATA.getType(),binary);
  resource.addMixin(PROPERTY_FIELDS.mixInVERSIONING.getType());
  saveSessionAndCheckinNode();
  return;
}
