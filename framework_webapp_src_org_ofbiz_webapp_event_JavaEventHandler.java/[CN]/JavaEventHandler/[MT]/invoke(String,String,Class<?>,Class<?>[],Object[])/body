{
  boolean beganTransaction=false;
  if (eventClass == null) {
    throw new EventHandlerException("Error invoking event, the class " + eventPath + " was not found");
  }
  if (eventPath == null || eventMethod == null) {
    throw new EventHandlerException("Invalid event method or path; call initialize()");
  }
  Debug.logVerbose("[Processing]: JAVA Event",module);
  try {
    beganTransaction=TransactionUtil.begin();
    Method m=eventClass.getMethod(eventMethod,paramTypes);
    String eventReturn=(String)m.invoke(null,params);
    if (Debug.verboseOn())     Debug.logVerbose("[Event Return]: " + eventReturn,module);
    return eventReturn;
  }
 catch (  java.lang.reflect.InvocationTargetException e) {
    Throwable t=e.getTargetException();
    if (t != null) {
      Debug.logError(t,"Problems Processing Event",module);
      throw new EventHandlerException("Problems processing event: " + t.toString(),t);
    }
 else {
      Debug.logError(e,"Problems Processing Event",module);
      throw new EventHandlerException("Problems processing event: " + e.toString(),e);
    }
  }
catch (  Exception e) {
    Debug.logError(e,"Problems Processing Event",module);
    throw new EventHandlerException("Problems processing event: " + e.toString(),e);
  }
 finally {
    try {
      TransactionUtil.commit(beganTransaction);
    }
 catch (    GenericTransactionException e) {
      Debug.logError(e,module);
    }
  }
}
