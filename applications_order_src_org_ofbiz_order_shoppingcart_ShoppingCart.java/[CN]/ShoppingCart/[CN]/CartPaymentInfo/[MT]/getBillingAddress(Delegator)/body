{
  GenericValue valueObj=this.getValueObject(delegator);
  GenericValue postalAddress=null;
  if ("PaymentMethod".equals(valueObj.getEntityName())) {
    String paymentMethodTypeId=valueObj.getString("paymentMethodTypeId");
    String paymentMethodId=valueObj.getString("paymentMethodId");
    Map lookupFields=UtilMisc.toMap("paymentMethodId",paymentMethodId);
    try {
      GenericValue pmObj=null;
      if ("CREDIT_CARD".equals(paymentMethodTypeId)) {
        pmObj=delegator.findByPrimaryKey("CreditCard",lookupFields);
      }
 else       if ("GIFT_CARD".equals(paymentMethodTypeId)) {
        pmObj=delegator.findByPrimaryKey("GiftCard",lookupFields);
      }
 else       if ("EFT_ACCOUNT".equals(paymentMethodTypeId)) {
        pmObj=delegator.findByPrimaryKey("EftAccount",lookupFields);
      }
 else       if ("EXT_BILLACT".equals(paymentMethodTypeId)) {
        pmObj=delegator.findByPrimaryKey("BillingAccount",lookupFields);
      }
 else       if ("EXT_PAYPAL".equals(paymentMethodTypeId)) {
        pmObj=delegator.findByPrimaryKey("PayPalPaymentMethod",lookupFields);
      }
      if (pmObj != null) {
        postalAddress=pmObj.getRelatedOne("PostalAddress");
      }
 else {
        Debug.logInfo("No PaymentMethod Object Found - " + paymentMethodId,module);
      }
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
  }
  return postalAddress;
}
