{
  GenericValue valueObj=this.getValueObject(delegator);
  GenericValue postalAddress=null;
  if ("PaymentMethod".equals(valueObj.getEntityName())) {
    String paymentMethodTypeId=valueObj.getString("paymentMethodTypeId");
    String paymentMethodId=valueObj.getString("paymentMethodId");
    Map<String,Object> lookupFields=UtilMisc.<String,Object>toMap("paymentMethodId",paymentMethodId);
    try {
      GenericValue pmObj=null;
      if ("CREDIT_CARD".equals(paymentMethodTypeId)) {
        pmObj=delegator.findOne("CreditCard",lookupFields,false);
      }
 else       if ("GIFT_CARD".equals(paymentMethodTypeId)) {
        pmObj=delegator.findOne("GiftCard",lookupFields,false);
      }
 else       if ("EFT_ACCOUNT".equals(paymentMethodTypeId)) {
        pmObj=delegator.findOne("EftAccount",lookupFields,false);
      }
 else       if ("EXT_BILLACT".equals(paymentMethodTypeId)) {
        pmObj=delegator.findOne("BillingAccount",lookupFields,false);
      }
 else       if ("EXT_PAYPAL".equals(paymentMethodTypeId)) {
        pmObj=delegator.findOne("PayPalPaymentMethod",lookupFields,false);
      }
      if (pmObj != null) {
        postalAddress=pmObj.getRelatedOne("PostalAddress");
      }
 else {
        Debug.logInfo("No PaymentMethod Object Found - " + paymentMethodId,module);
      }
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
  }
  return postalAddress;
}
