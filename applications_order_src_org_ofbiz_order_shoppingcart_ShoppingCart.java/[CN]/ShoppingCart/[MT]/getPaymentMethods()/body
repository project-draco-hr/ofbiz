{
  List<GenericValue> methods=FastList.newInstance();
  if (UtilValidate.isNotEmpty(paymentInfo)) {
    for (    String paymentMethodId : getPaymentMethodIds()) {
      try {
        GenericValue paymentMethod=this.getDelegator().findOne("PaymentMethod",UtilMisc.toMap("paymentMethodId",paymentMethodId),true);
        if (paymentMethod != null) {
          methods.add(paymentMethod);
        }
 else {
          Debug.logError("Error getting cart payment methods, the paymentMethodId [" + paymentMethodId + "] is not valid",module);
        }
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Unable to get payment method from the database",module);
      }
    }
  }
  return methods;
}
