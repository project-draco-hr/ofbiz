{
  List allOrderItemAssociations=new LinkedList();
  Iterator itemIter=cartLines.iterator();
  while (itemIter.hasNext()) {
    ShoppingCartItem item=(ShoppingCartItem)itemIter.next();
    String requirementId=item.getRequirementId();
    if (requirementId != null) {
      try {
        List commitments=getDelegator().findByAnd("OrderRequirementCommitment",UtilMisc.toMap("requirementId",requirementId));
        GenericValue commitment=EntityUtil.getFirst(commitments);
        if (commitment != null) {
          GenericValue orderItemAssociation=getDelegator().makeValue("OrderItemAssoc");
          orderItemAssociation.set("orderId",commitment.getString("orderId"));
          orderItemAssociation.set("orderItemSeqId",commitment.getString("orderItemSeqId"));
          orderItemAssociation.set("shipGroupSeqId","_NA_");
          orderItemAssociation.set("toOrderItemSeqId",item.getOrderItemSeqId());
          orderItemAssociation.set("toShipGroupSeqId","_NA_");
          orderItemAssociation.set("orderItemAssocTypeId","PURCHASE_ORDER");
          allOrderItemAssociations.add(orderItemAssociation);
        }
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Unable to load OrderRequirementCommitment records for requirement ID : " + requirementId,module);
      }
    }
    if (item.getAssociatedOrderId() != null && item.getAssociatedOrderItemSeqId() != null) {
      GenericValue orderItemAssociation=getDelegator().makeValue("OrderItemAssoc");
      orderItemAssociation.set("orderId",item.getAssociatedOrderId());
      orderItemAssociation.set("orderItemSeqId",item.getAssociatedOrderItemSeqId());
      orderItemAssociation.set("shipGroupSeqId","_NA_");
      orderItemAssociation.set("toOrderItemSeqId",item.getOrderItemSeqId());
      orderItemAssociation.set("toShipGroupSeqId","_NA_");
      orderItemAssociation.set("orderItemAssocTypeId",item.getOrderItemAssocTypeId());
      allOrderItemAssociations.add(orderItemAssociation);
    }
  }
  return allOrderItemAssociations;
}
