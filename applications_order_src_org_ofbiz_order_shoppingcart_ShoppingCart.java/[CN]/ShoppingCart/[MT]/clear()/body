{
  this.poNumber=null;
  this.orderId=null;
  this.firstAttemptOrderId=null;
  this.billingAccountId=null;
  this.billingAccountAmt=BigDecimal.ZERO;
  this.nextItemSeq=1;
  this.agreementId=null;
  this.quoteId=null;
  this.defaultItemDeliveryDate=null;
  this.defaultItemComment=null;
  this.orderAdditionalEmails=null;
  this.readOnlyCart=false;
  this.lastListRestore=null;
  this.autoSaveListId=null;
  this.orderTermSet=false;
  this.orderTerms.clear();
  this.adjustments.clear();
  this.expireSingleUsePayments();
  this.cartLines.clear();
  this.itemGroupByNumberMap.clear();
  this.clearPayments();
  this.shipInfo.clear();
  this.contactMechIdsMap.clear();
  this.internalOrderNotes.clear();
  this.orderNotes.clear();
  for (  Map.Entry<String,List<String>> me : this.additionalPartyRole.entrySet()) {
    ((LinkedList<String>)me.getValue()).clear();
  }
  this.additionalPartyRole.clear();
  this.freeShippingProductPromoActions.clear();
  this.desiredAlternateGiftByAction.clear();
  this.productPromoUseInfoList.clear();
  this.productPromoCodes.clear();
  if (ProductStoreWorker.autoSaveCart(this.getDelegator(),this.getProductStoreId())) {
    GenericValue ul=this.getUserLogin();
    if (ul == null) {
      ul=this.getAutoUserLogin();
    }
    if (autoSaveListId == null) {
      try {
        autoSaveListId=ShoppingListEvents.getAutoSaveListId(this.getDelegator(),null,null,ul,this.getProductStoreId());
      }
 catch (      GeneralException e) {
        Debug.logError(e,module);
      }
    }
    if (autoSaveListId != null) {
      try {
        org.ofbiz.order.shoppinglist.ShoppingListEvents.clearListInfo(this.getDelegator(),autoSaveListId);
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
      }
    }
    this.lastListRestore=null;
    this.autoSaveListId=null;
  }
}
