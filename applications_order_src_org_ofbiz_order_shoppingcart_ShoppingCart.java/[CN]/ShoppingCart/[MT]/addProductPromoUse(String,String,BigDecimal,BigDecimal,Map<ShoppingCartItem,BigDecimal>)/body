{
  if (UtilValidate.isNotEmpty(productPromoCodeId) && !this.productPromoCodes.contains(productPromoCodeId)) {
    throw new IllegalStateException("Cannot add a use to a promo code use for a code that has not been entered.");
  }
  if (Debug.verboseOn())   Debug.logVerbose("Used promotion [" + productPromoId + "] with code ["+ productPromoCodeId+ "] for total discount ["+ totalDiscountAmount+ "] and quantity left in actions ["+ quantityLeftInActions+ "]",module);
  this.productPromoUseInfoList.add(new ProductPromoUseInfo(productPromoId,productPromoCodeId,totalDiscountAmount,quantityLeftInActions,usageInfoMap));
}
