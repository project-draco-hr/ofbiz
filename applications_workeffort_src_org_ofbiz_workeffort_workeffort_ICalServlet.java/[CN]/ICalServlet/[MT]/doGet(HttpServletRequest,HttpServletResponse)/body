{
  String path=req.getPathInfo();
  if (UtilValidate.isEmpty(path)) {
    path="/";
  }
  String workEffortId=path.substring(1);
  if (workEffortId.contains("/")) {
    workEffortId=workEffortId.substring(0,workEffortId.indexOf("/"));
  }
  if (workEffortId.length() < 1) {
    resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
    return;
  }
  if (Debug.infoOn()) {
    Debug.logInfo("[ICalServlet.doGet] workEffortId = " + workEffortId,module);
  }
  GenericDelegator delegator=null;
  HttpSession session=req.getSession();
  String delegatorName=(String)session.getAttribute("delegatorName");
  if (UtilValidate.isNotEmpty(delegatorName)) {
    delegator=GenericDelegator.getGenericDelegator(delegatorName);
  }
  if (delegator == null) {
    delegator=(GenericDelegator)this.getServletContext().getAttribute("delegator");
  }
  if (delegator == null) {
    Debug.logError("[ICalServlet.doGet] ERROR: delegator not found in ServletContext",module);
    resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    return;
  }
  Calendar calendar=null;
  try {
    calendar=ICalendarWorker.getICalendar(delegator,workEffortId);
  }
 catch (  Exception e) {
    Debug.logError("[ICalServlet.doGet] Error while getting iCalendar: " + e,module);
    resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    return;
  }
  if (calendar == null) {
    resp.setStatus(HttpServletResponse.SC_NOT_FOUND);
    return;
  }
  resp.setContentType("text/calendar");
  resp.setStatus(HttpServletResponse.SC_OK);
  Writer writer=null;
  if (UtilJ2eeCompat.useOutputStreamNotWriter(this.getServletContext())) {
    ServletOutputStream ros=resp.getOutputStream();
    writer=new OutputStreamWriter(ros,"UTF-8");
  }
 else {
    writer=resp.getWriter();
  }
  writer.write(calendar.toString());
  writer.close();
  if (Debug.infoOn()) {
    Debug.logInfo("[ICalServlet.doGet] finished request",module);
  }
}
