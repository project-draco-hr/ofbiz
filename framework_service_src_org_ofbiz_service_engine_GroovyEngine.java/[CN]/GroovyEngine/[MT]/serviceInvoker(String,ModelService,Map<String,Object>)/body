{
  if (UtilValidate.isEmpty(modelService.location)) {
    throw new GenericServiceException("Cannot run Groovy service with empty location");
  }
  Map<String,Object> params=FastMap.newInstance();
  params.putAll(context);
  context.put("parameters",params);
  DispatchContext dctx=dispatcher.getLocalContext(localName);
  context.put("dctx",dctx);
  context.put("dispatcher",dctx.getDispatcher());
  context.put("delegator",dispatcher.getDelegator());
  try {
    Script script=InvokerHelper.createScript(GroovyUtil.getScriptClassFromLocation(this.getLocation(modelService)),GroovyUtil.getBinding(context));
    Object resultObj=null;
    if (UtilValidate.isEmpty(modelService.invoke)) {
      resultObj=script.run();
    }
 else {
      resultObj=script.invokeMethod(modelService.invoke,EMPTY_ARGS);
    }
    if (resultObj != null && resultObj instanceof Map<?,?>) {
      return cast(resultObj);
    }
 else     if (context.get("result") != null && context.get("result") instanceof Map<?,?>) {
      return cast(context.get("result"));
    }
  }
 catch (  GeneralException e) {
    throw new GenericServiceException(e);
  }
  return ServiceUtil.returnSuccess();
}
