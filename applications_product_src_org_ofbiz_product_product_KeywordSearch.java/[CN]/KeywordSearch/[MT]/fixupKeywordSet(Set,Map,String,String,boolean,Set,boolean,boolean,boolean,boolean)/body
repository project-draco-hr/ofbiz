{
  if (keywordSet == null) {
    return;
  }
  Iterator keywordIter=keywordSet.iterator();
  while (keywordIter.hasNext()) {
    String token=(String)keywordIter.next();
    String colonToken=":" + token + ":";
    if (forSearch) {
      if ((isAnd && stopWordBagAnd.indexOf(colonToken) >= 0) || (!isAnd && stopWordBagOr.indexOf(colonToken) >= 0)) {
        continue;
      }
    }
 else {
      if (stopWordBagOr.indexOf(colonToken) >= 0 && stopWordBagAnd.indexOf(colonToken) >= 0) {
        continue;
      }
    }
    if (removeStems) {
      Iterator stemIter=stemSet.iterator();
      while (stemIter.hasNext()) {
        String stem=(String)stemIter.next();
        if (token.endsWith(stem)) {
          token=token.substring(0,token.length() - stem.length());
        }
      }
    }
    if (token.length() == 0) {
      continue;
    }
    if (token.length() == 1 && Character.isLetter(token.charAt(0))) {
      continue;
    }
    if (forSearch) {
      StringBuffer strSb=new StringBuffer();
      if (anyPrefix)       strSb.append('%');
      strSb.append(token);
      if (anySuffix)       strSb.append('%');
      int dblPercIdx=-1;
      while ((dblPercIdx=strSb.indexOf("%%")) >= 0) {
        strSb.replace(dblPercIdx,dblPercIdx + 2,"%");
      }
      token=strSb.toString();
    }
    Long curWeight=(Long)keywords.get(token);
    if (curWeight == null) {
      keywords.put(token,new Long(1));
    }
 else {
      keywords.put(token,new Long(curWeight.longValue() + 1));
    }
  }
}
