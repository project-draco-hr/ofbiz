{
  Timestamp nextReIndex=null;
  nextReIndex=this.getCategoryCatalogs(doc,productCategory,indexedCatalogIds);
  List<GenericValue> productCategoryRollups=productCategory.getRelated("CurrentProductCategoryRollup",null,null,false);
  productCategoryRollups=this.filterByThruDate(productCategoryRollups);
  for (  GenericValue productCategoryRollup : productCategoryRollups) {
    Timestamp fromDate=productCategoryRollup.getTimestamp("fromDate");
    Timestamp thruDate=productCategoryRollup.getTimestamp("thruDate");
    if (fromDate != null && fromDate.after(UtilDateTime.nowTimestamp())) {
      nextReIndex=this.checkSetNextReIndex(fromDate,nextReIndex);
      continue;
    }
 else     if (thruDate != null) {
      nextReIndex=this.checkSetNextReIndex(thruDate,nextReIndex);
    }
    if (!indexedCategoryIds.add(productCategoryRollup.getString("parentProductCategoryId"))) {
      continue;
    }
    GenericValue parentProductCategory=productCategoryRollup.getRelatedOne("ParentProductCategory",false);
    doc.add(new StringField("productCategoryId",parentProductCategory.getString("productCategoryId"),Field.Store.NO));
    nextReIndex=this.checkSetNextReIndex(this.getParentCategories(doc,parentProductCategory,indexedCategoryIds),nextReIndex);
  }
  return nextReIndex;
}
