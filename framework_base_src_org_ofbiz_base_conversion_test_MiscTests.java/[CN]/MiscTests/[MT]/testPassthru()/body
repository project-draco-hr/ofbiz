{
  String string="ofbiz";
  BigDecimal bigDecimal=new BigDecimal("1.234");
  URL url=new URL("http://ofbiz.apache.org");
  List<String> baseList=UtilMisc.toList("a","1","b","2","c","3");
  ArrayList<String> arrayList=new ArrayList<String>();
  arrayList.addAll(baseList);
  List<String> fastList=FastList.newInstance();
  fastList.addAll(baseList);
  Map<String,String> baseMap=UtilMisc.toMap("a","1","b","2","c","3");
  HashMap<String,String> hashMap=new HashMap<String,String>();
  hashMap.putAll(baseMap);
  Map<String,String> fastMap=FastMap.newInstance();
  fastMap.putAll(baseMap);
  Object[] testObjects=new Object[]{string,bigDecimal,url,arrayList,fastList,hashMap,fastMap};
  for (  Object testObject : testObjects) {
    Converter converter=Converters.getConverter(testObject.getClass(),testObject.getClass());
    Object result=converter.convert(testObject);
    assertEquals("pass thru convert",testObject,result);
    assertTrue("pass thru exact equals",testObject == result);
    assertTrue("pass thru can convert",converter.canConvert(testObject.getClass(),testObject.getClass()));
    assertFalse("pass thru can't convert to object",converter.canConvert(testObject.getClass(),Object.class));
    assertFalse("pass thru can't convert from object",converter.canConvert(Object.class,testObject.getClass()));
    assertEquals("pass thru source class",testObject.getClass(),converter.getSourceClass());
    assertEquals("pass thru target class",result.getClass(),converter.getTargetClass());
  }
}
