{
  for (  Element elem : nodes) {
    String thisName=elem.getName();
    if ("type" == elem.getName()) {
      typeCmd(elem);
    }
 else     if ("setParam" == thisName) {
      setParam(elem);
    }
 else     if ("clickAt" == thisName) {
      clickAt(elem);
    }
 else     if ("waitForValue" == thisName) {
      waitForValue(elem);
    }
 else     if ("waitForCondition" == thisName) {
      waitForCondition(elem);
    }
 else     if ("loadData" == thisName) {
      loadData(elem);
    }
 else     if ("jythonRunner" == thisName) {
      jythonRunner(elem);
    }
 else     if ("groovyRunner" == thisName) {
      groovyRunner(elem);
    }
 else     if ("dataLoop" == thisName) {
      dataLoop(elem);
    }
 else     if ("remoteRequest" == thisName) {
      remoteRequest(elem);
    }
 else     if ("selectPopup" == thisName) {
      selectPopup(elem);
    }
 else     if ("getAllWindowIds" == thisName) {
      getAllWindowIds(elem);
    }
 else     if ("captureTextInPage" == thisName) {
      captureTextInPageCmd(elem);
    }
 else     if ("getSelectedLabel" == thisName) {
      getSelectedLabel(elem);
    }
 else     if ("getSelectedValue" == thisName) {
      getSelectedValue(elem);
    }
 else     if ("getSelectedId" == thisName) {
      getSelectedId(elem);
    }
 else     if ("testcase" == thisName) {
      testcase(elem);
    }
 else     if ("assertContains" == thisName) {
      assertContains(elem);
    }
 else     if ("assertNotContains" == thisName) {
      assertNotContains(elem);
    }
 else     if ("getHtmlSource" == thisName) {
      getHtmlSource(elem);
    }
 else     if ("getBodyText" == thisName) {
      getBodyText(elem);
    }
 else     if ("setup" == thisName) {
      continue;
    }
 else     if ("print" == thisName) {
      printCmd(elem);
    }
 else     if ("waitForPageToLoad" == thisName) {
      waitForPageToLoadCmd(elem);
    }
 else     if ("getSelectedIds" == thisName) {
      getSelectedIdsCmd(elem);
    }
 else     if ("copy" == thisName) {
      copyCmd(elem);
    }
 else     if ("append" == thisName) {
      appendCmd(elem);
    }
 else     if ("loadParameter" == thisName) {
      loadParameter(elem);
    }
 else     if ("partialRunDependency" == thisName) {
      partialRunDependency(elem);
    }
 else     if ("if" == thisName) {
      ifCmd(elem);
    }
 else     if ("open" == thisName) {
      openCmd(elem);
    }
 else     if ("click" == thisName) {
      clickCmd(elem);
    }
 else     if ("check" == thisName) {
      checkCmd(elem);
    }
 else     if ("uncheck" == thisName) {
      uncheckCmd(elem);
    }
 else     if ("getValue" == thisName) {
      getValueCmd(elem);
    }
 else     if ("select" == thisName) {
      selectCmd(elem);
    }
 else     if ("uniqueId" == thisName) {
      uniqueIdCmd(elem);
    }
 else     if ("randomAlphaString" == thisName) {
      randomAlphaStringCmd(elem);
    }
 else     if ("randomString" == thisName) {
      randomStringCmd(elem);
    }
 else     if ("setSpeed" == thisName) {
      setSpeed(elem);
    }
 else     if ("openWindow" == thisName) {
      openWindow(elem);
    }
 else     if ("selectWindow" == thisName) {
      selectWindow(elem);
    }
 else     if ("assertConfirmation" == thisName) {
      assertConfirmation(elem);
    }
 else     if ("runScript" == thisName) {
      runScript(elem);
    }
 else {
      logger.info("Undefined command calling by reflection for command: " + thisName);
      callByReflection(elem);
    }
  }
}
