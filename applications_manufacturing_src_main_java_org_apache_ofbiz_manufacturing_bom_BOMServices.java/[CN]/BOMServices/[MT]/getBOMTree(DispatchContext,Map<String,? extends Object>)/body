{
  Map<String,Object> result=new HashMap<String,Object>();
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String productId=(String)context.get("productId");
  String fromDateStr=(String)context.get("fromDate");
  String bomType=(String)context.get("bomType");
  Integer type=(Integer)context.get("type");
  BigDecimal quantity=(BigDecimal)context.get("quantity");
  BigDecimal amount=(BigDecimal)context.get("amount");
  Locale locale=(Locale)context.get("locale");
  if (type == null) {
    type=Integer.valueOf(0);
  }
  Date fromDate=null;
  if (UtilValidate.isNotEmpty(fromDateStr)) {
    try {
      fromDate=Timestamp.valueOf(fromDateStr);
    }
 catch (    Exception e) {
    }
  }
  if (fromDate == null) {
    fromDate=new Date();
  }
  BOMTree tree=null;
  try {
    tree=new BOMTree(productId,bomType,fromDate,type.intValue(),delegator,dispatcher,userLogin);
  }
 catch (  GenericEntityException gee) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingBomErrorCreatingBillOfMaterialsTree",UtilMisc.toMap("errorString",gee.getMessage()),locale));
  }
  if (tree != null && quantity != null) {
    tree.setRootQuantity(quantity);
  }
  if (tree != null && amount != null) {
    tree.setRootAmount(amount);
  }
  result.put("tree",tree);
  return result;
}
