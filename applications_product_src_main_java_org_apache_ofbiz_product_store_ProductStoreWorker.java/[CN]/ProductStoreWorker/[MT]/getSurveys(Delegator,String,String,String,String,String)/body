{
  List<GenericValue> surveys=new LinkedList<GenericValue>();
  List<GenericValue> storeSurveys=null;
  try {
    storeSurveys=EntityQuery.use(delegator).from("ProductStoreSurveyAppl").where("productStoreId",productStoreId,"surveyApplTypeId",surveyApplTypeId).orderBy("sequenceNum").cache(true).queryList();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Unable to get ProductStoreSurveyAppl for store : " + productStoreId,module);
    return surveys;
  }
  storeSurveys=EntityUtil.filterByDate(storeSurveys);
  if (!UtilValidate.isEmpty(groupName)) {
    storeSurveys=EntityUtil.filterByAnd(storeSurveys,UtilMisc.toMap("groupName",groupName));
  }
  Debug.logInfo("getSurvey for product " + productId,module);
  if (!UtilValidate.isEmpty(productId) && !UtilValidate.isEmpty(storeSurveys)) {
    for (    GenericValue surveyAppl : storeSurveys) {
      GenericValue product=null;
      String virtualProductId=null;
      try {
        product=EntityQuery.use(delegator).from("Product").where("productId",productId).cache().queryOne();
        if ((product != null) && ("Y".equals(product.get("isVariant")))) {
          if (parentProductId != null) {
            virtualProductId=parentProductId;
          }
 else {
            virtualProductId=ProductWorker.getVariantVirtualId(product);
          }
          Debug.logInfo("getSurvey for virtual product " + virtualProductId,module);
        }
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Problem finding product from productId " + productId,module);
      }
      if (surveyAppl.get("productId") != null) {
        if (surveyAppl.get("productId").equals(productId)) {
          surveys.add(surveyAppl);
        }
 else         if ((virtualProductId != null) && (surveyAppl.getString("productId").equals(virtualProductId))) {
          surveys.add(surveyAppl);
        }
      }
 else       if (surveyAppl.get("productCategoryId") != null) {
        List<GenericValue> categoryMembers=null;
        try {
          categoryMembers=EntityQuery.use(delegator).from("ProductCategoryMember").where("productCategoryId",surveyAppl.get("productCategoryId")).cache(true).queryList();
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,"Unable to get ProductCategoryMember records for survey application : " + surveyAppl,module);
        }
        if (categoryMembers != null) {
          for (          GenericValue member : categoryMembers) {
            if (productId != null && productId.equals(member.getString("productId"))) {
              surveys.add(surveyAppl);
              break;
            }
 else             if ((virtualProductId != null) && (virtualProductId.equals(member.getString("productId")))) {
              surveys.add(surveyAppl);
              break;
            }
          }
        }
      }
    }
  }
 else   if (storeSurveys != null) {
    surveys.addAll(storeSurveys);
  }
  return surveys;
}
