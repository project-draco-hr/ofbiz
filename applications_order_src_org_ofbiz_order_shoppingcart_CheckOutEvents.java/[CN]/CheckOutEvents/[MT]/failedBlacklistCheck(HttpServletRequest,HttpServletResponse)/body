{
  HttpSession session=request.getSession();
  ShoppingCart cart=(ShoppingCart)session.getAttribute("shoppingCart");
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  String orderPartyId=cart.getOrderPartyId();
  GenericValue userLogin=PartyWorker.findPartyLatestUserLogin(orderPartyId,delegator);
  GenericValue currentUser=(GenericValue)session.getAttribute("userLogin");
  String result;
  GenericValue productStore=ProductStoreWorker.getProductStore(cart.getProductStoreId(),delegator);
  CheckOutHelper checkOutHelper=new CheckOutHelper(dispatcher,delegator,cart);
  Map callResult=checkOutHelper.failedBlacklistCheck(userLogin,productStore);
  ServiceUtil.getMessages(request,callResult,null);
  if (("anonymous".equals(currentUser.getString("userLoginId"))) || (currentUser.getString("userLoginId")).equals(userLogin.getString("userLoginId"))) {
    session.invalidate();
  }
  if (callResult.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_ERROR)) {
    result=(String)callResult.get(ModelService.ERROR_MESSAGE);
    request.setAttribute("_ERROR_MESSAGE_",result);
    result="error";
  }
 else {
    result=(String)callResult.get(ModelService.ERROR_MESSAGE);
    request.setAttribute("_ERROR_MESSAGE_",result);
    result="success";
  }
  return result;
}
