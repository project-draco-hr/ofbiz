{
  HttpSession session=request.getSession();
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  ShoppingCart cart=(ShoppingCart)request.getSession().getAttribute("shoppingCart");
  GenericValue userLogin=(GenericValue)session.getAttribute("userLogin");
  CheckOutHelper checkOutHelper=new CheckOutHelper(dispatcher,delegator,cart);
  boolean holdOrder=cart.getHoldOrder();
  GenericValue productStore=ProductStoreWorker.getProductStore(cart.getProductStoreId(),delegator);
  Map<String,Object> callResult=checkOutHelper.processPayment(productStore,userLogin,false,holdOrder);
  if (ServiceUtil.isError(callResult)) {
    cart.clearDeclinedPaymentMethods(delegator);
    cart.setOrderId(null);
  }
  ServiceUtil.getMessages(request,callResult,null);
  List<String> messages=UtilGenerics.checkList(callResult.get("authResultMsgs"));
  if (UtilValidate.isNotEmpty(messages)) {
    request.setAttribute("_EVENT_MESSAGE_LIST_",messages);
  }
  return (callResult.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_SUCCESS));
}
