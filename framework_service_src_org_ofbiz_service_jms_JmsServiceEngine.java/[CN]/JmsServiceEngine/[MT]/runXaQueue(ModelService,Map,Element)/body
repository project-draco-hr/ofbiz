{
  String serverName=server.getAttribute("jndi-server-name");
  String jndiName=server.getAttribute("jndi-name");
  String queueName=server.getAttribute("topic-queue");
  String userName=server.getAttribute("username");
  String password=server.getAttribute("password");
  String clientId=server.getAttribute("client-id");
  InitialContext jndi=null;
  XAQueueConnectionFactory factory=null;
  XAQueueConnection con=null;
  try {
    jndi=JNDIContextFactory.getInitialContext(serverName);
    factory=(XAQueueConnectionFactory)jndi.lookup(jndiName);
  }
 catch (  GeneralException ge) {
    throw new GenericServiceException("Problems getting JNDI InitialContext.",ge.getNested());
  }
catch (  NamingException ne) {
    JNDIContextFactory.clearInitialContext(serverName);
    try {
      jndi=JNDIContextFactory.getInitialContext(serverName);
      factory=(XAQueueConnectionFactory)jndi.lookup(jndiName);
    }
 catch (    GeneralException ge2) {
      throw new GenericServiceException("Problems getting JNDI InitialContext.",ge2.getNested());
    }
catch (    NamingException ne2) {
      throw new GenericServiceException("JNDI lookup problems.",ne2);
    }
  }
  try {
    con=factory.createXAQueueConnection(userName,password);
    if (clientId != null && clientId.length() > 1)     con.setClientID(userName);
    con.start();
    XAQueueSession session=con.createXAQueueSession();
    XAResource resource=session.getXAResource();
    if (TransactionUtil.getStatus() == TransactionUtil.STATUS_ACTIVE)     TransactionUtil.enlistResource(resource);
    Queue queue=(Queue)jndi.lookup(queueName);
    QueueSession qSession=session.getQueueSession();
    QueueSender sender=qSession.createSender(queue);
    Message message=makeMessage(session,modelService,context);
    sender.send(message);
    if (TransactionUtil.getStatus() != TransactionUtil.STATUS_ACTIVE)     session.commit();
    Debug.logInfo("Message sent.",module);
    sender.close();
    session.close();
    con.close();
  }
 catch (  GenericTransactionException gte) {
    throw new GenericServiceException("Problems enlisting resource w/ transaction manager.",gte.getNested());
  }
catch (  NamingException ne) {
    throw new GenericServiceException("Problems with JNDI lookup.",ne);
  }
catch (  JMSException je) {
    throw new GenericServiceException("JMS Internal Error.",je);
  }
  return ServiceUtil.returnSuccess();
}
