{
  Timestamp now=UtilDateTime.nowTimestamp();
  delegator.create("Testing","testingId","TESTING_6");
  delegator.create("TestingNode","testingNodeId","TESTNODE_6");
  Map<String,Object> testingNodeMemberPkMap=UtilMisc.toMap("testingId","TESTING_6","testingNodeId","TESTNODE_6","fromDate",now);
  delegator.create("TestingNodeMember",testingNodeMemberPkMap);
  Map<String,Object> results=dispatcher.runSync("testEntityAutoExpireTestingNodeMember",testingNodeMemberPkMap);
  assertTrue(ServiceUtil.isSuccess(results));
  GenericValue testingNodeMember=EntityQuery.use(delegator).from("TestingNodeMember").where(testingNodeMemberPkMap).queryOne();
  Timestamp expireDate=testingNodeMember.getTimestamp("thruDate");
  assertNotNull("Expire thruDate set ",expireDate);
  results=dispatcher.runSync("testEntityAutoExpireTestingNodeMember",testingNodeMemberPkMap);
  assertTrue(ServiceUtil.isSuccess(results));
  testingNodeMember=EntityQuery.use(delegator).from("TestingNodeMember").where(testingNodeMemberPkMap).queryOne();
  assertTrue(expireDate.compareTo(testingNodeMember.getTimestamp("thruDate")) == 0);
  assertNotNull("Expire extendThruDate set ",testingNodeMember.getTimestamp("extendThruDate"));
  delegator.create("TestFieldType","testFieldTypeId","TESTING_6");
  Map<String,Object> testingExpireMap=UtilMisc.toMap("testFieldTypeId","TESTING_6");
  results=dispatcher.runSync("testEntityAutoExpireTestFieldType",testingExpireMap);
  assertTrue(ServiceUtil.isSuccess(results));
  GenericValue testFieldType=EntityQuery.use(delegator).from("TestFieldType").where("testFieldTypeId","TESTING_6").queryOne();
  assertNotNull("Expire dateTimeField set",testFieldType.getTimestamp("dateTimeField"));
  delegator.create("TestFieldType","testFieldTypeId","TESTING_6bis");
  testingExpireMap=UtilMisc.toMap("testFieldTypeId","TESTING_6bis","dateTimeField",now);
  results=dispatcher.runSync("testEntityAutoExpireTestFieldType",testingExpireMap);
  assertTrue(ServiceUtil.isSuccess(results));
  testFieldType=EntityQuery.use(delegator).from("TestFieldType").where("testFieldTypeId","TESTING_6bis").queryOne();
  assertTrue(now.compareTo(testFieldType.getTimestamp("dateTimeField")) == 0);
}
