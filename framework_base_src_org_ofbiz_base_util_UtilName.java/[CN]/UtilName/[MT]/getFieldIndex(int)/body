{
  if (name == null || name.length == 0) {
    return null;
  }
switch (field) {
case 1:
    String prefixChk=name[0].toUpperCase();
  prefixChk=prefixChk.replaceAll("\\W","");
if (this.checkValue(prefixChk,prefix)) {
  return new int[]{0};
}
return null;
case 2:
if (name.length == 2 || this.getFieldIndex(PREFIX) == null) {
return new int[]{0};
}
 else {
for (int i=1; i < name.length; i++) {
String s=name[i].toUpperCase().replaceAll("\\W","");
if (!this.checkValue(s,prefix)) {
  return new int[]{i};
}
}
return null;
}
case 3:
int prefixIdx[]=this.getFieldIndex(PREFIX);
int suffixIdx[]=this.getFieldIndex(SUFFIX);
int minLength=3;
if (prefixIdx != null) {
minLength++;
}
if (suffixIdx != null) {
minLength++;
}
if (name.length >= minLength) {
int midIdx=prefixIdx != null ? 2 : 1;
if (middleIsInitial) {
String value=name[midIdx];
value=value.replaceAll("\\W","");
if (value.length() == 1) {
return new int[]{midIdx};
}
}
 else {
return new int[]{midIdx};
}
}
return null;
case 4:
if (name.length > 2) {
int firstIndex[]=this.getFieldIndex(FIRST);
int middleIndex[]=this.getFieldIndex(MIDDLE);
int suffixIndex[]=this.getFieldIndex(SUFFIX);
int lastBegin, lastEnd;
if (middleIndex != null) {
lastBegin=(middleIndex[middleIndex.length - 1]) + 1;
}
 else {
lastBegin=(firstIndex[firstIndex.length - 1]) + 1;
}
if (suffixIndex != null) {
lastEnd=(suffixIndex[0]) - 1;
}
 else {
lastEnd=name.length - 1;
}
if (lastEnd > lastBegin) {
return new int[]{lastBegin,lastEnd};
}
 else {
return new int[]{lastBegin};
}
}
return new int[]{name.length - 1};
case 5:
int suffixIndex=name.length - 1;
String suffixChk=name[suffixIndex].toUpperCase();
suffixChk=suffixChk.replaceAll("\\W","");
for (int i=0; i < suffix.length; i++) {
if (suffixChk.equals(suffix[i])) {
return new int[]{suffixIndex};
}
}
return null;
default :
return null;
}
}
