{
  if (UtilValidate.isEmpty(productPromo)) {
    return null;
  }
  UtilCodec.SimpleEncoder encoder=UtilCodec.getEncoder(encoderType);
  String candidateFieldName=ModelUtil.dbNameToVarName(productPromoContentTypeId);
  String cacheKey=productPromoContentTypeId + SEPARATOR + locale+ SEPARATOR+ mimeTypeId+ SEPARATOR+ productPromo.get("productPromoId");
  try {
    String cachedValue=productPromoContentCache.get(cacheKey);
    if (cachedValue != null) {
      return cachedValue;
    }
    Writer outWriter=new StringWriter();
    getProductPromoContentAsText(null,productPromo,productPromoContentTypeId,locale,mimeTypeId,partyId,roleTypeId,delegator,dispatcher,outWriter,false);
    String outString=outWriter.toString();
    if (UtilValidate.isEmpty(outString)) {
      outString=productPromo.getModelEntity().isField(candidateFieldName) ? productPromo.getString(candidateFieldName) : "";
      outString=outString == null ? "" : outString;
    }
    outString=encoder.sanitize(outString);
    if (productPromoContentCache != null) {
      productPromoContentCache.put(cacheKey,outString);
    }
    return outString;
  }
 catch (  GeneralException e) {
    Debug.logError(e,"Error rendering ProductPromoContent, inserting empty String",module);
    String candidateOut=productPromo.getModelEntity().isField(candidateFieldName) ? productPromo.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : encoder.sanitize(candidateOut);
  }
catch (  IOException e) {
    Debug.logError(e,"Error rendering ProductPromoContent, inserting empty String",module);
    String candidateOut=productPromo.getModelEntity().isField(candidateFieldName) ? productPromo.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : encoder.sanitize(candidateOut);
  }
}
