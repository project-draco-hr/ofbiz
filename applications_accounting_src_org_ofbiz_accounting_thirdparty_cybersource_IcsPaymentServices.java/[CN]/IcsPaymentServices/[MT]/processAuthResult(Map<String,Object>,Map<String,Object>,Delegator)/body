{
  String decision=getDecision(reply);
  String checkModeStatus=EntityUtilProperties.getPropertyValue("payment","payment.cybersource.ignoreStatus",delegator);
  if ("ACCEPT".equalsIgnoreCase(decision)) {
    result.put("authCode",reply.get("ccAuthReply_authorizationCode"));
    result.put("authResult",Boolean.TRUE);
  }
 else {
    result.put("authCode",decision);
    if ("N".equals(checkModeStatus)) {
      result.put("authResult",Boolean.FALSE);
    }
 else {
      result.put("authResult",Boolean.TRUE);
    }
  }
  if (reply.get("ccAuthReply_amount") != null) {
    result.put("processAmount",new BigDecimal((String)reply.get("ccAuthReply_amount")));
  }
 else {
    result.put("processAmount",BigDecimal.ZERO);
  }
  result.put("authRefNum",reply.get("requestID"));
  result.put("authFlag",reply.get("ccAuthReply_reasonCode"));
  result.put("authMessage",reply.get("ccAuthReply_processorResponse"));
  result.put("cvCode",reply.get("ccAuthReply_cvCode"));
  result.put("avsCode",reply.get("ccAuthReply_avsCode"));
  result.put("scoreCode",reply.get("ccAuthReply_authFactorCode"));
  result.put("captureRefNum",reply.get("requestID"));
  if (UtilValidate.isNotEmpty(reply.get("ccCaptureReply_reconciliationID"))) {
    if ("ACCEPT".equalsIgnoreCase(decision)) {
      result.put("captureResult",Boolean.TRUE);
    }
 else {
      result.put("captureResult",Boolean.FALSE);
    }
    result.put("captureCode",reply.get("ccCaptureReply_reconciliationID"));
    result.put("captureFlag",reply.get("ccCaptureReply_reasonCode"));
    result.put("captureMessage",reply.get("decision"));
  }
  if (Debug.infoOn())   Debug.logInfo("CC [Cybersource] authorization result : " + result,module);
}
