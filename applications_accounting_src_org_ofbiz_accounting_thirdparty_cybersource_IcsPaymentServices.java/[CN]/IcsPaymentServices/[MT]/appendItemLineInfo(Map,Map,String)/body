{
  String currency=(String)context.get("currency");
  int lineNumber=0;
  request.put("item_" + lineNumber + "_unitPrice",getAmountString(context,amountField));
  request.put("purchaseTotals_currency",currency);
  List orderItems=(List)context.get("orderItems");
  if (orderItems != null) {
    Iterator itemIterator=orderItems.iterator();
    while (itemIterator.hasNext()) {
      lineNumber++;
      GenericValue item=(GenericValue)itemIterator.next();
      GenericValue product=null;
      try {
        product=item.getRelatedOne("Product");
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"ERROR: Unable to get Product from OrderItem, not passing info to CyberSource");
      }
      if (product != null) {
        request.put("item_" + lineNumber + "_productName",product.getString("productName"));
        request.put("item_" + lineNumber + "_productSKU",product.getString("productId"));
      }
 else {
        request.put("item_" + lineNumber + "_productName",item.getString("description"));
      }
      Double quantity=item.getDouble("quantity");
      long roundQ=Math.round(quantity.doubleValue());
      Double rounded=new Double(new Long(roundQ).toString());
      if (rounded.doubleValue() != quantity.doubleValue()) {
        request.put("item_" + lineNumber + "_quantity","1");
      }
 else {
        request.put("",new Integer(quantity.intValue()).toString());
      }
      request.put("item_" + lineNumber + "_unitPrice","0.0000");
    }
  }
}
