{
  JSON userInfo=null;
  httpGet.setConfig(PassportUtil.StandardRequestConfig);
  CloseableHttpClient jsonClient=HttpClients.custom().build();
  httpGet.setHeader(PassportUtil.AUTHORIZATION_HEADER,tokenType + " " + accessToken);
  httpGet.setHeader(PassportUtil.ACCEPT_HEADER,"application/json");
  CloseableHttpResponse getResponse=null;
  try {
    getResponse=jsonClient.execute(httpGet);
    String responseString=new BasicResponseHandler().handleResponse(getResponse);
    if (getResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
      userInfo=JSON.from(responseString);
    }
 else {
      String errMsg=UtilProperties.getMessage(resource,"GetOAuth2AccessTokenError",UtilMisc.toMap("error",responseString),locale);
      throw new AuthenticatorException(errMsg);
    }
  }
 catch (  ClientProtocolException e) {
    throw new AuthenticatorException(e.getMessage());
  }
catch (  IOException e) {
    throw new AuthenticatorException(e.getMessage());
  }
 finally {
    if (getResponse != null) {
      try {
        getResponse.close();
      }
 catch (      IOException e) {
      }
    }
  }
  JSONToMap jsonMap=new JSONToMap();
  Map<String,Object> userMap;
  try {
    userMap=jsonMap.convert(userInfo);
  }
 catch (  ConversionException e) {
    throw new AuthenticatorException(e.getMessage());
  }
  return userMap;
}
