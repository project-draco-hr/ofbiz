{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String orderId=(String)context.get("orderId");
  String externalId=(String)context.get("externalId");
  String transactionId="";
  Map<String,Object> result=FastMap.newInstance();
  try {
    if (orderId == null && externalId == null) {
      Debug.logError("orderId or externalId must be filled",module);
      return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.orderIdOrExternalIdAreMandatory",locale));
    }
    GenericValue orderHeader=null;
    if (UtilValidate.isNotEmpty(orderId)) {
      orderHeader=delegator.findOne("OrderHeader",UtilMisc.toMap("orderId",orderId),false);
      if (orderHeader == null) {
        Debug.logError("Cannot find order with orderId [" + orderId + "]",module);
        return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.errorRetrievingOrderFromOrderId",locale));
      }
      if (!"EBAY_SALES_CHANNEL".equals(orderHeader.getString("salesChannelEnumId")) || orderHeader.getString("externalId") == null) {
        return ServiceUtil.returnSuccess();
      }
      externalId=(String)orderHeader.get("externalId");
      transactionId=orderHeader.getString("transactionId");
      String productStoreId=(String)orderHeader.get("productStoreId");
      if (UtilValidate.isNotEmpty(productStoreId)) {
        context.put("productStoreId",productStoreId);
      }
    }
    Map<String,Object> eBayConfigResult=EbayHelper.buildEbayConfig(context,delegator);
    StringBuffer completeSaleXml=new StringBuffer();
    if (!ServiceUtil.isFailure(buildCompleteSaleRequest(delegator,locale,externalId,transactionId,context,completeSaleXml,eBayConfigResult.get("token").toString()))) {
      result=EbayHelper.postItem(eBayConfigResult.get("xmlGatewayUri").toString(),completeSaleXml,eBayConfigResult.get("devID").toString(),eBayConfigResult.get("appID").toString(),eBayConfigResult.get("certID").toString(),"CompleteSale",eBayConfigResult.get("compatibilityLevel").toString(),eBayConfigResult.get("siteID").toString());
      String successMessage=(String)result.get("successMessage");
      if (successMessage != null) {
        return readCompleteSaleResponse(successMessage,locale);
      }
 else {
        ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.errorDuringPostCompleteSaleRequest",locale));
      }
    }
  }
 catch (  Exception e) {
    Debug.logError("Exception in setEbayOrderToComplete " + e,module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.exceptionInSetEbayOrderToComplete",locale));
  }
  return ServiceUtil.returnSuccess();
}
