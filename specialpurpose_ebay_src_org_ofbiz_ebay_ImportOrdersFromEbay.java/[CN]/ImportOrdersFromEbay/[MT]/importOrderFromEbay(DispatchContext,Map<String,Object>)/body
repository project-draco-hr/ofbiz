{
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> order=new HashMap<String,Object>();
  Map<String,Object> result=new HashMap<String,Object>();
  try {
    order.put("productStoreId",context.get("productStoreId"));
    order.put("userLogin",context.get("userLogin"));
    order.put("externalId",context.get("externalId"));
    order.put("createdDate",context.get("createdDate"));
    order.put("productId",context.get("productId"));
    order.put("quantityPurchased",context.get("quantityPurchased"));
    order.put("transactionPrice",context.get("transactionPrice"));
    order.put("shippingService",context.get("shippingService"));
    order.put("shippingServiceCost",context.get("shippingServiceCost"));
    order.put("shippingTotalAdditionalCost",context.get("shippingTotalAdditionalCost"));
    order.put("salesTaxAmount",context.get("salesTaxAmount"));
    order.put("salesTaxPercent",context.get("salesTaxPercent"));
    order.put("amountPaid",context.get("amountPaid"));
    order.put("paidTime",context.get("paidTime"));
    order.put("shippedTime",context.get("shippedTime"));
    order.put("buyerName",context.get("buyerName"));
    order.put("emailBuyer",context.get("emailBuyer"));
    order.put("shippingAddressPhone",context.get("shippingAddressPhone"));
    order.put("shippingAddressStreet",context.get("shippingAddressStreet"));
    order.put("shippingAddressStreet1",context.get("shippingAddressStreet1"));
    order.put("shippingAddressStreet2",context.get("shippingAddressStreet2"));
    order.put("shippingAddressPostalCode",context.get("shippingAddressPostalCode"));
    order.put("shippingAddressCountry",context.get("shippingAddressCountry"));
    order.put("shippingAddressStateOrProvince",context.get("shippingAddressStateOrProvince"));
    order.put("shippingAddressCityName",context.get("shippingAddressCityName"));
    result=createShoppingCart(delegator,dispatcher,locale,order,true);
  }
 catch (  Exception e) {
    Debug.logError("Exception in importOrderFromEbay " + e,module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.exceptionInImportOrderFromEbay",locale));
  }
  return result;
}
