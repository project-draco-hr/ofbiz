{
  if (rootElement == null) {
    rootElement=loadDocument(this.url);
  }
  this.errorpage=UtilXml.childElementValue(rootElement,"errorpage");
  Element protectElement=UtilXml.firstChildElement(rootElement,"protect");
  if (protectElement != null) {
    this.protectView=protectElement.getAttribute("view");
  }
  this.owner=UtilXml.childElementValue(rootElement,"owner");
  this.securityClass=UtilXml.childElementValue(rootElement,"security-class");
  Element defaultRequestElement=UtilXml.firstChildElement(rootElement,"default-request");
  if (defaultRequestElement != null) {
    this.defaultRequest=defaultRequestElement.getAttribute("request-uri");
  }
  Element firstvisitElement=UtilXml.firstChildElement(rootElement,"firstvisit");
  if (firstvisitElement != null) {
    for (    Element eventElement : UtilXml.childElementList(firstvisitElement,"event")) {
      this.firstVisitEventList.put(eventElement.getAttribute("name"),new Event(eventElement));
    }
  }
  Element preprocessorElement=UtilXml.firstChildElement(rootElement,"preprocessor");
  if (preprocessorElement != null) {
    for (    Element eventElement : UtilXml.childElementList(preprocessorElement,"event")) {
      this.preprocessorEventList.put(eventElement.getAttribute("name"),new Event(eventElement));
    }
  }
  Element postprocessorElement=UtilXml.firstChildElement(rootElement,"postprocessor");
  if (postprocessorElement != null) {
    for (    Element eventElement : UtilXml.childElementList(postprocessorElement,"event")) {
      this.postprocessorEventList.put(eventElement.getAttribute("name"),new Event(eventElement));
    }
  }
  Element afterLoginElement=UtilXml.firstChildElement(rootElement,"after-login");
  if (afterLoginElement != null) {
    for (    Element eventElement : UtilXml.childElementList(afterLoginElement,"event")) {
      this.afterLoginEventList.put(eventElement.getAttribute("name"),new Event(eventElement));
    }
  }
  Element beforeLogoutElement=UtilXml.firstChildElement(rootElement,"before-logout");
  if (beforeLogoutElement != null) {
    for (    Element eventElement : UtilXml.childElementList(beforeLogoutElement,"event")) {
      this.beforeLogoutEventList.put(eventElement.getAttribute("name"),new Event(eventElement));
    }
  }
}
