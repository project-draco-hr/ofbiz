{
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  Locale locale=UtilHttp.getLocale(request);
  GenericValue userLogin=(GenericValue)request.getSession().getAttribute("userLogin");
  String selectResult=(String)request.getParameter("selectResult");
  List productExportList=new ArrayList();
  String errMsg=null;
  try {
    boolean beganTransaction=TransactionUtil.begin(DEFAULT_TX_TIMEOUT);
    try {
      if (UtilValidate.isEmpty(selectResult)) {
        EntityListIterator eli=getProductSearchResults(request);
        if (eli == null) {
          errMsg=UtilProperties.getMessage(resource,"productsearchevents.no_results_found_probably_error_constraints",UtilHttp.getLocale(request));
          Debug.logError(errMsg,module);
          request.setAttribute("_ERROR_MESSAGE_",errMsg);
          return "error";
        }
        GenericValue searchResultView=null;
        while ((searchResultView=(GenericValue)eli.next()) != null) {
          productExportList.add(searchResultView.getString("mainProductId"));
        }
        eli.close();
      }
 else {
        productExportList=UtilMisc.toList(selectResult);
      }
      String webSiteUrl=(String)request.getParameter("webSiteUrl");
      String imageUrl=(String)request.getParameter("imageUrl");
      String actionType=(String)request.getParameter("actionType");
      String statusId=(String)request.getParameter("statusId");
      String testMode=(String)request.getParameter("testMode");
      String trackingCodeId=(String)request.getParameter("trackingCodeId");
      try {
        Map inMap=UtilMisc.toMap("selectResult",productExportList,"webSiteUrl",webSiteUrl,"imageUrl",imageUrl,"actionType",actionType,"statusId",statusId,"testMode",testMode);
        inMap.put("trackingCodeId",trackingCodeId);
        inMap.put("userLogin",userLogin);
        Map exportResult=dispatcher.runSync("exportToGoogle",inMap);
        if (ServiceUtil.isError(exportResult)) {
          errMsg=ServiceUtil.getErrorMessage(exportResult);
          Debug.logError(errMsg,module);
          request.setAttribute("_ERROR_MESSAGE_",errMsg);
          return "error";
        }
 else {
          request.setAttribute("_SUCCESS_MESSAGE_",exportResult.get("successMessage"));
        }
      }
 catch (      GenericServiceException e) {
        errMsg=UtilProperties.getMessage(resource,"productsearchevents.exceptionCallingExportToGoogle",locale);
        Debug.logError(e,errMsg,module);
        request.setAttribute("_ERROR_MESSAGE_",errMsg);
        return "error";
      }
    }
 catch (    GenericEntityException e) {
      errMsg=UtilProperties.getMessage(resource,"productsearchevents.error_getting_search_results",locale);
      Debug.logError(e,errMsg,module);
      request.setAttribute("_ERROR_MESSAGE_",errMsg);
      return "error";
    }
 finally {
      TransactionUtil.commit(beganTransaction);
    }
  }
 catch (  GenericTransactionException e) {
    errMsg=UtilProperties.getMessage(resource,"productsearchevents.error_getting_search_results",locale);
    Debug.logError(e,errMsg,module);
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
  return "success";
}
