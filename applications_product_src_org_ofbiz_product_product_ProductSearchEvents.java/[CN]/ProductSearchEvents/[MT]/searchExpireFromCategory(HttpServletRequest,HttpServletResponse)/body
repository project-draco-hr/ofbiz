{
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  String productCategoryId=request.getParameter("SE_SEARCH_CATEGORY_ID");
  String thruDateStr=request.getParameter("thruDate");
  String errMsg=null;
  Timestamp thruDate;
  try {
    thruDate=Timestamp.valueOf(thruDateStr);
  }
 catch (  RuntimeException e) {
    Map messageMap=UtilMisc.toMap("errDateFormat",e.toString());
    errMsg=UtilProperties.getMessage(resource,"productsearchevents.thruDate_not_formatted_properly",messageMap,UtilHttp.getLocale(request));
    Debug.logError(e,errMsg,module);
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
  try {
    boolean beganTransaction=TransactionUtil.begin(DEFAULT_TX_TIMEOUT);
    try {
      EntityListIterator eli=getProductSearchResults(request);
      if (eli == null) {
        errMsg=UtilProperties.getMessage(resource,"productsearchevents.no_results_found_probably_error_constraints",UtilHttp.getLocale(request));
        request.setAttribute("_ERROR_MESSAGE_",errMsg);
        return "error";
      }
      GenericValue searchResultView=null;
      int numExpired=0;
      while ((searchResultView=(GenericValue)eli.next()) != null) {
        String productId=searchResultView.getString("mainProductId");
        List pcmList=delegator.findByAnd("ProductCategoryMember",UtilMisc.toMap("productCategoryId",productCategoryId,"productId",productId));
        Iterator pcmListIter=pcmList.iterator();
        while (pcmListIter.hasNext()) {
          GenericValue pcm=(GenericValue)pcmListIter.next();
          if (pcm.get("thruDate") == null) {
            pcm.set("thruDate",thruDate);
            pcm.store();
            numExpired++;
          }
        }
      }
      Map messageMap=UtilMisc.toMap("numExpired",Integer.toString(numExpired));
      errMsg=UtilProperties.getMessage(resource,"productsearchevents.expired_x_items",messageMap,UtilHttp.getLocale(request));
      request.setAttribute("_EVENT_MESSAGE_",errMsg);
      eli.close();
    }
 catch (    GenericEntityException e) {
      Map messageMap=UtilMisc.toMap("errSearchResult",e.toString());
      errMsg=UtilProperties.getMessage(resource,"productsearchevents.error_getting_search_results",messageMap,UtilHttp.getLocale(request));
      Debug.logError(e,errMsg,module);
      request.setAttribute("_ERROR_MESSAGE_",errMsg);
      TransactionUtil.rollback(beganTransaction,errMsg,e);
      return "error";
    }
 finally {
      TransactionUtil.commit(beganTransaction);
    }
  }
 catch (  GenericTransactionException e) {
    Map messageMap=UtilMisc.toMap("errSearchResult",e.toString());
    errMsg=UtilProperties.getMessage(resource,"productsearchevents.error_getting_search_results",messageMap,UtilHttp.getLocale(request));
    Debug.logError(e,errMsg,module);
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
  return "success";
}
