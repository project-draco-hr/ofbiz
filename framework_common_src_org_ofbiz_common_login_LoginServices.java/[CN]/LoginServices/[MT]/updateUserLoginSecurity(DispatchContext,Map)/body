{
  Map result=FastMap.newInstance();
  GenericDelegator delegator=ctx.getDelegator();
  Security security=ctx.getSecurity();
  GenericValue loggedInUserLogin=(GenericValue)context.get("userLogin");
  Locale locale=(Locale)context.get("locale");
  String userLoginId=(String)context.get("userLoginId");
  String errMsg=null;
  if (userLoginId == null || userLoginId.length() == 0) {
    userLoginId=loggedInUserLogin.getString("userLoginId");
  }
  if (!security.hasEntityPermission("PARTYMGR","_UPDATE",loggedInUserLogin) && !security.hasEntityPermission("SECURITY","_UPDATE",loggedInUserLogin)) {
    errMsg=UtilProperties.getMessage(resource,"loginservices.not_permission_update_security_info_for_user_login",locale);
    return ServiceUtil.returnError(errMsg);
  }
  GenericValue userLoginToUpdate=null;
  try {
    userLoginToUpdate=delegator.findOne("UserLogin",false,"userLoginId",userLoginId);
  }
 catch (  GenericEntityException e) {
    Map messageMap=UtilMisc.toMap("errorMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"loginservices.could_not_change_password_read_failure",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  if (userLoginToUpdate == null) {
    Map messageMap=UtilMisc.toMap("userLoginId",userLoginId);
    errMsg=UtilProperties.getMessage(resource,"loginservices.could_not_change_password_userlogin_with_id_not_exist",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  boolean wasEnabled=!"N".equals(userLoginToUpdate.get("enabled"));
  if (context.containsKey("enabled")) {
    userLoginToUpdate.set("enabled",context.get("enabled"),true);
  }
  if (context.containsKey("disabledDateTime")) {
    userLoginToUpdate.set("disabledDateTime",context.get("disabledDateTime"),true);
  }
  if (context.containsKey("successiveFailedLogins")) {
    userLoginToUpdate.set("successiveFailedLogins",context.get("successiveFailedLogins"),true);
  }
  if (context.containsKey("userLdapDn")) {
    userLoginToUpdate.set("userLdapDn",context.get("userLdapDn"),true);
  }
  if (!wasEnabled && "Y".equals(context.get("enabled"))) {
    userLoginToUpdate.set("disabledDateTime",null);
  }
  if (wasEnabled && "N".equals(context.get("enabled")) && context.get("disabledDateTime") == null) {
    userLoginToUpdate.set("disabledDateTime",UtilDateTime.nowTimestamp());
  }
  try {
    userLoginToUpdate.store();
  }
 catch (  GenericEntityException e) {
    Map messageMap=UtilMisc.toMap("errorMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"loginservices.could_not_change_password_write_failure",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
