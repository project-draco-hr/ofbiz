{
  int passwordChangeHistoryLimit=0;
  try {
    passwordChangeHistoryLimit=Integer.parseInt(UtilProperties.getPropertyValue("security.properties","password.change.history.limit","0"));
  }
 catch (  NumberFormatException nfe) {
    passwordChangeHistoryLimit=0;
  }
  if (passwordChangeHistoryLimit == 0 || passwordChangeHistoryLimit < 0) {
    return;
  }
  EntityFindOptions efo=new EntityFindOptions();
  efo.setResultSetType(EntityFindOptions.TYPE_SCROLL_INSENSITIVE);
  EntityListIterator eli=delegator.find("UserLoginPasswordHistory",EntityCondition.makeConditionMap("userLoginId",userLoginId),null,null,UtilMisc.toList("-fromDate"),efo);
  Timestamp nowTimestamp=UtilDateTime.nowTimestamp();
  GenericValue pwdHist;
  if ((pwdHist=eli.next()) != null) {
    pwdHist.set("thruDate",nowTimestamp);
    pwdHist.store();
    eli.last();
    int rowIndex=eli.currentIndex();
    if (rowIndex == passwordChangeHistoryLimit) {
      eli.afterLast();
      pwdHist=eli.previous();
      pwdHist.remove();
    }
  }
  eli.close();
  GenericValue userLoginPwdHistToCreate=delegator.makeValue("UserLoginPasswordHistory",UtilMisc.toMap("userLoginId",userLoginId,"fromDate",nowTimestamp));
  boolean useEncryption="true".equals(UtilProperties.getPropertyValue("security.properties","password.encrypt"));
  userLoginPwdHistToCreate.set("currentPassword",useEncryption ? HashCrypt.getDigestHash(currentPassword,getHashType()) : currentPassword);
  userLoginPwdHistToCreate.create();
}
