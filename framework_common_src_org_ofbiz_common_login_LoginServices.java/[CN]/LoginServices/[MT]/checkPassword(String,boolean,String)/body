{
  boolean passwordMatches=false;
  if (oldPassword != null) {
    if (useEncryption) {
      String encodedPassword=HashCrypt.getDigestHash(currentPassword,getHashType());
      String encodedPasswordOldFunnyHexEncode=HashCrypt.getDigestHashOldFunnyHexEncode(currentPassword,getHashType());
      String encodedPasswordUsingDbHashType=encodedPassword;
      if (oldPassword.startsWith("{")) {
        String dbHashType=HashCrypt.getHashTypeFromPrefix(oldPassword);
        if (dbHashType != null) {
          encodedPasswordUsingDbHashType=HashCrypt.getDigestHash(currentPassword,dbHashType);
        }
      }
      passwordMatches=HashCrypt.removeHashTypePrefix(encodedPassword).equals(HashCrypt.removeHashTypePrefix(oldPassword)) || HashCrypt.removeHashTypePrefix(encodedPasswordOldFunnyHexEncode).equals(HashCrypt.removeHashTypePrefix(oldPassword)) || HashCrypt.removeHashTypePrefix(encodedPasswordUsingDbHashType).equals(HashCrypt.removeHashTypePrefix(oldPassword))|| ("true".equals(UtilProperties.getPropertyValue("security.properties","password.accept.encrypted.and.plain")) && oldPassword.equals(currentPassword));
    }
 else {
      passwordMatches=oldPassword.equals(currentPassword);
    }
  }
  if (!passwordMatches && "true".equals(UtilProperties.getPropertyValue("security.properties","password.accept.encrypted.and.plain"))) {
    passwordMatches=currentPassword.equals(oldPassword);
  }
  return passwordMatches;
}
