{
  List<GenericValue> testingTypes=new LinkedList<GenericValue>();
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","distinct-1","description","Distinct Record"));
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","distinct-2","description","Distinct Record"));
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","distinct-3","description","Not a Distinct Record"));
  delegator.storeAll(testingTypes);
  EntityFindOptions findOptions=new EntityFindOptions();
  findOptions.setDistinct(true);
  List<GenericValue> distinctByEntityEngine=delegator.findList("TestingType",null,UtilMisc.toSet("description"),UtilMisc.toList("description"),findOptions,false);
  List<GenericValue> distinctByEntityQuery=EntityQuery.use(delegator).select("description").from("TestingType").distinct().orderBy("description").queryList();
  assertEquals("distinct(): Number of records found by EntityEngine method are matching with records found by EntityQuery distinct method",distinctByEntityEngine.size(),distinctByEntityQuery.size());
  assertEquals("distinct(): Record matched = description",distinctByEntityEngine.get(0).getString("description"),distinctByEntityQuery.get(0).getString("description"));
  assertNull(distinctByEntityQuery.get(0).getString("testingTypeId"));
}
