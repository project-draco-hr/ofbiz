{
  String dataId=null;
  String applicationId=new Long((new Date().getTime())).toString();
  try {
    dataId=delegator.getNextSeqId("RuntimeData");
    GenericValue runtimeData=delegator.makeValue("RuntimeData",UtilMisc.toMap("runtimeDataId",dataId));
    runtimeData.set("runtimeInfo",XmlSerializer.serialize(context));
    delegator.create(runtimeData);
  }
 catch (  GenericEntityException ee) {
    throw new GenericServiceException(ee.getMessage(),ee);
  }
catch (  SerializeException se) {
    throw new GenericServiceException(se.getMessage(),se);
  }
catch (  IOException ioe) {
    throw new GenericServiceException(ioe.getMessage(),ioe);
  }
  Map aFields=UtilMisc.toMap("applicationId",applicationId,"workEffortId",workEffortId,"partyId",partyId,"roleTypeId",roleTypeId,"fromDate",fromDate,"runtimeDataId",dataId);
  GenericValue appV=null;
  try {
    appV=delegator.makeValue("ApplicationSandbox",aFields);
    delegator.create(appV);
  }
 catch (  GenericEntityException e) {
    throw new GenericServiceException(e.getMessage(),e);
  }
  return applicationId;
}
