{
  GenericValue userLogin=delegator.findOne("UserLogin",true,"userLoginId","system");
  prepareData();
  Map<String,Object> inputFields=UtilMisc.toMap("testingName","nice","testingName_op","like");
  Map<String,Object> performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  Map<String,Object> result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  List<GenericValue> foundElements=getCompleteList(result);
  assertEquals("performFind search with like nice% condition",3,foundElements.size());
  inputFields=UtilMisc.toMap("testingName","name","testingName_op","contains");
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  assertEquals("performFind search with like %name% condition",4,foundElements.size());
  inputFields=UtilMisc.toMap("testingName","bad","testingName_op","not-like");
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  assertEquals("performFind search with not like bad% condition",4,foundElements.size());
  inputFields=UtilMisc.toMap("testingName","name","testingName_op","not-contains");
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  assertEquals("performFind search with not like %name% condition",1,foundElements.size());
}
