{
  List<GenericValue> workEfforts=FastList.newInstance();
  try {
    EntityConditionList exprsLevelFirst=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("workEffortIdFrom",workEffortId),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
    List<GenericValue> childWEAssocsLevelFirst=delegator.findList("WorkEffortAssoc",exprsLevelFirst,null,null,null,true);
    for (    GenericValue childWEAssocLevelFirst : childWEAssocsLevelFirst) {
      EntityConditionList exprsLevelNext=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("workEffortIdFrom",childWEAssocLevelFirst.get("workEffortIdTo")),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
      List<GenericValue> childWEAssocsLevelNext=delegator.findList("WorkEffortAssoc",exprsLevelNext,null,null,null,true);
      while (UtilValidate.isNotEmpty(childWEAssocsLevelNext)) {
        List<GenericValue> tempWorkEffortList=FastList.newInstance();
        for (        GenericValue childWEAssocLevelNext : childWEAssocsLevelNext) {
          EntityConditionList exprsLevelNth=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("workEffortIdFrom",childWEAssocLevelNext.get("workEffortIdTo")),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
          List<GenericValue> childWEAssocsLevelNth=delegator.findList("WorkEffortAssoc",exprsLevelNth,null,null,null,true);
          if (UtilValidate.isNotEmpty(childWEAssocsLevelNth)) {
            tempWorkEffortList.addAll(childWEAssocsLevelNth);
          }
          workEfforts.add(childWEAssocLevelNext);
        }
        childWEAssocsLevelNext=tempWorkEffortList;
      }
      workEfforts.add(childWEAssocLevelFirst);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  return workEfforts;
}
