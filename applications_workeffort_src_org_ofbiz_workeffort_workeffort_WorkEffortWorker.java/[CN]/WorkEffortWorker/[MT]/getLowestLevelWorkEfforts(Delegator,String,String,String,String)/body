{
  if (left == null) {
    left="workEffortIdFrom";
  }
  if (right == null) {
    right="workEffortIdTo";
  }
  List<GenericValue> workEfforts=FastList.newInstance();
  try {
    EntityConditionList<EntityExpr> exprsLevelFirst=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition(left,workEffortId),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
    List<GenericValue> childWEAssocsLevelFirst=delegator.findList("WorkEffortAssoc",exprsLevelFirst,null,null,null,true);
    for (    GenericValue childWEAssocLevelFirst : childWEAssocsLevelFirst) {
      EntityConditionList<EntityExpr> exprsLevelNext=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition(left,childWEAssocLevelFirst.get(right)),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
      List<GenericValue> childWEAssocsLevelNext=delegator.findList("WorkEffortAssoc",exprsLevelNext,null,null,null,true);
      while (UtilValidate.isNotEmpty(childWEAssocsLevelNext)) {
        List<GenericValue> tempWorkEffortList=FastList.newInstance();
        for (        GenericValue childWEAssocLevelNext : childWEAssocsLevelNext) {
          EntityConditionList<EntityExpr> exprsLevelNth=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition(left,childWEAssocLevelNext.get(right)),EntityCondition.makeCondition("workEffortAssocTypeId",workEffortAssocTypeId)),EntityOperator.AND);
          List<GenericValue> childWEAssocsLevelNth=delegator.findList("WorkEffortAssoc",exprsLevelNth,null,null,null,true);
          if (UtilValidate.isNotEmpty(childWEAssocsLevelNth)) {
            tempWorkEffortList.addAll(childWEAssocsLevelNth);
          }
          workEfforts.add(childWEAssocLevelNext);
        }
        childWEAssocsLevelNext=tempWorkEffortList;
      }
      workEfforts.add(childWEAssocLevelFirst);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  return workEfforts;
}
