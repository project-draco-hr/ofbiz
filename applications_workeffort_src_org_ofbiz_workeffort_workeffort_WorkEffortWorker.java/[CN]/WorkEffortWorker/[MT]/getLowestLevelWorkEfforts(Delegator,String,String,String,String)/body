{
  if (left == null) {
    left="workEffortIdFrom";
  }
  if (right == null) {
    right="workEffortIdTo";
  }
  List<GenericValue> workEfforts=new LinkedList<GenericValue>();
  try {
    List<GenericValue> childWEAssocsLevelFirst=EntityQuery.use(delegator).from("WorkEffortAssoc").where(left,workEffortId,"workEffortAssocTypeId",workEffortAssocTypeId).cache(true).queryList();
    for (    GenericValue childWEAssocLevelFirst : childWEAssocsLevelFirst) {
      List<GenericValue> childWEAssocsLevelNext=EntityQuery.use(delegator).from("WorkEffortAssoc").where(left,childWEAssocLevelFirst.get(right),"workEffortAssocTypeId",workEffortAssocTypeId).cache(true).queryList();
      while (UtilValidate.isNotEmpty(childWEAssocsLevelNext)) {
        List<GenericValue> tempWorkEffortList=new LinkedList<GenericValue>();
        for (        GenericValue childWEAssocLevelNext : childWEAssocsLevelNext) {
          List<GenericValue> childWEAssocsLevelNth=EntityQuery.use(delegator).from("WorkEffortAssoc").where(left,childWEAssocLevelNext.get(right),"workEffortAssocTypeId",workEffortAssocTypeId).cache(true).queryList();
          if (UtilValidate.isNotEmpty(childWEAssocsLevelNth)) {
            tempWorkEffortList.addAll(childWEAssocsLevelNth);
          }
          workEfforts.add(childWEAssocLevelNext);
        }
        childWEAssocsLevelNext=tempWorkEffortList;
      }
      workEfforts.add(childWEAssocLevelFirst);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  return workEfforts;
}
