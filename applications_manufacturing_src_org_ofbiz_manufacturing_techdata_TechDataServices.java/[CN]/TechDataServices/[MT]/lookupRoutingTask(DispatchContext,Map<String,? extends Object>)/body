{
  Delegator delegator=ctx.getDelegator();
  Map<String,Object> result=FastMap.newInstance();
  Locale locale=(Locale)context.get("locale");
  String workEffortName=(String)context.get("workEffortName");
  String fixedAssetId=(String)context.get("fixedAssetId");
  List<GenericValue> listRoutingTask=null;
  List<EntityExpr> constraints=FastList.newInstance();
  if (UtilValidate.isNotEmpty(workEffortName)) {
    constraints.add(EntityCondition.makeCondition("workEffortName",EntityOperator.GREATER_THAN_EQUAL_TO,workEffortName));
  }
  if (UtilValidate.isNotEmpty(fixedAssetId) && !"ANY".equals(fixedAssetId)) {
    constraints.add(EntityCondition.makeCondition("fixedAssetId",EntityOperator.EQUALS,fixedAssetId));
  }
  constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.EQUALS,"ROU_ACTIVE"));
  constraints.add(EntityCondition.makeCondition("workEffortTypeId",EntityOperator.EQUALS,"ROU_TASK"));
  EntityConditionList<EntityExpr> ecl=EntityCondition.makeCondition(constraints,EntityOperator.AND);
  try {
    listRoutingTask=delegator.findList("WorkEffort",ecl,null,UtilMisc.toList("workEffortName"),null,false);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingTechDataWorkEffortNotExist",UtilMisc.toMap("errorString",e.toString()),locale));
  }
  if (listRoutingTask == null) {
    listRoutingTask=FastList.newInstance();
  }
  if (listRoutingTask.size() == 0) {
  }
  result.put("lookupResult",listRoutingTask);
  return result;
}
