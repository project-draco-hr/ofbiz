{
  GenericValue techDataCalendarWeek=null;
  try {
    techDataCalendarWeek=techDataCalendar.getRelatedOneCache("TechDataCalendarWeek");
  }
 catch (  GenericEntityException e) {
    Debug.logError("Pb reading Calendar Week associated with calendar" + e.getMessage(),module);
    return 0;
  }
  Calendar cDateTrav=Calendar.getInstance();
  cDateTrav.setTime(dateFrom);
  Map position=dayStartCapacityAvailable(techDataCalendarWeek,cDateTrav.get(Calendar.DAY_OF_WEEK));
  int moveDay=((Integer)position.get("moveDay")).intValue();
  if (moveDay != 0)   return 0;
  Time startTime=(Time)position.get("startTime");
  Double capacity=(Double)position.get("capacity");
  Timestamp startAvailablePeriod=new Timestamp(UtilDateTime.getDayStart(dateFrom).getTime() + startTime.getTime() + cDateTrav.get(Calendar.ZONE_OFFSET)+ cDateTrav.get(Calendar.DST_OFFSET));
  if (dateFrom.before(startAvailablePeriod))   return 0;
  Timestamp endAvailablePeriod=new Timestamp(startAvailablePeriod.getTime() + capacity.longValue());
  if (dateFrom.after(endAvailablePeriod))   return 0;
  return endAvailablePeriod.getTime() - dateFrom.getTime();
}
