{
  GenericDelegator delegator=ctx.getDelegator();
  Map result=new HashMap();
  String sequenceNumNotOk="N";
  String workEffortIdFrom=(String)context.get("workEffortIdFrom");
  String workEffortIdTo=(String)context.get("workEffortIdTo");
  String workEffortAssocTypeId=(String)context.get("workEffortAssocTypeId");
  Long sequenceNum=(Long)context.get("sequenceNum");
  Timestamp fromDate=(Timestamp)context.get("fromDate");
  Timestamp thruDate=(Timestamp)context.get("thruDate");
  String create=(String)context.get("create");
  boolean createProcess=(create != null && create.equals("Y")) ? true : false;
  List listRoutingTaskAssoc=null;
  try {
    listRoutingTaskAssoc=delegator.findByAnd("WorkEffortAssoc",UtilMisc.toMap("workEffortIdFrom",workEffortIdFrom,"sequenceNum",sequenceNum),UtilMisc.toList("fromDate"));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    return ServiceUtil.returnError("Error finding desired WorkEffortAssoc records: " + e.toString());
  }
  if (listRoutingTaskAssoc != null) {
    Iterator i=listRoutingTaskAssoc.iterator();
    while (i.hasNext()) {
      GenericValue routingTaskAssoc=(GenericValue)i.next();
      if (!workEffortIdFrom.equals(routingTaskAssoc.getString("workEffortIdFrom")) || !workEffortIdTo.equals(routingTaskAssoc.getString("workEffortIdTo")) || !workEffortAssocTypeId.equals(routingTaskAssoc.getString("workEffortAssocTypeId"))|| !sequenceNum.equals(routingTaskAssoc.getLong("sequenceNum"))) {
        if (routingTaskAssoc.getTimestamp("thruDate") == null && routingTaskAssoc.getTimestamp("fromDate") == null)         sequenceNumNotOk="Y";
 else         if (routingTaskAssoc.getTimestamp("thruDate") == null) {
          if (thruDate == null)           sequenceNumNotOk="Y";
 else           if (thruDate.after(routingTaskAssoc.getTimestamp("fromDate")))           sequenceNumNotOk="Y";
        }
 else         if (routingTaskAssoc.getTimestamp("fromDate") == null) {
          if (fromDate == null)           sequenceNumNotOk="Y";
 else           if (fromDate.before(routingTaskAssoc.getTimestamp("thruDate")))           sequenceNumNotOk="Y";
        }
 else         if (fromDate == null && thruDate == null)         sequenceNumNotOk="Y";
 else         if (thruDate == null) {
          if (fromDate.before(routingTaskAssoc.getTimestamp("thruDate")))           sequenceNumNotOk="Y";
        }
 else         if (fromDate == null) {
          if (thruDate.after(routingTaskAssoc.getTimestamp("fromDate")))           sequenceNumNotOk="Y";
        }
 else         if (routingTaskAssoc.getTimestamp("fromDate").before(thruDate) && fromDate.before(routingTaskAssoc.getTimestamp("thruDate")))         sequenceNumNotOk="Y";
      }
 else       if (createProcess)       sequenceNumNotOk="Y";
    }
  }
  result.put("sequenceNumNotOk",sequenceNumNotOk);
  return result;
}
