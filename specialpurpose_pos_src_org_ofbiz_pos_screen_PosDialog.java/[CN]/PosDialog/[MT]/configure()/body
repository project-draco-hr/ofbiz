{
  this.dialog=new JDialog(clientFrame,"Alert",modal);
  dialog.setUndecorated(true);
  dialog.setResizable(false);
  dialog.setSize(page.getSize());
  dialog.getRootPane().setWindowDecorationStyle(JRootPane.PLAIN_DIALOG);
  this.output=(XTextArea)page.findComponent("dialog_output");
  if (this.output != null) {
    this.output.setWrapStyleWord(true);
    this.output.setLineWrap(true);
    this.output.setEditable(false);
  }
  Component[] coms=page.getComponents();
  for (int i=0; i < coms.length; i++) {
    dialog.getContentPane().add(coms[i]);
    coms[i].setVisible(true);
  }
  this.setCloseBtn(dialog);
  this.pack();
  Dimension wSize=dialog.getSize();
  dialog.setLocation(appWindow.getLocation().x + (appWindow.getSize().width / 2 - wSize.width / 2),appWindow.getLocation().y + (appWindow.getSize().height / 2 - wSize.height / 2));
  final PosDialog thisPosDialog=this;
  dialog.addComponentListener(new ComponentListener(){
    public void componentResized(    ComponentEvent event){
      this.reset();
    }
    public void componentMoved(    ComponentEvent event){
      this.reset();
    }
    public void componentShown(    ComponentEvent event){
      this.reset();
    }
    public void componentHidden(    ComponentEvent event){
      this.reset();
    }
    public void reset(){
      if (dialog.isEnabled()) {
        thisPosDialog.checkSize();
        Dimension wSize=dialog.getSize();
        dialog.setLocation(appWindow.getLocation().x + (appWindow.getSize().width / 2 - wSize.width / 2),appWindow.getLocation().y + (appWindow.getSize().height / 2 - wSize.height / 2));
        dialog.requestFocus();
      }
    }
  }
);
  dialog.addWindowListener(new WindowListener(){
    public void windowClosing(    WindowEvent e){
    }
    public void windowActivated(    WindowEvent e){
    }
    public void windowDeactivated(    WindowEvent e){
      this.reset();
    }
    public void windowClosed(    WindowEvent e){
    }
    public void windowOpened(    WindowEvent e){
    }
    public void windowDeiconified(    WindowEvent e){
    }
    public void windowIconified(    WindowEvent e){
    }
    public void reset(){
      if (dialog.isEnabled()) {
        dialog.requestFocus();
      }
    }
  }
);
  dialog.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent event){
    }
    public void focusLost(    FocusEvent event){
      if (dialog.isEnabled()) {
        Component focused=event.getOppositeComponent();
        if (focused == null || !"closeBtn".equals(focused.getName())) {
          dialog.requestFocus();
        }
      }
    }
  }
);
}
