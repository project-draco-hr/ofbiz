{
  productSearchContext.dynamicViewEntity.addMemberEntity("PFAPPL","ProductFeatureAndAppl");
  productSearchContext.dynamicViewEntity.addAlias("PFAPPL","sortProductFeatureTypeId","productFeatureTypeId",null,null,null,null);
  productSearchContext.dynamicViewEntity.addAlias("PFAPPL","sortProductFeatureId","productFeatureId",null,null,null,null);
  productSearchContext.dynamicViewEntity.addAlias("PFAPPL","sortFromDate","fromDate",null,null,null,null);
  productSearchContext.dynamicViewEntity.addAlias("PFAPPL","sortThruDate","thruDate",null,null,null,null);
  productSearchContext.dynamicViewEntity.addViewLink("PROD","PFAPPL",Boolean.TRUE,UtilMisc.toList(new ModelKeyMap("productId","productId")));
  productSearchContext.entityConditionList.add(EntityCondition.makeCondition("sortProductFeatureTypeId",EntityOperator.EQUALS,this.productFeatureTypeId));
  productSearchContext.entityConditionList.add(EntityCondition.makeCondition("sortFromDate",EntityOperator.LESS_THAN_EQUAL_TO,productSearchContext.nowTimestamp));
  productSearchContext.entityConditionList.add(EntityCondition.makeCondition(EntityCondition.makeCondition("sortThruDate",EntityOperator.EQUALS,null),EntityOperator.OR,EntityCondition.makeCondition("sortThruDate",EntityOperator.GREATER_THAN_EQUAL_TO,productSearchContext.nowTimestamp)));
  if (ascending) {
    productSearchContext.orderByList.add("+sortProductFeatureId");
  }
 else {
    productSearchContext.orderByList.add("-sortProductFeatureId");
  }
  productSearchContext.fieldsToSelect.add("sortProductFeatureId");
}
