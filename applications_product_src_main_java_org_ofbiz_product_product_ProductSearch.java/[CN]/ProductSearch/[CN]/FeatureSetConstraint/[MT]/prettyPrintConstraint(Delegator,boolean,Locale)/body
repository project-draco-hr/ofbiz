{
  StringBuilder infoOut=new StringBuilder();
  try {
    for (    String featureId : this.productFeatureIdSet) {
      if (infoOut.length() > 0) {
        infoOut.append(", ");
      }
      GenericValue productFeature=EntityQuery.use(delegator).from("ProductFeature").where("productFeatureId",featureId).cache().queryOne();
      GenericValue productFeatureType=productFeature == null ? null : productFeature.getRelatedOne("ProductFeatureType",true);
      if (productFeatureType == null) {
        infoOut.append(UtilProperties.getMessage(resource,"ProductFeature",locale)).append(": ");
      }
 else {
        infoOut.append(productFeatureType.getString("description"));
        infoOut.append(": ");
      }
      if (productFeature == null) {
        infoOut.append("[");
        infoOut.append(featureId);
        infoOut.append("]");
      }
 else {
        infoOut.append(productFeature.getString("description"));
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error finding ProductFeature and Type information for constraint pretty print",module);
  }
  return infoOut.toString();
}
