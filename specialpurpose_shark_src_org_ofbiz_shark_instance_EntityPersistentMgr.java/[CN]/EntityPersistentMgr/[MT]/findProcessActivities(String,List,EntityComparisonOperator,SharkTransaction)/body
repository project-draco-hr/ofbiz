{
  Delegator delegator=SharkContainer.getDelegator();
  List createdList=new ArrayList();
  List order=UtilMisc.toList(org.ofbiz.shark.SharkConstants.lastStateTime);
  List lookupList=null;
  try {
    EntityCondition cond=null;
    EntityCondition proc=EntityCondition.makeCondition(org.ofbiz.shark.SharkConstants.processId,EntityOperator.EQUALS,processId);
    if (states != null) {
      EntityCondition stateCond=this.makeStateListCondition(org.ofbiz.shark.SharkConstants.currentState,states,operator,EntityOperator.OR);
      cond=EntityCondition.makeCondition(UtilMisc.toList(proc,stateCond),EntityOperator.AND);
    }
 else {
      cond=proc;
    }
    lookupList=delegator.findList(org.ofbiz.shark.SharkConstants.WfActivity,cond,null,order,null,false);
  }
 catch (  GenericEntityException e) {
    throw new PersistenceException(e);
  }
  if (UtilValidate.isNotEmpty(lookupList)) {
    Iterator i=lookupList.iterator();
    while (i.hasNext()) {
      GenericValue v=(GenericValue)i.next();
      createdList.add(Activity.getInstance(this,v));
    }
  }
  return createdList;
}
