{
  Delegator delegator=SharkContainer.getDelegator();
  List finsihedStates=UtilMisc.toList("closed.completed","closed.terminated","closed.aborted");
  List order=UtilMisc.toList(org.ofbiz.shark.SharkConstants.lastStateTime);
  List createdList=new ArrayList();
  List lookupList=null;
  try {
    EntityCondition stateCond=this.makeStateListCondition(org.ofbiz.shark.SharkConstants.currentState,finsihedStates,EntityOperator.EQUALS,EntityOperator.OR);
    EntityCondition cond=this.makeProcessFilterCondition(stateCond,packageId,processDefId,packageVer,finishedBefore);
    lookupList=delegator.findByCondition(org.ofbiz.shark.SharkConstants.WfProcess,cond,null,order);
  }
 catch (  GenericEntityException e) {
    throw new PersistenceException(e);
  }
  if (!UtilValidate.isEmpty(lookupList)) {
    Iterator i=lookupList.iterator();
    while (i.hasNext()) {
      GenericValue v=(GenericValue)i.next();
      createdList.add(Process.getInstance(this,v));
    }
  }
  return createdList;
}
