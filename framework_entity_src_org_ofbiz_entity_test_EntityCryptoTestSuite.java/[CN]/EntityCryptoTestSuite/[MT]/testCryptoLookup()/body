{
  String nanoTime="" + System.nanoTime();
  EntityCondition condition;
  delegator.removeByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","LOOKUP"));
  delegator.create("TestingCrypto",UtilMisc.toMap("testingCryptoId","lookup-null","testingCryptoTypeId","LOOKUP"));
  delegator.create("TestingCrypto",UtilMisc.toMap("testingCryptoId","lookup-value","testingCryptoTypeId","LOOKUP","encryptedValue",nanoTime,"saltedEncryptedValue",nanoTime));
  assertEquals(1,delegator.findByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","LOOKUP","encryptedValue",null),null,false).size());
  assertEquals(1,delegator.findByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","LOOKUP","saltedEncryptedValue",null),null,false).size());
  assertEquals(1,delegator.findByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","LOOKUP","encryptedValue",nanoTime),null,false).size());
  assertEquals(0,delegator.findByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","LOOKUP","saltedEncryptedValue",nanoTime),null,false).size());
  condition=EntityCondition.makeCondition(EntityCondition.makeCondition("testingCryptoTypeId",EntityOperator.EQUALS,"LOOKUP"),EntityOperator.AND,EntityCondition.makeCondition("encryptedValue",EntityOperator.EQUALS,nanoTime));
  assertEquals(1,delegator.findList("TestingCrypto",condition,null,null,null,false).size());
}
