{
  if ("close".equals(method.getName())) {
    stmt.getConnection().setAutoCommit(autoCommit);
    TransactionUtil.commit(beganTransaction);
    stmt.close();
    return null;
  }
 else   if ("execute".equals(method.getName())) {
  }
 else   if ("executeQuery".equals(method.getName()) && args == null) {
    PreparedStatement pstmt=(PreparedStatement)stmt;
    pstmt.executeUpdate();
    currentResultSet=CursorResultSet.newCursorResultSet(stmt,cursorName,fetchSize);
    return currentResultSet;
  }
 else   if ("executeQuery".equals(method.getName()) && args != null) {
    args[0]="DECLARE " + cursorName + " CURSOR FOR "+ args[0];
    System.err.println("query=" + args[0]);
    if (stmt.execute((String)args[0])) {
      throw new SQLException("DECLARE returned a ResultSet");
    }
    currentResultSet=CursorResultSet.newCursorResultSet(stmt,cursorName,fetchSize);
    return currentResultSet;
  }
 else   if ("getMoreResults".equals(method.getName())) {
    boolean hasMoreResults=stmt.getMoreResults();
    if (hasMoreResults) {
      currentResultSet=stmt.getResultSet();
    }
 else {
      currentResultSet=null;
    }
    return hasMoreResults ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if ("getResultSet".equals(method.getName())) {
    return currentResultSet;
  }
 else   if ("getCursorName".equals(method.getName())) {
    return getCursorName();
  }
 else   if ("setCursorName".equals(method.getName())) {
    setCursorName((String)args[0]);
  }
 else   if ("getFetchSize".equals(method.getName())) {
    return new Integer(getFetchSize());
  }
 else   if ("setFetchSize".equals(method.getName())) {
    setFetchSize(((Integer)args[0]).intValue());
  }
  return super.invoke(stmt,proxy,method,args);
}
