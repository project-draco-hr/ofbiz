{
  try {
    Thread.sleep(30000);
    while (!executor.isShutdown()) {
      int remainingCapacity=executor.getQueue().remainingCapacity();
      if (remainingCapacity > 0) {
        List<Job> pollList=jm.poll(remainingCapacity);
        for (        Job job : pollList) {
          try {
            queueNow(job);
          }
 catch (          InvalidJobException e) {
            Debug.logError(e,module);
          }
        }
      }
      Thread.sleep(pollWaitTime());
    }
  }
 catch (  InterruptedException e) {
    Debug.logError(e,module);
    stop();
    Thread.currentThread().interrupt();
  }
  Debug.logInfo("JobPoller " + this.name + " thread terminated.",module);
}
