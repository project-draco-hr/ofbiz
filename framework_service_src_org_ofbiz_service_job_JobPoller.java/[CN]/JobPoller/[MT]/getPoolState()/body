{
  Map<String,Object> poolState=new HashMap<String,Object>();
  poolState.put("pollerName",this.name);
  poolState.put("pollerThreadName","OFBiz-JobPoller-" + this.name);
  poolState.put("invokerThreadNameFormat","OFBiz-JobInvoker-" + this.name + "-<SEQ>");
  poolState.put("keepAliveTimeInSeconds",this.executor.getKeepAliveTime(TimeUnit.SECONDS));
  poolState.put("numberOfCoreInvokerThreads",this.executor.getCorePoolSize());
  poolState.put("currentNumberOfInvokerThreads",this.executor.getPoolSize());
  poolState.put("numberOfActiveInvokerThreads",this.executor.getActiveCount());
  poolState.put("maxNumberOfInvokerThreads",this.executor.getMaximumPoolSize());
  poolState.put("greatestNumberOfInvokerThreads",this.executor.getLargestPoolSize());
  poolState.put("numberOfCompletedTasks",this.executor.getCompletedTaskCount());
  BlockingQueue<Runnable> queue=this.executor.getQueue();
  List<Map<String,Object>> taskList=new ArrayList<Map<String,Object>>();
  Map<String,Object> taskInfo=null;
  for (  Runnable task : queue) {
    JobInvoker jobInvoker=(JobInvoker)task;
    taskInfo=new HashMap<String,Object>();
    taskInfo.put("id",jobInvoker.getJobId());
    taskInfo.put("name",jobInvoker.getJobName());
    taskInfo.put("serviceName",jobInvoker.getServiceName());
    taskInfo.put("time",jobInvoker.getTime());
    taskInfo.put("runtime",jobInvoker.getCurrentRuntime());
    taskList.add(taskInfo);
  }
  poolState.put("taskList",taskList);
  return poolState;
}
