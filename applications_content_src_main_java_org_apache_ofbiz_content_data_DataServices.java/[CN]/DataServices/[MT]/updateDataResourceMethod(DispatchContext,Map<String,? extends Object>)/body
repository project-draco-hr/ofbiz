{
  Map<String,Object> result=new HashMap<String,Object>();
  Delegator delegator=dctx.getDelegator();
  GenericValue dataResource=null;
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String userLoginId=(String)userLogin.get("userLoginId");
  String lastModifiedByUserLogin=userLoginId;
  Timestamp lastModifiedDate=UtilDateTime.nowTimestamp();
  String dataResourceId=(String)context.get("dataResourceId");
  try {
    dataResource=EntityQuery.use(delegator).from("DataResource").where("dataResourceId",dataResourceId).queryOne();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentDataResourceNotFound",UtilMisc.toMap("parameters.dataResourceId",dataResourceId),locale));
  }
  dataResource.setNonPKFields(context);
  dataResource.put("lastModifiedByUserLogin",lastModifiedByUserLogin);
  dataResource.put("lastModifiedDate",lastModifiedDate);
  try {
    dataResource.store();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  result.put("dataResource",dataResource);
  return result;
}
