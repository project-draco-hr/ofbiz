{
  String condValue=productPromoCond.getString("condValue");
  String inputParamEnumId=productPromoCond.getString("inputParamEnumId");
  String operatorEnumId=productPromoCond.getString("operatorEnumId");
  List<GenericValue> listProductPriceList=EntityQuery.use(delegator).from("ProductPrice").where("productId",cartItem.getProductId(),"productPriceTypeId","LIST_PRICE","productPricePurposeId","PURCHASE").orderBy("-fromDate").filterByDate().queryList();
  GenericValue listProductPrice=(listProductPriceList != null && listProductPriceList.size() > 0) ? listProductPriceList.get(0) : null;
  BigDecimal listPrice=(listProductPrice != null) ? listProductPrice.getBigDecimal("price") : null;
  if (listPrice == null) {
    return true;
  }
  BigDecimal basePrice=cartItem.getBasePrice();
  BigDecimal amountOff=listPrice.subtract(basePrice);
  BigDecimal percentOff=amountOff.divide(listPrice,2,BigDecimal.ROUND_HALF_UP).multiply(BigDecimal.valueOf(100L));
  Integer compareBase=null;
  if ("PPIP_LPMUP_AMT".equals(inputParamEnumId)) {
    BigDecimal condValueBigDecimal=new BigDecimal(condValue);
    compareBase=Integer.valueOf(amountOff.compareTo(condValueBigDecimal));
  }
 else   if ("PPIP_LPMUP_PER".equals(inputParamEnumId)) {
    BigDecimal condValueBigDecimal=new BigDecimal(condValue);
    compareBase=Integer.valueOf(percentOff.compareTo(condValueBigDecimal));
  }
 else {
    return true;
  }
  Debug.logInfo("Checking condition for item productId=" + cartItem.getProductId() + ", listPrice="+ listPrice+ ", basePrice="+ basePrice+ ", amountOff="+ amountOff+ ", percentOff="+ percentOff+ ", condValue="+ condValue+ ", compareBase="+ compareBase+ ", productPromoCond="+ productPromoCond,module);
  if (compareBase != null) {
    int compare=compareBase.intValue();
    if ("PPC_EQ".equals(operatorEnumId)) {
      if (compare == 0)       return true;
    }
 else     if ("PPC_NEQ".equals(operatorEnumId)) {
      if (compare != 0)       return true;
    }
 else     if ("PPC_LT".equals(operatorEnumId)) {
      if (compare < 0)       return true;
    }
 else     if ("PPC_LTE".equals(operatorEnumId)) {
      if (compare <= 0)       return true;
    }
 else     if ("PPC_GT".equals(operatorEnumId)) {
      if (compare > 0)       return true;
    }
 else     if ("PPC_GTE".equals(operatorEnumId)) {
      if (compare >= 0)       return true;
    }
 else {
      Debug.logWarning(UtilProperties.getMessage(resource_error,"OrderAnUnSupportedProductPromoCondCondition",UtilMisc.toMap("operatorEnumId",operatorEnumId),cart.getLocale()),module);
      return false;
    }
    return false;
  }
  return true;
}
