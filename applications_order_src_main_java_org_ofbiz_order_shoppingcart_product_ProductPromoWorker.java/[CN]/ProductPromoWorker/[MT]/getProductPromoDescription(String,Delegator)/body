{
  GenericValue prodPromo;
  try {
    prodPromo=EntityQuery.use(delegator).from("ProductPromo").where("productPromoId",prodPromoId).cache().queryOne();
    if (UtilValidate.isNotEmpty(prodPromo.get("promoText"))) {
      return (String)prodPromo.get("promoText");
    }
    return (String)prodPromo.get("promoName");
  }
 catch (  GenericEntityException e) {
    Debug.logWarning("Error getting ProductPromo for Id " + prodPromoId,module);
  }
  return null;
}
