{
  if (Debug.verboseOn())   Debug.logVerbose("Analyze partyIdentification: entered id = " + idToFind + ", partyIdentificationTypeId = "+ partyIdentificationTypeId,module);
  GenericValue party=null;
  List<GenericValue> partiesFound=null;
  if (searchPartyFirst) {
    party=delegator.findOne("Party",UtilMisc.toMap("partyId",idToFind),true);
  }
  if (searchAllId || (searchPartyFirst && UtilValidate.isEmpty(party))) {
    Map<String,String> conditions=UtilMisc.toMap("idValue",idToFind);
    if (UtilValidate.isNotEmpty(partyIdentificationTypeId)) {
      conditions.put("partyIdentificationTypeId",partyIdentificationTypeId);
    }
    partiesFound=delegator.findByAnd("PartyIdentificationAndParty",conditions,UtilMisc.toList("partyId"),true);
  }
  if (!searchPartyFirst) {
    party=delegator.findOne("Party",UtilMisc.toMap("partyId",idToFind),true);
  }
  if (UtilValidate.isNotEmpty(party)) {
    if (UtilValidate.isNotEmpty(partiesFound))     partiesFound.add(party);
 else     partiesFound=UtilMisc.toList(party);
  }
  if (Debug.verboseOn())   Debug.logVerbose("Analyze partyIdentification: found party.partyId = " + party + ", and list : "+ partiesFound,module);
  return partiesFound;
}
