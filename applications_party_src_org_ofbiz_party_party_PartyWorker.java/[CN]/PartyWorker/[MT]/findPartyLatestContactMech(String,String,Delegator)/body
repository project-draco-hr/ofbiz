{
  try {
    return EntityQuery.use(delegator).from("PartyAndContactMech").where("partyId",partyId,"contactMechTypeId",contactMechTypeId).orderBy("-fromDate").filterByDate().queryFirst();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error while finding latest ContactMech for party with ID [" + partyId + "] TYPE ["+ contactMechTypeId+ "]: "+ e.toString(),module);
    return null;
  }
}
