{
  try {
    List<GenericValue> loginHistory=delegator.findByAnd("UserLoginHistory",UtilMisc.toMap("partyId",partyId),UtilMisc.toList("-fromDate"),false);
    GenericValue v=EntityUtil.getFirst(loginHistory);
    if (v != null) {
      return v.getTimestamp("fromDate");
    }
 else {
      return null;
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error while finding latest login time for party with ID [" + partyId + "]: "+ e.toString(),module);
    return null;
  }
}
