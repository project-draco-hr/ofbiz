{
  String localRequestName=UtilHttp.encodeAmpersands(target);
  localRequestName=UtilCodec.canonicalize(localRequestName);
  Appendable localWriter=new StringWriter();
  if ("intra-app".equals(targetType)) {
    if (request != null && response != null) {
      ServletContext servletContext=request.getSession().getServletContext();
      RequestHandler rh=(RequestHandler)servletContext.getAttribute("_REQUEST_HANDLER_");
      externalWriter.append(rh.makeLink(request,response,"/" + localRequestName,fullPath,secure,encode));
    }
 else     if (prefix != null) {
      externalWriter.append(prefix);
      externalWriter.append(localRequestName);
    }
 else {
      externalWriter.append(localRequestName);
    }
  }
 else   if ("inter-app".equals(targetType)) {
    String fullTarget=localRequestName;
    localWriter.append(fullTarget);
    String externalLoginKey=(String)request.getAttribute("externalLoginKey");
    if (UtilValidate.isNotEmpty(externalLoginKey)) {
      if (fullTarget.indexOf('?') == -1) {
        localWriter.append('?');
      }
 else {
        localWriter.append("&amp;");
      }
      localWriter.append("externalLoginKey=");
      localWriter.append(externalLoginKey);
    }
  }
 else   if ("content".equals(targetType)) {
    appendContentUrl(localWriter,localRequestName,request);
  }
 else   if ("plain".equals(targetType)) {
    localWriter.append(localRequestName);
  }
 else {
    localWriter.append(localRequestName);
  }
  if (UtilValidate.isNotEmpty(parameterMap)) {
    String localUrl=localWriter.toString();
    externalWriter.append(localUrl);
    boolean needsAmp=true;
    if (localUrl.indexOf('?') == -1) {
      externalWriter.append('?');
      needsAmp=false;
    }
    for (    Map.Entry<String,String> parameter : parameterMap.entrySet()) {
      String parameterValue=null;
      if (parameter.getValue() instanceof String) {
        parameterValue=parameter.getValue();
      }
 else {
        Object parameterObject=parameter.getValue();
        if (parameterObject == null)         continue;
        if (parameterObject instanceof String[]) {
          String[] parameterArray=(String[])parameterObject;
          parameterValue=parameterArray[0];
          Debug.logInfo("Found String array value for parameter [" + parameter.getKey() + "], using first value: "+ parameterValue,module);
        }
 else {
          parameterValue=parameterObject.toString();
        }
      }
      if (needsAmp) {
        externalWriter.append("&amp;");
      }
 else {
        needsAmp=true;
      }
      externalWriter.append(parameter.getKey());
      externalWriter.append('=');
      UtilCodec.SimpleEncoder simpleEncoder=(UtilCodec.SimpleEncoder)context.get("simpleEncoder");
      if (simpleEncoder != null && parameterValue != null) {
        externalWriter.append(simpleEncoder.encode(URLEncoder.encode(parameterValue,Charset.forName("UTF-8").displayName())));
      }
 else {
        externalWriter.append(parameterValue);
      }
    }
  }
 else {
    externalWriter.append(localWriter.toString());
  }
}
