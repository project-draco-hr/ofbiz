{
  Collection<Map<String,GenericValue>> workEffortContactMechValueMaps=FastList.newInstance();
  List<GenericValue> allWorkEffortContactMechs=null;
  try {
    List<GenericValue> workEffortContactMechs=delegator.findByAnd("WorkEffortContactMech",UtilMisc.toMap("workEffortId",workEffortId));
    allWorkEffortContactMechs=EntityUtil.filterByDate(workEffortContactMechs);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  if (allWorkEffortContactMechs == null)   return null;
  for (  GenericValue workEffortContactMech : allWorkEffortContactMechs) {
    GenericValue contactMech=null;
    try {
      contactMech=workEffortContactMech.getRelatedOne("ContactMech");
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
    }
    if (contactMech != null) {
      Map<String,GenericValue> workEffortContactMechValueMap=FastMap.newInstance();
      workEffortContactMechValueMaps.add(workEffortContactMechValueMap);
      workEffortContactMechValueMap.put("contactMech",contactMech);
      workEffortContactMechValueMap.put("workEffortContactMech",workEffortContactMech);
      try {
        workEffortContactMechValueMap.put("contactMechType",contactMech.getRelatedOneCache("ContactMechType"));
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
      try {
        if ("POSTAL_ADDRESS".equals(contactMech.getString("contactMechTypeId"))) {
          workEffortContactMechValueMap.put("postalAddress",contactMech.getRelatedOne("PostalAddress"));
        }
 else         if ("TELECOM_NUMBER".equals(contactMech.getString("contactMechTypeId"))) {
          workEffortContactMechValueMap.put("telecomNumber",contactMech.getRelatedOne("TelecomNumber"));
        }
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
    }
  }
  return workEffortContactMechValueMaps.size() > 0 ? workEffortContactMechValueMaps : null;
}
