{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  Map<String,Object> results=FastMap.newInstance();
  if (curContactMechId != null) {
    List<GenericValue> partyContactMechs=null;
    try {
      partyContactMechs=EntityUtil.filterByDate(delegator.findByAnd("PartyContactMech",UtilMisc.toMap("partyId",partyId,"contactMechId",curContactMechId),null,false),true);
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
    }
    GenericValue curPartyContactMech=EntityUtil.getFirst(partyContactMechs);
    results.put("curPartyContactMech",curPartyContactMech);
    GenericValue curContactMech=null;
    if (curPartyContactMech != null) {
      try {
        curContactMech=curPartyContactMech.getRelatedOne("ContactMech",false);
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
      Collection<GenericValue> curPartyContactMechPurposes=null;
      try {
        curPartyContactMechPurposes=EntityUtil.filterByDate(curPartyContactMech.getRelated("PartyContactMechPurpose"),true);
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
      results.put("curPartyContactMechPurposes",curPartyContactMechPurposes);
    }
    results.put("curContactMech",curContactMech);
    GenericValue curPostalAddress=null;
    if (curContactMech != null) {
      try {
        curPostalAddress=curContactMech.getRelatedOne("PostalAddress",false);
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
    }
    results.put("curPostalAddress",curPostalAddress);
  }
  return results;
}
