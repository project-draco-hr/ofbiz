{
  List<Map<String,Object>> partyContactMechValueMaps=FastList.newInstance();
  List<GenericValue> allPartyContactMechs=null;
  try {
    List<GenericValue> tempCol=delegator.findByAnd("PartyContactMech",UtilMisc.toMap("partyId",partyId));
    if (contactMechTypeId != null) {
      List<GenericValue> tempColTemp=FastList.newInstance();
      for (      GenericValue partyContactMech : tempCol) {
        GenericValue contactMech=delegator.getRelatedOne("ContactMech",partyContactMech);
        if (contactMech != null && contactMechTypeId.equals(contactMech.getString("contactMechTypeId"))) {
          tempColTemp.add(partyContactMech);
        }
      }
      tempCol=tempColTemp;
    }
    if (!showOld)     tempCol=EntityUtil.filterByDate(tempCol,true);
    allPartyContactMechs=tempCol;
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  if (allPartyContactMechs == null)   return partyContactMechValueMaps;
  for (  GenericValue partyContactMech : allPartyContactMechs) {
    GenericValue contactMech=null;
    try {
      contactMech=partyContactMech.getRelatedOne("ContactMech");
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
    }
    if (contactMech != null) {
      Map<String,Object> partyContactMechValueMap=FastMap.newInstance();
      partyContactMechValueMaps.add(partyContactMechValueMap);
      partyContactMechValueMap.put("contactMech",contactMech);
      partyContactMechValueMap.put("partyContactMech",partyContactMech);
      try {
        partyContactMechValueMap.put("contactMechType",contactMech.getRelatedOneCache("ContactMechType"));
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
      try {
        List<GenericValue> partyContactMechPurposes=partyContactMech.getRelated("PartyContactMechPurpose");
        if (!showOld)         partyContactMechPurposes=EntityUtil.filterByDate(partyContactMechPurposes,true);
        partyContactMechValueMap.put("partyContactMechPurposes",partyContactMechPurposes);
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
      try {
        if ("POSTAL_ADDRESS".equals(contactMech.getString("contactMechTypeId"))) {
          partyContactMechValueMap.put("postalAddress",contactMech.getRelatedOne("PostalAddress"));
        }
 else         if ("TELECOM_NUMBER".equals(contactMech.getString("contactMechTypeId"))) {
          partyContactMechValueMap.put("telecomNumber",contactMech.getRelatedOne("TelecomNumber"));
        }
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,module);
      }
    }
  }
  return partyContactMechValueMaps;
}
