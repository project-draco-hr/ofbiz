{
  if (UtilValidate.isNotEmpty(postalAddress.getString("postalCodeGeoId"))) {
    return postalAddress.getString("postalCodeGeoId");
  }
  if (UtilValidate.isNotEmpty(postalAddress.getString("countryGeoId")) && UtilValidate.isNotEmpty(postalAddress.getString("postalCode"))) {
    GenericValue geo=delegator.findByPrimaryKeyCache("Geo",UtilMisc.toMap("geoId",postalAddress.getString("countryGeoId") + "-" + postalAddress.getString("postalCode")));
    if (geo != null) {
      postalAddress.set("postalCodeGeoId",geo.getString("geoId"));
      postalAddress.store();
      return geo.getString("geoId");
    }
    List<GenericValue> geoAssocAndGeoToList=delegator.findByAndCache("GeoAssocAndGeoTo",UtilMisc.toMap("geoIdFrom",postalAddress.getString("countryGeoId"),"geoCode",postalAddress.getString("postalCode"),"geoAssocTypeId","REGIONS"));
    GenericValue geoAssocAndGeoTo=EntityUtil.getFirst(geoAssocAndGeoToList);
    if (geoAssocAndGeoTo != null) {
      postalAddress.set("postalCodeGeoId",geoAssocAndGeoTo.getString("geoId"));
      postalAddress.store();
      return geoAssocAndGeoTo.getString("geoId");
    }
  }
  return null;
}
