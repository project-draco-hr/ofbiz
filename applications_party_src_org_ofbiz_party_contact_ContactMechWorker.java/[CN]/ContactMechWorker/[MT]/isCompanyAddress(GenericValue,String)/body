{
  if (postalAddress == null) {
    return false;
  }
  if (!"PostalAddress".equals(postalAddress.getEntityName())) {
    return false;
  }
  if (companyPartyId == null) {
    return false;
  }
  String state=postalAddress.getString("stateProvinceGeoId");
  String addr1=postalAddress.getString("address1");
  String addr2=postalAddress.getString("address2");
  if (state != null) {
    state=state.replaceAll("\\W","").toLowerCase();
  }
 else {
    state="";
  }
  if (addr1 != null) {
    addr1=addr1.replaceAll("\\W","").toLowerCase();
  }
 else {
    addr1="";
  }
  if (addr2 != null) {
    addr2=addr2.replaceAll("\\W","").toLowerCase();
  }
 else {
    addr2="";
  }
  GenericDelegator delegator=postalAddress.getDelegator();
  List<GenericValue> postalAddresses=FastList.newInstance();
  try {
    List<GenericValue> partyContactMechs=delegator.findByAnd("PartyContactMech",UtilMisc.toMap("partyId",companyPartyId));
    partyContactMechs=EntityUtil.filterByDate(partyContactMechs);
    if (partyContactMechs != null) {
      for (      GenericValue pcm : partyContactMechs) {
        GenericValue addr=pcm.getRelatedOne("PostalAddress");
        if (addr != null) {
          postalAddresses.add(addr);
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Unable to get party postal addresses",module);
  }
  if (postalAddresses != null) {
    for (    GenericValue addr : postalAddresses) {
      String thisAddr1=addr.getString("address1");
      String thisAddr2=addr.getString("address2");
      String thisState=addr.getString("stateProvinceGeoId");
      if (thisState != null) {
        thisState=thisState.replaceAll("\\W","").toLowerCase();
      }
 else {
        thisState="";
      }
      if (thisAddr1 != null) {
        thisAddr1=thisAddr1.replaceAll("\\W","").toLowerCase();
      }
 else {
        thisAddr1="";
      }
      if (thisAddr2 != null) {
        thisAddr2=thisAddr2.replaceAll("\\W","").toLowerCase();
      }
 else {
        thisAddr2="";
      }
      if (thisAddr1.equals(addr1) && thisAddr2.equals(addr2) && thisState.equals(state)) {
        return true;
      }
    }
  }
  return false;
}
