{
  GenericValue cc=(GenericValue)params.get("creditCard");
  BigDecimal amount=(BigDecimal)params.get("refundAmount");
  String amountValue=amount.setScale(decimals,rounding).movePointRight(2).toPlainString();
  String number=UtilFormatOut.checkNull(cc.getString("cardNumber"));
  String expDate=UtilFormatOut.checkNull(cc.getString("expireDate"));
  expDate=formatExpDateForOrbital(expDate);
  String orderId=UtilFormatOut.checkNull((String)params.get("orderId"));
  try {
    request.setFieldValue("IndustryType","EC");
    request.setFieldValue("MessageType","R");
    request.setFieldValue("MerchantID",UtilFormatOut.checkNull(props.get("merchantId").toString()));
    request.setFieldValue("BIN",BIN_VALUE);
    request.setFieldValue("OrderID",UtilFormatOut.checkNull(orderId));
    request.setFieldValue("AccountNum",UtilFormatOut.checkNull(number));
    request.setFieldValue("Amount",UtilFormatOut.checkNull(amountValue));
    request.setFieldValue("Exp",UtilFormatOut.checkNull(expDate));
    request.setFieldValue("Comments","This is a credit card refund");
    Debug.log("\nRefund Request:\n ======== " + request.getXML());
    results.put("refundAmount",amount);
  }
 catch (  InitializationException ie) {
    Debug.logInfo("Unable to initialize request object",module);
  }
catch (  FieldNotFoundException fnfe) {
    Debug.logError("Unable to find XML field in template",module);
  }
catch (  Exception e) {
    e.printStackTrace();
  }
}
