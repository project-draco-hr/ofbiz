{
  String configFile="/applications/accounting/config/linehandler.properties";
  String paymentGatewayConfigId=(String)context.get("paymentGatewayConfigId");
  Map<String,Object> buildConfiguratorContext=FastMap.newInstance();
  try {
    buildConfiguratorContext.put("OrbitalConnectionUsername",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"username"));
    buildConfiguratorContext.put("OrbitalConnectionPassword",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"password"));
    buildConfiguratorContext.put("merchantId",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"merchantId"));
    buildConfiguratorContext.put("engine.class",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"class"));
    buildConfiguratorContext.put("engine.hostname",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"hostName"));
    buildConfiguratorContext.put("engine.port",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"port"));
    buildConfiguratorContext.put("engine.hostname.failover",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"hostNameFailover"));
    buildConfiguratorContext.put("engine.port.failover",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"portFailover"));
    buildConfiguratorContext.put("engine.connection_timeout_seconds",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"connectionTimeoutSeconds"));
    buildConfiguratorContext.put("engine.read_timeout_seconds",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"readTimeoutSeconds"));
    buildConfiguratorContext.put("engine.authorizationURI",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"authorizationURI"));
    buildConfiguratorContext.put("engine.sdk_version",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"sdkVersion"));
    buildConfiguratorContext.put("engine.ssl.socketfactory",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"sslSocketFactory"));
    buildConfiguratorContext.put("Response.response_type",getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"responseType"));
    String configFileLocation=System.getProperty("ofbiz.home") + configFile;
    Configurator config=Configurator.getInstance(configFileLocation);
    buildConfiguratorContext.putAll(config.getConfigurations());
    config.setConfigurations(buildConfiguratorContext);
  }
 catch (  InitializationException e) {
    Debug.logError("Orbital Configurator Initialization Error: " + e.getMessage(),module);
    e.printStackTrace();
  }
  return buildConfiguratorContext;
}
