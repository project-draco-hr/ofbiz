{
  this.resourceName=resourceName;
  this.formName=formName;
  this.request=request;
  this.response=response;
  try {
    GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
    LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
    this.modelForm=FormFactory.getFormFromLocation(resourceName,formName,delegator.getModelReader(),dispatcher.getDispatchContext());
  }
 catch (  IllegalArgumentException iae) {
    Debug.logWarning("Could not find form with name [" + formName + "] in class resource ["+ resourceName+ "], will try to load it using relative path syntax.",module);
    this.modelForm=FormFactory.getFormFromWebappContext(resourceName,formName,request);
  }
  this.renderer=new HtmlFormRenderer(request,response);
  this.context=new HashMap<String,Object>();
  Map<String,Object> parameterMap=UtilHttp.getParameterMap(request);
  context.put("parameters",parameterMap);
  context.put("locale",UtilHttp.getLocale(request));
  context.put("timeZone",UtilHttp.getTimeZone(request));
  if (UtilValidate.isNotEmpty((String)request.getAttribute("_ERROR_MESSAGE_"))) {
    context.put("isError",Boolean.TRUE);
  }
 else {
    context.put("isError",Boolean.FALSE);
  }
  if ("true".equals((String)parameterMap.get("isError"))) {
    context.put("isError",Boolean.TRUE);
  }
  Map uiLabelMap=(Map)request.getAttribute("uiLabelMap");
  if (uiLabelMap != null && uiLabelMap.size() > 0 && context.get("uiLabelMap") == null) {
    Debug.logInfo("Got uiLabelMap: " + uiLabelMap,module);
    context.put("uiLabelMap",uiLabelMap);
  }
}
