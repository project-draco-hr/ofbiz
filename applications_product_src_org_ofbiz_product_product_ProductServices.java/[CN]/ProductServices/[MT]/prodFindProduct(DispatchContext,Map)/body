{
  GenericDelegator delegator=dctx.getDelegator();
  Map result=new HashMap();
  String productId=(String)context.get("productId");
  Locale locale=(Locale)context.get("locale");
  String errMsg=null;
  if (productId == null || productId.length() == 0) {
    errMsg=UtilProperties.getMessage(resource,"productservices.invalid_productId_passed",locale);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,errMsg);
    return result;
  }
  try {
    GenericValue product=delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",productId));
    GenericValue mainProduct=product;
    if (product.get("isVariant") != null && product.getString("isVariant").equalsIgnoreCase("Y")) {
      List c=product.getRelatedByAndCache("AssocProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_VARIANT"));
      c=EntityUtil.filterByDate(c);
      if (c.size() > 0) {
        GenericValue asV=(GenericValue)c.iterator().next();
        mainProduct=asV.getRelatedOneCache("MainProduct");
      }
    }
    result.put("product",mainProduct);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  }
 catch (  GenericEntityException e) {
    e.printStackTrace();
    Map messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"productservices.problems_reading_product_entity",messageMap,locale);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,errMsg);
  }
  return result;
}
