{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  Map selectedFeatures=UtilGenerics.checkMap(context.get("selectedFeatures"));
  List<GenericValue> products=FastList.newInstance();
  Map<String,Object> resVariants=prodFindAllVariants(dctx,context);
  List<GenericValue> variants=UtilGenerics.checkList(resVariants.get("assocProducts"));
  for (  GenericValue oneVariant : variants) {
    Map<String,String> feaContext=FastMap.newInstance();
    feaContext.put("productId",oneVariant.getString("productIdTo"));
    feaContext.put("type","STANDARD_FEATURE");
    Map<String,Object> resFeatures=prodGetFeatures(dctx,feaContext);
    List<GenericValue> features=UtilGenerics.checkList(resFeatures.get("productFeatures"));
    boolean variantFound=true;
    for (    GenericValue oneFeature : features) {
      if (selectedFeatures.containsKey(oneFeature.getString("productFeatureTypeId"))) {
        if (!selectedFeatures.containsValue(oneFeature.getString("productFeatureId"))) {
          variantFound=false;
          break;
        }
      }
    }
    if (variantFound) {
      try {
        products.add(delegator.findByPrimaryKey("Product",UtilMisc.toMap("productId",oneVariant.getString("productIdTo"))));
      }
 catch (      GenericEntityException e) {
        Map<String,String> messageMap=UtilMisc.toMap("errProductFeatures",e.toString());
        String errMsg=UtilProperties.getMessage(resource,"productservices.problem_reading_product_features_errors",messageMap,locale);
        Debug.logError(e,errMsg,module);
        return ServiceUtil.returnError(errMsg);
      }
    }
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  result.put("products",products);
  return result;
}
