{
  GenericDelegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String productId=(String)context.get("productId");
  Map selectedFeatures=(Map)context.get("selectedFeatures");
  ArrayList products=new ArrayList();
  Map resVariants=prodFindAllVariants(dctx,context);
  List variants=(List)resVariants.get("assocProducts");
  GenericValue oneVariant=null;
  Iterator variantsIt=variants.iterator();
  while (variantsIt.hasNext()) {
    oneVariant=(GenericValue)variantsIt.next();
    Map feaContext=new HashMap();
    feaContext.put("productId",oneVariant.get("productIdTo"));
    feaContext.put("type","STANDARD_FEATURE");
    Map resFeatures=prodGetFeatures(dctx,feaContext);
    List features=(List)resFeatures.get("productFeatures");
    Iterator featuresIt=features.iterator();
    GenericValue oneFeature=null;
    boolean variantFound=true;
    while (featuresIt.hasNext()) {
      oneFeature=(GenericValue)featuresIt.next();
      if (selectedFeatures.containsKey(oneFeature.getString("productFeatureTypeId"))) {
        if (!selectedFeatures.containsValue(oneFeature.getString("productFeatureId"))) {
          variantFound=false;
          break;
        }
      }
    }
    if (variantFound) {
      try {
        products.add(delegator.findByPrimaryKey("Product",UtilMisc.toMap("productId",oneVariant.getString("productIdTo"))));
      }
 catch (      GenericEntityException e) {
        Map messageMap=UtilMisc.toMap("errProductFeatures",e.toString());
        String errMsg=UtilProperties.getMessage(resource,"productservices.problem_reading_product_features_errors",messageMap,locale);
        Debug.logError(e,errMsg,module);
        return ServiceUtil.returnError(errMsg);
      }
    }
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("products",products);
  return result;
}
