{
  if (UtilValidate.isEmpty(country)) {
    country=UtilProperties.getPropertyValue("general.properties","country.geo.id.default");
  }
  EntityCondition stateProvinceFindCond=EntityCondition.makeCondition(EntityCondition.makeCondition("geoIdFrom",country),EntityCondition.makeCondition("geoAssocTypeId","REGIONS"),EntityCondition.makeCondition(EntityOperator.OR,EntityCondition.makeCondition("geoTypeId","STATE"),EntityCondition.makeCondition("geoTypeId","PROVINCE"),EntityCondition.makeCondition("geoTypeId","COUNTY")));
  List<String> sortList=UtilMisc.toList("geoId");
  List<GenericValue> geoList=FastList.newInstance();
  try {
    geoList=delegator.findList("GeoAssocAndGeoTo",stateProvinceFindCond,null,sortList,null,true);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot lookup Geo",module);
  }
  return geoList;
}
