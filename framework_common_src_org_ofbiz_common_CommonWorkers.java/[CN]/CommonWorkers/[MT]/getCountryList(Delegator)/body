{
  List<GenericValue> geoList=FastList.newInstance();
  String defaultCountry=UtilProperties.getPropertyValue("general.properties","country.geo.id.default");
  GenericValue defaultGeo=null;
  if (defaultCountry != null && defaultCountry.length() > 0) {
    try {
      defaultGeo=delegator.findOne("Geo",UtilMisc.toMap("geoId",defaultCountry),true);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Cannot lookup Geo",module);
    }
  }
  List<String> countriesList=FastList.newInstance();
  List<String> countriesAvailable=StringUtil.split(UtilProperties.getPropertyValue("general.properties","countries.geo.id.available"),",");
  if (countriesAvailable != null) {
    for (    String country : countriesAvailable) {
      GenericValue geoCountry=null;
      try {
        geoCountry=delegator.findOne("Geo",UtilMisc.toMap("geoId",country.trim()),true);
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"The country specified into countries.geo.id.available does not exists in Geo",module);
      }
      if (geoCountry != null) {
        countriesList.add(country);
      }
    }
  }
  try {
    List<EntityExpr> exprs=UtilMisc.toList(EntityCondition.makeCondition("geoTypeId",EntityOperator.EQUALS,"COUNTRY"));
    if (UtilValidate.isNotEmpty(countriesList)) {
      exprs.add(EntityCondition.makeCondition("geoId",EntityOperator.IN,countriesList));
    }
    List<GenericValue> countryGeoList=delegator.findList("Geo",EntityCondition.makeCondition(exprs),null,UtilMisc.toList("geoName"),null,true);
    if (defaultGeo != null) {
      geoList.add(defaultGeo);
      int idx=0;
      for (      GenericValue geo : countryGeoList) {
        if (geo.get("geoId") != null && defaultGeo.get("geoId") != null && geo.get("geoId").equals(defaultGeo.get("geoId"))) {
          countryGeoList.remove(idx);
        }
        idx+=1;
      }
      geoList.addAll(countryGeoList);
    }
 else {
      geoList=countryGeoList;
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot lookup Geo",module);
  }
  return geoList;
}
