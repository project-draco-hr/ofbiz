{
  if (country == null || country.length() == 0) {
    country=UtilProperties.getPropertyValue("general.properties","country.geo.id.default");
  }
  EntityCondition stateProvinceFindCond=new EntityConditionList(UtilMisc.toList(new EntityExpr("geoIdFrom",EntityOperator.EQUALS,country),new EntityExpr("geoAssocTypeId",EntityOperator.EQUALS,"REGIONS"),new EntityConditionList(UtilMisc.toList(new EntityExpr("geoTypeId",EntityOperator.EQUALS,"STATE"),new EntityExpr("geoTypeId",EntityOperator.EQUALS,"PROVINCE")),EntityOperator.OR)),EntityOperator.AND);
  List<String> sortList=UtilMisc.toList("geoId");
  List geoList=FastList.newInstance();
  try {
    geoList=delegator.findList("GeoAssocAndGeoTo",stateProvinceFindCond,null,sortList,null,true);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot lookup Geo",module);
  }
  return geoList;
}
