{
  if (UtilValidate.isEmpty(country)) {
    country=UtilProperties.getPropertyValue("general.properties","country.geo.id.default");
  }
  if (UtilValidate.isEmpty(listOrderBy)) {
    listOrderBy="geoId";
  }
  List<String> sortList=UtilMisc.toList(listOrderBy);
  List<GenericValue> geoList=FastList.newInstance();
  try {
    EntityCondition stateRegionFindCond=EntityCondition.makeCondition(EntityCondition.makeCondition("geoIdFrom",country),EntityCondition.makeCondition("geoAssocTypeId","GROUP_MEMBER"),EntityCondition.makeCondition("geoTypeId","GROUP"));
    List<GenericValue> regionList=delegator.findList("GeoAssocAndGeoToWithState",stateRegionFindCond,null,sortList,null,true);
    if (regionList.size() == 1) {
      for (      GenericValue region : regionList) {
        List<GenericValue> tmpState=delegator.findList("GeoAssocAndGeoTo",EntityCondition.makeCondition("geoId",region.getString("geoIdFrom")),null,sortList,null,true);
        for (        GenericValue state : tmpState) {
          geoList.addAll(getAssociatedStateList(delegator,state.getString("geoIdFrom"),listOrderBy));
        }
      }
    }
    EntityCondition stateProvinceFindCond=EntityCondition.makeCondition(EntityCondition.makeCondition("geoIdFrom",country),EntityCondition.makeCondition("geoAssocTypeId","REGIONS"),EntityCondition.makeCondition(EntityOperator.OR,EntityCondition.makeCondition("geoTypeId","STATE"),EntityCondition.makeCondition("geoTypeId","PROVINCE"),EntityCondition.makeCondition("geoTypeId","MUNICIPALITY"),EntityCondition.makeCondition("geoTypeId","COUNTY")));
    geoList.addAll(delegator.findList("GeoAssocAndGeoToWithState",stateProvinceFindCond,null,sortList,null,true));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot lookup Geo",module);
  }
  return geoList;
}
