{
  List<GenericValue> productPromoCategoriesAll=delegator.findByAnd("ProductPromoCategory",UtilMisc.toMap("productPromoId",productPromoAction.get("productPromoId")),null,true);
  List<GenericValue> productPromoCategories=EntityUtil.filterByAnd(productPromoCategoriesAll,UtilMisc.toMap("productPromoRuleId","_NA_","productPromoActionSeqId","_NA_"));
  productPromoCategories.addAll(EntityUtil.filterByAnd(productPromoCategoriesAll,UtilMisc.toMap("productPromoRuleId",productPromoAction.get("productPromoRuleId"),"productPromoActionSeqId",productPromoAction.get("productPromoActionSeqId"))));
  List<GenericValue> productPromoProductsAll=delegator.findByAnd("ProductPromoProduct",UtilMisc.toMap("productPromoId",productPromoAction.get("productPromoId")),null,true);
  List<GenericValue> productPromoProducts=EntityUtil.filterByAnd(productPromoProductsAll,UtilMisc.toMap("productPromoRuleId","_NA_","productPromoActionSeqId","_NA_"));
  productPromoProducts.addAll(EntityUtil.filterByAnd(productPromoProductsAll,UtilMisc.toMap("productPromoRuleId",productPromoAction.get("productPromoRuleId"),"productPromoActionSeqId",productPromoAction.get("productPromoActionSeqId"))));
  Set<String> productIds=FastSet.newInstance();
  makeProductPromoIdSet(productIds,productPromoCategories,productPromoProducts,delegator,nowTimestamp,false);
  return productIds;
}
