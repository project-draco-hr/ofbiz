{
  boolean include=!"PPPA_EXCLUDE".equals(productPromoApplEnumId);
  Set productCategoryIds=new HashSet();
  Map productCategoryGroupSetListMap=new HashMap();
  Iterator productPromoCategoryIter=productPromoCategories.iterator();
  while (productPromoCategoryIter.hasNext()) {
    GenericValue productPromoCategory=(GenericValue)productPromoCategoryIter.next();
    if (productPromoApplEnumId.equals(productPromoCategory.getString("productPromoApplEnumId"))) {
      Set tempCatIdSet=new HashSet();
      if ("Y".equals(productPromoCategory.getString("includeSubCategories"))) {
        ProductSearch.getAllSubCategoryIds(productPromoCategory.getString("productCategoryId"),tempCatIdSet,delegator,nowTimestamp);
      }
 else {
        tempCatIdSet.add(productPromoCategory.getString("productCategoryId"));
      }
      String andGroupId=productPromoCategory.getString("andGroupId");
      if ("_NA_".equals(andGroupId)) {
        productCategoryIds.addAll(tempCatIdSet);
      }
 else {
        List catIdSetList=(List)productCategoryGroupSetListMap.get(andGroupId);
        if (catIdSetList == null) {
          catIdSetList=FastList.newInstance();
        }
        catIdSetList.add(tempCatIdSet);
      }
    }
  }
  Iterator pcgslmeIter=productCategoryGroupSetListMap.entrySet().iterator();
  while (pcgslmeIter.hasNext()) {
    Map.Entry entry=(Map.Entry)pcgslmeIter.next();
    List catIdSetList=(List)entry.getValue();
    if (catIdSetList.size() == 0) {
      pcgslmeIter.remove();
    }
 else     if (catIdSetList.size() == 1) {
      Set catIdSet=(Set)catIdSetList.iterator().next();
      if (catIdSet.size() == 0) {
        pcgslmeIter.remove();
      }
 else {
        productCategoryIds.addAll(catIdSet);
        pcgslmeIter.remove();
      }
    }
  }
  getAllProductIds(productCategoryIds,productIds,delegator,nowTimestamp,include);
  Iterator pcgslmIter=productCategoryGroupSetListMap.entrySet().iterator();
  while (pcgslmIter.hasNext()) {
    Map.Entry entry=(Map.Entry)pcgslmIter.next();
    List catIdSetList=(List)entry.getValue();
    List productIdSetList=FastList.newInstance();
    Iterator cidslIter=catIdSetList.iterator();
    while (cidslIter.hasNext()) {
      Set catIdSet=(Set)cidslIter.next();
      Set groupProductIdSet=new HashSet();
      getAllProductIds(catIdSet,groupProductIdSet,delegator,nowTimestamp,true);
      productIdSetList.add(groupProductIdSet);
    }
    Set firstProductIdSet=(Set)productIdSetList.remove(0);
    Iterator productIdSetIter=productIdSetList.iterator();
    while (productIdSetIter.hasNext()) {
      Set productIdSet=(Set)productIdSetIter.next();
      firstProductIdSet.retainAll(productIdSet);
    }
    if (firstProductIdSet.size() >= 0) {
      if (include) {
        productIds.addAll(firstProductIdSet);
      }
 else {
        productIds.removeAll(firstProductIdSet);
      }
    }
  }
}
