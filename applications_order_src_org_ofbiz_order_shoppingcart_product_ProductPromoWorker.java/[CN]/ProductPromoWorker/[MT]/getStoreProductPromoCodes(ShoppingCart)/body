{
  Set<String> promoCodes=FastSet.newInstance();
  Delegator delegator=cart.getDelegator();
  String productStoreId=cart.getProductStoreId();
  GenericValue productStore=null;
  try {
    productStore=delegator.findOne("ProductStore",UtilMisc.toMap("productStoreId",productStoreId),true);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error looking up store with id " + productStoreId,module);
  }
  if (productStore == null) {
    Debug.logWarning(UtilProperties.getMessage(resource_error,"OrderNoStoreFoundWithIdNotDoingPromotions",UtilMisc.toMap("productStoreId",productStoreId),cart.getLocale()),module);
    return promoCodes;
  }
  try {
    Iterator<GenericValue> productStorePromoAppls=UtilMisc.toIterator(EntityUtil.filterByDate(productStore.getRelated("ProductStorePromoAppl",UtilMisc.toMap("productStoreId",productStoreId),UtilMisc.toList("sequenceNum"),true),true));
    while (productStorePromoAppls != null && productStorePromoAppls.hasNext()) {
      GenericValue productStorePromoAppl=productStorePromoAppls.next();
      if (UtilValidate.isNotEmpty(productStorePromoAppl.getString("manualOnly")) && "Y".equals(productStorePromoAppl.getString("manualOnly"))) {
        if (Debug.verboseOn())         Debug.logVerbose("Skipping promotion with id [" + productStorePromoAppl.getString("productPromoId") + "] because it is applied to the store with ID "+ productStoreId+ " as a manual only promotion.",module);
        continue;
      }
      GenericValue productPromo=productStorePromoAppl.getRelatedOne("ProductPromo",true);
      Iterator<GenericValue> productPromoCodesIter=UtilMisc.toIterator(productPromo.getRelated("ProductPromoCode",null,null,true));
      while (productPromoCodesIter != null && productPromoCodesIter.hasNext()) {
        GenericValue productPromoCode=productPromoCodesIter.next();
        promoCodes.add(productPromoCode.getString("productPromoCodeId"));
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  return promoCodes;
}
