{
  if (nowTimestamp == null) {
    nowTimestamp=UtilDateTime.nowTimestamp();
  }
  List<GenericValue> productPromoCategoriesAll=EntityQuery.use(delegator).from("ProductPromoCategory").where("productPromoId",productPromoId).cache(true).queryList();
  List<GenericValue> productPromoProductsAll=EntityQuery.use(delegator).from("ProductPromoProduct").where("productPromoId",productPromoId).cache(true).queryList();
  List<GenericValue> productPromoProductsCond=FastList.newInstance();
  List<GenericValue> productPromoCategoriesCond=FastList.newInstance();
  List<GenericValue> productPromoProductsAction=FastList.newInstance();
  List<GenericValue> productPromoCategoriesAction=FastList.newInstance();
  for (  GenericValue productPromoProduct : productPromoProductsAll) {
    if (!"_NA_".equals(productPromoProduct.getString("productPromoCondSeqId")) || "_NA_".equals(productPromoProduct.getString("productPromoRuleId"))) {
      productPromoProductsCond.add(productPromoProduct);
    }
    if (!"_NA_".equals(productPromoProduct.getString("productPromoActionSeqId")) || "_NA_".equals(productPromoProduct.getString("productPromoRuleId"))) {
      productPromoProductsAction.add(productPromoProduct);
    }
  }
  for (  GenericValue productPromoCategory : productPromoCategoriesAll) {
    if (!"_NA_".equals(productPromoCategory.getString("productPromoCondSeqId")) || "_NA_".equals(productPromoCategory.getString("productPromoRuleId"))) {
      productPromoCategoriesCond.add(productPromoCategory);
    }
    if (!"_NA_".equals(productPromoCategory.getString("productPromoActionSeqId")) || "_NA_".equals(productPromoCategory.getString("productPromoRuleId"))) {
      productPromoCategoriesAction.add(productPromoCategory);
    }
  }
  makeProductPromoIdSet(productIdsCond,productPromoCategoriesCond,productPromoProductsCond,delegator,nowTimestamp,filterOldProducts);
  makeProductPromoIdSet(productIdsAction,productPromoCategoriesAction,productPromoProductsAction,delegator,nowTimestamp,filterOldProducts);
  if (filterOldProducts) {
    Iterator<String> productIdsCondIter=productIdsCond.iterator();
    while (productIdsCondIter.hasNext()) {
      String productId=productIdsCondIter.next();
      if (isProductOld(productId,delegator,nowTimestamp)) {
        productIdsCondIter.remove();
      }
    }
    Iterator<String> productIdsActionIter=productIdsAction.iterator();
    while (productIdsActionIter.hasNext()) {
      String productId=productIdsActionIter.next();
      if (isProductOld(productId,delegator,nowTimestamp)) {
        productIdsActionIter.remove();
      }
    }
  }
}
