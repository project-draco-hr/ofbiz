{
  if (productPromo == null) {
    return "";
  }
  StringBuilder promoDescBuf=new StringBuilder();
  List<GenericValue> productPromoRules=productPromo.getRelated("ProductPromoRule",null,null,true);
  Iterator<GenericValue> promoRulesIter=productPromoRules.iterator();
  while (promoRulesIter != null && promoRulesIter.hasNext()) {
    GenericValue productPromoRule=promoRulesIter.next();
    List<GenericValue> productPromoConds=EntityQuery.use(delegator).from("ProductPromoCond").where("productPromoId",productPromo.get("productPromoId")).orderBy("productPromoCondSeqId").cache(true).queryList();
    productPromoConds=EntityUtil.filterByAnd(productPromoConds,UtilMisc.toMap("productPromoRuleId",productPromoRule.get("productPromoRuleId")));
    Iterator<GenericValue> productPromoCondIter=UtilMisc.toIterator(productPromoConds);
    while (productPromoCondIter != null && productPromoCondIter.hasNext()) {
      GenericValue productPromoCond=productPromoCondIter.next();
      String equalityOperator=UtilProperties.getMessage("promotext","operator.equality." + productPromoCond.getString("operatorEnumId"),locale);
      String quantityOperator=UtilProperties.getMessage("promotext","operator.quantity." + productPromoCond.getString("operatorEnumId"),locale);
      String condValue="invalid";
      if (UtilValidate.isNotEmpty(productPromoCond.getString("condValue"))) {
        condValue=productPromoCond.getString("condValue");
      }
      Map<String,Object> messageContext=UtilMisc.<String,Object>toMap("condValue",condValue,"equalityOperator",equalityOperator,"quantityOperator",quantityOperator);
      String msgProp=UtilProperties.getMessage("promotext","condition." + productPromoCond.getString("inputParamEnumId"),messageContext,locale);
      promoDescBuf.append(msgProp);
      promoDescBuf.append(" ");
      if (promoRulesIter.hasNext()) {
        promoDescBuf.append(" and ");
      }
    }
    List<GenericValue> productPromoActions=productPromoRule.getRelated("ProductPromoAction",null,UtilMisc.toList("productPromoActionSeqId"),true);
    Iterator<GenericValue> productPromoActionIter=UtilMisc.toIterator(productPromoActions);
    while (productPromoActionIter != null && productPromoActionIter.hasNext()) {
      GenericValue productPromoAction=productPromoActionIter.next();
      String productId=productPromoAction.getString("productId");
      Map<String,Object> messageContext=UtilMisc.<String,Object>toMap("quantity",productPromoAction.get("quantity"),"amount",productPromoAction.get("amount"),"productId",productId,"partyId",productPromoAction.get("partyId"));
      if (UtilValidate.isEmpty(messageContext.get("productId")))       messageContext.put("productId","any");
      if (UtilValidate.isEmpty(messageContext.get("partyId")))       messageContext.put("partyId","any");
      GenericValue product=EntityQuery.use(delegator).from("Product").where("productId",productId).cache().queryOne();
      if (product != null) {
        messageContext.put("productName",ProductContentWrapper.getProductContentAsText(product,"PRODUCT_NAME",locale,null,"html"));
      }
      String msgProp=UtilProperties.getMessage("promotext","action." + productPromoAction.getString("productPromoActionEnumId"),messageContext,locale);
      promoDescBuf.append(msgProp);
      promoDescBuf.append(" ");
      if (promoRulesIter.hasNext()) {
        promoDescBuf.append(" and ");
      }
    }
    if (promoRulesIter.hasNext()) {
      promoDescBuf.append(" or ");
    }
  }
  if (promoDescBuf.length() > 0) {
    if (promoDescBuf.charAt(promoDescBuf.length() - 1) == ' ')     promoDescBuf.deleteCharAt(promoDescBuf.length() - 1);
    promoDescBuf.append(". ");
    promoDescBuf.setCharAt(0,Character.toUpperCase(promoDescBuf.charAt(0)));
  }
  if ("Y".equals(productPromo.getString("requireCode"))) {
    promoDescBuf.append(UtilProperties.getMessage(resource,"OrderRequiresCodeToUse",locale));
  }
  if (productPromo.getLong("useLimitPerOrder") != null) {
    promoDescBuf.append(UtilProperties.getMessage(resource,"OrderLimitPerOrder",UtilMisc.toMap("limit",productPromo.getLong("useLimitPerOrder")),locale));
  }
  if (productPromo.getLong("useLimitPerCustomer") != null) {
    promoDescBuf.append(UtilProperties.getMessage(resource,"OrderLimitPerCustomer",UtilMisc.toMap("limit",productPromo.getLong("useLimitPerCustomer")),locale));
  }
  if (productPromo.getLong("useLimitPerPromotion") != null) {
    promoDescBuf.append(UtilProperties.getMessage(resource,"OrderLimitPerPromotion",UtilMisc.toMap("limit",productPromo.getLong("useLimitPerPromotion")),locale));
  }
  return promoDescBuf.toString();
}
