{
  super(element,simpleMethod);
  this.field=new ContextAccessor<Object>(element.getAttribute("field"));
  String fromFieldStr=element.getAttribute("from-field");
  if (fromFieldStr != null && fromFieldStr.startsWith("groovy:")) {
    this.parsedGroovyScript=GroovyUtil.parseClass(fromFieldStr.replace("groovy:",""));
  }
  this.fromField=new ContextAccessor<Object>(fromFieldStr);
  this.valueExdr=FlexibleStringExpander.getInstance(element.getAttribute("value"));
  this.defaultExdr=FlexibleStringExpander.getInstance(element.getAttribute("default-value"));
  this.type=element.getAttribute("type");
  this.setIfNull="true".equals(element.getAttribute("set-if-null"));
  this.setIfEmpty=!"false".equals(element.getAttribute("set-if-empty"));
  if (!this.fromField.isEmpty() && !this.valueExdr.isEmpty()) {
    throw new IllegalArgumentException("Cannot specify a from-field [" + element.getAttribute("from-field") + "] and a value ["+ element.getAttribute("value")+ "] on the set action in a screen widget");
  }
}
