{
  String tempTitleText=modelFormField.getTitle(context);
  String titleText=UtilHttp.encodeAmpersands(tempTitleText);
  if (UtilValidate.isNotEmpty(titleText)) {
    String displayHelpText=UtilProperties.getPropertyValue("widget.properties","widget.form.displayhelpText");
    String helpText=null;
    if ("Y".equals(displayHelpText)) {
      Delegator delegator=WidgetWorker.getDelegator(context);
      Locale locale=(Locale)context.get("locale");
      String entityName=modelFormField.getEntityName();
      String fieldName=modelFormField.getFieldName();
      helpText=UtilHelpText.getEntityFieldDescription(entityName,fieldName,delegator,locale);
    }
    if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle()) || UtilValidate.isNotEmpty(helpText)) {
      writer.append("<span");
      if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
        writer.append(" class=\"");
        writer.append(modelFormField.getTitleStyle());
      }
      if (UtilValidate.isNotEmpty(helpText)) {
        writer.append(" title=\"");
        writer.append(FreeMarkerWorker.encodeDoubleQuotes(helpText));
      }
      writer.append("\">");
    }
    if (" ".equals(titleText)) {
      this.renderFormatEmptySpace(writer,context,modelFormField.getModelForm());
    }
 else {
      renderHyperlinkTitle(writer,context,modelFormField,titleText);
    }
    if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
      writer.append("</span>");
    }
  }
}
