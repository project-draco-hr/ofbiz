{
  GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
  HttpSession session=request.getSession();
  GenericValue currentUserLogin=(GenericValue)session.getAttribute("userLogin");
  if (currentUserLogin != null) {
    String hasLoggedOut=currentUserLogin.getString("hasLoggedOut");
    if (hasLoggedOut != null && "Y".equals(hasLoggedOut)) {
      currentUserLogin=null;
    }
  }
  if (currentUserLogin == null) {
    X509Certificate[] clientCerts=(X509Certificate[])request.getAttribute("javax.servlet.request.X509Certificate");
    if (clientCerts == null) {
      clientCerts=(X509Certificate[])request.getAttribute("javax.net.ssl.peer_certificates");
    }
    if (clientCerts != null) {
      String userLoginId=null;
      for (int i=0; i < clientCerts.length; i++) {
        X500Principal x500=clientCerts[i].getSubjectX500Principal();
        Debug.log("Checking client certification for authentication: " + x500.getName(),module);
        Map x500Map=FastMap.newInstance();
        String[] x500Opts=x500.getName().split("\\,");
        for (int x=0; x < x500Opts.length; x++) {
          String[] nv=x500Opts[x].split("\\=");
          x500Map.put(nv[0],nv[1]);
        }
        if (i == 0) {
          userLoginId=(String)x500Map.get("CN");
        }
        try {
          if (LoginWorker.checkValidIssuer(delegator,x500Map)) {
            Debug.log("Looking up userLogin from CN: " + userLoginId,module);
            GenericValue userLogin=delegator.findByPrimaryKey("UserLogin",UtilMisc.toMap("userLoginId",userLoginId));
            if (userLogin != null) {
              String enabled=userLogin.getString("enabled");
              if (enabled == null || "Y".equals(enabled)) {
                userLogin.set("hasLoggedOut","N");
                userLogin.store();
                Map ulSessionMap=LoginServices.getUserLoginSession(userLogin);
                return doMainLogin(request,response,userLogin,ulSessionMap);
              }
            }
          }
        }
 catch (        GeneralException e) {
          Debug.logError(e,module);
        }
      }
    }
  }
  return "success";
}
