{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.attributeNames(simpleMethod,element,"entity-name","use-cache","fields-to-select-list","use-iterator","list","map","order-by-list","delegator-name");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"entity-name","list","map");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"list","map","fields-to-select-list","order-by-list","delegator-name");
    MiniLangValidate.noChildElements(simpleMethod,element);
  }
  entityNameFse=FlexibleStringExpander.getInstance(element.getAttribute("entity-name"));
  listFma=FlexibleMapAccessor.getInstance(element.getAttribute("list"));
  mapFma=FlexibleMapAccessor.getInstance(element.getAttribute("map"));
  orderByListFma=FlexibleMapAccessor.getInstance(element.getAttribute("order-by-list"));
  fieldsToSelectListFma=FlexibleMapAccessor.getInstance(element.getAttribute("fields-to-select-list"));
  useCacheFse=FlexibleStringExpander.getInstance(element.getAttribute("use-cache"));
  useIteratorFse=FlexibleStringExpander.getInstance(element.getAttribute("use-iterator"));
}
