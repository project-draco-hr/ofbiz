{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=delegator.findOne("UserLogin",false,"userLoginId","system");
  if (UtilValidate.isEmpty(context.get("productStoreId")) && UtilValidate.isEmpty(context.get("jobId"))) {
    return ServiceUtil.returnFailure("Required productStoreId for get api context to connect with ebay site.");
  }
  String jobId=(String)context.get("jobId");
  String productStoreId=(String)context.get("productStoreId");
  String isAutoSendEmail="N";
  String isAlsoSendCopyToSeller="N";
  GenericValue ebayProductStorePref=null;
  List<String> list=FastList.newInstance();
  try {
    ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
    ebayProductStorePref=delegator.findByPrimaryKey("EbayProductStorePref",UtilMisc.toMap("productStoreId",productStoreId,"autoPrefEnumId","EBAY_AUTO_FB_RMD"));
    if (UtilValidate.isNotEmpty(ebayProductStorePref) && UtilValidate.isNotEmpty(ebayProductStorePref.getString("autoPrefJobId"))) {
      isAutoSendEmail=ebayProductStorePref.getString("enabled");
      if ("Y".equals(isAutoSendEmail) && jobId.equals(ebayProductStorePref.getString("autoPrefJobId"))) {
        isAlsoSendCopyToSeller=ebayProductStorePref.getString("condition1");
        GetSellingManagerSoldListingsCall sellingManagerSoldListings=new GetSellingManagerSoldListingsCall(apiContext);
        List<SellingManagerSoldOrderType> items=FastList.newInstance();
        SellingManagerSoldOrderType[] sellingManagerSoldOrders=sellingManagerSoldListings.getSellingManagerSoldListings();
        if (UtilValidate.isNotEmpty(sellingManagerSoldOrders)) {
          for (          SellingManagerSoldOrderType solditem : sellingManagerSoldOrders) {
            SellingManagerOrderStatusType orderStatus=solditem.getOrderStatus();
            if (orderStatus != null) {
              SellingManagerPaidStatusCodeType paidStatus=orderStatus.getPaidStatus();
              if (SellingManagerPaidStatusCodeType.PAID.equals(paidStatus)) {
                items.add(solditem);
              }
            }
          }
          GetUserCall getUserCall=new GetUserCall(apiContext);
          String sellerUser=getUserCall.getUser().getUserID();
          for (          SellingManagerSoldOrderType item : items) {
            SellingManagerSoldTransactionType[] soldTrans=item.getSellingManagerSoldTransaction();
            if (UtilValidate.isNotEmpty(soldTrans)) {
              for (              SellingManagerSoldTransactionType soldTran : soldTrans) {
              }
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    return ServiceUtil.returnFailure("Problems to connect with ebay site message:" + e);
  }
  return ServiceUtil.returnSuccess();
}
