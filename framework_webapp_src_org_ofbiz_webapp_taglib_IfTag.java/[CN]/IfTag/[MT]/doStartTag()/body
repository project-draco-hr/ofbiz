{
  Object object=null;
  try {
    object=pageContext.findAttribute(name);
    if (object == null) {
      object=pageContext.getRequest().getParameter(name);
    }
    if (object == null) {
      return SKIP_BODY;
    }
  }
 catch (  RuntimeException e) {
    Debug.logError(e,module);
    return SKIP_BODY;
  }
  if (size != null) {
    int localSize=size.intValue();
    try {
      if (object instanceof Collection<?>) {
        if (((Collection<?>)object).size() > localSize)         return EVAL_BODY_AGAIN;
      }
 else       if (object instanceof String) {
        if (((String)object).length() > localSize)         return EVAL_BODY_AGAIN;
      }
 else {
        try {
          Method sizeMethod=object.getClass().getMethod("size",(Class[])null);
          int objectSize=((Integer)sizeMethod.invoke(object,(Object[])null)).intValue();
          if (objectSize > localSize)           return EVAL_BODY_AGAIN;
        }
 catch (        Exception e) {
          Debug.logError(e,module);
          return SKIP_BODY;
        }
      }
    }
 catch (    RuntimeException e) {
      Debug.logError(e,module);
      return SKIP_BODY;
    }
  }
 else   if (object instanceof Boolean || "Boolean".equalsIgnoreCase(type)) {
    try {
      Boolean b=(Boolean)object;
      if (value != null) {
        Boolean v=Boolean.valueOf(value);
        if (b.equals(v))         return EVAL_BODY_AGAIN;
      }
 else {
        if (b.booleanValue())         return EVAL_BODY_AGAIN;
      }
    }
 catch (    RuntimeException e) {
      Debug.logError(e,module);
      return SKIP_BODY;
    }
  }
 else   if (value != null) {
    if (object instanceof String || "String".equalsIgnoreCase(type)) {
      try {
        String s=(String)object;
        if (s.equals(value))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
 else     if (object instanceof Integer || "Integer".equalsIgnoreCase(type)) {
      try {
        Integer i=(Integer)object;
        Integer v=Integer.valueOf(value);
        if (i.equals(v))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
 else     if (object instanceof Long || "Long".equalsIgnoreCase(type)) {
      try {
        Long i=(Long)object;
        Long v=Long.valueOf(value);
        if (i.equals(v))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
 else     if (object instanceof Float || "Float".equalsIgnoreCase(type)) {
      try {
        Float d=(Float)object;
        Float v=Float.valueOf(value);
        if (d.equals(v))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
 else     if (object instanceof Double || "Double".equalsIgnoreCase(type)) {
      try {
        Double d=(Double)object;
        Double v=Double.valueOf(value);
        if (d.equals(v))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
 else {
      Object valueObject=null;
      try {
        valueObject=pageContext.findAttribute(value);
        if (valueObject != null && valueObject.equals(object))         return EVAL_BODY_AGAIN;
      }
 catch (      RuntimeException e) {
        Debug.logError(e,module);
        return SKIP_BODY;
      }
    }
  }
 else {
    return EVAL_BODY_AGAIN;
  }
  return SKIP_BODY;
}
