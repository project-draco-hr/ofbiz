{
  Delegator delegator=dctx.getDelegator();
  Timestamp nowTimestamp=UtilDateTime.nowTimestamp();
  Locale locale=(Locale)context.get("locale");
  String errMsg=null;
  try {
    EntityCondition condition=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("salesDiscontinuationDate",EntityOperator.NOT_EQUAL,null),EntityCondition.makeCondition("salesDiscontinuationDate",EntityOperator.LESS_THAN_EQUAL_TO,nowTimestamp)),EntityOperator.AND);
    EntityListIterator eli=delegator.find("Product",condition,null,null,null,null);
    GenericValue product=null;
    int numSoFar=0;
    while ((product=eli.next()) != null) {
      String productId=product.getString("productId");
      List<GenericValue> productCategoryMemberList=delegator.findByAnd("ProductCategoryMember",UtilMisc.toMap("productId",productId),null,false);
      if (productCategoryMemberList.size() > 0) {
        for (        GenericValue productCategoryMember : productCategoryMemberList) {
          productCategoryMember.remove();
        }
        numSoFar++;
        if (numSoFar % 500 == 0) {
          Debug.logInfo("Removed category members for " + numSoFar + " sales discontinued products.",module);
        }
      }
    }
    eli.close();
    Debug.logInfo("Completed - Removed category members for " + numSoFar + " sales discontinued products.",module);
  }
 catch (  GenericEntityException e) {
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.toString());
    errMsg=UtilProperties.getMessage(resourceError,"productutilservices.entity_error_running_removeCategoryMembersOfDiscProducts",messageMap,locale);
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
  return ServiceUtil.returnSuccess();
}
