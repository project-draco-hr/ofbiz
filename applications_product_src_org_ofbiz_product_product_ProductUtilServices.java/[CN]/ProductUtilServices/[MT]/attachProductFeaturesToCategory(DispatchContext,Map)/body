{
  GenericDelegator delegator=dctx.getDelegator();
  String productCategoryId=(String)context.get("productCategoryId");
  String doSubCategoriesStr=(String)context.get("doSubCategories");
  Locale locale=(Locale)context.get("locale");
  String errMsg=null;
  boolean doSubCategories=!"N".equals(doSubCategoriesStr);
  Timestamp nowTimestamp=UtilDateTime.nowTimestamp();
  Set productFeatureTypeIdsToExclude=FastSet.newInstance();
  String excludeProp=UtilProperties.getPropertyValue("prodsearch","attach.feature.type.exclude");
  if (UtilValidate.isNotEmpty(excludeProp)) {
    List typeList=StringUtil.split(excludeProp,",");
    productFeatureTypeIdsToExclude.addAll(typeList);
  }
  Set productFeatureTypeIdsToInclude=null;
  String includeProp=UtilProperties.getPropertyValue("prodsearch","attach.feature.type.include");
  if (UtilValidate.isNotEmpty(includeProp)) {
    List typeList=StringUtil.split(includeProp,",");
    if (typeList.size() > 0) {
      productFeatureTypeIdsToInclude=UtilMisc.makeSetWritable(typeList);
    }
  }
  try {
    attachProductFeaturesToCategory(productCategoryId,productFeatureTypeIdsToInclude,productFeatureTypeIdsToExclude,delegator,doSubCategories,nowTimestamp);
  }
 catch (  GenericEntityException e) {
    Map messageMap=UtilMisc.toMap("errMessage",e.toString());
    errMsg=UtilProperties.getMessage(resource,"productutilservices.error_in_attachProductFeaturesToCategory",messageMap,locale);
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
  return ServiceUtil.returnSuccess();
}
