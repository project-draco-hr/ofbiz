{
  List relatedList=EntityUtil.filterByDate(product.getRelated(title + relatedEntityName),nowTimestamp);
  Iterator relatedIter=relatedList.iterator();
  while (relatedIter.hasNext()) {
    GenericValue relatedValue=(GenericValue)relatedIter.next();
    GenericValue newRelatedValue=(GenericValue)relatedValue.clone();
    newRelatedValue.set(productIdField,variantProductId);
    ModelEntity modelEntity=relatedValue.getModelEntity();
    if (modelEntity.isField("fromDate")) {
      GenericPK findValue=newRelatedValue.getPrimaryKey();
      findValue.remove("fromDate");
      List existingValueList=EntityUtil.filterByDate(delegator.findByAnd(relatedEntityName,findValue),nowTimestamp);
      if (existingValueList.size() > 0) {
        if (test) {
          Debug.logInfo("Found " + existingValueList.size() + " existing values for related entity name: "+ relatedEntityName+ ", not copying, findValue is: "+ findValue,module);
        }
        continue;
      }
      newRelatedValue.set("fromDate",nowTimestamp);
    }
    if (delegator.findCountByAnd(relatedEntityName,newRelatedValue.getPrimaryKey()) == 0) {
      if (test) {
        Debug.logInfo("Test mode, would create: " + newRelatedValue,module);
      }
 else {
        newRelatedValue.create();
      }
    }
  }
  if (removeOld) {
    if (test) {
      Debug.logInfo("Test mode, would remove related " + title + relatedEntityName+ " with dummy key: "+ product.getRelatedDummyPK(title + relatedEntityName),module);
    }
 else {
      product.removeRelated(title + relatedEntityName);
    }
  }
}
