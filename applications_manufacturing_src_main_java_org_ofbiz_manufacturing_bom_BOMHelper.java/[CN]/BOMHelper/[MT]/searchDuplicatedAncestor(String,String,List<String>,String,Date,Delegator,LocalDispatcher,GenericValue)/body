{
  if (inDate == null)   inDate=new Date();
  if (productIdKeys == null) {
    BOMTree tree=new BOMTree(productIdKey,bomType,inDate,delegator,dispatcher,userLogin);
    productIdKeys=tree.getAllProductsId();
    productIdKeys.add(productIdKey);
  }
  List<GenericValue> productNodesList=EntityQuery.use(delegator).from("ProductAssoc").where("productIdTo",productId,"productAssocTypeId",bomType).cache().filterByDate(inDate).queryList();
  GenericValue duplicatedNode=null;
  for (  GenericValue oneNode : productNodesList) {
    for (int i=0; i < productIdKeys.size(); i++) {
      if (oneNode.getString("productId").equals(productIdKeys.get(i))) {
        return oneNode;
      }
    }
    duplicatedNode=searchDuplicatedAncestor(oneNode.getString("productId"),productIdKey,productIdKeys,bomType,inDate,delegator,dispatcher,userLogin);
    if (duplicatedNode != null) {
      break;
    }
  }
  return duplicatedNode;
}
