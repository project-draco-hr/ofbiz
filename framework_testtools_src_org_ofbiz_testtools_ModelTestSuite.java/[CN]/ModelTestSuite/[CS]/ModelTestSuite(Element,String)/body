{
  this.suiteName=mainElement.getAttribute("suite-name");
  this.originalDelegatorName=mainElement.getAttribute("delegator-name");
  if (UtilValidate.isEmpty(this.originalDelegatorName))   this.originalDelegatorName="test";
  this.originalDispatcherName=mainElement.getAttribute("dispatcher-name");
  if (UtilValidate.isEmpty(this.originalDispatcherName))   this.originalDispatcherName="test-dispatcher";
  String uniqueSuffix="-" + RandomStringUtils.randomAlphanumeric(10);
  this.delegator=DelegatorFactory.getGenericDelegator(this.originalDelegatorName).makeTestDelegator(this.originalDelegatorName + uniqueSuffix);
  this.dispatcher=GenericDispatcher.getLocalDispatcher(originalDispatcherName + uniqueSuffix,delegator);
  for (  Element testCaseElement : UtilXml.childElementList(mainElement,UtilMisc.toSet("test-case","test-group"))) {
    String caseName=testCaseElement.getAttribute("case-name");
    String nodeName=testCaseElement.getNodeName();
    if (testCase == null || caseName.equals(testCase)) {
      if (nodeName.equals("test-case")) {
        parseTestElement(caseName,UtilXml.firstChildElement(testCaseElement));
      }
 else       if (nodeName.equals("test-group")) {
        int i=0;
        for (        Element childElement : UtilXml.childElementList(testCaseElement)) {
          parseTestElement(caseName + '-' + i,childElement);
          i++;
        }
      }
    }
  }
}
