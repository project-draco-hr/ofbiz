{
  delegator.removeByAnd("TestingCrypto",UtilMisc.toMap("testingCryptoTypeId","BASIC"));
  String nanoTime="" + System.nanoTime();
  delegator.create("TestingCrypto",UtilMisc.toMap("testingCryptoId","1","testingCryptoTypeId","BASIC"));
  GenericValue entity=EntityQuery.use(delegator).from("TestingCrypto").where("testingCryptoId","1").queryOne();
  assertNull(entity.getString("unencryptedValue"));
  assertNull(entity.getString("encryptedValue"));
  assertNull(entity.getString("saltedEncryptedValue"));
  GenericValue view=EntityQuery.use(delegator).from("TestingCryptoRawView").where("testingCryptoId","1").queryOne();
  assertNull(view.getString("unencryptedValue"));
  assertNull(view.getString("encryptedValue"));
  assertNull(view.getString("saltedEncryptedValue"));
  assertNull(view.getString("rawEncryptedValue"));
  assertNull(view.getString("rawSaltedEncryptedValue"));
  entity.setString("unencryptedValue",nanoTime);
  entity.setString("encryptedValue",nanoTime);
  entity.setString("saltedEncryptedValue",nanoTime);
  entity.store();
  view.refresh();
  assertEquals(nanoTime,view.getString("unencryptedValue"));
  assertEquals(nanoTime,view.getString("encryptedValue"));
  assertEquals(nanoTime,view.getString("saltedEncryptedValue"));
  String initialValue=view.getString("rawEncryptedValue");
  String initialSaltedValue=view.getString("rawSaltedEncryptedValue");
  assertFalse(nanoTime.equals(initialValue));
  assertFalse(nanoTime.equals(initialSaltedValue));
  assertFalse(initialValue.equals(initialSaltedValue));
  entity.setString("encryptedValue",nanoTime);
  entity.setString("saltedEncryptedValue",nanoTime);
  entity.store();
  assertEquals(nanoTime,entity.getString("unencryptedValue"));
  assertEquals(nanoTime,entity.getString("encryptedValue"));
  view.refresh();
  assertEquals(nanoTime,view.getString("unencryptedValue"));
  assertEquals(nanoTime,view.getString("encryptedValue"));
  assertEquals(nanoTime,view.getString("saltedEncryptedValue"));
  String updatedValue=view.getString("rawEncryptedValue");
  String updatedSaltedValue=view.getString("rawSaltedEncryptedValue");
  assertFalse(nanoTime.equals(updatedValue));
  assertFalse(nanoTime.equals(updatedSaltedValue));
  assertFalse(updatedValue.equals(updatedSaltedValue));
  assertEquals(initialValue,updatedValue);
  assertFalse(initialSaltedValue.equals(updatedSaltedValue));
}
