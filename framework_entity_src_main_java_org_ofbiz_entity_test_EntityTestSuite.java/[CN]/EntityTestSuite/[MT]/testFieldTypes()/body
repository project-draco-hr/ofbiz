{
  String id="testFieldTypes";
  byte[] b=new byte[100000];
  for (int i=0; i < b.length; i++) {
    b[i]=(byte)i;
  }
  Blob testBlob=new SerialBlob(b);
  String alpha="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  StringBuilder sb=new StringBuilder(alpha.length() * 1000);
  for (int i=0; i < 1000; i++) {
    sb.append(alpha);
  }
  String clobStr=sb.toString();
  long currentMillis=System.currentTimeMillis();
  Date currentDate=Date.valueOf(new Date(currentMillis).toString());
  Time currentTime=Time.valueOf(new Time(currentMillis).toString());
  Timestamp currentTimestamp=new Timestamp(currentDate.getTime());
  BigDecimal fixedPoint=new BigDecimal("999999999999.999999");
  Double floatingPoint=1.0123456789;
  Long numeric=Long.MAX_VALUE;
  try {
    GenericValue testValue=delegator.makeValue("TestFieldType","testFieldTypeId",id);
    testValue.create();
    testValue.set("blobField",testBlob);
    testValue.set("byteArrayField",b);
    testValue.set("objectField",currentTimestamp);
    testValue.set("dateField",currentDate);
    testValue.set("timeField",currentTime);
    testValue.set("dateTimeField",currentTimestamp);
    testValue.set("fixedPointField",fixedPoint);
    testValue.set("floatingPointField",floatingPoint);
    testValue.set("numericField",numeric);
    testValue.set("clobField",clobStr);
    testValue.store();
    testValue=EntityQuery.use(delegator).from("TestFieldType").where("testFieldTypeId",id).queryOne();
    assertEquals("testFieldTypeId",id,testValue.get("testFieldTypeId"));
    Blob blob=(Blob)testValue.get("blobField");
    byte[] c=blob.getBytes(1,(int)blob.length());
    assertEquals("Byte array read from entity is the same length",b.length,c.length);
    for (int i=0; i < b.length; i++) {
      assertEquals("Byte array data[" + i + "]",b[i],c[i]);
    }
    c=(byte[])testValue.get("byteArrayField");
    assertEquals("Byte array read from entity is the same length",b.length,c.length);
    for (int i=0; i < b.length; i++) {
      assertEquals("Byte array data[" + i + "]",b[i],c[i]);
    }
    assertEquals("objectField",currentTimestamp,testValue.get("objectField"));
    assertEquals("dateField",currentDate,testValue.get("dateField"));
    assertEquals("timeField",currentTime,testValue.get("timeField"));
    assertEquals("dateTimeField",currentTimestamp,testValue.get("dateTimeField"));
    assertEquals("fixedPointField",fixedPoint,testValue.get("fixedPointField"));
    assertEquals("floatingPointField",floatingPoint,testValue.get("floatingPointField"));
    assertEquals("numericField",numeric,testValue.get("numericField"));
    assertEquals("clobField",clobStr,testValue.get("clobField"));
    testValue.set("blobField",null);
    testValue.set("byteArrayField",null);
    testValue.set("objectField",null);
    testValue.set("dateField",null);
    testValue.set("timeField",null);
    testValue.set("dateTimeField",null);
    testValue.set("fixedPointField",null);
    testValue.set("floatingPointField",null);
    testValue.set("numericField",null);
    testValue.set("clobField",null);
    testValue.store();
    testValue=EntityQuery.use(delegator).from("TestFieldType").where("testFieldTypeId",id).queryOne();
    assertEquals("testFieldTypeId",id,testValue.get("testFieldTypeId"));
    assertNull("blobField null",testValue.get("blobField"));
    assertNull("byteArrayField null",testValue.get("byteArrayField"));
    assertNull("objectField null",testValue.get("objectField"));
    assertNull("dateField null",testValue.get("dateField"));
    assertNull("timeField null",testValue.get("timeField"));
    assertNull("dateTimeField null",testValue.get("dateTimeField"));
    assertNull("fixedPointField null",testValue.get("fixedPointField"));
    assertNull("floatingPointField null",testValue.get("floatingPointField"));
    assertNull("numericField null",testValue.get("numericField"));
    assertNull("clobField null",testValue.get("clobField"));
  }
  finally {
    List<GenericValue> values=EntityQuery.use(delegator).from("TestFieldType").queryList();
    delegator.removeAll(values);
  }
}
