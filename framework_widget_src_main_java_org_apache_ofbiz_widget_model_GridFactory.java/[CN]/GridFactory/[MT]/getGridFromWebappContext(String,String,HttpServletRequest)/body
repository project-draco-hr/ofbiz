{
  String webappName=UtilHttp.getApplicationName(request);
  String cacheKey=webappName + "::" + resourceName+ "::"+ gridName;
  ModelGrid modelGrid=gridWebappCache.get(cacheKey);
  if (modelGrid == null) {
    ServletContext servletContext=(ServletContext)request.getAttribute("servletContext");
    Delegator delegator=(Delegator)request.getAttribute("delegator");
    LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
    URL gridFileUrl=servletContext.getResource(resourceName);
    Document gridFileDoc=UtilXml.readXmlDocument(gridFileUrl,true,true);
    Element gridElement=UtilXml.firstChildElement(gridFileDoc.getDocumentElement(),"grid","name",gridName);
    modelGrid=createModelGrid(gridElement,delegator.getModelReader(),dispatcher.getDispatchContext(),resourceName,gridName);
    modelGrid=gridWebappCache.putIfAbsentAndGet(cacheKey,modelGrid);
  }
  if (modelGrid == null) {
    throw new IllegalArgumentException("Could not find grid with name [" + gridName + "] in webapp resource ["+ resourceName+ "] in the webapp ["+ webappName+ "]");
  }
  return modelGrid;
}
