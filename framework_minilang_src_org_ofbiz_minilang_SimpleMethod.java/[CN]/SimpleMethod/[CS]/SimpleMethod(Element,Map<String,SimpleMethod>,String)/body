{
  if (MiniLangValidate.validationOn()) {
    String locationMsg=" File = ".concat(fromLocation);
    if (simpleMethodElement.getAttribute("method-name").isEmpty()) {
      MiniLangValidate.handleError("Element must include the \"method-name\" attribute.".concat(locationMsg),null,simpleMethodElement);
    }
  }
  this.parentSimpleMethodsMap=parentSimpleMethodsMap;
  this.fromLocation=fromLocation;
  methodName=simpleMethodElement.getAttribute("method-name");
  shortDescription=simpleMethodElement.getAttribute("short-description");
  defaultErrorCode=UtilXml.elementAttribute(simpleMethodElement,"default-error-code","error");
  defaultSuccessCode=UtilXml.elementAttribute(simpleMethodElement,"default-success-code","success");
  parameterMapName=UtilXml.elementAttribute(simpleMethodElement,"parameter-map-name","parameters");
  eventRequestName=UtilXml.elementAttribute(simpleMethodElement,"event-request-object-name","request");
  eventSessionName=UtilXml.elementAttribute(simpleMethodElement,"event-session-object-name","session");
  eventResponseName=UtilXml.elementAttribute(simpleMethodElement,"event-response-object-name","response");
  eventResponseCodeName=UtilXml.elementAttribute(simpleMethodElement,"event-response-code-name","_response_code_");
  eventErrorMessageName=UtilXml.elementAttribute(simpleMethodElement,"event-error-message-name","_error_message_");
  eventErrorMessageListName=UtilXml.elementAttribute(simpleMethodElement,"event-error-message-list-name","_error_message_list_");
  eventEventMessageName=UtilXml.elementAttribute(simpleMethodElement,"event-event-message-name","_event_message_");
  eventEventMessageListName=UtilXml.elementAttribute(simpleMethodElement,"event-event-message-list-name","_event_message_list_");
  serviceResponseMessageName=UtilXml.elementAttribute(simpleMethodElement,"service-response-message-name","responseMessage");
  serviceErrorMessageName=UtilXml.elementAttribute(simpleMethodElement,"service-error-message-name","errorMessage");
  serviceErrorMessageListName=UtilXml.elementAttribute(simpleMethodElement,"service-error-message-list-name","errorMessageList");
  serviceErrorMessageMapName=UtilXml.elementAttribute(simpleMethodElement,"service-error-message-map-name","errorMessageMap");
  serviceSuccessMessageName=UtilXml.elementAttribute(simpleMethodElement,"service-success-message-name","successMessage");
  serviceSuccessMessageListName=UtilXml.elementAttribute(simpleMethodElement,"service-success-message-list-name","successMessageList");
  loginRequired=!"false".equals(simpleMethodElement.getAttribute("login-required"));
  useTransaction=!"false".equals(simpleMethodElement.getAttribute("use-transaction"));
  localeName=UtilXml.elementAttribute(simpleMethodElement,"locale-name","locale");
  delegatorName=UtilXml.elementAttribute(simpleMethodElement,"delegator-name","delegator");
  securityName=UtilXml.elementAttribute(simpleMethodElement,"security-name","security");
  dispatcherName=UtilXml.elementAttribute(simpleMethodElement,"dispatcher-name","dispatcher");
  userLoginName=UtilXml.elementAttribute(simpleMethodElement,"user-login-name","userLogin");
  methodOperations=Collections.unmodifiableList(readOperations(simpleMethodElement,this));
}
