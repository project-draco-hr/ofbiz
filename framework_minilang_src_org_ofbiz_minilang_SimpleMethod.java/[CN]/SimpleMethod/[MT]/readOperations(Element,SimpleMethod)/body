{
  List<? extends Element> operationElements=UtilXml.childElementList(simpleMethodElement);
  ArrayList<MethodOperation> methodOperations=new ArrayList<MethodOperation>(operationElements.size());
  if (UtilValidate.isNotEmpty(operationElements)) {
    for (    Element curOperElem : operationElements) {
      String nodeName=curOperElem.getNodeName();
      MethodOperation methodOp=null;
      MethodOperation.Factory<MethodOperation> factory=methodOperationFactories.get(nodeName);
      if (factory != null) {
        methodOp=factory.createMethodOperation(curOperElem,simpleMethod);
      }
 else       if ("else".equals(nodeName)) {
      }
 else {
        MiniLangValidate.handleError("Invalid element found",simpleMethod,curOperElem);
      }
      if (methodOp == null) {
        continue;
      }
      methodOperations.add(methodOp);
      DeprecatedOperation depOp=methodOp.getClass().getAnnotation(DeprecatedOperation.class);
      if (depOp != null) {
        MiniLangValidate.handleError("The " + nodeName + " operation has been deprecated in favor of the "+ depOp.value()+ " operation",simpleMethod,curOperElem);
      }
    }
  }
  methodOperations.trimToSize();
  return methodOperations;
}
