{
  List<? extends Element> operationElements=UtilXml.childElementList(simpleMethodElement);
  if (UtilValidate.isNotEmpty(operationElements)) {
    for (    Element curOperElem : operationElements) {
      String nodeName=curOperElem.getNodeName();
      MethodOperation methodOp=null;
      MethodOperation.Factory factory=methodOperationFactories.get(nodeName);
      if (factory != null) {
        methodOp=factory.createMethodOperation(curOperElem,simpleMethod);
      }
 else       if ("else".equals(nodeName)) {
      }
 else {
        Debug.logWarning("Operation element \"" + nodeName + "\" no recognized",module);
      }
      if (methodOp == null)       continue;
      if (UtilProperties.propertyValueEquals("webslinger-invoker.properties","wrap-calls","true")) {
        Wrap<MethodOperation> wrap=new Wrap<MethodOperation>().fileName(simpleMethod.getLocationAndName()).wrappedClass(methodOp.getClass());
        wrap.wrap(methodOperationExecMethod);
        methodOp=wrap.newInstance(new Class<?>[]{Element.class,SimpleMethod.class},new Object[]{curOperElem,simpleMethod});
      }
      methodOperations.add(methodOp);
      DeprecatedOperation depOp=methodOp.getClass().getAnnotation(DeprecatedOperation.class);
      if (depOp != null)       Debug.logInfo("The " + nodeName + " operation has been deprecated in favor of the "+ depOp.value()+ " operation; found use of this in ["+ simpleMethod.getShortDescription()+ "]: "+ methodOp.rawString(),module);
    }
  }
}
