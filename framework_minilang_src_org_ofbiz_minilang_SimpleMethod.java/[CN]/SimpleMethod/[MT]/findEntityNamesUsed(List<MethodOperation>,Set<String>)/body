{
  for (  MethodOperation methodOperation : methodOperations) {
    if (methodOperation instanceof FindByPrimaryKey) {
      String entName=((FindByPrimaryKey)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof FindByAnd) {
      String entName=((FindByAnd)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityOne) {
      String entName=((EntityOne)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityAnd) {
      String entName=((EntityAnd)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityCondition) {
      String entName=((EntityCondition)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof EntityCount) {
      String entName=((EntityCount)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof MakeValue) {
      String entName=((MakeValue)methodOperation).getEntityName();
      if (UtilValidate.isNotEmpty(entName))       allEntityNames.add(entName);
    }
 else     if (methodOperation instanceof CallSimpleMethod) {
      SimpleMethod calledMethod=((CallSimpleMethod)methodOperation).getSimpleMethodToCall(null);
      allEntityNames.addAll(calledMethod.getAllServiceNamesCalled());
    }
 else     if (methodOperation instanceof Iterate) {
      findEntityNamesUsed(((Iterate)methodOperation).getSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IterateMap) {
      findEntityNamesUsed(((IterateMap)methodOperation).getSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof Loop) {
      findEntityNamesUsed(((Loop)methodOperation).getSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof MasterIf) {
      findEntityNamesUsed(((MasterIf)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof While) {
      findEntityNamesUsed(((While)methodOperation).getThenSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfValidateMethod) {
      findEntityNamesUsed(((IfValidateMethod)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfInstanceOf) {
      findEntityNamesUsed(((IfInstanceOf)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfCompare) {
      findEntityNamesUsed(((IfCompare)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfCompareField) {
      findEntityNamesUsed(((IfCompareField)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfRegexp) {
      findEntityNamesUsed(((IfRegexp)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfEmpty) {
      findEntityNamesUsed(((IfEmpty)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfNotEmpty) {
      findEntityNamesUsed(((IfNotEmpty)methodOperation).getAllSubOps(),allEntityNames);
    }
 else     if (methodOperation instanceof IfHasPermission) {
      findEntityNamesUsed(((IfHasPermission)methodOperation).getAllSubOps(),allEntityNames);
    }
  }
}
