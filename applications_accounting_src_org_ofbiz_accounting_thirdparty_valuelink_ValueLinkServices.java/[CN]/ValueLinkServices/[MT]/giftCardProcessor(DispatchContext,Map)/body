{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  GenericValue giftCard=(GenericValue)context.get("giftCard");
  GenericValue party=(GenericValue)context.get("billToParty");
  String paymentConfig=(String)context.get("paymentConfig");
  String currency=(String)context.get("currency");
  String orderId=(String)context.get("orderId");
  Double amount=(Double)context.get("processAmount");
  if (currency == null) {
    currency=UtilProperties.getPropertyValue("general.properties","currency.uom.id.default","USD");
  }
  Map redeemCtx=new HashMap();
  redeemCtx.put("userLogin",userLogin);
  redeemCtx.put("paymentConfig",paymentConfig);
  redeemCtx.put("cardNumber",giftCard.get("cardNumber"));
  redeemCtx.put("pin",giftCard.get("pinNumber"));
  redeemCtx.put("currency",currency);
  redeemCtx.put("orderId",orderId);
  redeemCtx.put("partyId",party.get("partyId"));
  redeemCtx.put("amount",amount);
  Map redeemResult=null;
  try {
    redeemResult=dispatcher.runSync("redeemGiftCard",redeemCtx);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Problem calling the redeem service",module);
    return ServiceUtil.returnError("Redeem service failed");
  }
  Map result=ServiceUtil.returnSuccess();
  if (redeemResult != null) {
    Boolean processResult=(Boolean)redeemResult.get("processResult");
    if (processResult.booleanValue()) {
      Double previous=(Double)redeemResult.get("previousAmount");
      if (previous == null)       previous=new Double(0);
      Double current=(Double)redeemResult.get("amount");
      if (current == null)       current=new Double(0);
      double redeemed=(((double)Math.round((previous.doubleValue() - current.doubleValue()) * 100)) / 100);
      Debug.logInfo("Redeemed (" + amount + "): "+ redeemed+ " / "+ previous+ " : "+ current,module);
      if (redeemed < amount.doubleValue()) {
        Map voidResult=null;
        try {
          voidResult=dispatcher.runSync("voidRedeemGiftCard",redeemCtx);
        }
 catch (        GenericServiceException e) {
          Debug.logError(e,module);
        }
        if (ServiceUtil.isError(voidResult)) {
          return voidResult;
        }
        processResult=Boolean.FALSE;
        amount=new Double(redeemed);
        result.put("authMessage","Gift card did not contain enough funds");
      }
    }
    result.put("processAmount",amount);
    result.put("authFlag",redeemResult.get("responseCode"));
    result.put("authResult",processResult);
    result.put("captureResult",processResult);
    result.put("authCode",redeemResult.get("authCode"));
    result.put("captureCode",redeemResult.get("authCode"));
    result.put("authRefNum",redeemResult.get("referenceNum"));
    result.put("captureRefNum",redeemResult.get("referenceNum"));
  }
  return result;
}
