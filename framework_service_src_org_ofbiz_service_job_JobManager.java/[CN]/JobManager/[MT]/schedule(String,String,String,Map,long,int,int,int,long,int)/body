{
  if (delegator == null) {
    Debug.logWarning("No delegator referenced; cannot schedule job.",module);
    return;
  }
  String dataId=null;
  try {
    dataId=delegator.getNextSeqId("RuntimeData").toString();
    GenericValue runtimeData=delegator.makeValue("RuntimeData",UtilMisc.toMap("runtimeDataId",dataId));
    runtimeData.set("runtimeInfo",XmlSerializer.serialize(context));
    delegator.create(runtimeData);
  }
 catch (  GenericEntityException ee) {
    throw new JobManagerException(ee.getMessage(),ee);
  }
catch (  SerializeException se) {
    throw new JobManagerException(se.getMessage(),se);
  }
catch (  IOException ioe) {
    throw new JobManagerException(ioe.getMessage(),ioe);
  }
  schedule(jobName,poolName,serviceName,dataId,startTime,frequency,interval,count,endTime,maxRetry);
}
