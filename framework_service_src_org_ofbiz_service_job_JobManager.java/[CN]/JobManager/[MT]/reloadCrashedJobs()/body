{
  String instanceId=UtilProperties.getPropertyValue("general.properties","unique.instanceId","ofbiz0");
  List<GenericValue> crashed=null;
  List<EntityExpr> exprs=UtilMisc.toList(new EntityExpr("finishDateTime",EntityOperator.EQUALS,null));
  exprs.add(new EntityExpr("cancelDateTime",EntityOperator.EQUALS,null));
  exprs.add(new EntityExpr("runByInstanceId",EntityOperator.EQUALS,instanceId));
  EntityConditionList<EntityExpr> ecl=new EntityConditionList<EntityExpr>(exprs,EntityOperator.AND);
  try {
    crashed=delegator.findList("JobSandbox",ecl,null,UtilMisc.toList("startDateTime"),null,false);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Unable to load crashed jobs",module);
  }
  if (crashed != null && crashed.size() > 0) {
    try {
      int rescheduled=0;
      for (      GenericValue job : crashed) {
        long runtime=job.getTimestamp("runTime").getTime();
        RecurrenceInfo ri=JobManager.getRecurrenceInfo(job);
        if (ri != null) {
          long next=ri.next();
          if (next <= runtime) {
            Timestamp now=UtilDateTime.nowTimestamp();
            Debug.log("Scheduling Job : " + job,module);
            String pJobId=job.getString("parentJobId");
            if (pJobId == null) {
              pJobId=job.getString("jobId");
            }
            GenericValue newJob=GenericValue.create(job);
            newJob.set("statusId","SERVICE_PENDING");
            newJob.set("runTime",now);
            newJob.set("previousJobId",job.getString("jobId"));
            newJob.set("parentJobId",pJobId);
            newJob.set("startDateTime",null);
            newJob.set("runByInstanceId",null);
            delegator.createSetNextSeqId(newJob);
            job.set("statusId","SERVICE_CRASHED");
            job.set("cancelDateTime",now);
            delegator.store(job);
            rescheduled++;
          }
        }
      }
      if (Debug.infoOn())       Debug.logInfo("-- " + rescheduled + " jobs re-scheduled",module);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
  }
 else {
    if (Debug.infoOn())     Debug.logInfo("No crashed jobs to re-schedule",module);
  }
}
