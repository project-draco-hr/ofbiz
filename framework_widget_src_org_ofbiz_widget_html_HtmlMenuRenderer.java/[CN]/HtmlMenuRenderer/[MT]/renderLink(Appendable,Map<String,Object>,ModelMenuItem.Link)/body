{
  String target=link.getTarget(context);
  ModelMenuItem menuItem=link.getLinkMenuItem();
  if (isDisableIfEmpty(menuItem,context)) {
    target=null;
  }
  if (UtilValidate.isNotEmpty(target)) {
    HttpServletResponse response=(HttpServletResponse)context.get("response");
    HttpServletRequest request=(HttpServletRequest)context.get("request");
    String targetWindow=link.getTargetWindow(context);
    String uniqueItemName=menuItem.getModelMenu().getName() + "_" + menuItem.getName()+ "_LF_"+ UtilMisc.<String>addToBigDecimalInMap(context,"menuUniqueItemIndex",BigDecimal.ONE);
    String linkType=WidgetWorker.determineAutoLinkType(link.getLinkType(),target,link.getUrlMode(),request);
    if ("hidden-form".equals(linkType)) {
      writer.append("<form method=\"post\"");
      writer.append(" action=\"");
      WidgetWorker.buildHyperlinkUrl(writer,target,link.getUrlMode(),null,link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),request,response,context);
      writer.append("\"");
      if (UtilValidate.isNotEmpty(targetWindow)) {
        writer.append(" target=\"");
        writer.append(targetWindow);
        writer.append("\"");
      }
      writer.append(" name=\"");
      writer.append(uniqueItemName);
      writer.append("\">");
      UtilCodec.SimpleEncoder simpleEncoder=(UtilCodec.SimpleEncoder)context.get("simpleEncoder");
      for (      Map.Entry<String,String> parameter : link.getParameterMap(context).entrySet()) {
        writer.append("<input name=\"");
        writer.append(parameter.getKey());
        writer.append("\" value=\"");
        if (simpleEncoder != null) {
          writer.append(simpleEncoder.encode(parameter.getValue()));
        }
 else {
          writer.append(parameter.getValue());
        }
        writer.append("\" type=\"hidden\"/>");
      }
      writer.append("</form>");
    }
    writer.append("<a");
    String id=link.getId(context);
    if (UtilValidate.isNotEmpty(id)) {
      writer.append(" id=\"");
      writer.append(id);
      writer.append("\"");
    }
    String style=link.getStyle(context);
    if (UtilValidate.isNotEmpty(style)) {
      writer.append(" class=\"");
      writer.append(style);
      writer.append("\"");
    }
    String name=link.getName(context);
    if (UtilValidate.isNotEmpty(name)) {
      writer.append(" name=\"");
      writer.append(name);
      writer.append("\"");
    }
    if (!"hidden-form".equals(linkType)) {
      if (UtilValidate.isNotEmpty(targetWindow)) {
        writer.append(" target=\"");
        writer.append(targetWindow);
        writer.append("\"");
      }
    }
    writer.append(" href=\"");
    String confirmationMsg=link.getConfirmation(context);
    if ("hidden-form".equals(linkType)) {
      if (UtilValidate.isNotEmpty(confirmationMsg)) {
        writer.append("javascript:confirmActionFormLink('");
        writer.append(confirmationMsg);
        writer.append("', '");
        writer.append(uniqueItemName);
        writer.append("')");
      }
 else {
        writer.append("javascript:document.");
        writer.append(uniqueItemName);
        writer.append(".submit()");
      }
    }
 else {
      if (UtilValidate.isNotEmpty(confirmationMsg)) {
        writer.append("javascript:confirmActionLink('");
        writer.append(confirmationMsg);
        writer.append("', '");
        WidgetWorker.buildHyperlinkUrl(writer,target,link.getUrlMode(),link.getParameterMap(context),link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),request,response,context);
        writer.append("')");
      }
 else {
        WidgetWorker.buildHyperlinkUrl(writer,target,link.getUrlMode(),link.getParameterMap(context),link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),request,response,context);
      }
    }
    writer.append("\">");
  }
  Image img=link.getImage();
  if (img != null) {
    renderImage(writer,context,img);
    writer.append("&nbsp;" + link.getText(context));
  }
 else {
    writer.append(link.getText(context));
  }
  if (UtilValidate.isNotEmpty(target)) {
    writer.append("</a>");
  }
}
