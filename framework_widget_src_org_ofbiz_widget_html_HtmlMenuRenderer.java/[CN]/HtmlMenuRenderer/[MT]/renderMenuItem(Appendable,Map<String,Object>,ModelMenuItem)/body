{
  boolean hideThisItem=isHideIfSelected(menuItem,context);
  if (hideThisItem)   return;
  String style=menuItem.getWidgetStyle();
  if (menuItem.isSelected(context)) {
    style=menuItem.getSelectedStyle();
    if (UtilValidate.isEmpty(style)) {
      style="selected";
    }
  }
  if (menuItem.getDisabled() || this.isDisableIfEmpty(menuItem,context)) {
    style=menuItem.getDisabledTitleStyle();
  }
  writer.append("  <li");
  String alignStyle=menuItem.getAlignStyle();
  if (UtilValidate.isNotEmpty(style) || UtilValidate.isNotEmpty(alignStyle)) {
    writer.append(" class=\"");
    if (UtilValidate.isNotEmpty(style)) {
      writer.append(style).append(" ");
    }
    if (UtilValidate.isNotEmpty(alignStyle)) {
      writer.append(alignStyle);
    }
    writer.append("\"");
  }
  String toolTip=menuItem.getTooltip(context);
  if (UtilValidate.isNotEmpty(toolTip)) {
    writer.append(" title=\"").append(toolTip).append("\"");
  }
  writer.append(">");
  Link link=menuItem.getLink();
  if (link != null) {
    renderLink(writer,context,link);
  }
 else {
    String txt=menuItem.getTitle(context);
    StringUtil.SimpleEncoder simpleEncoder=(StringUtil.SimpleEncoder)context.get("simpleEncoder");
    if (simpleEncoder != null) {
      txt=simpleEncoder.encode(txt);
    }
    writer.append(txt);
  }
  if (!menuItem.getMenuItemList().isEmpty()) {
    appendWhitespace(writer);
    writer.append("    <ul>");
    appendWhitespace(writer);
    for (    ModelMenuItem childMenuItem : menuItem.getMenuItemList()) {
      childMenuItem.renderMenuItemString(writer,context,this);
    }
    writer.append("    </ul>");
    appendWhitespace(writer);
  }
  writer.append("</li>");
  appendWhitespace(writer);
}
