{
  ModelMenuItem menuItem=link.getLinkMenuItem();
  String target=link.getTarget(context);
  if (menuItem.getDisabled()) {
    target=null;
  }
  if (UtilValidate.isNotEmpty(target)) {
    buffer.append("<a");
    String id=link.getId(context);
    if (UtilValidate.isNotEmpty(id)) {
      buffer.append(" id=\"");
      buffer.append(id);
      buffer.append("\"");
    }
    String name=link.getName(context);
    if (UtilValidate.isNotEmpty(name)) {
      buffer.append(" name=\"");
      buffer.append(name);
      buffer.append("\"");
    }
    String targetWindow=link.getTargetWindow(context);
    if (UtilValidate.isNotEmpty(targetWindow)) {
      buffer.append(" target=\"");
      buffer.append(targetWindow);
      buffer.append("\"");
    }
    buffer.append(" href=\"");
    String urlMode=link.getUrlMode();
    String prefix=link.getPrefix(context);
    boolean fullPath=link.getFullPath();
    boolean secure=link.getSecure();
    boolean encode=link.getEncode();
    HttpServletResponse res=(HttpServletResponse)context.get("response");
    HttpServletRequest req=(HttpServletRequest)context.get("request");
    if (urlMode != null && urlMode.equalsIgnoreCase("intra-app")) {
      if (req != null && res != null) {
        ServletContext ctx=(ServletContext)req.getAttribute("servletContext");
        RequestHandler rh=(RequestHandler)ctx.getAttribute("_REQUEST_HANDLER_");
        String urlString=rh.makeLink(req,res,target,fullPath,secure,encode);
        buffer.append(urlString);
      }
 else       if (prefix != null) {
        buffer.append(prefix + target);
      }
 else {
        buffer.append(target);
      }
    }
 else     if (urlMode != null && urlMode.equalsIgnoreCase("content")) {
      StringBuffer newURL=new StringBuffer();
      ContentUrlTag.appendContentPrefix(req,newURL);
      newURL.append(target);
      buffer.append(newURL.toString());
    }
 else     if ("inter-app".equalsIgnoreCase(urlMode) && req != null) {
      String externalLoginKey=(String)req.getAttribute("externalLoginKey");
      if (UtilValidate.isNotEmpty(externalLoginKey)) {
        if (target.contains("?")) {
          target+="&externalLoginKey=" + externalLoginKey;
        }
 else {
          target+="?externalLoginKey=" + externalLoginKey;
        }
        buffer.append(target);
      }
    }
 else {
      buffer.append(target);
    }
    buffer.append("\">");
  }
  Image img=link.getImage();
  if (img == null)   buffer.append(link.getText(context));
 else   renderImage(buffer,context,img);
  if (UtilValidate.isNotEmpty(target)) {
    buffer.append("</a>");
  }
}
