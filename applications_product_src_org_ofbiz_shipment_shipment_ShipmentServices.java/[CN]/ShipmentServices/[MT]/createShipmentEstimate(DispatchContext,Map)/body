{
  Map result=new HashMap();
  GenericDelegator delegator=dctx.getDelegator();
  List storeAll=new ArrayList();
  String shipMethodAndParty=(String)context.get("shipMethod");
  List shipMethodSplit=StringUtil.split(shipMethodAndParty,"|");
  GenericValue estimate=delegator.makeValue("ShipmentCostEstimate",null);
  estimate.set("shipmentCostEstimateId",delegator.getNextSeqId("ShipmentCostEstimate"));
  estimate.set("shipmentMethodTypeId",shipMethodSplit.get(1));
  estimate.set("carrierPartyId",shipMethodSplit.get(0));
  estimate.set("carrierRoleTypeId","CARRIER");
  estimate.set("productStoreId",context.get("productStoreId"));
  estimate.set("geoIdTo",context.get("toGeo"));
  estimate.set("geoIdFrom",context.get("fromGeo"));
  estimate.set("partyId",context.get("partyId"));
  estimate.set("roleTypeId",context.get("roleTypeId"));
  estimate.set("orderPricePercent",context.get("flatPercent"));
  estimate.set("orderFlatPrice",context.get("flatPrice"));
  estimate.set("orderItemFlatPrice",context.get("flatItemPrice"));
  estimate.set("productFeatureGroupId",context.get("productFeatureGroupId"));
  estimate.set("oversizeUnit",context.get("oversizeUnit"));
  estimate.set("oversizePrice",context.get("oversizePrice"));
  estimate.set("featurePercent",context.get("featurePercent"));
  estimate.set("featurePrice",context.get("featurePrice"));
  storeAll.add(estimate);
  if (!applyQuantityBreak(context,result,storeAll,delegator,estimate,"w","weight","Weight")) {
    return result;
  }
  if (!applyQuantityBreak(context,result,storeAll,delegator,estimate,"q","quantity","Quantity")) {
    return result;
  }
  if (!applyQuantityBreak(context,result,storeAll,delegator,estimate,"p","price","Price")) {
    return result;
  }
  try {
    delegator.storeAll(storeAll);
  }
 catch (  GenericEntityException e) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,"Problem reading product features: " + e.toString());
    return result;
  }
  result.put("shipmentCostEstimateId",estimate.get("shipmentCostEstimateId"));
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
