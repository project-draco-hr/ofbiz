{
  if (workEffortId == null && workEffort != null) {
    workEffortId=workEffort.getString("workEffortId");
  }
  if (delegator == null && workEffort != null) {
    delegator=workEffort.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId="text/html";
  }
  if (delegator == null) {
    throw new GeneralRuntimeException("Unable to find a delegator to use!");
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(workEffortContentTypeId);
  ModelEntity workEffortModel=delegator.getModelEntity("WorkEffort");
  if (workEffortModel != null && workEffortModel.isField(candidateFieldName)) {
    if (workEffort == null) {
      workEffort=delegator.findByPrimaryKeyCache("WorkEffort",UtilMisc.toMap("workEffortId",workEffortId));
    }
    if (workEffort != null) {
      String candidateValue=workEffort.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
  List workEffortContentList=delegator.findByAndCache("WorkEffortContent",UtilMisc.toMap("workEffortId",workEffortId,"workEffortContentTypeId",workEffortContentTypeId),UtilMisc.toList("-fromDate"));
  workEffortContentList=EntityUtil.filterByDate(workEffortContentList);
  GenericValue workEffortContent=EntityUtil.getFirst(workEffortContentList);
  if (workEffortContent != null) {
    Map inContext=new HashMap();
    inContext.put("workEffort",workEffort);
    inContext.put("workEffortContent",workEffortContent);
    ContentWorker.renderContentAsText(delegator,workEffortContent.getString("contentId"),outWriter,inContext,null,locale,mimeTypeId);
  }
}
