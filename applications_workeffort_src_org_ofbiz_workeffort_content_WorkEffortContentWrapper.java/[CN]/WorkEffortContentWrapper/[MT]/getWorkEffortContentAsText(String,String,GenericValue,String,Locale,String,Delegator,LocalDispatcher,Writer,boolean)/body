{
  if (workEffortId == null && workEffort != null) {
    workEffortId=workEffort.getString("workEffortId");
  }
  if (delegator == null && workEffort != null) {
    delegator=workEffort.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId=EntityUtilProperties.getPropertyValue("content","defaultMimeType","text/html; charset=utf-8",delegator);
  }
  if (delegator == null) {
    throw new GeneralRuntimeException("Unable to find a delegator to use!");
  }
  GenericValue workEffortContent;
  if (contentId != null) {
    workEffortContent=EntityQuery.use(delegator).from("WorkEffortContent").where("workEffortId",workEffortId,"contentId",contentId).cache(cache).queryOne();
  }
 else {
    workEffortContent=getFirstWorkEffortContentByType(workEffortId,workEffort,workEffortContentTypeId,delegator,cache);
  }
  if (workEffortContent != null) {
    Map<String,Object> inContext=new HashMap<String,Object>();
    inContext.put("workEffort",workEffort);
    inContext.put("workEffortContent",workEffortContent);
    ContentWorker.renderContentAsText(dispatcher,delegator,workEffortContent.getString("contentId"),outWriter,inContext,locale,mimeTypeId,null,null,false);
    return;
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(workEffortContentTypeId);
  ModelEntity workEffortModel=delegator.getModelEntity("WorkEffort");
  if (workEffortModel != null && workEffortModel.isField(candidateFieldName)) {
    if (workEffort == null) {
      workEffort=EntityQuery.use(delegator).from("WorkEffort").where("workEffortId",workEffortId).cache().queryOne();
    }
    if (workEffort != null) {
      String candidateValue=workEffort.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
}
