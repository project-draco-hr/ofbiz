{
  this.serviceName=eca.getAttribute("service");
  this.eventName=eca.getAttribute("event");
  this.runOnFailure="true".equals(eca.getAttribute("run-on-failure"));
  this.runOnError="true".equals(eca.getAttribute("run-on-error"));
  List condList=UtilXml.childElementList(eca,"condition");
  Iterator ci=condList.iterator();
  while (ci.hasNext()) {
    conditions.add(new ServiceEcaCondition((Element)ci.next(),true,false));
  }
  List condFList=UtilXml.childElementList(eca,"condition-field");
  Iterator cfi=condFList.iterator();
  while (cfi.hasNext()) {
    conditions.add(new ServiceEcaCondition((Element)cfi.next(),false,false));
  }
  List condSList=UtilXml.childElementList(eca,"condition-service");
  Iterator sfi=condSList.iterator();
  while (sfi.hasNext()) {
    conditions.add(new ServiceEcaCondition((Element)sfi.next(),false,true));
  }
  if (Debug.verboseOn())   Debug.logVerbose("Conditions: " + conditions,module);
  List actList=UtilXml.childElementList(eca,"action");
  Iterator ai=actList.iterator();
  while (ai.hasNext()) {
    Element actionElement=(Element)ai.next();
    actions.add(new ServiceEcaAction(actionElement,eventName));
  }
  if (Debug.verboseOn())   Debug.logVerbose("Actions: " + actions,module);
}
