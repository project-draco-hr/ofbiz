{
  super(element,simpleMethod);
  this.mapAcsr=new ContextAccessor<Map<String,? extends Object>>(element.getAttribute("map-name"));
  this.fieldAcsr=new ContextAccessor<Object>(element.getAttribute("field"));
  if (this.fieldAcsr.isEmpty()) {
    this.fieldAcsr=new ContextAccessor<Object>(element.getAttribute("field-name"));
  }
  this.toMapAcsr=new ContextAccessor<Map<String,? extends Object>>(element.getAttribute("to-map-name"));
  this.toFieldAcsr=new ContextAccessor<Object>(element.getAttribute("to-field"),element.getAttribute("field"));
  if (this.toFieldAcsr.isEmpty()) {
    this.toFieldAcsr=new ContextAccessor<Object>(element.getAttribute("to-field-name"),element.getAttribute("field-name"));
  }
  this.operator=element.getAttribute("operator");
  this.type=element.getAttribute("type");
  this.format=element.getAttribute("format");
  this.subOps=Collections.unmodifiableList(SimpleMethod.readOperations(element,simpleMethod));
  Element elseElement=UtilXml.firstChildElement(element,"else");
  if (elseElement != null) {
    this.elseSubOps=Collections.unmodifiableList(SimpleMethod.readOperations(elseElement,simpleMethod));
  }
}
