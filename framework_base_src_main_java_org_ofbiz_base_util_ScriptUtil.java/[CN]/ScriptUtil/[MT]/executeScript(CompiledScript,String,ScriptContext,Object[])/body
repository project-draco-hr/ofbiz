{
  Assert.notNull("script",script,"scriptContext",scriptContext);
  Object result=script.eval(scriptContext);
  if (UtilValidate.isNotEmpty(functionName)) {
    if (Debug.verboseOn()) {
      Debug.logVerbose("Invoking function/method " + functionName,module);
    }
    ScriptEngine engine=script.getEngine();
    try {
      Invocable invocableEngine=(Invocable)engine;
      result=invocableEngine.invokeFunction(functionName,args == null ? EMPTY_ARGS : args);
    }
 catch (    ClassCastException e) {
      throw new ScriptException("Script engine " + engine.getClass().getName() + " does not support function/method invocations");
    }
  }
  return result;
}
