{
  String entityAlias="WEPA" + workEffortSearchContext.index;
  String prefix="wepa" + workEffortSearchContext.index;
  workEffortSearchContext.index++;
  workEffortSearchContext.dynamicViewEntity.addMemberEntity(entityAlias,"WorkEffortPartyAssignment");
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "PartyId","partyId",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "RoleTypeId","roleTypeId",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "FromDate","fromDate",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "ThruDate","thruDate",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addViewLink("WEFF",entityAlias,Boolean.FALSE,ModelKeyMap.makeKeyMapList("workEffortId"));
  workEffortSearchContext.entityConditionList.add(EntityCondition.makeCondition(prefix + "PartyId",EntityOperator.EQUALS,partyId));
  workEffortSearchContext.entityConditionList.add(EntityCondition.makeCondition(EntityCondition.makeCondition(prefix + "ThruDate",EntityOperator.EQUALS,null),EntityOperator.OR,EntityCondition.makeCondition(prefix + "ThruDate",EntityOperator.GREATER_THAN,workEffortSearchContext.nowTimestamp)));
  workEffortSearchContext.entityConditionList.add(EntityCondition.makeCondition(prefix + "FromDate",EntityOperator.LESS_THAN,workEffortSearchContext.nowTimestamp));
  if (UtilValidate.isNotEmpty(this.roleTypeId)) {
    workEffortSearchContext.entityConditionList.add(EntityCondition.makeCondition(prefix + "RoleTypeId",EntityOperator.EQUALS,roleTypeId));
  }
  workEffortSearchContext.workEffortSearchConstraintList.add(workEffortSearchContext.getDelegator().makeValue("WorkEffortSearchConstraint",UtilMisc.toMap("constraintName",constraintName,"infoString",this.partyId + "," + this.roleTypeId)));
}
