{
  StringBuilder infoOut=new StringBuilder();
  try {
    Iterator<String> productIdIter=this.productIdSet.iterator();
    while (productIdIter.hasNext()) {
      String productId=productIdIter.next();
      GenericValue product=EntityQuery.use(delegator).from("Product").where("productId",productId).cache().queryOne();
      if (product == null) {
        infoOut.append("[");
        infoOut.append(productId);
        infoOut.append("]");
      }
 else {
        infoOut.append(product.getString("productName"));
      }
      if (productIdIter.hasNext()) {
        infoOut.append(", ");
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error finding ProductSetConstraint information for constraint pretty print",module);
  }
  return infoOut.toString();
}
