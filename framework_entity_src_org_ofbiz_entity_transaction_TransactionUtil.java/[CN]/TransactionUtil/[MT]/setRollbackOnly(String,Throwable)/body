{
  UserTransaction ut=TransactionFactory.getUserTransaction();
  if (ut != null) {
    try {
      int status=ut.getStatus();
      Debug.logVerbose("[TransactionUtil.setRollbackOnly] current code : " + getTransactionStateString(status),module);
      if (status != STATUS_NO_TRANSACTION) {
        if (status != STATUS_MARKED_ROLLBACK) {
          if (Debug.warningOn())           Debug.logWarning(new Exception(),"[TransactionUtil.setRollbackOnly] Calling transaction setRollbackOnly; this stack trace shows where this is happening:",module);
          ut.setRollbackOnly();
          setSetRollbackOnlyCause(causeMessage,causeThrowable);
        }
 else {
          Debug.logInfo("[TransactionUtil.setRollbackOnly] transaction rollback only not set, rollback only is already set.",module);
        }
      }
 else {
        Debug.logInfo("[TransactionUtil.setRollbackOnly] transaction rollback only not set, status is STATUS_NO_TRANSACTION",module);
      }
    }
 catch (    SystemException e) {
      throw new GenericTransactionException("System error, could not set rollback only on transaction",e);
    }
  }
 else {
    Debug.logInfo("[TransactionUtil.setRollbackOnly] No UserTransaction, transaction rollback only not set",module);
  }
}
