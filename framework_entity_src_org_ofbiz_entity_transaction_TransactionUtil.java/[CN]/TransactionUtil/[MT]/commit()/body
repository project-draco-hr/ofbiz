{
  UserTransaction ut=TransactionFactory.getUserTransaction();
  if (ut != null) {
    try {
      int status=ut.getStatus();
      Debug.logVerbose("[TransactionUtil.commit] current status : " + getTransactionStateString(status),module);
      if (status != STATUS_NO_TRANSACTION) {
        ut.commit();
        clearTransactionStamps();
        clearTransactionBeginStack();
        clearSetRollbackOnlyCause();
        Debug.logVerbose("[TransactionUtil.commit] transaction committed",module);
      }
 else {
        Debug.logInfo("[TransactionUtil.commit] Not committing transaction, status is STATUS_NO_TRANSACTION",module);
      }
    }
 catch (    RollbackException e) {
      if (Debug.infoOn())       Thread.dumpStack();
      throw new GenericTransactionException("Roll back error, could not commit transaction, was rolled back instead",e);
    }
catch (    HeuristicMixedException e) {
      throw new GenericTransactionException("Could not commit transaction, HeuristicMixed exception",e);
    }
catch (    HeuristicRollbackException e) {
      throw new GenericTransactionException("Could not commit transaction, HeuristicRollback exception",e);
    }
catch (    SystemException e) {
      throw new GenericTransactionException("System error, could not commit transaction",e);
    }
  }
 else {
    Debug.logInfo("[TransactionUtil.commit] UserTransaction is null, not commiting",module);
  }
}
