{
  boolean tx=TransactionUtil.begin();
  Throwable transactionAbortCause=null;
  try {
    try {
      return callable.call();
    }
 catch (    Throwable t) {
      while (t.getCause() != null) {
        t=t.getCause();
      }
      throw t;
    }
  }
 catch (  Error e) {
    transactionAbortCause=e;
    throw e;
  }
catch (  RuntimeException e) {
    transactionAbortCause=e;
    throw e;
  }
catch (  Throwable t) {
    transactionAbortCause=t;
    throw t;
  }
 finally {
    if (transactionAbortCause == null) {
      TransactionUtil.commit(tx);
    }
 else {
      if (printException)       transactionAbortCause.printStackTrace();
      TransactionUtil.rollback(tx,ifErrorMessage,transactionAbortCause);
    }
  }
}
