{
  UserTransaction ut=TransactionFactoryLoader.getInstance().getUserTransaction();
  if (ut != null) {
    try {
      int status=ut.getStatus();
      Debug.logVerbose("Current status : " + getTransactionStateString(status),module);
      if (status != STATUS_NO_TRANSACTION) {
        if (causeThrowable == null && Debug.infoOn()) {
          Exception newE=new Exception("Stack Trace");
          Debug.logError(newE,"[TransactionUtil.rollback]",module);
        }
        clearTransactionStamps();
        clearTransactionBeginStack();
        clearSetRollbackOnlyCause();
        for (        TransactionListener listener : listeners) {
          listener.update(ut,TransactionListener.EventType.ROLLBACK);
        }
        ut.rollback();
        Debug.logInfo("Transaction rolled back",module);
      }
 else {
        Debug.logWarning("Transaction not rolled back, status is STATUS_NO_TRANSACTION",module);
      }
    }
 catch (    IllegalStateException e) {
      Throwable t=e.getCause() == null ? e : e.getCause();
      throw new GenericTransactionException("Could not rollback transaction, IllegalStateException exception: " + t.toString(),t);
    }
catch (    SystemException e) {
      Throwable t=e.getCause() == null ? e : e.getCause();
      throw new GenericTransactionException("System error, could not rollback transaction: " + t.toString(),t);
    }
  }
 else {
    Debug.logInfo("No UserTransaction, transaction not rolled back",module);
  }
}
