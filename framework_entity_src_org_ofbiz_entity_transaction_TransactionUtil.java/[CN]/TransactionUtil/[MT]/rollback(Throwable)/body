{
  UserTransaction ut=TransactionFactory.getInstance().getUserTransaction();
  if (ut != null) {
    try {
      int status=ut.getStatus();
      Debug.logVerbose("[TransactionUtil.rollback] current status : " + getTransactionStateString(status),module);
      if (status != STATUS_NO_TRANSACTION) {
        if (causeThrowable == null && Debug.infoOn()) {
          Exception newE=new Exception("Stack Trace");
          Debug.logError(newE,"[TransactionUtil.rollback]",module);
        }
        clearTransactionStamps();
        clearTransactionBeginStack();
        clearSetRollbackOnlyCause();
        ut.rollback();
        Debug.logInfo("[TransactionUtil.rollback] transaction rolled back",module);
      }
 else {
        Debug.logWarning("[TransactionUtil.rollback] transaction not rolled back, status is STATUS_NO_TRANSACTION",module);
      }
    }
 catch (    IllegalStateException e) {
      Throwable t=e.getCause() == null ? e : e.getCause();
      throw new GenericTransactionException("Could not rollback transaction, IllegalStateException exception: " + t.toString(),t);
    }
catch (    SystemException e) {
      Throwable t=e.getCause() == null ? e : e.getCause();
      throw new GenericTransactionException("System error, could not rollback transaction: " + t.toString(),t);
    }
  }
 else {
    Debug.logInfo("[TransactionUtil.rollback] No UserTransaction, transaction not rolled back",module);
  }
}
