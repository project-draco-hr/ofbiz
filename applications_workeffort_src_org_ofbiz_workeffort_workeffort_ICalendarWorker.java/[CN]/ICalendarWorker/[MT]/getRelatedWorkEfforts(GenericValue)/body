{
  GenericDelegator delegator=workEffort.getDelegator();
  String workEffortId=workEffort.getString("workEffortId");
  List<GenericValue> relatedParties=EntityUtil.filterByDate(delegator.findList("WorkEffortPartyAssignment",EntityCondition.makeCondition("workEffortId",EntityOperator.EQUALS,workEffortId),null,null,null,false));
  List<GenericValue> relatedFixedAssets=EntityUtil.filterByDate(delegator.findList("WorkEffortFixedAssetAssign",EntityCondition.makeCondition("workEffortId",EntityOperator.EQUALS,workEffortId),null,null,null,false));
  List<GenericValue> workEfforts=FastList.newInstance();
  List<EntityCondition> conditionList=UtilMisc.<EntityCondition>toList(EntityCondition.makeCondition("scopeEnumId",EntityOperator.EQUALS,"WES_PUBLIC"),EntityCondition.makeCondition("workEffortTypeId",EntityOperator.NOT_EQUAL,"PUBLISH_PROPS"));
  EntityExpr variableExpr=EntityCondition.makeCondition("partyId",EntityOperator.EQUALS,"");
  conditionList.add(variableExpr);
  EntityCondition workEffortCond=EntityCondition.makeCondition(conditionList);
  for (  GenericValue partyValue : relatedParties) {
    variableExpr.init("partyId",EntityOperator.EQUALS,partyValue.get("partyId"));
    workEfforts.addAll(delegator.findList("WorkEffortAndPartyAssign",workEffortCond,null,null,null,false));
  }
  for (  GenericValue fixedAssetValue : relatedFixedAssets) {
    variableExpr.init("fixedAssetId",EntityOperator.EQUALS,fixedAssetValue.get("fixedAssetId"));
    workEfforts.addAll(delegator.findList("WorkEffortAndPartyAssign",workEffortCond,null,null,null,false));
  }
  workEfforts.addAll(EntityUtil.filterByDate(delegator.findList("WorkEffortAssocToView",EntityCondition.makeCondition("workEffortIdFrom",EntityOperator.EQUALS,workEffortId),null,null,null,false)));
  return WorkEffortWorker.removeDuplicateWorkEfforts(workEfforts);
}
