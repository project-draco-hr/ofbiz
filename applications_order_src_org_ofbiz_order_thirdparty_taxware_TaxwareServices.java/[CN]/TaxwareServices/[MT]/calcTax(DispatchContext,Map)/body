{
  Map result=new HashMap();
  List items=(List)context.get("itemProductList");
  List amnts=(List)context.get("itemAmountList");
  List ishpn=(List)context.get("itemShippingList");
  BigDecimal shipping=(BigDecimal)context.get("orderShippingAmount");
  GenericValue address=(GenericValue)context.get("shippingAddress");
  if (items.size() != amnts.size()) {
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,"ERROR: Items, Amount, or ItemShipping lists are not valid size.");
    return result;
  }
  try {
    TaxwareUTL utl=new TaxwareUTL();
    utl.setShipping(shipping != null ? shipping : BigDecimal.ZERO);
    utl.setShipAddress(address);
    for (int i=0; i < items.size(); i++) {
      GenericValue p=(GenericValue)items.get(i);
      BigDecimal amount=(BigDecimal)amnts.get(i);
      BigDecimal ishp=ishpn != null ? (BigDecimal)ishpn.get(i) : BigDecimal.ZERO;
      utl.addItem(p,amount,ishp);
    }
    int resp=utl.process();
    if (resp == 0) {
      result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
      result.put(ModelService.ERROR_MESSAGE,"ERROR: No records processed.");
      return result;
    }
    result.put("orderAdjustments",utl.getOrderAdjustments());
    result.put("itemAdjustments",utl.getItemAdjustments());
  }
 catch (  TaxwareException e) {
    e.printStackTrace();
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,"ERROR: Taxware problem (" + e.getMessage() + ").");
  }
  return result;
}
