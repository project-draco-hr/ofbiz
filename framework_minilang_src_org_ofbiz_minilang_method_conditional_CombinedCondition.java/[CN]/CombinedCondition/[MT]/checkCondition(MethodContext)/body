{
  if (subConditions.size() == 0)   return true;
  Iterator subCondIter=subConditions.iterator();
switch (this.conditionType) {
case OR:
    while (subCondIter.hasNext()) {
      Conditional subCond=(Conditional)subCondIter.next();
      if (subCond.checkCondition(methodContext)) {
        return true;
      }
    }
  return false;
case XOR:
boolean trueFound=false;
while (subCondIter.hasNext()) {
Conditional subCond=(Conditional)subCondIter.next();
if (subCond.checkCondition(methodContext)) {
  if (trueFound) {
    return false;
  }
 else {
    trueFound=true;
  }
}
}
return trueFound;
case AND:
while (subCondIter.hasNext()) {
Conditional subCond=(Conditional)subCondIter.next();
if (!subCond.checkCondition(methodContext)) {
return false;
}
}
return true;
case NOT:
Conditional subCond=(Conditional)subCondIter.next();
return !subCond.checkCondition(methodContext);
default :
return false;
}
}
