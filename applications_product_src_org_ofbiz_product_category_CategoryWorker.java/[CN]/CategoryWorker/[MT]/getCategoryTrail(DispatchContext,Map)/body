{
  String productCategoryId=(String)context.get("productCategoryId");
  Map<String,Object> results=ServiceUtil.returnSuccess();
  Delegator delegator=dctx.getDelegator();
  List<String> trailElements=new LinkedList<String>();
  trailElements.add(productCategoryId);
  String parentProductCategoryId=productCategoryId;
  while (UtilValidate.isNotEmpty(parentProductCategoryId)) {
    try {
      List<EntityCondition> rolllupConds=new LinkedList<EntityCondition>();
      rolllupConds.add(EntityCondition.makeCondition("productCategoryId",parentProductCategoryId));
      rolllupConds.add(EntityUtil.getFilterByDateExpr());
      List<GenericValue> productCategoryRollups=EntityQuery.use(delegator).from("ProductCategoryRollup").where(rolllupConds).orderBy("sequenceNum").cache(true).queryList();
      if (UtilValidate.isNotEmpty(productCategoryRollups)) {
        for (        GenericValue productCategoryRollup : productCategoryRollups) {
          String trailCategoryId=productCategoryRollup.getString("parentProductCategoryId");
          parentProductCategoryId=trailCategoryId;
          if (trailElements.contains(trailCategoryId)) {
            break;
          }
 else {
            trailElements.add(trailCategoryId);
          }
        }
      }
 else {
        parentProductCategoryId=null;
      }
    }
 catch (    GenericEntityException e) {
      Map<String,String> messageMap=UtilMisc.toMap("errMessage",". Cannot generate trail from product category. ");
      String errMsg=UtilProperties.getMessage("CommonUiLabels","CommonDatabaseProblem",messageMap,(Locale)context.get("locale"));
      Debug.logError(e,errMsg,module);
      return ServiceUtil.returnError(errMsg);
    }
  }
  Collections.reverse(trailElements);
  results.put("trail",trailElements);
  return results;
}
