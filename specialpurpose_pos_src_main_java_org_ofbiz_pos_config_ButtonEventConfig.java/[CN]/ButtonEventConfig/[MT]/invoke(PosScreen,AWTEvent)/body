{
  ClassLoader cl=Thread.currentThread().getContextClassLoader();
  if (cl == null) {
    Debug.logInfo("Unable to obtain the context classloader",module);
    cl=this.getClass().getClassLoader();
  }
  Class<?>[] paramTypes1=new Class[]{PosScreen.class,AWTEvent.class};
  Class<?>[] paramTypes2=new Class[]{PosScreen.class};
  Object[] params1=new Object[]{pos,event};
  Object[] params2=new Object[]{pos};
  Class<?> buttonClass=null;
  try {
    buttonClass=cl.loadClass(this.className);
  }
 catch (  ClassNotFoundException e) {
    throw new ButtonEventNotFound(e);
  }
  Method buttonMethod=null;
  int methodType=0;
  try {
    buttonMethod=buttonClass.getMethod(this.method,paramTypes1);
    methodType=1;
  }
 catch (  NoSuchMethodException e) {
    try {
      buttonMethod=buttonClass.getMethod(this.method,paramTypes2);
      methodType=2;
    }
 catch (    NoSuchMethodException e2) {
      Debug.logError(e2,"No method found with matching signatures - " + this.buttonName,module);
      throw new ButtonEventNotFound(e);
    }
  }
  try {
switch (methodType) {
case 1:
      buttonMethod.invoke(null,params1);
    break;
case 2:
  buttonMethod.invoke(null,params2);
break;
default :
throw new ButtonEventNotFound("No class method found for button - " + this.buttonName);
}
}
 catch (IllegalAccessException e) {
throw new ButtonEventException(e);
}
catch (InvocationTargetException e) {
throw new ButtonEventException(e);
}
catch (Throwable t) {
throw new ButtonEventException(t);
}
}
