{
  Delegator delegator=orderHeader.getDelegator();
  BigDecimal itemWeight=ZERO;
  GenericValue product=null;
  try {
    product=item.getRelatedOne("Product",false);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Problem getting Product from OrderItem; returning 0",module);
    return BigDecimal.ZERO;
  }
  if (product != null) {
    if (ProductWorker.shippingApplies(product)) {
      BigDecimal weight=product.getBigDecimal("shippingWeight");
      String isVariant=product.getString("isVariant");
      if (weight == null && "Y".equals(isVariant)) {
        try {
          String virtualId=ProductWorker.getVariantVirtualId(product);
          if (UtilValidate.isNotEmpty(virtualId)) {
            GenericValue virtual=EntityQuery.use(delegator).from("Product").where("productId",virtualId).cache().queryOne();
            if (virtual != null) {
              weight=virtual.getBigDecimal("shippingWeight");
            }
          }
        }
 catch (        GenericEntityException e) {
          Debug.logError(e,"Problem getting virtual product");
        }
      }
      if (weight != null) {
        itemWeight=weight;
      }
    }
  }
  return itemWeight;
}
