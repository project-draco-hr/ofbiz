{
  BigDecimal unitPrice=orderItem.getBigDecimal("unitPrice");
  BigDecimal quantity=getOrderItemQuantity(orderItem);
  BigDecimal result=ZERO;
  if (unitPrice == null || quantity == null) {
    Debug.logWarning("[getOrderItemTotal] unitPrice or quantity are null, using 0 for the item base price",module);
  }
 else {
    if (Debug.verboseOn())     Debug.logVerbose("Unit Price : " + unitPrice + " / "+ "Quantity : "+ quantity,module);
    result=unitPrice.multiply(quantity);
    if ("RENTAL_ORDER_ITEM".equals(orderItem.getString("orderItemTypeId"))) {
      List<GenericValue> workOrderItemFulfillments=null;
      try {
        workOrderItemFulfillments=orderItem.getDelegator().findByAnd("WorkOrderItemFulfillment",UtilMisc.toMap("orderId",orderItem.getString("orderId"),"orderItemSeqId",orderItem.getString("orderItemSeqId")),null,true);
      }
 catch (      GenericEntityException e) {
      }
      if (workOrderItemFulfillments != null) {
        Iterator<GenericValue> iter=workOrderItemFulfillments.iterator();
        if (iter.hasNext()) {
          GenericValue WorkOrderItemFulfillment=iter.next();
          GenericValue workEffort=null;
          try {
            workEffort=WorkOrderItemFulfillment.getRelatedOne("WorkEffort",true);
          }
 catch (          GenericEntityException e) {
          }
          result=result.multiply(getWorkEffortRentalQuantity(workEffort));
        }
      }
    }
  }
  result=result.add(getOrderItemAdjustmentsTotal(orderItem,adjustments,true,false,false,forTax,forShipping));
  return result.setScale(scale,rounding);
}
