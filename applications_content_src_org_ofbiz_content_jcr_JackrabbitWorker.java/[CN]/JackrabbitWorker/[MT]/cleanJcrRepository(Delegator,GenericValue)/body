{
  Session session=null;
  List<Map<String,String>> nodesList=null;
  try {
    session=JackrabbitContainer.getUserSession(userLogin);
    nodesList=getRepositoryNodes(session,null);
    for (    Map<String,String> node : nodesList) {
      String nodePath=node.get("repositoryNode");
      if (UtilValidate.isEmpty(nodePath)) {
        continue;
      }
      if (nodePath.startsWith("/jcr:system")) {
        continue;
      }
      List<GenericValue> contentList=delegator.findByAnd("Content",UtilMisc.toMap("repositoryNode",nodePath));
      if (UtilValidate.isEmpty(contentList)) {
        Node n=session.getNode(nodePath);
        n.remove();
      }
    }
  }
 catch (  RepositoryException e) {
    Debug.logError(e,module);
    throw new RepositoryException(e);
  }
catch (  GenericEntityException e) {
    Debug.logError(e,module);
    throw new GenericEntityException(e);
  }
 finally {
    try {
      session.save();
    }
 catch (    RepositoryException e) {
      Debug.logError(e,module);
      throw new RepositoryException(e);
    }
    session.logout();
  }
}
