{
  Locale locale=(Locale)context.get("locale");
  Properties props=buildPccProperties(context);
  PcChargeApi api=getApi(props);
  if (api == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"AccountingPcChargeErrorGettingPaymentGatewayConfig",locale));
  }
  try {
    PcChargeServices.setCreditCardInfo(api,context);
  }
 catch (  GeneralException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  api.set(PcChargeApi.TRANS_AMOUNT,getAmountString(context,"processAmount"));
  api.set(PcChargeApi.TICKET_NUM,context.get("orderId"));
  api.set(PcChargeApi.MANUAL_FLAG,"0");
  api.set(PcChargeApi.PRESENT_FLAG,"1");
  if ("1".equals(props.getProperty("autoBill"))) {
    api.set(PcChargeApi.COMMAND,"1");
  }
 else {
    api.set(PcChargeApi.COMMAND,"4");
  }
  PcChargeApi out=null;
  try {
    out=api.send();
  }
 catch (  IOException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  GeneralException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (out != null) {
    Map<String,Object> result=ServiceUtil.returnSuccess();
    String resultCode=out.get(PcChargeApi.RESULT);
    boolean passed=false;
    if ("CAPTURED".equals(resultCode)) {
      result.put("authResult",Boolean.TRUE);
      result.put("captureResult",Boolean.TRUE);
      passed=true;
    }
 else     if ("APPROVED".equals(resultCode)) {
      result.put("authCode",out.get(PcChargeApi.AUTH_CODE));
      result.put("authResult",Boolean.TRUE);
      passed=true;
    }
 else     if ("PROCESSED".equals(resultCode)) {
      result.put("authResult",Boolean.TRUE);
    }
 else {
      result.put("authResult",Boolean.FALSE);
    }
    result.put("authRefNum",out.get(PcChargeApi.TROUTD) != null ? out.get(PcChargeApi.TROUTD) : "");
    result.put("processAmount",context.get("processAmount"));
    result.put("authCode",out.get(PcChargeApi.AUTH_CODE));
    result.put("authFlag",out.get(PcChargeApi.REFERENCE));
    result.put("authMessage",out.get(PcChargeApi.RESULT));
    result.put("cvCode",out.get(PcChargeApi.CVV2_CODE));
    result.put("avsCode",out.get(PcChargeApi.AVS_CODE));
    if (!passed) {
      String respMsg=out.get(PcChargeApi.RESULT) + " / " + out.get(PcChargeApi.AUTH_CODE);
      String refNum=out.get(PcChargeApi.TROUTD);
      result.put("customerRespMsgs",UtilMisc.toList(respMsg,refNum));
    }
    if (result.get("captureResult") != null) {
      result.put("captureCode",out.get(PcChargeApi.AUTH_CODE));
      result.put("captureFlag",out.get(PcChargeApi.REFERENCE));
      result.put("captureRefNum",out.get(PcChargeApi.TROUTD));
      result.put("captureMessage",out.get(PcChargeApi.RESULT));
    }
    return result;
  }
 else {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"AccountingPcChargeResultIsNull",locale));
  }
}
