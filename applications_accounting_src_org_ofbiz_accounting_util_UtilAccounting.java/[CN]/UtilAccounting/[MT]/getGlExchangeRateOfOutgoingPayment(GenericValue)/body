{
  BigDecimal exchangeRate=BigDecimal.ONE;
  Delegator delegator=paymentApplication.getDelegator();
  List<EntityExpr> andConditions=UtilMisc.toList(EntityCondition.makeCondition("glAccountTypeId","CURRENT_ASSET"),EntityCondition.makeCondition("debitCreditFlag","C"),EntityCondition.makeCondition("acctgTransTypeId","OUTGOING_PAYMENT"),EntityCondition.makeCondition("paymentId",paymentApplication.getString("paymentId")));
  EntityCondition whereCondition=EntityCondition.makeCondition(andConditions,EntityJoinOperator.AND);
  GenericValue amounts=EntityQuery.use(delegator).select("origAmount","amount").from("AcctgTransAndEntries").where(whereCondition).queryFirst();
  if (amounts == null) {
    return exchangeRate;
  }
  BigDecimal origAmount=amounts.getBigDecimal("origAmount");
  BigDecimal amount=amounts.getBigDecimal("amount");
  if (origAmount != null && amount != null && BigDecimal.ZERO.compareTo(origAmount) != 0 && BigDecimal.ZERO.compareTo(amount) != 0 && amount.compareTo(origAmount) != 0) {
    exchangeRate=amount.divide(origAmount,UtilNumber.getBigDecimalScale("ledger.decimals"),UtilNumber.getBigDecimalRoundingMode("invoice.rounding"));
  }
  return exchangeRate;
}
