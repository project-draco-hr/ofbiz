{
  Class<?> theClass=globalClassNameClassMap.get(name);
  if (theClass != null) {
    return theClass;
  }
  theClass=this.localClassNameClassMap.get(name);
  if (theClass != null) {
    return theClass;
  }
  if (this.localBadClassNameSet.contains(name) || globalBadClassNameSet.contains(name)) {
    if (Debug.verboseOn())     Debug.logVerbose("Cached loader got a known bad class name: [" + name + "]",module);
    throw new ClassNotFoundException("Cached loader got a known bad class name: " + name);
  }
  if (Debug.verboseOn())   Debug.logVerbose("Cached loader cache miss for class name: [" + name + "]",module);
synchronized (this) {
    try {
      theClass=super.loadClass(name,resolve);
      if (isGlobalPath(name)) {
synchronized (globalClassNameClassMap) {
          globalClassNameClassMap.put(name,theClass);
        }
      }
 else {
        this.localClassNameClassMap.put(name,theClass);
      }
    }
 catch (    ClassNotFoundException e) {
      if (Debug.verboseOn())       Debug.logVerbose("Remembering invalid class name: [" + name + "]",module);
      if (isGlobalPath(name)) {
synchronized (globalBadClassNameSet) {
          globalBadClassNameSet.add(name);
        }
      }
 else {
        this.localBadClassNameSet.add(name);
      }
      throw e;
    }
  }
  return theClass;
}
