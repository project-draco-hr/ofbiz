{
  Object fieldVal=fieldFma.get(methodContext.getEnvMap());
  if (fieldVal == null) {
    fieldVal="";
  }
 else   if (!(fieldVal instanceof String)) {
    try {
      fieldVal=MiniLangUtil.convertType(fieldVal,String.class,methodContext.getLocale(),methodContext.getTimeZone(),null);
    }
 catch (    Exception e) {
      throw new MiniLangRuntimeException(e,this);
    }
  }
  String regExp=exprFse.expandString(methodContext.getEnvMap());
  Pattern pattern=null;
  try {
    pattern=PatternFactory.createOrGetPerl5CompiledPattern(regExp,true);
  }
 catch (  MalformedPatternException e) {
    Debug.logError(e,"Regular Expression [" + regExp + "] is mal-formed: "+ e.toString(),module);
    throw new MiniLangRuntimeException(e,this);
  }
  PatternMatcher matcher=new Perl5Matcher();
  if (matcher.matches((String)fieldVal,pattern)) {
    return true;
  }
 else {
    return false;
  }
}
