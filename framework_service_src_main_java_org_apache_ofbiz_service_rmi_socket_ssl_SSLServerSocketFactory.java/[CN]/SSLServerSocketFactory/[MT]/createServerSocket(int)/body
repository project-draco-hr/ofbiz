{
  char[] passphrase=null;
  if (ksPass != null) {
    passphrase=ksPass.toCharArray();
  }
  KeyStore ks=null;
  if (keystore != null) {
    try {
      ks=KeyStore.getInstance(ksType);
      ks.load(new FileInputStream(keystore),passphrase);
    }
 catch (    NoSuchAlgorithmException e) {
      Debug.logError(e,module);
      throw new IOException(e.getMessage());
    }
catch (    CertificateException e) {
      Debug.logError(e,module);
      throw new IOException(e.getMessage());
    }
catch (    KeyStoreException e) {
      Debug.logError(e,module);
      throw new IOException(e.getMessage());
    }
  }
  if (alias == null) {
    throw new IOException("SSL certificate alias cannot be null; MUST be set for SSLServerSocketFactory!");
  }
  javax.net.ssl.SSLServerSocketFactory factory=null;
  try {
    if (ks != null) {
      factory=SSLUtil.getSSLServerSocketFactory(ks,ksPass,alias);
    }
 else {
      factory=SSLUtil.getSSLServerSocketFactory(alias);
    }
  }
 catch (  GeneralSecurityException e) {
    Debug.logError(e,"Error getting javax.net.ssl.SSLServerSocketFactory instance for Service Engine RMI calls: " + e.toString(),module);
    throw new IOException(e.toString());
  }
catch (  GenericConfigException e) {
    Debug.logError(e,"Error getting javax.net.ssl.SSLServerSocketFactory instance for Service Engine RMI calls: " + e.toString(),module);
  }
  if (factory == null) {
    throw new IOException("Unable to obtain SSLServerSocketFactory for provided KeyStore");
  }
  SSLServerSocket socket=(SSLServerSocket)factory.createServerSocket(port);
  socket.setNeedClientAuth(clientAuth);
  return socket;
}
