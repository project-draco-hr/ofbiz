{
  Connection connection=null;
  Statement stmt=null;
  try {
    connection=getConnection();
  }
 catch (  SQLException e) {
    String errMsg="Unable to esablish a connection with the database for helperName [" + this.helperName + "]... Error was: "+ e.toString();
    Debug.logError(e,errMsg,module);
    return errMsg;
  }
catch (  GenericEntityException e) {
    String errMsg="Unable to esablish a connection with the database for helperName [" + this.helperName + "]... Error was: "+ e.toString();
    Debug.logError(e,errMsg,module);
    return errMsg;
  }
  StringBuffer indexSqlBuf=new StringBuffer("DROP INDEX ");
  String tableName=entity.getTableName(datasourceInfo);
  String schemaName=(tableName == null || tableName.length() == 0 || tableName.indexOf('.') == -1) ? "" : tableName.substring(0,tableName.indexOf('.'));
  indexSqlBuf.append(schemaName);
  indexSqlBuf.append(".");
  indexSqlBuf.append(modelIndex.getName());
  String deleteIndexSql=indexSqlBuf.toString();
  if (Debug.verboseOn())   Debug.logVerbose("[deleteDeclaredIndex] index sql=" + deleteIndexSql,module);
  try {
    stmt=connection.createStatement();
    stmt.executeUpdate(deleteIndexSql);
  }
 catch (  SQLException e) {
    return "SQL Exception while executing the following:\n" + deleteIndexSql + "\nError was: "+ e.toString();
  }
 finally {
    try {
      if (stmt != null)       stmt.close();
    }
 catch (    SQLException e) {
      Debug.logError(e,module);
    }
    try {
      if (connection != null) {
        connection.close();
      }
    }
 catch (    SQLException e) {
      Debug.logError(e,module);
    }
  }
  return null;
}
