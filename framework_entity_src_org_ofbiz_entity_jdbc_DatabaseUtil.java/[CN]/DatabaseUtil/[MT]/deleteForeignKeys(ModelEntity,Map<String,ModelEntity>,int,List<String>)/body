{
  if (entity == null) {
    String errMsg="ModelEntity was null and is required to delete foreign keys for a table";
    if (messages != null)     messages.add(errMsg);
    Debug.logError(errMsg,module);
    return;
  }
  if (entity instanceof ModelViewEntity) {
    return;
  }
  String message="Deleting foreign keys for entity [" + entity.getEntityName() + "]";
  Debug.logImportant(message,module);
  if (messages != null)   messages.add(message);
  Iterator<ModelRelation> relationsIter=entity.getRelationsIterator();
  while (relationsIter.hasNext()) {
    ModelRelation modelRelation=relationsIter.next();
    if ("one".equals(modelRelation.getType())) {
      ModelEntity relModelEntity=modelEntities.get(modelRelation.getRelEntityName());
      if (relModelEntity == null) {
        String errMsg="Error removing foreign key: ModelEntity was null for related entity name " + modelRelation.getRelEntityName();
        if (messages != null)         messages.add(errMsg);
        Debug.logError(errMsg,module);
        continue;
      }
      if (relModelEntity instanceof ModelViewEntity) {
        String errMsg="Error removing foreign key: related entity is a view entity for related entity name " + modelRelation.getRelEntityName();
        if (messages != null)         messages.add(errMsg);
        Debug.logError(errMsg,module);
        continue;
      }
      String retMsg=deleteForeignKey(entity,modelRelation,relModelEntity,constraintNameClipLength);
      if (retMsg != null && retMsg.length() > 0) {
        if (messages != null)         messages.add(retMsg);
        Debug.logError(retMsg,module);
      }
    }
  }
}
