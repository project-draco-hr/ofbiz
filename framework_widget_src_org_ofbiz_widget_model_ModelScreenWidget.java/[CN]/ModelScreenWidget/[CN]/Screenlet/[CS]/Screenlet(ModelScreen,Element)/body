{
  super(modelScreen,screenletElement);
  this.idExdr=FlexibleStringExpander.getInstance(screenletElement.getAttribute("id"));
  boolean collapsible="true".equals(screenletElement.getAttribute("collapsible"));
  this.initiallyCollapsed=FlexibleStringExpander.getInstance(screenletElement.getAttribute("initially-collapsed"));
  if ("true".equals(this.initiallyCollapsed.getOriginal())) {
    collapsible=true;
  }
  this.collapsible=collapsible;
  this.saveCollapsed=!("false".equals(screenletElement.getAttribute("save-collapsed")));
  boolean padded=!"false".equals(screenletElement.getAttribute("padded"));
  if (this.collapsible && getName().isEmpty() && idExdr.isEmpty()) {
    throw new IllegalArgumentException("Collapsible screenlets must have a name or id [" + getModelScreen().getName() + "]");
  }
  this.titleExdr=FlexibleStringExpander.getInstance(screenletElement.getAttribute("title"));
  List<? extends Element> subElementList=UtilXml.childElementList(screenletElement);
  ArrayList<ModelScreenWidget> subWidgets=new ArrayList<ModelScreenWidget>(ModelScreenWidget.readSubWidgets(getModelScreen(),subElementList));
  Menu navigationMenu=null;
  String navMenuName=screenletElement.getAttribute("navigation-menu-name");
  if (!navMenuName.isEmpty()) {
    for (    ModelWidget subWidget : subWidgets) {
      if (navMenuName.equals(subWidget.getName()) && subWidget instanceof Menu) {
        navigationMenu=(Menu)subWidget;
        subWidgets.remove(subWidget);
        break;
      }
    }
  }
  this.navigationMenu=navigationMenu;
  Menu tabMenu=null;
  String tabMenuName=screenletElement.getAttribute("tab-menu-name");
  if (!tabMenuName.isEmpty()) {
    for (    ModelWidget subWidget : subWidgets) {
      if (tabMenuName.equals(subWidget.getName()) && subWidget instanceof Menu) {
        tabMenu=(Menu)subWidget;
        subWidgets.remove(subWidget);
        break;
      }
    }
  }
  this.tabMenu=tabMenu;
  Form navigationForm=null;
  String formName=screenletElement.getAttribute("navigation-form-name");
  if (!formName.isEmpty() && this.navigationMenu == null) {
    for (    ModelWidget subWidget : subWidgets) {
      if (formName.equals(subWidget.getName()) && subWidget instanceof Form) {
        navigationForm=(Form)subWidget;
        padded=false;
        break;
      }
    }
  }
  this.subWidgets=Collections.unmodifiableList(subWidgets);
  this.navigationForm=navigationForm;
  this.padded=padded;
}
