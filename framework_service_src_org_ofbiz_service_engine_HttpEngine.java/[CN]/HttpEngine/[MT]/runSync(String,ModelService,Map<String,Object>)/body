{
  DispatchContext dctx=dispatcher.getLocalContext(localName);
  String xmlContext=null;
  try {
    if (Debug.verboseOn())     Debug.logVerbose("Serializing Context --> " + context,module);
    xmlContext=XmlSerializer.serialize(context);
  }
 catch (  Exception e) {
    throw new GenericServiceException("Cannot serialize context.",e);
  }
  Map<String,Object> parameters=new HashMap<String,Object>();
  parameters.put("serviceName",modelService.invoke);
  if (xmlContext != null)   parameters.put("serviceContext",xmlContext);
  HttpClient http=new HttpClient(this.getLocation(modelService),parameters);
  String postResult=null;
  try {
    postResult=http.post();
  }
 catch (  HttpClientException e) {
    throw new GenericServiceException("Problems invoking HTTP request",e);
  }
  Map<String,Object> result=null;
  try {
    Object res=XmlSerializer.deserialize(postResult,dctx.getDelegator());
    if (res instanceof Map<?,?>)     result=UtilGenerics.checkMap(res);
 else     throw new GenericServiceException("Result not an instance of Map.");
  }
 catch (  Exception e) {
    throw new GenericServiceException("Problems deserializing result.",e);
  }
  return result;
}
