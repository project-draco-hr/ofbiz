{
  StringBuffer searchParamString=new StringBuffer();
  List constraintList=productSearchOptions.getConstraintList();
  Iterator constraintIter=constraintList.iterator();
  int categoriesCount=0;
  int featuresCount=0;
  int featureCategoriesCount=0;
  int featureGroupsCount=0;
  int keywordsCount=0;
  boolean isNotFirst=false;
  while (constraintIter.hasNext()) {
    ProductSearchConstraint psc=(ProductSearchConstraint)constraintIter.next();
    if (psc instanceof ProductSearch.CategoryConstraint) {
      ProductSearch.CategoryConstraint cc=(ProductSearch.CategoryConstraint)psc;
      categoriesCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("S_CAT");
      searchParamString.append(categoriesCount);
      searchParamString.append("=");
      searchParamString.append(cc.productCategoryId);
      searchParamString.append("&amp;S_CSB");
      searchParamString.append(categoriesCount);
      searchParamString.append("=");
      searchParamString.append(cc.includeSubCategories ? "Y" : "N");
      if (cc.exclude != null) {
        searchParamString.append("&amp;S_CEX");
        searchParamString.append(categoriesCount);
        searchParamString.append("=");
        searchParamString.append(cc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.FeatureConstraint) {
      ProductSearch.FeatureConstraint fc=(ProductSearch.FeatureConstraint)psc;
      featuresCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("S_PFI");
      searchParamString.append(featuresCount);
      searchParamString.append("=");
      searchParamString.append(fc.productFeatureId);
      if (fc.exclude != null) {
        searchParamString.append("&amp;S_PFX");
        searchParamString.append(featuresCount);
        searchParamString.append("=");
        searchParamString.append(fc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.FeatureCategoryConstraint) {
      ProductSearch.FeatureCategoryConstraint pfcc=(ProductSearch.FeatureCategoryConstraint)psc;
      featureCategoriesCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("S_FCI");
      searchParamString.append(featureCategoriesCount);
      searchParamString.append("=");
      searchParamString.append(pfcc.productFeatureCategoryId);
      if (pfcc.exclude != null) {
        searchParamString.append("&amp;S_FCX");
        searchParamString.append(featureCategoriesCount);
        searchParamString.append("=");
        searchParamString.append(pfcc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.FeatureGroupConstraint) {
      ProductSearch.FeatureGroupConstraint pfgc=(ProductSearch.FeatureGroupConstraint)psc;
      featureGroupsCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("S_FGI");
      searchParamString.append(featureGroupsCount);
      searchParamString.append("=");
      searchParamString.append(pfgc.productFeatureGroupId);
      if (pfgc.exclude != null) {
        searchParamString.append("&amp;S_FGX");
        searchParamString.append(featureGroupsCount);
        searchParamString.append("=");
        searchParamString.append(pfgc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.KeywordConstraint) {
      ProductSearch.KeywordConstraint kc=(ProductSearch.KeywordConstraint)psc;
      keywordsCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("SEARCH_STRING");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(UtilHttp.encodeBlanks(kc.keywordsString));
      searchParamString.append("&amp;SEARCH_OPERATOR");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(kc.isAnd ? "AND" : "OR");
      searchParamString.append("&amp;SEARCH_ANYPRESUF");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(kc.anyPrefix | kc.anySuffix ? "Y" : "N");
    }
 else     if (psc instanceof ProductSearch.ListPriceRangeConstraint) {
      ProductSearch.ListPriceRangeConstraint lprc=(ProductSearch.ListPriceRangeConstraint)psc;
      if (lprc.lowPrice != null || lprc.highPrice != null) {
        if (isNotFirst) {
          searchParamString.append("&amp;");
        }
 else {
          isNotFirst=true;
        }
        searchParamString.append("S_LPR");
        searchParamString.append("=");
        if (lprc.lowPrice != null)         searchParamString.append(lprc.lowPrice);
        searchParamString.append("_");
        if (lprc.highPrice != null)         searchParamString.append(lprc.highPrice);
      }
    }
 else     if (psc instanceof ProductSearch.SupplierConstraint) {
      ProductSearch.SupplierConstraint suppc=(ProductSearch.SupplierConstraint)psc;
      if (suppc.supplierPartyId != null) {
        if (isNotFirst) {
          searchParamString.append("&amp;");
        }
 else {
          isNotFirst=true;
        }
        searchParamString.append("S_SUP");
        searchParamString.append("=");
        searchParamString.append(suppc.supplierPartyId);
      }
    }
  }
  String topProductCategoryId=productSearchOptions.getTopProductCategoryId();
  if (topProductCategoryId != null) {
    searchParamString.append("&amp;S_TPC");
    searchParamString.append("=");
    searchParamString.append(topProductCategoryId);
  }
  ResultSortOrder resultSortOrder=productSearchOptions.getResultSortOrder();
  if (resultSortOrder != null) {
    if (resultSortOrder instanceof ProductSearch.SortKeywordRelevancy) {
      searchParamString.append("&amp;S_O=SKR");
    }
 else     if (resultSortOrder instanceof ProductSearch.SortProductField) {
      ProductSearch.SortProductField spf=(ProductSearch.SortProductField)resultSortOrder;
      searchParamString.append("&amp;S_O=SPF:");
      searchParamString.append(spf.fieldName);
    }
 else     if (resultSortOrder instanceof ProductSearch.SortProductPrice) {
      ProductSearch.SortProductPrice spp=(ProductSearch.SortProductPrice)resultSortOrder;
      searchParamString.append("&amp;S_O=SPP:");
      searchParamString.append(spp.productPriceTypeId);
    }
    searchParamString.append("&amp;S_A=");
    searchParamString.append(resultSortOrder.isAscending() ? "Y" : "N");
  }
  return searchParamString.toString();
}
