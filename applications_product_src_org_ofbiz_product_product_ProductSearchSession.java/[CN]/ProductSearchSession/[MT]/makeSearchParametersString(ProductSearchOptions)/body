{
  StringBuffer searchParamString=new StringBuffer();
  List constraintList=productSearchOptions.getConstraintList();
  Iterator constraintIter=constraintList.iterator();
  int categoriesCount=0;
  int featuresCount=0;
  int keywordsCount=0;
  boolean isNotFirst=false;
  while (constraintIter.hasNext()) {
    ProductSearchConstraint psc=(ProductSearchConstraint)constraintIter.next();
    if (psc instanceof ProductSearch.CategoryConstraint) {
      ProductSearch.CategoryConstraint cc=(ProductSearch.CategoryConstraint)psc;
      categoriesCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("SEARCH_CATEGORY_ID");
      searchParamString.append(categoriesCount);
      searchParamString.append("=");
      searchParamString.append(cc.productCategoryId);
      searchParamString.append("&amp;SEARCH_SUB_CATEGORIES");
      searchParamString.append(categoriesCount);
      searchParamString.append("=");
      searchParamString.append(cc.includeSubCategories ? "Y" : "N");
      if (cc.exclude != null) {
        searchParamString.append("&amp;SEARCH_CATEGORY_EXC");
        searchParamString.append(categoriesCount);
        searchParamString.append("=");
        searchParamString.append(cc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.FeatureConstraint) {
      ProductSearch.FeatureConstraint fc=(ProductSearch.FeatureConstraint)psc;
      featuresCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("SEARCH_FEAT");
      searchParamString.append(featuresCount);
      searchParamString.append("=");
      searchParamString.append(fc.productFeatureId);
      if (fc.exclude != null) {
        searchParamString.append("&amp;SEARCH_FEAT_EXC");
        searchParamString.append(categoriesCount);
        searchParamString.append("=");
        searchParamString.append(fc.exclude.booleanValue() ? "Y" : "N");
      }
    }
 else     if (psc instanceof ProductSearch.KeywordConstraint) {
      ProductSearch.KeywordConstraint kc=(ProductSearch.KeywordConstraint)psc;
      keywordsCount++;
      if (isNotFirst) {
        searchParamString.append("&amp;");
      }
 else {
        isNotFirst=true;
      }
      searchParamString.append("SEARCH_STRING");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(UtilHttp.encodeBlanks(kc.keywordsString));
      searchParamString.append("&amp;SEARCH_OPERATOR");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(kc.isAnd ? "AND" : "OR");
      searchParamString.append("&amp;SEARCH_ANYPRESUF");
      searchParamString.append(keywordsCount);
      searchParamString.append("=");
      searchParamString.append(kc.anyPrefix | kc.anySuffix ? "Y" : "N");
    }
  }
  ResultSortOrder resultSortOrder=productSearchOptions.getResultSortOrder();
  if (resultSortOrder != null) {
    if (resultSortOrder instanceof ProductSearch.SortKeywordRelevancy) {
      searchParamString.append("&amp;sortOrder=SortKeywordRelevancy");
    }
 else     if (resultSortOrder instanceof ProductSearch.SortProductField) {
      ProductSearch.SortProductField spf=(ProductSearch.SortProductField)resultSortOrder;
      searchParamString.append("&amp;sortOrder=SortProductField:");
      searchParamString.append(spf.fieldName);
    }
 else     if (resultSortOrder instanceof ProductSearch.SortProductPrice) {
      ProductSearch.SortProductPrice spp=(ProductSearch.SortProductPrice)resultSortOrder;
      searchParamString.append("&amp;sortOrder=SortProductPrice:");
      searchParamString.append(spp.productPriceTypeId);
    }
    searchParamString.append("&amp;sortAscending=");
    searchParamString.append(resultSortOrder.isAscending() ? "Y" : "N");
  }
  return searchParamString.toString();
}
