{
  List<? extends Element> actionElementList=UtilXml.childElementList(parentElement);
  ArrayList<ModelMenuAction> actions=new ArrayList<ModelMenuAction>(actionElementList.size());
  for (  Element actionElement : actionElementList) {
    if ("set".equals(actionElement.getNodeName())) {
      actions.add(new SetField(modelMenu,actionElement));
    }
 else     if ("property-map".equals(actionElement.getNodeName())) {
      actions.add(new PropertyMap(modelMenu,actionElement));
    }
 else     if ("property-to-field".equals(actionElement.getNodeName())) {
      actions.add(new PropertyToField(modelMenu,actionElement));
    }
 else     if ("script".equals(actionElement.getNodeName())) {
      actions.add(new Script(modelMenu,actionElement));
    }
 else     if ("service".equals(actionElement.getNodeName())) {
      actions.add(new Service(modelMenu,actionElement));
    }
 else     if ("entity-one".equals(actionElement.getNodeName())) {
      actions.add(new EntityOne(modelMenu,actionElement));
    }
 else     if ("entity-and".equals(actionElement.getNodeName())) {
      actions.add(new EntityAnd(modelMenu,actionElement));
    }
 else     if ("entity-condition".equals(actionElement.getNodeName())) {
      actions.add(new EntityCondition(modelMenu,actionElement));
    }
 else {
      throw new IllegalArgumentException("Action element not supported with name: " + actionElement.getNodeName());
    }
  }
  actions.trimToSize();
  return actions;
}
