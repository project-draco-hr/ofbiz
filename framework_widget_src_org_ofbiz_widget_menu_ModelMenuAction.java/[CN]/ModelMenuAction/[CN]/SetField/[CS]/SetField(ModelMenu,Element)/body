{
  super(modelMenu,setElement);
  this.field=FlexibleMapAccessor.getInstance(setElement.getAttribute("field"));
  this.fromField=UtilValidate.isNotEmpty(setElement.getAttribute("from-field")) ? new FlexibleMapAccessor<Object>(setElement.getAttribute("from-field")) : null;
  this.valueExdr=UtilValidate.isNotEmpty(setElement.getAttribute("value")) ? FlexibleStringExpander.getInstance(setElement.getAttribute("value")) : null;
  this.defaultExdr=UtilValidate.isNotEmpty(setElement.getAttribute("default-value")) ? FlexibleStringExpander.getInstance(setElement.getAttribute("default-value")) : null;
  this.globalExdr=FlexibleStringExpander.getInstance(setElement.getAttribute("global"));
  this.type=setElement.getAttribute("type");
  this.toScope=setElement.getAttribute("to-scope");
  this.fromScope=setElement.getAttribute("from-scope");
  if (this.fromField != null && this.valueExdr != null) {
    throw new IllegalArgumentException("Cannot specify a from-field [" + setElement.getAttribute("from-field") + "] and a value ["+ setElement.getAttribute("value")+ "] on the set action in a screen widget");
  }
}
