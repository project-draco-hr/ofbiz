{
  super(modelMenu,serviceElement);
  this.serviceNameExdr=FlexibleStringExpander.getInstance(serviceElement.getAttribute("service-name"));
  this.resultMapNameAcsr=UtilValidate.isNotEmpty(serviceElement.getAttribute("result-map-name")) ? new FlexibleMapAccessor<Map<String,Object>>(serviceElement.getAttribute("result-map-name")) : null;
  this.autoFieldMapExdr=FlexibleStringExpander.getInstance(serviceElement.getAttribute("auto-field-map"));
  List<? extends Element> fieldMapElementList=UtilXml.childElementList(serviceElement,"field-map");
  if (fieldMapElementList.size() > 0) {
    this.fieldMap=FastMap.newInstance();
    for (    Element fieldMapElement : fieldMapElementList) {
      this.fieldMap.put(new FlexibleMapAccessor<Object>(UtilFormatOut.checkEmpty(fieldMapElement.getAttribute("field-name"),fieldMapElement.getAttribute("env-name"))),new FlexibleMapAccessor<Object>(fieldMapElement.getAttribute("env-name")));
    }
  }
}
