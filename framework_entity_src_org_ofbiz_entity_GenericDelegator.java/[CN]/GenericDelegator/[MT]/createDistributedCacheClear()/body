{
  if (useDistributedCacheClear()) {
    ClassLoader loader=Thread.currentThread().getContextClassLoader();
    String distributedCacheClearClassName=this.delegatorInfo.getDistributedCacheClearClassName();
    try {
      Class<?> dccClass=loader.loadClass(distributedCacheClearClassName);
      DistributedCacheClear distributedCacheClear=UtilGenerics.cast(dccClass.newInstance());
      distributedCacheClear.setDelegator(this,this.delegatorInfo.getDistributedCacheClearUserLoginId());
      return distributedCacheClear;
    }
 catch (    ClassNotFoundException e) {
      Debug.logWarning(e,"DistributedCacheClear class with name " + distributedCacheClearClassName + " was not found, distributed cache clearing will be disabled",module);
    }
catch (    InstantiationException e) {
      Debug.logWarning(e,"DistributedCacheClear class with name " + distributedCacheClearClassName + " could not be instantiated, distributed cache clearing will be disabled",module);
    }
catch (    IllegalAccessException e) {
      Debug.logWarning(e,"DistributedCacheClear class with name " + distributedCacheClearClassName + " could not be accessed (illegal), distributed cache clearing will be disabled",module);
    }
catch (    ClassCastException e) {
      Debug.logWarning(e,"DistributedCacheClear class with name " + distributedCacheClearClassName + " does not implement the DistributedCacheClear interface, distributed cache clearing will be disabled",module);
    }
  }
 else {
    Debug.logVerbose("Distributed Cache Clear System disabled for delegator [" + delegatorFullName + "]",module);
  }
  return null;
}
