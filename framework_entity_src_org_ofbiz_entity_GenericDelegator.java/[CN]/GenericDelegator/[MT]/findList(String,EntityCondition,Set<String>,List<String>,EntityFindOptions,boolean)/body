{
  EntityEcaRuleRunner<?> ecaRunner=null;
  GenericValue dummyValue=null;
  if (useCache) {
    ecaRunner=this.getEcaRuleRunner(entityName);
    ModelEntity modelEntity=getModelReader().getModelEntity(entityName);
    dummyValue=GenericValue.create(modelEntity);
    ecaRunner.evalRules(EntityEcaHandler.EV_CACHE_CHECK,EntityEcaHandler.OP_FIND,dummyValue,false);
    List<GenericValue> cacheList=this.cache.get(entityName,entityCondition,orderBy);
    if (cacheList != null) {
      return cacheList;
    }
  }
  boolean beganTransaction=false;
  try {
    if (alwaysUseTransaction) {
      beganTransaction=TransactionUtil.begin();
    }
    EntityListIterator eli=this.find(entityName,entityCondition,null,fieldsToSelect,orderBy,findOptions);
    eli.setDelegator(this);
    List<GenericValue> list=eli.getCompleteList();
    eli.close();
    if (useCache) {
      ecaRunner.evalRules(EntityEcaHandler.EV_CACHE_PUT,EntityEcaHandler.OP_FIND,dummyValue,false);
      this.cache.put(entityName,entityCondition,orderBy,list);
    }
    TransactionUtil.commit(beganTransaction);
    return list;
  }
 catch (  Exception e) {
    String errMsg="Failure in findByCondition operation for entity [" + entityName + "]: "+ e.toString()+ ". Rolling back transaction.";
    Debug.logError(e,errMsg,module);
    TransactionUtil.rollback(beganTransaction,errMsg,e);
    throw new GenericEntityException(e);
  }
}
