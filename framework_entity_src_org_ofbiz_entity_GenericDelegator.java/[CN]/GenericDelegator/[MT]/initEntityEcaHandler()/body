{
  if (this.entityEcaHandler != null || this.warnNoEcaHandler) {
    return;
  }
  if (this.delegatorInfo.getEntityEcaEnabled()) {
    ClassLoader loader=Thread.currentThread().getContextClassLoader();
    String entityEcaHandlerClassName=this.delegatorInfo.getEntityEcaHandlerClassName();
    try {
      Class<?> eecahClass=loader.loadClass(entityEcaHandlerClassName);
      this.entityEcaHandler=UtilGenerics.cast(eecahClass.newInstance());
      this.entityEcaHandler.setDelegator(this);
    }
 catch (    ClassNotFoundException e) {
      Debug.logWarning(e,"EntityEcaHandler class with name " + entityEcaHandlerClassName + " was not found, Entity ECA Rules will be disabled",module);
    }
catch (    InstantiationException e) {
      Debug.logWarning(e,"EntityEcaHandler class with name " + entityEcaHandlerClassName + " could not be instantiated, Entity ECA Rules will be disabled",module);
    }
catch (    IllegalAccessException e) {
      Debug.logWarning(e,"EntityEcaHandler class with name " + entityEcaHandlerClassName + " could not be accessed (illegal), Entity ECA Rules will be disabled",module);
    }
catch (    ClassCastException e) {
      Debug.logWarning(e,"EntityEcaHandler class with name " + entityEcaHandlerClassName + " does not implement the EntityEcaHandler interface, Entity ECA Rules will be disabled",module);
    }
  }
 else   if (!this.warnNoEcaHandler) {
    Debug.logInfo("Entity ECA Handler disabled for delegator [" + delegatorFullName + "]",module);
    this.warnNoEcaHandler=true;
  }
}
