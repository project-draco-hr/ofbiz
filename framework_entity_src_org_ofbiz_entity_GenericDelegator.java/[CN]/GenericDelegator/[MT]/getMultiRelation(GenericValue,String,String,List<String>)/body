{
  boolean beganTransaction=false;
  try {
    if (alwaysUseTransaction) {
      beganTransaction=TransactionUtil.begin();
    }
    ModelEntity modelEntity=value.getModelEntity();
    ModelRelation modelRelationOne=modelEntity.getRelation(relationNameOne);
    ModelEntity modelEntityOne=getModelEntity(modelRelationOne.getRelEntityName());
    ModelRelation modelRelationTwo=modelEntityOne.getRelation(relationNameTwo);
    ModelEntity modelEntityTwo=getModelEntity(modelRelationTwo.getRelEntityName());
    GenericHelper helper=getEntityHelper(modelEntity);
    List<GenericValue> result=helper.findByMultiRelation(value,modelRelationOne,modelEntityOne,modelRelationTwo,modelEntityTwo,orderBy);
    TransactionUtil.commit(beganTransaction);
    return result;
  }
 catch (  Exception e) {
    String errMsg="Failure in getMultiRelation operation for entity [" + value.getEntityName() + "]: "+ e.toString()+ ". Rolling back transaction.";
    Debug.logError(e,errMsg,module);
    TransactionUtil.rollback(beganTransaction,errMsg,e);
    throw new GenericEntityException(e);
  }
}
