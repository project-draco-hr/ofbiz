{
  if (value == null || mf == null || !mf.getEnableAuditLog() || this.testRollbackInProgress) {
    return;
  }
  String newValueText=null;
  String oldValueText=null;
  GenericValue oldGv=null;
  if (isUpdate) {
    oldGv=this.findOne(value.getEntityName(),value.getPrimaryKey(),false);
  }
 else   if (isRemove) {
    oldGv=value;
  }
  if (oldGv == null) {
    if (isUpdate || isRemove) {
      oldValueText="[ERROR] Old value not found even though it was an update or remove";
    }
  }
 else {
    Object oldValue=oldGv.get(mf.getName());
    if (oldValue != null) {
      oldValueText=oldValue.toString();
      if (oldValueText.length() > 250) {
        oldValueText=oldValueText.substring(0,250);
      }
    }
  }
  if (!isRemove) {
    Object newValue=value.get(mf.getName());
    if (newValue != null) {
      newValueText=newValue.toString();
      if (newValueText.length() > 250) {
        newValueText=newValueText.substring(0,250);
      }
    }
  }
  if (!(newValueText == null ? "" : newValueText).equals((oldValueText == null ? "" : oldValueText))) {
    GenericValue entityAuditLog=this.makeValue("EntityAuditLog");
    entityAuditLog.set("auditHistorySeqId",this.getNextSeqId("EntityAuditLog"));
    entityAuditLog.set("changedEntityName",value.getEntityName());
    entityAuditLog.set("changedFieldName",mf.getName());
    String pkCombinedValueText=value.getPkShortValueString();
    if (pkCombinedValueText.length() > 250) {
      pkCombinedValueText=pkCombinedValueText.substring(0,250);
    }
    entityAuditLog.set("pkCombinedValueText",pkCombinedValueText);
    entityAuditLog.set("newValueText",newValueText);
    entityAuditLog.set("oldValueText",oldValueText);
    entityAuditLog.set("changedDate",nowTimestamp);
    entityAuditLog.set("changedByInfo",getCurrentUserIdentifier());
    entityAuditLog.set("changedSessionInfo",getCurrentSessionIdentifier());
    this.create(entityAuditLog);
  }
}
