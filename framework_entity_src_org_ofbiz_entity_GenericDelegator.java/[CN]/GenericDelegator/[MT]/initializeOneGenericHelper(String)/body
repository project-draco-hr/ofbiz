{
  GenericHelperInfo helperInfo=this.getGroupHelperInfo(groupName);
  if (helperInfo == null) {
    if (Debug.infoOn()) {
      Debug.logInfo("Delegator \"" + delegatorFullName + "\" NOT initializing helper for entity group \""+ groupName+ "\" because the group is not associated to this delegator.",module);
    }
    return;
  }
  String helperBaseName=helperInfo.getHelperBaseName();
  if (Debug.infoOn()) {
    Debug.logInfo("Delegator \"" + delegatorFullName + "\" initializing helper \""+ helperBaseName+ "\" for entity group \""+ groupName+ "\".",module);
  }
  if (UtilValidate.isNotEmpty(helperInfo.getHelperFullName())) {
    ModelFieldTypeReader.getModelFieldTypeReader(helperBaseName);
    GenericHelper helper=GenericHelperFactory.getHelper(helperInfo);
    try {
      Datasource datasource=EntityConfigUtil.getDatasource(helperBaseName);
      if (datasource.getCheckOnStart()) {
        if (Debug.infoOn()) {
          Debug.logInfo("Doing database check as requested in entityengine.xml with addMissing=" + datasource.getAddMissingOnStart(),module);
        }
        helper.checkDataSource(this.getModelEntityMapByGroup(groupName),null,datasource.getAddMissingOnStart());
      }
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,e.getMessage(),module);
    }
  }
}
