{
  ModelEntity model=entity.getModelEntity();
  String entityName=model.getEntityName();
  Iterator<ModelField> i=model.getFieldsIterator();
  while (i.hasNext()) {
    ModelField field=i.next();
    ModelField.EncryptMethod encryptMethod=field.getEncryptMethod();
    if (encryptMethod.isEncrypted()) {
      String keyName=entityName;
      if (model instanceof ModelViewEntity) {
        ModelViewEntity modelView=(ModelViewEntity)model;
        keyName=modelView.getAliasedEntity(modelView.getAlias(field.getName()).getEntityAlias(),modelReader).getEntityName();
      }
      String encValue=(String)entity.get(field.getName());
      if (UtilValidate.isNotEmpty(encValue)) {
        try {
          entity.dangerousSetNoCheckButFast(field,crypto.decrypt(keyName,encValue));
        }
 catch (        EntityCryptoException e) {
          if (Debug.warningOn()) {
            Debug.logWarning(e,"Problem decrypting field [" + entityName + " / "+ field.getName()+ "]",module);
          }
        }
      }
    }
  }
}
