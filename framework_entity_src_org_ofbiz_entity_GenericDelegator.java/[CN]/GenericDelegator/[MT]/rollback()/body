{
  if (!this.testMode) {
    Debug.logError("Rollback requested outside of testmode",module);
  }
  this.testMode=false;
  this.testRollbackInProgress=true;
synchronized (testOperations) {
    Debug.logInfo("Rolling back " + testOperations.size() + " entity operations",module);
    ListIterator<TestOperation> iterator=this.testOperations.listIterator(this.testOperations.size());
    while (iterator.hasPrevious()) {
      TestOperation testOperation=iterator.previous();
      try {
        if (testOperation.getOperation().equals(OperationType.INSERT)) {
          this.removeValue(testOperation.getValue());
        }
 else         if (testOperation.getOperation().equals(OperationType.UPDATE)) {
          this.store(testOperation.getValue());
        }
 else         if (testOperation.getOperation().equals(OperationType.DELETE)) {
          this.create(testOperation.getValue());
        }
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e.toString(),module);
      }
    }
    this.testOperations.clear();
  }
  this.testRollbackInProgress=false;
  this.testMode=true;
}
