{
  boolean beganTransaction=false;
  try {
    if (alwaysUseTransaction) {
      beganTransaction=TransactionUtil.begin();
    }
    if (sequencer == null) {
synchronized (this) {
        if (sequencer == null) {
          String helperName=this.getEntityHelperName("SequenceValueItem");
          ModelEntity seqEntity=this.getModelEntity("SequenceValueItem");
          sequencer=new SequenceUtil(helperName,seqEntity,"seqName","seqId");
        }
      }
    }
    Long newSeqId=sequencer == null ? null : sequencer.getNextSeqId(seqName,staggerMax);
    TransactionUtil.commit(beganTransaction);
    return newSeqId;
  }
 catch (  GenericEntityException e) {
    String errMsg="Failure in getNextSeqIdLong operation for seqName [" + seqName + "]: "+ e.toString()+ ". Rolling back transaction.";
    Debug.logError(e,errMsg,module);
    try {
      TransactionUtil.rollback(beganTransaction,errMsg,e);
    }
 catch (    GenericEntityException e2) {
      Debug.logError(e2,"[GenericDelegator] Could not rollback transaction: " + e2.toString(),module);
    }
    Debug.logError(e,"[GenericDelegator] Error getting next sequence ID: " + e.toString(),module);
    return null;
  }
}
