{
  boolean beganTransaction=false;
  try {
    if (alwaysUseTransaction) {
      beganTransaction=TransactionUtil.begin();
    }
    GenericValue checkValue=this.findByPrimaryKey(value.getPrimaryKey());
    if (checkValue != null) {
      this.store(value,doCacheClear);
    }
 else {
      this.create(value,doCacheClear);
    }
    if (value.lockEnabled()) {
      this.refresh(value);
    }
    return value;
  }
 catch (  GenericEntityException e) {
    String errMsg="Failure in createOrStore operation for entity [" + value.getEntityName() + "]: "+ e.toString()+ ". Rolling back transaction.";
    Debug.logError(e,errMsg,module);
    try {
      TransactionUtil.rollback(beganTransaction,errMsg,e);
    }
 catch (    GenericEntityException e2) {
      Debug.logError(e2,"[GenericDelegator] Could not rollback transaction: " + e2.toString(),module);
    }
    throw e;
  }
 finally {
    TransactionUtil.commit(beganTransaction);
  }
}
