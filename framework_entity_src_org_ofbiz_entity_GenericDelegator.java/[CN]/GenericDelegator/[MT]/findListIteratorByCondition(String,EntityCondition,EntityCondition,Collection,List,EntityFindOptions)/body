{
  if (!TransactionUtil.isTransactionInPlace()) {
    Exception newE=new Exception("Stack Trace");
    Debug.logError(newE,"ERROR: Cannot do a find that returns an EntityListIterator with no transaction in place. Wrap this call in a transaction.",module);
  }
  ModelEntity modelEntity=getModelReader().getModelEntity(entityName);
  GenericValue dummyValue=GenericValue.create(modelEntity);
  Map ecaEventMap=this.getEcaEntityEventMap(modelEntity.getEntityName());
  this.evalEcaRules(EntityEcaHandler.EV_VALIDATE,EntityEcaHandler.OP_FIND,dummyValue,ecaEventMap,(ecaEventMap == null),false);
  if (whereEntityCondition != null) {
    whereEntityCondition.checkCondition(modelEntity);
    whereEntityCondition.encryptConditionFields(modelEntity,this);
  }
  if (havingEntityCondition != null) {
    havingEntityCondition.checkCondition(modelEntity);
    havingEntityCondition.encryptConditionFields(modelEntity,this);
  }
  this.evalEcaRules(EntityEcaHandler.EV_RUN,EntityEcaHandler.OP_FIND,dummyValue,ecaEventMap,(ecaEventMap == null),false);
  GenericHelper helper=getEntityHelper(modelEntity.getEntityName());
  EntityListIterator eli=helper.findListIteratorByCondition(modelEntity,whereEntityCondition,havingEntityCondition,fieldsToSelect,orderBy,findOptions);
  eli.setDelegator(this);
  this.evalEcaRules(EntityEcaHandler.EV_RETURN,EntityEcaHandler.OP_FIND,dummyValue,ecaEventMap,(ecaEventMap == null),false);
  return eli;
}
