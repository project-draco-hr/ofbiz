{
  boolean isValid=true;
  List messages=(List)errorListAcsr.get(methodContext);
  if (messages == null) {
    messages=new LinkedList();
    errorListAcsr.put(methodContext,messages);
  }
  Object fieldVal=null;
  if (!mapAcsr.isEmpty()) {
    Map fromMap=(Map)mapAcsr.get(methodContext);
    if (fromMap == null) {
      if (Debug.infoOn())       Debug.logInfo("Map not found with name " + mapAcsr + ", running operations",module);
    }
 else {
      fieldVal=fieldAcsr.get(fromMap,methodContext);
    }
  }
 else {
    fieldVal=fieldAcsr.get(methodContext);
  }
  String fieldStr=fieldVal.toString();
  StringBuffer errorDetails=new StringBuffer();
  if (fieldStr.indexOf(' ') >= 0) {
    isValid=false;
    errorDetails.append("[space found at position " + (fieldStr.indexOf(' ') + 1) + "]");
  }
  if (fieldStr.indexOf('"') >= 0) {
    isValid=false;
    errorDetails.append("[double-quote found at position " + (fieldStr.indexOf('"') + 1) + "]");
  }
  if (fieldStr.indexOf('\'') >= 0) {
    isValid=false;
    errorDetails.append("[single-quote found at position " + (fieldStr.indexOf('\'') + 1) + "]");
  }
  if (fieldStr.indexOf('&') >= 0) {
    isValid=false;
    errorDetails.append("[ampersand found at position " + (fieldStr.indexOf('&') + 1) + "]");
  }
  if (fieldStr.indexOf('?') >= 0) {
    isValid=false;
    errorDetails.append("[question mark found at position " + (fieldStr.indexOf('?') + 1) + "]");
  }
  if (fieldStr.indexOf('<') >= 0) {
    isValid=false;
    errorDetails.append("[less-than sign found at position " + (fieldStr.indexOf('<') + 1) + "]");
  }
  if (fieldStr.indexOf('>') >= 0) {
    isValid=false;
    errorDetails.append("[greater-than sign found at position " + (fieldStr.indexOf('>') + 1) + "]");
  }
  if (fieldStr.indexOf('\\') >= 0) {
    isValid=false;
    errorDetails.append("[back-slash found at position " + (fieldStr.indexOf('\\') + 1) + "]");
  }
  if (fieldStr.indexOf('/') >= 0) {
    isValid=false;
    errorDetails.append("[forward-slash found at position " + (fieldStr.indexOf('/') + 1) + "]");
  }
  if (!isValid) {
    this.addMessage(messages,methodContext,"The ID value in the field [" + fieldAcsr + "] was not valid",": " + errorDetails.toString());
  }
  return true;
}
