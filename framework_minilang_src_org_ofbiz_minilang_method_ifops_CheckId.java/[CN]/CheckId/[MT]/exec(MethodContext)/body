{
  boolean isValid=true;
  List<Object> messages=errorListAcsr.get(methodContext);
  if (messages == null) {
    messages=FastList.newInstance();
    errorListAcsr.put(methodContext,messages);
  }
  Object fieldVal=null;
  if (!mapAcsr.isEmpty()) {
    Map<String,? extends Object> fromMap=mapAcsr.get(methodContext);
    if (fromMap == null) {
      if (Debug.infoOn())       Debug.logInfo("Map not found with name " + mapAcsr + ", running operations",module);
    }
 else {
      fieldVal=fieldAcsr.get(fromMap,methodContext);
    }
  }
 else {
    fieldVal=fieldAcsr.get(methodContext);
  }
  String fieldStr=fieldVal.toString();
  StringBuilder errorDetails=new StringBuilder();
  isValid=UtilValidate.isValidDatabaseId(fieldStr,errorDetails);
  if (!isValid) {
    this.addMessage(messages,methodContext,"The ID value in the field [" + fieldAcsr + "] was not valid",": " + errorDetails.toString());
  }
  return true;
}
