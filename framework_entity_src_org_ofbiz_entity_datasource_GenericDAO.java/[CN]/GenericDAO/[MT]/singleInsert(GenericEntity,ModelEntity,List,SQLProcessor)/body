{
  if (modelEntity instanceof ModelViewEntity) {
    return singleUpdateView(entity,(ModelViewEntity)modelEntity,fieldsToSave,sqlP);
  }
  boolean stampTxIsField=modelEntity.isField(ModelEntity.STAMP_TX_FIELD);
  boolean createStampTxIsField=modelEntity.isField(ModelEntity.CREATE_STAMP_TX_FIELD);
  if ((stampTxIsField || createStampTxIsField) && (!entity.getIsFromEntitySync() || (stampTxIsField && entity.get(ModelEntity.STAMP_TX_FIELD) == null) || (createStampTxIsField && entity.get(ModelEntity.CREATE_STAMP_TX_FIELD) == null))) {
    Timestamp txStartStamp=TransactionUtil.getTransactionStartStamp();
    if (stampTxIsField && (!entity.getIsFromEntitySync() || entity.get(ModelEntity.STAMP_TX_FIELD) == null)) {
      entity.set(ModelEntity.STAMP_TX_FIELD,txStartStamp);
      addFieldIfMissing(fieldsToSave,ModelEntity.STAMP_TX_FIELD,modelEntity);
    }
    if (createStampTxIsField && (!entity.getIsFromEntitySync() || entity.get(ModelEntity.CREATE_STAMP_TX_FIELD) == null)) {
      entity.set(ModelEntity.CREATE_STAMP_TX_FIELD,txStartStamp);
      addFieldIfMissing(fieldsToSave,ModelEntity.CREATE_STAMP_TX_FIELD,modelEntity);
    }
  }
  boolean stampIsField=modelEntity.isField(ModelEntity.STAMP_FIELD);
  boolean createStampIsField=modelEntity.isField(ModelEntity.CREATE_STAMP_FIELD);
  if ((stampIsField || createStampIsField) && (!entity.getIsFromEntitySync() || (stampIsField && entity.get(ModelEntity.STAMP_FIELD) == null) || (createStampIsField && entity.get(ModelEntity.CREATE_STAMP_FIELD) == null))) {
    Timestamp startStamp=TransactionUtil.getTransactionUniqueNowStamp();
    if (stampIsField && (!entity.getIsFromEntitySync() || entity.get(ModelEntity.STAMP_FIELD) == null)) {
      entity.set(ModelEntity.STAMP_FIELD,startStamp);
      addFieldIfMissing(fieldsToSave,ModelEntity.STAMP_FIELD,modelEntity);
    }
    if (createStampIsField && (!entity.getIsFromEntitySync() || entity.get(ModelEntity.CREATE_STAMP_FIELD) == null)) {
      entity.set(ModelEntity.CREATE_STAMP_FIELD,startStamp);
      addFieldIfMissing(fieldsToSave,ModelEntity.CREATE_STAMP_FIELD,modelEntity);
    }
  }
  String sql="INSERT INTO " + modelEntity.getTableName(datasourceInfo) + " ("+ modelEntity.colNameString(fieldsToSave)+ ") VALUES ("+ modelEntity.fieldsStringList(fieldsToSave,"?",", ")+ ")";
  try {
    sqlP.prepareStatement(sql);
    SqlJdbcUtil.setValues(sqlP,fieldsToSave,entity,modelFieldTypeReader);
    int retVal=sqlP.executeUpdate();
    entity.synchronizedWithDatasource();
    return retVal;
  }
 catch (  GenericEntityException e) {
    throw new GenericEntityException("Error while inserting: " + entity.toString(),e);
  }
 finally {
    sqlP.close();
  }
}
