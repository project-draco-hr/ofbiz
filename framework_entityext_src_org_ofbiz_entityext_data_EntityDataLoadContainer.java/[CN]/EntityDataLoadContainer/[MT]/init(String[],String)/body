{
  this.configFile=configFile;
  ServiceDispatcher.enableJM(false);
  ServiceDispatcher.enableJMS(false);
  ServiceDispatcher.enableSvcs(false);
  if (args != null) {
    for (int i=0; i < args.length; i++) {
      String argument=args[i];
      if (argument.startsWith("-")) {
        int subIdx=1;
        if (argument.startsWith("--")) {
          subIdx=2;
        }
        argument=argument.substring(subIdx);
      }
      if (argument.indexOf("=") != -1) {
        String argumentName=argument.substring(0,argument.indexOf("="));
        String argumentVal=argument.substring(argument.indexOf("=") + 1);
        Debug.log("Install Argument - " + argumentName + " = "+ argumentVal,module);
        if ("readers".equalsIgnoreCase(argumentName)) {
          this.readers=argumentVal;
        }
 else         if ("timeout".equalsIgnoreCase(argumentName)) {
          try {
            this.txTimeout=Integer.parseInt(argumentVal);
          }
 catch (          Exception e) {
            this.txTimeout=-1;
          }
        }
 else         if ("component".equalsIgnoreCase(argumentName)) {
          this.component=argumentVal;
        }
 else         if ("delegator".equalsIgnoreCase(argumentName)) {
          this.overrideDelegator=argumentVal;
        }
 else         if ("group".equalsIgnoreCase(argumentName)) {
          this.overrideGroup=argumentVal;
        }
 else         if ("file".equalsIgnoreCase(argumentName)) {
          this.file=argumentVal;
        }
 else         if ("dir".equalsIgnoreCase(argumentName)) {
          this.directory=argumentVal;
        }
 else         if ("createfks".equalsIgnoreCase(argumentName)) {
          this.useDummyFks="true".equalsIgnoreCase(argumentVal);
        }
 else         if ("maintainTxs".equalsIgnoreCase(argumentName)) {
          this.maintainTxs="true".equalsIgnoreCase(argumentVal);
        }
 else         if ("inserts".equalsIgnoreCase(argumentName)) {
          this.tryInserts="true".equalsIgnoreCase(argumentVal);
        }
      }
      if (this.readers == null && (this.file != null || this.directory != null)) {
        this.readers="none";
      }
    }
  }
}
