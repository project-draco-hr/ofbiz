{
  super(element,simpleMethod);
  this.field=new ContextAccessor<Timestamp>(element.getAttribute("field"));
  this.fromField=new ContextAccessor<Object>(element.getAttribute("from-field"));
  this.valueExdr=FlexibleStringExpander.getInstance(element.getAttribute("value"));
  this.defaultExdr=FlexibleStringExpander.getInstance(element.getAttribute("default-value"));
  this.yearsExdr=FlexibleStringExpander.getInstance(element.getAttribute("years"));
  this.monthsExdr=FlexibleStringExpander.getInstance(element.getAttribute("months"));
  this.daysExdr=FlexibleStringExpander.getInstance(element.getAttribute("days"));
  this.hoursExdr=FlexibleStringExpander.getInstance(element.getAttribute("hours"));
  this.minutesExdr=FlexibleStringExpander.getInstance(element.getAttribute("minutes"));
  this.secondsExdr=FlexibleStringExpander.getInstance(element.getAttribute("seconds"));
  this.millisExdr=FlexibleStringExpander.getInstance(element.getAttribute("millis"));
  this.periodAlignStart=FlexibleStringExpander.getInstance(element.getAttribute("period-align-start"));
  this.periodAlignEnd=FlexibleStringExpander.getInstance(element.getAttribute("period-align-end"));
  this.localeExdr=FlexibleStringExpander.getInstance(element.getAttribute("locale"));
  this.timeZoneExdr=FlexibleStringExpander.getInstance(element.getAttribute("time-zone"));
  this.setIfNull="true".equals(element.getAttribute("set-if-null"));
  this.setIfEmpty=!"false".equals(element.getAttribute("set-if-empty"));
  if (!this.fromField.isEmpty() && !this.valueExdr.isEmpty()) {
    throw new IllegalArgumentException("Cannot specify a from-field [" + element.getAttribute("from-field") + "] and a value ["+ element.getAttribute("value")+ "] on the set-calendar action in a screen widget");
  }
}
