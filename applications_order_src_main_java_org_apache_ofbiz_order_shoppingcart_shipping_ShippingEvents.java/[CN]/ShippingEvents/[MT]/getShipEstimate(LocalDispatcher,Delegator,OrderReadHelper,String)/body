{
  if (!orh.shippingApplies()) {
    Map<String,Object> responseResult=ServiceUtil.returnSuccess();
    responseResult.put("shippingTotal",BigDecimal.ZERO);
    return responseResult;
  }
  GenericValue shipGroup=orh.getOrderItemShipGroup(shipGroupSeqId);
  String shipmentMethodTypeId=shipGroup.getString("shipmentMethodTypeId");
  String carrierRoleTypeId=shipGroup.getString("carrierRoleTypeId");
  String carrierPartyId=shipGroup.getString("carrierPartyId");
  String supplierPartyId=shipGroup.getString("supplierPartyId");
  GenericValue shipAddr=orh.getShippingAddress(shipGroupSeqId);
  if (shipAddr == null) {
    return UtilMisc.<String,Object>toMap("shippingTotal",BigDecimal.ZERO);
  }
  String contactMechId=shipAddr.getString("contactMechId");
  String partyId=null;
  GenericValue partyObject=orh.getPlacingParty();
  if (UtilValidate.isNotEmpty(partyObject)) {
    partyId=partyObject.getString("partyId");
  }
  return getShipGroupEstimate(dispatcher,delegator,orh.getOrderTypeId(),shipmentMethodTypeId,carrierPartyId,carrierRoleTypeId,contactMechId,orh.getProductStoreId(),supplierPartyId,orh.getShippableItemInfo(shipGroupSeqId),orh.getShippableWeight(shipGroupSeqId),orh.getShippableQuantity(shipGroupSeqId),orh.getShippableTotal(shipGroupSeqId),partyId,null);
}
