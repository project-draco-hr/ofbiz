{
  String result=null;
  TransformerFactory tfactory=TransformerFactory.newInstance();
  if (tfactory.getFeature(SAXSource.FEATURE)) {
    SAXParserFactory pfactory=SAXParserFactory.newInstance();
    pfactory.setNamespaceAware(true);
    pfactory.setValidating(false);
    pfactory.setXIncludeAware(true);
    XMLReader reader=null;
    try {
      reader=pfactory.newSAXParser().getXMLReader();
    }
 catch (    Exception e) {
      throw new TransformerException("Error creating SAX parser/reader",e);
    }
    SAXSource source=new SAXSource(reader,new InputSource(data));
    Transformer transformer=tfactory.newTransformer(new StreamSource(template));
    StringWriter sw=new StringWriter();
    StreamResult sr=new StreamResult(sw);
    transformer.transform(source,sr);
    result=sw.toString();
  }
 else {
    Debug.logError("tfactory does not support SAX features!",module);
  }
  return result;
}
