{
  ClassLoader loader=Thread.currentThread().getContextClassLoader();
  Enumeration<URL> resources;
  try {
    resources=loader.getResources("jcr-repositories.xml");
  }
 catch (  IOException e) {
    Debug.logError(e,"Could not load list of jcr-repositories.xml",module);
    return;
  }
  while (resources.hasMoreElements()) {
    URL repositoriesURL=resources.nextElement();
    Debug.logInfo("Loading repositories from: " + repositoriesURL,module);
    Document doc=null;
    try {
      doc=UtilXml.readXmlDocument(repositoriesURL,false);
    }
 catch (    Exception e) {
      Debug.logError(e,module);
      continue;
    }
    Element resourceElement=doc.getDocumentElement();
    List<? extends Element> repositoryList=UtilXml.childElementList(resourceElement,"repository");
    for (    Element element : repositoryList) {
      String name=element.getAttribute("name");
      if (UtilValidate.isEmpty(name)) {
        continue;
      }
      String jndiName=element.getAttribute("jndi-name");
      if (UtilValidate.isNotEmpty(jndiName)) {
        try {
          map.put(name,(Repository)new InitialContext().lookup(jndiName));
        }
 catch (        NamingException e) {
          Debug.logError(e,module);
        }
        continue;
      }
      String className=element.getAttribute("class-name");
      if (UtilValidate.isNotEmpty(className)) {
        try {
          map.put(name,createFromFactory(loader,className));
        }
 catch (        Exception e) {
          Debug.logError(e,module);
        }
      }
    }
  }
}
