{
  Thread currentThread=Thread.currentThread();
  ThreadGroup group=currentThread.getThreadGroup();
  while (group.getParent() != null) {
    group=group.getParent();
  }
  Thread threadArr[]=new Thread[1000];
  group.enumerate(threadArr);
  StringWriter writer=new StringWriter();
  PrintWriter out=new PrintWriter(writer);
  out.println("Thread dump:");
  for (int i=0; i < threadArr.length; i++) {
    if (threadArr[i] != null) {
      ThreadGroup g=threadArr[i].getThreadGroup();
      out.println("Thread: " + threadArr[i].getName() + " ["+ threadArr[i].getId()+ "] @ "+ (g != null ? g.getName() : "[none]")+ " : "+ threadArr[i].getPriority()+ " ["+ threadArr[i].getState().name()+ "]");
      out.println("--- Alive: " + threadArr[i].isAlive() + " Daemon: "+ threadArr[i].isDaemon());
      StackTraceElement[] stacks=threadArr[i].getStackTrace();
      for (int x=0; x < stacks.length; x++) {
        out.println("### " + stacks[x].toString());
      }
    }
  }
  Debug.log(writer.toString(),module);
}
