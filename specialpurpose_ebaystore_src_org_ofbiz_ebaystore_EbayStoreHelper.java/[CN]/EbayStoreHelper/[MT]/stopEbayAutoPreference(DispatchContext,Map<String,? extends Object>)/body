{
  Map<String,Object> result=FastMap.newInstance();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String productStoreId=(String)context.get("productStoreId");
  String autoPrefEnumId=(String)context.get("autoPrefEnumId");
  try {
    GenericValue ebayProductPref=delegator.findByPrimaryKey("EbayProductStorePref",UtilMisc.toMap("productStoreId",productStoreId,"autoPrefEnumId",autoPrefEnumId));
    String jobId=ebayProductPref.getString("autoPrefJobId");
    GenericValue job=delegator.findByPrimaryKey("JobSandbox",UtilMisc.toMap("jobId",jobId));
    job=EbayStoreHelper.getCurrentJob(delegator,userLogin,job);
    Map<String,Object> inMap=FastMap.newInstance();
    inMap.put("userLogin",userLogin);
    inMap.put("jobId",job.getString("jobId"));
    dispatcher.runSync("cancelScheduledJob",inMap);
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  GenericServiceException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  return result;
}
