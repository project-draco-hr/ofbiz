{
  boolean collapsed=getInitiallyCollapsed(context);
  if (this.collapsible) {
    String preferenceKey=getPreferenceKey(context) + "_collapsed";
    Map<String,Object> requestParameters=UtilGenerics.checkMap(context.get("requestParameters"));
    if (requestParameters != null) {
      String collapsedParam=(String)requestParameters.get(preferenceKey);
      if (collapsedParam != null)       collapsed="true".equals(collapsedParam);
    }
  }
  try {
    screenStringRenderer.renderScreenletBegin(writer,context,collapsed,this);
    for (    ModelScreenWidget subWidget : this.subWidgets) {
      screenStringRenderer.renderScreenletSubWidget(writer,context,subWidget,this);
    }
    screenStringRenderer.renderScreenletEnd(writer,context,this);
  }
 catch (  IOException e) {
    String errMsg="Error rendering screenlet in screen named [" + getModelScreen().getName() + "]: ";
    Debug.logError(e,errMsg,module);
    throw new RuntimeException(errMsg + e);
  }
}
