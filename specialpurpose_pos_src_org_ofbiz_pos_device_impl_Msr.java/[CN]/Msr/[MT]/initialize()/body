{
  Debug.logInfo("MSR [" + control.getPhysicalDeviceName() + "] Claimed : "+ control.getClaimed(),module);
  final jpos.MSR msr=(jpos.MSR)control;
  msr.setDecodeData(true);
  msr.setTracksToRead(2);
  msr.addDataListener(new DataEventAdaptor(){
    @Override public void dataOccurred(    jpos.events.DataEvent event){
      String[] decodedData=new String[7];
      byte[] track1=null;
      byte[] track2=null;
      try {
        track1=msr.getTrack1Data();
        track2=msr.getTrack2Data();
        decodedData[0]=msr.getTitle();
        decodedData[1]=msr.getFirstName();
        decodedData[2]=msr.getMiddleInitial();
        decodedData[3]=msr.getSurname();
        decodedData[4]=msr.getSuffix();
        decodedData[5]=msr.getAccountNumber();
        if (UtilValidate.isEmpty(decodedData[5])) {
          PosScreen.currentScreen.showDialog("dialog/error/cardreaderror");
          msr.clearInput();
          return;
        }
        if (msr.getExpirationDate() != null && msr.getExpirationDate().length() > 3) {
          decodedData[6]=msr.getExpirationDate().substring(2) + msr.getExpirationDate().substring(0,2);
        }
 else {
          PosScreen.currentScreen.showDialog("dialog/error/cardreaderror");
          msr.clearInput();
          return;
        }
        msr.clearInput();
      }
 catch (      jpos.JposException e) {
        Debug.logError(e,module);
      }
      processMsrData(decodedData,track1,track2);
    }
  }
);
  msr.addErrorListener(new ErrorEventAdaptor(){
    @Override public void errorOccurred(    jpos.events.ErrorEvent event){
      Debug.logInfo("Error Occurred : " + event.getErrorCodeExtended(),module);
      PosScreen.currentScreen.showDialog("dialog/error/cardreaderror");
      try {
        msr.clearInput();
      }
 catch (      jpos.JposException e) {
        Debug.logError(e,module);
      }
    }
  }
);
}
