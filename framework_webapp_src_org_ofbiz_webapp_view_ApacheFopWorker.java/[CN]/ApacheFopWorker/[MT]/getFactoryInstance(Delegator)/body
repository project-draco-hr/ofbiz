{
  if (fopFactory == null) {
synchronized (ApacheFopWorker.class) {
      if (fopFactory != null) {
        return fopFactory;
      }
      fopFactory=FopFactory.newInstance();
      fopFactory.setStrictValidation(false);
      try {
        String fopPath=EntityUtilProperties.getPropertyValue("url.properties","fop.path",delegator);
        File userConfigFile=FileUtil.getFile(fopPath + "/fop.xconf");
        fopFactory.setUserConfig(userConfigFile);
        String fopFontBasePath=EntityUtilProperties.getPropertyValue("url.properties","fop.font.base.path",delegator);
        File fopFontBasePathFile=new File(fopFontBasePath);
        URL fopFontBaseUrl=FlexibleLocation.resolveLocation(fopFontBasePathFile.toString());
        fopFactory.getFontManager().setFontBaseURL(fopFontBaseUrl.toString());
      }
 catch (      Exception e) {
        Debug.logWarning("Error reading FOP configuration",module);
      }
    }
  }
  return fopFactory;
}
