{
  Map result=new HashMap();
  GenericDelegator delegator=ctx.getDelegator();
  String orderId=(String)context.get("orderId");
  try {
    List orderItems=delegator.findByAnd("OrderItem",UtilMisc.toMap("orderId",orderId));
    Iterator iter=orderItems.iterator();
    while (iter.hasNext()) {
      GenericValue orderItem=(GenericValue)iter.next();
      String shoppingListId=orderItem.getString("shoppingListId");
      String shoppingListItemSeqId=orderItem.getString("shoppingListItemSeqId");
      if ((shoppingListId != null) && (shoppingListId.length() > 0)) {
        GenericValue shoppingListItem=delegator.findByPrimaryKey("ShoppingListItem",UtilMisc.toMap("shoppingListId",shoppingListId,"shoppingListItemSeqId",shoppingListItemSeqId));
        if (shoppingListItem != null) {
          Double quantityPurchased=shoppingListItem.getDouble("quantityPurchased");
          Double orderQuantity=orderItem.getDouble("quantity");
          if (quantityPurchased != null) {
            shoppingListItem.set("quantityPurchased",new Double(orderQuantity.doubleValue() + quantityPurchased.doubleValue()));
          }
 else {
            shoppingListItem.set("quantityPurchased",orderQuantity);
          }
          shoppingListItem.store();
        }
      }
    }
  }
 catch (  Exception e) {
    Debug.log("updateShoppingListQuantitiesFromOrder error:" + e.getMessage());
  }
  return result;
}
