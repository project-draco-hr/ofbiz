{
  Delegator delegator=invoice.getDelegator();
  List<GenericValue> locations=null;
  try {
    locations=invoice.getRelated("InvoiceContactMech",UtilMisc.toMap("contactMechPurposeTypeId",contactMechPurposeTypeId),null);
  }
 catch (  GenericEntityException e) {
    Debug.logError("Touble getting InvoiceContactMech entity list",module);
  }
  if (UtilValidate.isEmpty(locations)) {
    String destinationPartyId=null;
    if (invoice.getString("invoiceTypeId").equals("SALES_INVOICE"))     destinationPartyId=invoice.getString("partyId");
    if (invoice.getString("invoiceTypeId").equals("PURCHASE_INVOICE"))     destinationPartyId=invoice.getString("partyId");
    try {
      locations=EntityUtil.filterByDate(delegator.findByAnd("PartyContactMechPurpose",UtilMisc.toMap("partyId",destinationPartyId,"contactMechPurposeTypeId",contactMechPurposeTypeId)));
    }
 catch (    GenericEntityException e) {
      Debug.logError("Trouble getting contact party purpose list",module);
    }
    if (UtilValidate.isEmpty(locations)) {
      try {
        locations=EntityUtil.filterByDate(delegator.findByAnd("PartyContactMechPurpose",UtilMisc.toMap("partyId",destinationPartyId,"contactMechPurposeTypeId","GENERAL_LOCATION")));
      }
 catch (      GenericEntityException e) {
        Debug.logError("Trouble getting contact party purpose list",module);
      }
    }
  }
  GenericValue postalAddress=null;
  GenericValue contactMech=null;
  if (UtilValidate.isNotEmpty(locations)) {
    try {
      contactMech=locations.get(0).getRelatedOne("ContactMech");
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Trouble getting Contact for contactMechId: " + locations.get(0).getString("contactMechId"),module);
    }
    if (contactMech != null && contactMech.getString("contactMechTypeId").equals("POSTAL_ADDRESS")) {
      try {
        postalAddress=contactMech.getRelatedOne("PostalAddress");
        return postalAddress;
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Trouble getting PostalAddress for contactMechId: " + contactMech.getString("contactMechId"),module);
      }
    }
  }
  return contactMech;
}
