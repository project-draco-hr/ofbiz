{
  BigDecimal invoiceTotal=ZERO;
  BigDecimal invoiceTaxTotal=ZERO;
  List invoiceItems=null;
  try {
    invoiceItems=invoice.getRelated("InvoiceItem");
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting InvoiceItem list",module);
  }
  if (invoiceItems != null && invoiceItems.size() > 0) {
    Iterator invoiceItemsIter=invoiceItems.iterator();
    while (invoiceItemsIter.hasNext()) {
      GenericValue invoiceItem=(GenericValue)invoiceItemsIter.next();
      BigDecimal amount=invoiceItem.getBigDecimal("amount");
      BigDecimal quantity=invoiceItem.getBigDecimal("quantity");
      if (amount == null)       amount=ZERO;
      if (quantity == null)       quantity=new BigDecimal("1");
      if ("ITM_SALES_TAX".equals(invoiceItem.get("invoiceItemTypeId"))) {
        invoiceTaxTotal=invoiceTaxTotal.add(amount.multiply(quantity)).setScale(taxDecimals,taxRounding);
      }
 else {
        invoiceTotal=invoiceTotal.add(amount.multiply(quantity)).setScale(decimals,rounding);
      }
    }
  }
  return invoiceTotal.add(invoiceTaxTotal).setScale(decimals,rounding);
}
