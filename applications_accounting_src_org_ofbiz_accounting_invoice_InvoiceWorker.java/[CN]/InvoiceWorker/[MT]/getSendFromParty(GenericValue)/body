{
  GenericValue billFromParty=getBillFromParty(invoice);
  if (billFromParty != null) {
    return billFromParty;
  }
  List<GenericValue> sendFromRoles=null;
  try {
    sendFromRoles=invoice.getRelated("InvoiceRole",UtilMisc.toMap("roleTypeId","BILL_FROM_VENDOR"),UtilMisc.toList("-datetimePerformed"));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting InvoiceRole list",module);
  }
  if (sendFromRoles != null) {
    GenericValue role=EntityUtil.getFirst(sendFromRoles);
    GenericValue party=null;
    try {
      party=role.getRelatedOne("Party");
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Trouble getting Party from InvoiceRole",module);
    }
    if (party != null)     return party;
  }
  return null;
}
