{
  BigDecimal invoiceTotal=ZERO;
  BigDecimal invoiceTaxTotal=ZERO;
  invoiceTaxTotal=InvoiceWorker.getInvoiceTaxTotal(invoice);
  List<GenericValue> invoiceItems=null;
  try {
    invoiceItems=invoice.getRelated("InvoiceItem",null,null,false);
    invoiceItems=EntityUtil.filterByAnd(invoiceItems,UtilMisc.toList(EntityCondition.makeCondition("invoiceItemTypeId",EntityOperator.NOT_IN,getTaxableInvoiceItemTypeIds(invoice.getDelegator()))));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting InvoiceItem list",module);
  }
  if (invoiceItems != null) {
    for (    GenericValue invoiceItem : invoiceItems) {
      invoiceTotal=invoiceTotal.add(getInvoiceItemTotal(invoiceItem)).setScale(decimals,rounding);
    }
  }
  invoiceTotal=invoiceTotal.add(invoiceTaxTotal).setScale(decimals,rounding);
  if (UtilValidate.isNotEmpty(invoiceTotal) && !actualCurrency) {
    invoiceTotal=invoiceTotal.multiply(getInvoiceCurrencyConversionRate(invoice)).setScale(decimals,rounding);
  }
  return invoiceTotal;
}
