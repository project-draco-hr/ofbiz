{
  try {
    GenericValue billToParty=invoice.getRelatedOne("Party");
    if (billToParty != null) {
      return billToParty;
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting Party from Invoice",module);
  }
  List billToRoles=null;
  try {
    billToRoles=invoice.getRelated("InvoiceRole",UtilMisc.toMap("roleTypeId","BILL_TO_CUSTOMER"),UtilMisc.toList("-datetimePerformed"));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting InvoiceRole list",module);
  }
  if (billToRoles != null) {
    GenericValue role=EntityUtil.getFirst(billToRoles);
    GenericValue party=null;
    try {
      party=role.getRelatedOne("Party");
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Trouble getting Party from InvoiceRole",module);
    }
    if (party != null)     return party;
  }
  return null;
}
