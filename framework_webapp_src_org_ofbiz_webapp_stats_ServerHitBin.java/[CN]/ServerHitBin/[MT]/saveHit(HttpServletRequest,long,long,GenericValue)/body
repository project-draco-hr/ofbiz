{
  if (UtilProperties.propertyValueEqualsIgnoreCase("serverstats","stats.persist." + ServerHitBin.typeIds[type] + ".hit","true")) {
    if (this.type == ENTITY && this.id.indexOf("ServerHit") > 0) {
      return;
    }
    GenericValue serverHitType=null;
    try {
      serverHitType=delegator.findByPrimaryKeyCache("ServerHitType",UtilMisc.toMap("hitTypeId",ServerHitBin.typeIds[this.type]));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    if (serverHitType == null) {
      Debug.logWarning("The datamodel data has not been loaded; cannot find hitTypeId '" + ServerHitBin.typeIds[this.type] + " not storing ServerHit.",module);
      return;
    }
    String visitId=VisitHandler.getVisitId(request.getSession());
    if (UtilValidate.isEmpty(visitId)) {
      Debug.logWarning("Could not find a visitId, so not storing ServerHit. This is probably a configuration error. If you turn of persistance of visits you should also turn off persistence of hits.",module);
      return;
    }
    GenericValue serverHit=delegator.makeValue("ServerHit");
    serverHit.set("visitId",visitId);
    serverHit.set("hitStartDateTime",new java.sql.Timestamp(startTime));
    serverHit.set("hitTypeId",ServerHitBin.typeIds[this.type]);
    if (userLogin != null) {
      serverHit.set("userLoginId",userLogin.get("userLoginId"));
      ModelEntity modelUserLogin=userLogin.getModelEntity();
      if (modelUserLogin.isField("partyId")) {
        serverHit.set("partyId",userLogin.get("partyId"));
      }
    }
    serverHit.set("contentId",this.id);
    serverHit.set("runningTimeMillis",Long.valueOf(runningTime));
    String fullRequestUrl=UtilHttp.getFullRequestUrl(request).toString();
    serverHit.set("requestUrl",fullRequestUrl.length() > 250 ? fullRequestUrl.substring(0,250) : fullRequestUrl);
    String referrerUrl=request.getHeader("Referer") != null ? request.getHeader("Referer") : "";
    serverHit.set("referrerUrl",referrerUrl.length() > 250 ? referrerUrl.substring(0,250) : referrerUrl);
    try {
      InetAddress address=InetAddress.getLocalHost();
      if (address != null) {
        serverHit.set("serverIpAddress",address.getHostAddress());
        serverHit.set("serverHostName",address.getHostName());
      }
 else {
        Debug.logError("Unable to get localhost internet address, was null",module);
      }
    }
 catch (    java.net.UnknownHostException e) {
      Debug.logError("Unable to get localhost internet address: " + e.toString(),module);
    }
    try {
      serverHit.create();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Could not save ServerHit:",module);
    }
  }
}
