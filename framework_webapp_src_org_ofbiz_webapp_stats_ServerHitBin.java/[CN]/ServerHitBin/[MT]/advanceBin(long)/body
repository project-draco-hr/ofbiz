{
  while (limitLength && toTime > this.endTime) {
    List<ServerHitBin> binList=null;
switch (type) {
case REQUEST:
      binList=requestHistory.get(id);
    break;
case EVENT:
  binList=eventHistory.get(id);
break;
case VIEW:
binList=viewHistory.get(id);
break;
case ENTITY:
binList=entityHistory.get(id);
break;
case SERVICE:
binList=serviceHistory.get(id);
break;
}
binList.remove(0);
if (this.numberHits > 0) {
binList.add(0,new ServerHitBin(this));
if (UtilProperties.propertyValueEqualsIgnoreCase("serverstats","stats.persist." + ServerHitBin.typeIds[type] + ".bin","true")) {
GenericValue serverHitBin=delegator.makeValue("ServerHitBin");
serverHitBin.set("contentId",this.id);
serverHitBin.set("hitTypeId",ServerHitBin.typeIds[this.type]);
serverHitBin.set("binStartDateTime",new java.sql.Timestamp(this.startTime));
serverHitBin.set("binEndDateTime",new java.sql.Timestamp(this.endTime));
serverHitBin.set("numberHits",Long.valueOf(this.numberHits));
serverHitBin.set("totalTimeMillis",Long.valueOf(this.totalRunningTime));
serverHitBin.set("minTimeMillis",Long.valueOf(this.minTime));
serverHitBin.set("maxTimeMillis",Long.valueOf(this.maxTime));
if (VisitHandler.address != null) {
serverHitBin.set("serverIpAddress",VisitHandler.address.getHostAddress());
serverHitBin.set("serverHostName",VisitHandler.address.getHostName());
}
try {
delegator.createSetNextSeqId(serverHitBin);
}
 catch (GenericEntityException e) {
Debug.logError(e,"Could not save ServerHitBin:",module);
}
}
}
this.reset(this.endTime + 1);
binList.add(0,this);
}
}
