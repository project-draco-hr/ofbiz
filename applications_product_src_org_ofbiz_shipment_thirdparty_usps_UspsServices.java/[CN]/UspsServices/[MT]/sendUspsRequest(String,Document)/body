{
  String conUrl=UtilProperties.getPropertyValue("shipment.properties","shipment.usps.connect.url");
  if (UtilValidate.isEmpty(conUrl)) {
    throw new UspsRequestException("Connection URL not specified; please check your configuration");
  }
  OutputStream os=new ByteArrayOutputStream();
  OutputFormat format=new OutputFormat(requestDocument);
  format.setOmitDocumentType(true);
  format.setOmitXMLDeclaration(true);
  format.setIndenting(false);
  XMLSerializer serializer=new XMLSerializer(os,format);
  try {
    serializer.asDOMSerializer();
    serializer.serialize(requestDocument.getDocumentElement());
  }
 catch (  IOException e) {
    throw new UspsRequestException("Error serializing requestDocument: " + e.getMessage());
  }
  String xmlString=os.toString();
  Debug.logInfo("USPS XML request string: " + xmlString,module);
  String timeOutStr=UtilProperties.getPropertyValue("shipment.properties","shipment.usps.connect.timeout","60");
  int timeout=60;
  try {
    timeout=Integer.parseInt(timeOutStr);
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Unable to set timeout to " + timeOutStr + " using default "+ timeout);
  }
  HttpClient http=new HttpClient(conUrl);
  http.setTimeout(timeout * 1000);
  http.setParameter("API",requestType);
  http.setParameter("XML",xmlString);
  String responseString=null;
  try {
    responseString=http.post();
  }
 catch (  HttpClientException e) {
    throw new UspsRequestException("Problem connecting with USPS server",e);
  }
  Debug.logInfo("USPS response: " + responseString,module);
  Document responseDocument=null;
  try {
    responseDocument=UtilXml.readXmlDocument(responseString,false);
  }
 catch (  SAXException se) {
    throw new UspsRequestException("Error reading request Document from a String: " + se.getMessage());
  }
catch (  ParserConfigurationException pce) {
    throw new UspsRequestException("Error reading request Document from a String: " + pce.getMessage());
  }
catch (  IOException xmlReadException) {
    throw new UspsRequestException("Error reading request Document from a String: " + xmlReadException.getMessage());
  }
  Element responseElement=responseDocument.getDocumentElement();
  if ("Error".equals(responseElement.getNodeName())) {
    throw new UspsRequestException(UtilXml.childElementValue(responseElement,"Description"));
  }
  return responseDocument;
}
