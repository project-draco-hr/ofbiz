{
  String type=(String)context.get("serviceType");
  if (!type.matches("PriorityMail|StandardB")) {
    return ServiceUtil.returnError("Unsupported service type: " + type);
  }
  Document requestDocument=createUspsRequestDocument(type + "Request");
  UtilXml.addChildElementValue(requestDocument.getDocumentElement(),"OriginZip",(String)context.get("originZip"),requestDocument);
  UtilXml.addChildElementValue(requestDocument.getDocumentElement(),"DestinationZip",(String)context.get("destinationZip"),requestDocument);
  Document responseDocument=null;
  try {
    responseDocument=sendUspsRequest(type,requestDocument);
  }
 catch (  UspsRequestException e) {
    Debug.log(e,module);
    return ServiceUtil.returnError("Error sending request for USPS " + type + " Service Standards service: "+ e.getMessage());
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  String days=UtilXml.childElementValue(responseDocument.getDocumentElement(),"Days");
  if (UtilValidate.isEmpty(days)) {
    return ServiceUtil.returnError("Incomplete response from USPS " + type + " Service Standards service: "+ "no Days element found");
  }
  result.put("days",days);
  return result;
}
