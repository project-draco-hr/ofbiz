{
  GenericDelegator delegator=dctx.getDelegator();
  try {
    String shipmentId=(String)context.get("shipmentId");
    String shipmentRouteSegmentId=(String)context.get("shipmentRouteSegmentId");
    GenericValue shipmentRouteSegment=delegator.findByPrimaryKey("ShipmentRouteSegment",UtilMisc.toMap("shipmentId",shipmentId,"shipmentRouteSegmentId",shipmentRouteSegmentId));
    List shipmentPackageRouteSegList=shipmentRouteSegment.getRelated("ShipmentPackageRouteSeg",null,UtilMisc.toList("+shipmentPackageSeqId"));
    for (Iterator i=shipmentPackageRouteSegList.iterator(); i.hasNext(); ) {
      GenericValue shipmentPackageRouteSeg=(GenericValue)i.next();
      byte[] labelImageBytes=shipmentPackageRouteSeg.getBytes("labelImage");
      String outFileName="UspsLabelImage" + shipmentRouteSegment.getString("shipmentId") + "_"+ shipmentRouteSegment.getString("shipmentRouteSegmentId")+ "_"+ shipmentPackageRouteSeg.getString("shipmentPackageSeqId")+ ".gif";
      FileOutputStream fileOut=new FileOutputStream(outFileName);
      fileOut.write(labelImageBytes);
      fileOut.flush();
      fileOut.close();
    }
  }
 catch (  GenericEntityException e) {
    Debug.log(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  IOException e) {
    Debug.log(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
