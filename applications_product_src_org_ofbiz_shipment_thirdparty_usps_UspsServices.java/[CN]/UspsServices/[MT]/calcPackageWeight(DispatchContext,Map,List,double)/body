{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  double totalWeight=0.00;
  Iterator i=packageMap.keySet().iterator();
  while (i.hasNext()) {
    String productId=(String)i.next();
    Map productInfo=getProductItemInfo(shippableItemInfo,productId);
    double productWeight=((Double)productInfo.get("weight")).doubleValue();
    double quantity=((Double)packageMap.get(productId)).doubleValue();
    String weightUomId=(String)productInfo.get("weight_uom_id");
    Debug.logInfo("Product Id : " + productId.toString() + " Product Weight : "+ String.valueOf(productWeight)+ " Product UomId : "+ weightUomId+ " assuming WT_oz if null. Quantity : "+ String.valueOf(quantity),module);
    if (UtilValidate.isEmpty(weightUomId)) {
      weightUomId="WT_oz";
    }
    if (!"WT_lb".equals(weightUomId)) {
      Map result=new HashMap();
      try {
        result=dispatcher.runSync("convertUom",UtilMisc.toMap("uomId",weightUomId,"uomIdTo","WT_lb","originalValue",new Double(productWeight)));
      }
 catch (      GenericServiceException ex) {
        Debug.logError(ex,module);
      }
      if (result.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_SUCCESS)) {
        productWeight*=((Double)result.get("convertedValue")).doubleValue();
      }
 else {
        Debug.logError("Unsupported weightUom [" + weightUomId + "] for calcPackageWeight running productId "+ productId+ ", could not find a conversion factor to WT_lb",module);
      }
    }
    totalWeight+=(productWeight * quantity);
  }
  Debug.logInfo("Package Weight : " + String.valueOf(totalWeight) + " lbs.",module);
  return totalWeight + additionalWeight;
}
