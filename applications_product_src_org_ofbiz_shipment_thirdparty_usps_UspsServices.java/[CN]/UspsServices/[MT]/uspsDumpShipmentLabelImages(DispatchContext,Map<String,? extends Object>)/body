{
  Delegator delegator=dctx.getDelegator();
  try {
    String shipmentId=(String)context.get("shipmentId");
    String shipmentRouteSegmentId=(String)context.get("shipmentRouteSegmentId");
    GenericValue shipmentRouteSegment=delegator.findOne("ShipmentRouteSegment",UtilMisc.toMap("shipmentId",shipmentId,"shipmentRouteSegmentId",shipmentRouteSegmentId),false);
    List<GenericValue> shipmentPackageRouteSegList=shipmentRouteSegment.getRelated("ShipmentPackageRouteSeg",null,UtilMisc.toList("+shipmentPackageSeqId"),false);
    for (    GenericValue shipmentPackageRouteSeg : shipmentPackageRouteSegList) {
      byte[] labelImageBytes=shipmentPackageRouteSeg.getBytes("labelImage");
      String outFileName="UspsLabelImage" + shipmentRouteSegment.getString("shipmentId") + "_"+ shipmentRouteSegment.getString("shipmentRouteSegmentId")+ "_"+ shipmentPackageRouteSeg.getString("shipmentPackageSeqId")+ ".gif";
      FileOutputStream fileOut=new FileOutputStream(outFileName);
      fileOut.write(labelImageBytes);
      fileOut.flush();
      fileOut.close();
    }
  }
 catch (  GenericEntityException e) {
    Debug.logInfo(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  IOException e) {
    Debug.logInfo(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
