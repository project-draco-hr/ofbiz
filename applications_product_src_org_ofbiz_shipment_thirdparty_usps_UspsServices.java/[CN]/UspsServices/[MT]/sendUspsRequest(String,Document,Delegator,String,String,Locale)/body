{
  String conUrl=null;
  List<String> labelRequestTypes=UtilMisc.toList("PriorityMailIntl","PriorityMailIntlCertify");
  if (labelRequestTypes.contains(requestType)) {
    conUrl=getShipmentGatewayConfigValue(delegator,shipmentGatewayConfigId,"connectUrlLabels",resource,"shipment.usps.connect.url.labels");
  }
 else {
    conUrl=getShipmentGatewayConfigValue(delegator,shipmentGatewayConfigId,"connectUrl",resource,"shipment.usps.connect.url");
  }
  if (UtilValidate.isEmpty(conUrl)) {
    throw new UspsRequestException(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsConnectUrlIncomplete",locale));
  }
  OutputStream os=new ByteArrayOutputStream();
  try {
    UtilXml.writeXmlDocument(requestDocument,os,"UTF-8",true,false,0);
  }
 catch (  TransformerException e) {
    throw new UspsRequestException(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsSerializingError",UtilMisc.toMap("errorString",e.getMessage()),locale));
  }
  String xmlString=os.toString();
  Debug.logInfo("USPS XML request string: " + xmlString,module);
  String timeOutStr=getShipmentGatewayConfigValue(delegator,shipmentGatewayConfigId,"connectTimeout",resource,"shipment.usps.connect.timeout","60");
  int timeout=60;
  try {
    timeout=Integer.parseInt(timeOutStr);
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Unable to set timeout to " + timeOutStr + " using default "+ timeout);
  }
  HttpClient http=new HttpClient(conUrl);
  http.setTimeout(timeout * 1000);
  http.setParameter("API",requestType);
  http.setParameter("XML",xmlString);
  String responseString=null;
  try {
    responseString=http.get();
  }
 catch (  HttpClientException e) {
    throw new UspsRequestException(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsConnectionProblem",UtilMisc.toMap("errorString",e),locale));
  }
  Debug.logInfo("USPS response: " + responseString,module);
  if (UtilValidate.isEmpty(responseString)) {
    return null;
  }
  Document responseDocument=null;
  try {
    responseDocument=UtilXml.readXmlDocument(responseString,false);
  }
 catch (  Exception e) {
    throw new UspsRequestException(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsResponseError",UtilMisc.toMap("errorString",e.getMessage()),locale));
  }
  Element responseElement=responseDocument.getDocumentElement();
  if ("Error".equals(responseElement.getNodeName())) {
    throw new UspsRequestException(UtilXml.childElementValue(responseElement,"Description"));
  }
  return responseDocument;
}
