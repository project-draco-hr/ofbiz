{
  if (this.rhs == null || this.rhs == GenericEntity.NULL_FIELD || modelEntity == null)   return;
  Object value=this.rhs;
  if (this.rhs instanceof EntityFunction) {
    value=((EntityFunction)this.rhs).getOriginalValue();
  }
  if (value instanceof Collection) {
    Collection valueCol=(Collection)value;
    if (valueCol.size() > 0) {
      value=valueCol.iterator().next();
    }
 else {
      value=null;
    }
  }
  if (delegator == null) {
    try {
      delegator=UtilObject.getObjectFromFactory(DelegatorFactory.class,"default");
    }
 catch (    ClassNotFoundException e) {
      Debug.logError(e,module);
    }
  }
  String fieldName=null;
  if (this.lhs instanceof EntityFieldValue) {
    EntityFieldValue efv=(EntityFieldValue)this.lhs;
    fieldName=efv.getFieldName();
  }
 else {
    return;
  }
  ModelField curField=modelEntity.getField(fieldName);
  if (UtilValidate.isEmpty(curField)) {
    throw new IllegalArgumentException("FieldName " + fieldName + " not found for entity: "+ modelEntity.getEntityName());
  }
  ModelFieldType type=null;
  try {
    type=delegator.getEntityFieldType(modelEntity,curField.getType());
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  if (type == null) {
    throw new IllegalArgumentException("Type " + curField.getType() + " not found for entity ["+ modelEntity.getEntityName()+ "]; probably because there is no datasource (helper) setup for the entity group that this entity is in: ["+ delegator.getEntityGroupName(modelEntity.getEntityName())+ "]");
  }
  if (!ObjectType.instanceOf(value,type.getJavaType())) {
    String errMsg="In entity field [" + modelEntity.getEntityName() + "."+ curField.getName()+ "] set the value passed in ["+ value.getClass().getName()+ "] is not compatible with the Java type of the field ["+ type.getJavaType()+ "]";
    Debug.logWarning(new Exception("Location of database type warning"),"=-=-=-=-=-=-=-=-= Database type warning in EntityExpr =-=-=-=-=-=-=-=-= " + errMsg,module);
  }
}
