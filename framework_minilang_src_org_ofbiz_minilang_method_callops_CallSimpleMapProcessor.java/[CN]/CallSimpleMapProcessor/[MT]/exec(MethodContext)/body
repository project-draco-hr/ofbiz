{
  List<Object> messages=errorListAcsr.get(methodContext);
  if (messages == null) {
    messages=FastList.newInstance();
    errorListAcsr.put(methodContext,messages);
  }
  Map<String,Object> inMap=inMapAcsr.get(methodContext);
  if (inMap == null) {
    inMap=FastMap.newInstance();
    inMapAcsr.put(methodContext,inMap);
  }
  Map<String,Object> outMap=outMapAcsr.get(methodContext);
  if (outMap == null) {
    outMap=FastMap.newInstance();
    outMapAcsr.put(methodContext,outMap);
  }
  if (UtilValidate.isNotEmpty(this.xmlResource) && UtilValidate.isNotEmpty(this.processorName)) {
    String xmlResource=methodContext.expandString(this.xmlResource);
    String processorName=methodContext.expandString(this.processorName);
    try {
      org.ofbiz.minilang.SimpleMapProcessor.runSimpleMapProcessor(xmlResource,processorName,inMap,outMap,messages,methodContext.getLocale(),methodContext.getLoader());
    }
 catch (    MiniLangException e) {
      messages.add("Error running SimpleMapProcessor in XML file \"" + xmlResource + "\": "+ e.toString());
    }
  }
  if (inlineMapProcessor != null) {
    inlineMapProcessor.exec(inMap,outMap,messages,(methodContext.getRequest() != null ? methodContext.getRequest().getLocale() : null),methodContext.getLoader());
  }
  return true;
}
