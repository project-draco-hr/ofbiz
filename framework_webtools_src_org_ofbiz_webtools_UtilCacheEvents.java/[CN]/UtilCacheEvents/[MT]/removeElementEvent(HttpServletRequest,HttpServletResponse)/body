{
  Security security=(Security)request.getAttribute("security");
  if (!security.hasPermission("UTIL_CACHE_EDIT",request.getSession())) {
    request.setAttribute("_ERROR_MESSAGE_","You do not have permission to perform this operation, UTIL_CACHE_EDIT required.");
    return "error";
  }
  String name=request.getParameter("UTIL_CACHE_NAME");
  if (name == null) {
    request.setAttribute("_ERROR_MESSAGE_","Could not remove cache line/element, no cache name specified.");
    return "error";
  }
  String numString=request.getParameter("UTIL_CACHE_ELEMENT_NUMBER");
  if (numString == null) {
    request.setAttribute("_ERROR_MESSAGE_","Could not remove cache line/element, no element number specified.");
    return "error";
  }
  int number;
  try {
    number=Integer.parseInt(numString);
  }
 catch (  Exception e) {
    return "error";
  }
  UtilCache utilCache=(UtilCache)UtilCache.utilCacheTable.get(name);
  if (utilCache != null) {
    Object key=null;
    if (utilCache.getMaxSize() > 0) {
      try {
        key=utilCache.cacheLineTable.getKeyFromMemory(number);
      }
 catch (      Exception e) {
      }
    }
 else {
      Iterator ksIter=utilCache.cacheLineTable.keySet().iterator();
      int curNum=0;
      while (ksIter.hasNext()) {
        if (number == curNum) {
          key=ksIter.next();
          break;
        }
 else {
          ksIter.next();
        }
        curNum++;
      }
    }
    if (key != null) {
      utilCache.remove(key);
      request.setAttribute("_EVENT_MESSAGE_","Removed element from cache with key: " + key.toString());
    }
 else {
      request.setAttribute("_ERROR_MESSAGE_","Could not remove cache element, element not found with cache name: " + name + ", element number: "+ numString);
      return "error";
    }
  }
 else {
    request.setAttribute("_ERROR_MESSAGE_","Could not remove cache element, cache not found with name: " + name);
    return "error";
  }
  return "success";
}
