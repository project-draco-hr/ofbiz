{
  List<EntityCondition> exprList=new LinkedList<EntityCondition>();
  EntityExpr joinExpr=null;
  if (direction != null && direction.equalsIgnoreCase("From")) {
    joinExpr=EntityCondition.makeCondition("contentIdTo",EntityOperator.EQUALS,contentId);
  }
 else {
    joinExpr=EntityCondition.makeCondition("contentId",EntityOperator.EQUALS,contentId);
  }
  exprList.add(joinExpr);
  if (UtilValidate.isNotEmpty(assocTypes)) {
    exprList.add(EntityCondition.makeCondition("contentAssocTypeId",EntityOperator.IN,assocTypes));
  }
  if (fromDate != null) {
    EntityExpr fromExpr=EntityCondition.makeCondition("fromDate",EntityOperator.GREATER_THAN_EQUAL_TO,fromDate);
    exprList.add(fromExpr);
  }
  if (thruDate != null) {
    List<EntityExpr> thruList=new LinkedList<EntityExpr>();
    EntityExpr thruExpr=EntityCondition.makeCondition("thruDate",EntityOperator.LESS_THAN,thruDate);
    thruList.add(thruExpr);
    EntityExpr thruExpr2=EntityCondition.makeCondition("thruDate",EntityOperator.EQUALS,null);
    thruList.add(thruExpr2);
    EntityConditionList<EntityExpr> thruExprList=EntityCondition.makeCondition(thruList,EntityOperator.OR);
    exprList.add(thruExprList);
  }
 else   if (fromDate != null) {
    List<EntityExpr> thruList=new LinkedList<EntityExpr>();
    EntityExpr thruExpr=EntityCondition.makeCondition("thruDate",EntityOperator.GREATER_THAN,fromDate);
    thruList.add(thruExpr);
    EntityExpr thruExpr2=EntityCondition.makeCondition("thruDate",EntityOperator.EQUALS,null);
    thruList.add(thruExpr2);
    EntityConditionList<EntityExpr> thruExprList=EntityCondition.makeCondition(thruList,EntityOperator.OR);
    exprList.add(thruExprList);
  }
 else {
    EntityExpr thruExpr2=EntityCondition.makeCondition("thruDate",EntityOperator.EQUALS,null);
    exprList.add(thruExpr2);
  }
  return EntityQuery.use(delegator).from("ContentAssoc").where(exprList).orderBy("-fromDate").queryList();
}
