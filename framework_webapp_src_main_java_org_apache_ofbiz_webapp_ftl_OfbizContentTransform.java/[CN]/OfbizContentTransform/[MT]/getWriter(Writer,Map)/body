{
  final StringBuilder buf=new StringBuilder();
  final String imgSize=OfbizContentTransform.getArg(args,"variant");
  return new Writer(out){
    @Override public void write(    char cbuf[],    int off,    int len){
      buf.append(cbuf,off,len);
    }
    @Override public void flush() throws IOException {
      out.flush();
    }
    @Override public void close() throws IOException {
      try {
        Environment env=Environment.getCurrentEnvironment();
        BeanModel req=(BeanModel)env.getVariable("request");
        HttpServletRequest request=req == null ? null : (HttpServletRequest)req.getWrappedObject();
        String requestUrl=buf.toString();
        if (requestUrl.startsWith("http")) {
          out.write(requestUrl);
          return;
        }
        requestUrl=UtilCodec.getDecoder("url").decode(requestUrl);
        StringBuilder newURL=new StringBuilder();
        ContentUrlTag.appendContentPrefix(request,newURL);
        if ((newURL.length() > 0 && newURL.charAt(newURL.length() - 1) != '/') && (requestUrl.length() > 0 && requestUrl.charAt(0) != '/')) {
          newURL.append('/');
        }
        if (UtilValidate.isNotEmpty(imgSize)) {
          if (!"/images/defaultImage.jpg".equals(requestUrl)) {
            int index=requestUrl.lastIndexOf(".");
            if (index > 0) {
              String suffix=requestUrl.substring(index);
              String imgName=requestUrl.substring(0,index);
              requestUrl=imgName + "-" + imgSize+ suffix;
            }
          }
        }
        newURL.append(requestUrl);
        out.write(newURL.toString());
      }
 catch (      TemplateModelException e) {
        throw new IOException(e.getMessage());
      }
    }
  }
;
}
