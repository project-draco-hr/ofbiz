{
  if (UtilValidate.isEmpty(s) || UtilValidate.isEmpty(format)) {
    return s;
  }
  if ("append".equalsIgnoreCase(format) && envName != null) {
    StringBuilder newStr=new StringBuilder();
    if (c.get(envName) != null) {
      newStr.append(c.get(envName));
    }
    newStr.append(s);
    return newStr.toString();
  }
  if ("to-upper".equalsIgnoreCase(format)) {
    return s.toUpperCase();
  }
  if ("to-lower".equalsIgnoreCase(format)) {
    return s.toLowerCase();
  }
  if ("hash-code".equalsIgnoreCase(format)) {
    return Integer.valueOf(s.hashCode());
  }
  if ("long".equalsIgnoreCase(format)) {
    return Long.valueOf(s);
  }
  if ("double".equalsIgnoreCase(format)) {
    return Double.valueOf(s);
  }
  if ("upper-first-char".equalsIgnoreCase(format)) {
    return ModelUtil.upperFirstChar(s);
  }
  if ("lower-first-char".equalsIgnoreCase(format)) {
    return ModelUtil.lowerFirstChar(s);
  }
  if ("db-to-java".equalsIgnoreCase(format)) {
    return ModelUtil.dbNameToVarName(s);
  }
  if ("java-to-db".equalsIgnoreCase(format)) {
    return ModelUtil.javaNameToDbName(s);
  }
  Debug.logWarning("Format function not found [" + format + "] return string unchanged - "+ s,module);
  return s;
}
