{
  Debug.logInfo("Start birt container",module);
  if (this.getContainerConfigName() == null) {
    throw new ContainerException("Unknown container config name");
  }
  ContainerConfig.Container cc=ContainerConfig.getContainer(this.getContainerConfigName(),configFile);
  if (cc == null) {
    throw new ContainerException("No " + this.getContainerConfigName() + " configuration found in container config!");
  }
  config=new EngineConfig();
  Map<String,String> osgiConfig=FastMap.newInstance();
  osgiConfig.put("osgi.configuration.area",new File(System.getProperty("ofbiz.home"),"runtime" + File.separator + "tempfiles").getPath());
  config.setOSGiConfig(osgiConfig);
  HashMap context=config.getAppContext();
  delegatorGroupHelperName=ContainerConfig.getPropertyValue(cc,"delegator-group-helper-name","org.ofbiz");
  delegatorName=ContainerConfig.getPropertyValue(cc,"delegator-name","default");
  try {
    delegator=UtilObject.getObjectFromFactory(DelegatorFactory.class,delegatorName);
  }
 catch (  ClassNotFoundException e) {
    Debug.logError(e,module);
  }
  dispatcher=GenericDispatcher.getLocalDispatcher(dispatcherName,delegator);
  context.put("delegator",delegator);
  context.put("dispatcher",dispatcher);
  context.put(EngineConstants.APPCONTEXT_CLASSLOADER_KEY,BirtContainer.class.getClassLoader());
  context.put(EngineConstants.WEBAPP_CLASSPATH_KEY,BirtContainer.class.getClassLoader());
  config.setLogConfig(null,Level.ALL);
  String reportEnginePath=FileUtil.getFile("component://birt/lib/platform").getPath();
  config.setEngineHome(reportEnginePath);
  config.setBIRTHome(reportEnginePath);
  String argumentsString=UtilProperties.getPropertyValue(BirtContainer.CONFIG_FILE,"birt.osgi.arguments");
  config.setOSGiArguments(argumentsString.split(","));
  config.setPlatformContext(new PlatformFileContext(config));
  config.setAppContext(context);
  try {
    Debug.logInfo("Startup birt platform",module);
    Platform.startup(config);
  }
 catch (  BirtException e) {
    throw new ContainerException(e);
  }
  Debug.logInfo("Create factory object",module);
  IReportEngineFactory factory=(IReportEngineFactory)Platform.createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY);
  if (factory == null) {
    throw new ContainerException("can not create birt engine factory");
  }
  Debug.logInfo("Create report engine",module);
  engine=factory.createReportEngine(config);
  String[] supportedFormats=engine.getSupportedFormats();
  String formatList=null;
  for (  String supportedFormat : supportedFormats) {
    if (formatList != null) {
      formatList+=", " + supportedFormat;
    }
 else {
      formatList=supportedFormat;
    }
  }
  Debug.logInfo("BIRT supported formats: " + formatList,module);
  return false;
}
