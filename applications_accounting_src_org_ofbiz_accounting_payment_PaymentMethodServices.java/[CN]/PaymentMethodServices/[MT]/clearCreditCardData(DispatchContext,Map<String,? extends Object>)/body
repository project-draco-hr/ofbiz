{
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String paymentMethodId=(String)context.get("paymentMethodId");
  Delegator delegator=dctx.getDelegator();
  GenericValue creditCard;
  try {
    creditCard=delegator.findOne("CreditCard",UtilMisc.toMap("paymentMethodId",paymentMethodId),false);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  creditCard.set("cardNumber","0000000000000000");
  creditCard.set("expireDate","01/1970");
  try {
    delegator.store(creditCard);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Map<String,Object> expireCtx=UtilMisc.<String,Object>toMap("userLogin",userLogin,"paymentMethodId",paymentMethodId);
  Map<String,Object> expireResp;
  try {
    expireResp=dispatcher.runSync("deletePaymentMethod",expireCtx);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (ServiceUtil.isError(expireResp)) {
    return ServiceUtil.returnError(ServiceUtil.getErrorMessage(expireResp));
  }
  return ServiceUtil.returnSuccess();
}
