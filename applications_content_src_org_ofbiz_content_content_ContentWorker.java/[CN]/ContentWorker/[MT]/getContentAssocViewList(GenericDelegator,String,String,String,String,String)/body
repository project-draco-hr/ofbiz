{
  List exprListAnd=new ArrayList();
  if (UtilValidate.isNotEmpty(contentIdTo)) {
    EntityExpr expr=new EntityExpr("caContentIdTo",EntityOperator.EQUALS,contentIdTo);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(contentId)) {
    EntityExpr expr=new EntityExpr("contentId",EntityOperator.EQUALS,contentId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(contentAssocTypeId)) {
    EntityExpr expr=new EntityExpr("caContentAssocTypeId",EntityOperator.EQUALS,contentAssocTypeId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(statusId)) {
    EntityExpr expr=new EntityExpr("statusId",EntityOperator.EQUALS,statusId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(privilegeEnumId)) {
    EntityExpr expr=new EntityExpr("privilegeEnumId",EntityOperator.EQUALS,privilegeEnumId);
    exprListAnd.add(expr);
  }
  EntityConditionList contentCondList=new EntityConditionList(exprListAnd,EntityOperator.AND);
  List contentList=delegator.findByCondition("ContentAssocDataResourceViewFrom",contentCondList,null,null);
  List filteredList=EntityUtil.filterByDate(contentList,UtilDateTime.nowTimestamp(),"caFromDate","caThruDate",true);
  return filteredList;
}
