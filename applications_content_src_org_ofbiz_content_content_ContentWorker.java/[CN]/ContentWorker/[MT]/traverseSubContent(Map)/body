{
  boolean inProgress=false;
  List nodeTrail=(List)ctx.get("nodeTrail");
  ContentWorker.traceNodeTrail("11",nodeTrail);
  int sz=nodeTrail.size();
  if (sz == 0) {
    return false;
  }
  Map currentNode=(Map)nodeTrail.get(sz - 1);
  Boolean isReturnAfter=(Boolean)currentNode.get("isReturnAfter");
  if (isReturnAfter != null && isReturnAfter.booleanValue()) {
    return false;
  }
  List kids=(List)currentNode.get("kids");
  if (UtilValidate.isNotEmpty(kids)) {
    int idx=0;
    while (idx < kids.size()) {
      currentNode=(Map)kids.get(idx);
      ContentWorker.traceNodeTrail("12",nodeTrail);
      Boolean isPick=(Boolean)currentNode.get("isPick");
      if (isPick != null && isPick.booleanValue()) {
        nodeTrail.add(currentNode);
        inProgress=true;
        selectKids(currentNode,ctx);
        ContentWorker.traceNodeTrail("14",nodeTrail);
        break;
      }
 else {
        Boolean isFollow=(Boolean)currentNode.get("isFollow");
        if (isFollow != null && isFollow.booleanValue()) {
          nodeTrail.add(currentNode);
          boolean foundPick=traverseSubContent(ctx);
          if (foundPick) {
            inProgress=true;
            break;
          }
        }
      }
      idx++;
    }
  }
  if (!inProgress) {
    while (sz > 1) {
      currentNode=(Map)nodeTrail.remove(--sz);
      ContentWorker.traceNodeTrail("15",nodeTrail);
      Map parentNode=(Map)nodeTrail.get(sz - 1);
      kids=(List)parentNode.get("kids");
      if (kids == null) {
        continue;
      }
      int idx=kids.indexOf(currentNode);
      while (idx < (kids.size() - 1)) {
        currentNode=(Map)kids.get(idx + 1);
        Boolean isFollow=(Boolean)currentNode.get("isFollow");
        if (isFollow == null || !isFollow.booleanValue()) {
          idx++;
          continue;
        }
        String contentAssocTypeId=(String)currentNode.get("contentAssocTypeId");
        nodeTrail.add(currentNode);
        ContentWorker.traceNodeTrail("16",nodeTrail);
        Boolean isPick=(Boolean)currentNode.get("isPick");
        if (isPick == null || !isPick.booleanValue()) {
          inProgress=traverseSubContent(ctx);
          ContentWorker.traceNodeTrail("17",nodeTrail);
          if (inProgress) {
            break;
          }
        }
 else {
          inProgress=true;
          break;
        }
        idx++;
      }
      if (inProgress) {
        break;
      }
    }
  }
  return inProgress;
}
