{
  List contentList=FastList.newInstance();
  List exprListAnd=FastList.newInstance();
  String origContentId=(String)currentContent.get("contentId");
  String contentIdName="contentId";
  String contentAssocViewName="contentAssocView";
  if (linkDir != null && linkDir.equalsIgnoreCase("TO")) {
    contentIdName=contentIdName.concat("To");
    contentAssocViewName=contentAssocViewName.concat("To");
  }
  EntityExpr expr=EntityCondition.makeCondition(contentIdName,EntityOperator.EQUALS,origContentId);
  exprListAnd.add(expr);
  if (contentTypes.size() > 0) {
    exprListAnd.add(EntityCondition.makeCondition("contentTypeId",EntityOperator.IN,contentTypes));
  }
  if (assocTypes.size() > 0) {
    exprListAnd.add(EntityCondition.makeCondition("contentAssocTypeId",EntityOperator.IN,assocTypes));
  }
  if (fromDate != null) {
    Timestamp tsFrom=UtilDateTime.toTimestamp(fromDate);
    expr=EntityCondition.makeCondition("fromDate",EntityOperator.GREATER_THAN_EQUAL_TO,tsFrom);
    exprListAnd.add(expr);
  }
  if (thruDate != null) {
    Timestamp tsThru=UtilDateTime.toTimestamp(thruDate);
    expr=EntityCondition.makeCondition("thruDate",EntityOperator.LESS_THAN,tsThru);
    exprListAnd.add(expr);
  }
  EntityConditionList contentCondList=EntityCondition.makeCondition(exprListAnd,EntityOperator.AND);
  Delegator delegator=currentContent.getDelegator();
  contentList=delegator.findList(contentAssocViewName,contentCondList,null,null,null,false);
  return contentList;
}
