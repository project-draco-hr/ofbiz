{
  String contentIdField=null;
  String contentIdOtherField=null;
  if (direction != null && direction.equalsIgnoreCase("to")) {
    contentIdField="contentId";
    contentIdOtherField="contentIdTo";
  }
 else {
    contentIdField="contentIdTo";
    contentIdOtherField="contentId";
  }
  try {
    List lst=delegator.findByAndCache("ContentAssoc",UtilMisc.toMap(contentIdField,contentId,"contentAssocTypeId",contentAssocTypeId));
    List lst2=EntityUtil.filterByDate(lst);
    if (lst2.size() > 0) {
      GenericValue contentAssoc=(GenericValue)lst2.get(0);
      getContentAncestryValues(delegator,contentAssoc.getString(contentIdOtherField),contentAssocTypeId,direction,contentAncestorList);
      GenericValue content=delegator.findByPrimaryKeyCache("Content",UtilMisc.toMap("contentId",contentAssoc.getString(contentIdOtherField)));
      contentAncestorList.add(content);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return;
  }
  return;
}
