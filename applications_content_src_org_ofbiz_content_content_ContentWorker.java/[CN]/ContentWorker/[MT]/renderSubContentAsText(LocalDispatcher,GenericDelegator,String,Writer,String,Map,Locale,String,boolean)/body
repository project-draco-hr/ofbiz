{
  List orderBy=UtilMisc.toList("-fromDate");
  List exprs=UtilMisc.toList(new EntityExpr("contentId",EntityOperator.EQUALS,contentId),new EntityExpr("mapKey",EntityOperator.EQUALS,mapKey));
  List assocs;
  if (cache) {
    assocs=delegator.findByConditionCache("ContentAssoc",new EntityConditionList(exprs,EntityOperator.AND),null,orderBy);
  }
 else {
    assocs=delegator.findByCondition("ContentAssoc",new EntityConditionList(exprs,EntityOperator.AND),null,orderBy);
  }
  assocs=EntityUtil.filterByDate(assocs);
  GenericValue subContent=EntityUtil.getFirst(assocs);
  if (subContent == null) {
    out.write("<!-- no sub-content found with map-key [" + mapKey + "] for content ["+ contentId+ "] -->");
  }
 else {
    String subContentId=subContent.getString("contentIdTo");
    templateContext.put("mapKey",mapKey);
    renderContentAsText(dispatcher,delegator,subContentId,out,templateContext,locale,mimeTypeId,cache);
  }
}
