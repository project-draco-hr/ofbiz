{
  String contentIdField=null;
  String contentIdOtherField=null;
  if (direction != null && direction.equalsIgnoreCase("to")) {
    contentIdField="contentId";
    contentIdOtherField="contentIdTo";
  }
 else {
    contentIdField="contentIdTo";
    contentIdOtherField="contentId";
  }
  if (Debug.infoOn()) {
    Debug.logInfo("getContentAncestry, contentId:" + contentId,"");
    Debug.logInfo("getContentAncestry, contentAssocTypeId:" + contentAssocTypeId,"");
  }
  Map<String,Object> andMap=null;
  if (UtilValidate.isEmpty(contentAssocTypeId)) {
    andMap=UtilMisc.<String,Object>toMap(contentIdField,contentId);
  }
 else {
    andMap=UtilMisc.<String,Object>toMap(contentIdField,contentId,"contentAssocTypeId",contentAssocTypeId);
  }
  try {
    GenericValue contentAssoc=EntityQuery.use(delegator).from("ContentAssoc").where(andMap).cache().filterByDate().queryFirst();
    if (contentAssoc != null) {
      getContentAncestry(delegator,contentAssoc.getString(contentIdOtherField),contentAssocTypeId,direction,contentAncestorList);
      contentAncestorList.add(contentAssoc);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return;
  }
}
