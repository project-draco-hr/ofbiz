{
  StringBuilder baseLocation=new StringBuilder(FlexibleLocation.stripLocationType(location));
  int firstSlash=baseLocation.indexOf("/");
  int secondSlash=baseLocation.indexOf("/",firstSlash + 1);
  if (firstSlash != 0 || secondSlash == -1) {
    throw new MalformedURLException("Bad component location [" + location + "]: base location missing slashes ["+ baseLocation+ "], first = "+ firstSlash+ ", second = "+ secondSlash+ "; should be like: component://{component-name}/relative/path");
  }
  String componentName=baseLocation.substring(firstSlash + 1,secondSlash);
  baseLocation.delete(0,secondSlash + 1);
  try {
    String rootLocation=ComponentConfig.getRootLocation(componentName);
    if (baseLocation.charAt(0) != '/' && rootLocation.charAt(rootLocation.length() - 1) != '/') {
      baseLocation.insert(0,'/');
    }
    baseLocation.insert(0,rootLocation);
    return baseLocation;
  }
 catch (  ComponentException e) {
    if (!ifPresent) {
      String errMsg="Could not get root location for component with name [" + componentName + "], error was: "+ e.toString();
      Debug.logError(e,errMsg,module);
      throw new MalformedURLException(errMsg);
    }
 else {
      return null;
    }
  }
}
