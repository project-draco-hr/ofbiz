{
  if (name == null)   return null;
  if (getModelRecord() == null)   throw new IllegalArgumentException("Could not find modelrecord for field named \"" + name + "\"");
  ModelField field=getModelRecord().getModelField(name);
  if (field == null)   throw new IllegalArgumentException("Could not find model for field named \"" + name + "\"");
  Object value=get(name);
  if (value == null) {
    return null;
  }
  String fieldType=field.type;
  String str=null;
  if (fieldType.equals("CustomTimestamp")) {
    SimpleDateFormat sdf=new SimpleDateFormat(field.format);
    java.sql.Timestamp timestamp=(java.sql.Timestamp)value;
    str=sdf.format(new Date(timestamp.getTime()));
  }
 else   if (fieldType.equals("CustomDate")) {
    SimpleDateFormat sdf=new SimpleDateFormat(field.format);
    java.sql.Date date=(java.sql.Date)value;
    str=sdf.format(new Date(date.getTime()));
  }
 else   if (fieldType.equals("CustomTime")) {
    SimpleDateFormat sdf=new SimpleDateFormat(field.format);
    java.sql.Time time=(java.sql.Time)value;
    str=sdf.format(new Date(time.getTime()));
  }
 else   if (fieldType.equals("FixedPointDouble")) {
    double decimalPlaces=Double.parseDouble(field.format);
    double multiplier=Math.pow(10.0,decimalPlaces);
    double dnum=multiplier * ((Double)value).doubleValue();
    long number=Math.round(dnum);
    str=padFrontZeros(Long.toString(number),field.length);
  }
 else   if (fieldType.equals("java.lang.String") || fieldType.equals("String"))   str=value.toString();
 else   if (fieldType.equals("java.sql.Timestamp") || fieldType.equals("Timestamp"))   str=value.toString();
 else   if (fieldType.equals("java.sql.Time") || fieldType.equals("Time"))   str=value.toString();
 else   if (fieldType.equals("java.sql.Date") || fieldType.equals("Date"))   str=value.toString();
 else   if (fieldType.equals("java.lang.Integer") || fieldType.equals("Integer"))   str=padFrontZeros(value.toString(),field.length);
 else   if (fieldType.equals("java.lang.Long") || fieldType.equals("Long"))   str=padFrontZeros(value.toString(),field.length);
 else   if (fieldType.equals("java.lang.Float") || fieldType.equals("Float"))   str=padFrontZeros(value.toString(),field.length);
 else   if (fieldType.equals("java.lang.Double") || fieldType.equals("Double"))   str=padFrontZeros(value.toString(),field.length);
 else {
    throw new IllegalArgumentException("Field type " + fieldType + " not currently supported. Sorry.");
  }
  if (str != null && field.length > 0 && str.length() < field.length) {
    StringBuffer strBuf=new StringBuffer(str);
    while (strBuf.length() < field.length)     strBuf.append(' ');
    str=strBuf.toString();
  }
  return str;
}
