{
  String url=UtilProperties.getPropertyValue(shipmentPropertiesFile,"shipment.fedex.connect.url");
  if (url == null) {
    throw new FedexConnectException("Incomplete connection URL; check your Fedex configuration");
  }
  if (!xmlString.matches("^(?s)<\\?xml\\s+version=\"1\\.0\"\\s+encoding=\"UTF-8\"\\s*\\?>.*")) {
    throw new FedexConnectException("XML header is malformed");
  }
  url=url.trim();
  String timeOutStr=UtilProperties.getPropertyValue(shipmentPropertiesFile,"shipment.fedex.connect.timeout","60");
  int timeout=60;
  try {
    timeout=Integer.parseInt(timeOutStr);
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Unable to set timeout to " + timeOutStr + " using default "+ timeout);
  }
  if (Debug.verboseOn()) {
    Debug.logVerbose("Fedex Connect URL : " + url,module);
    Debug.logVerbose("Fedex XML String : " + xmlString,module);
  }
  HttpClient http=new HttpClient(url);
  http.setTimeout(timeout * 1000);
  String response=null;
  try {
    response=http.post(xmlString);
  }
 catch (  HttpClientException e) {
    Debug.logError(e,"Problem connecting to Fedex server",module);
    throw new FedexConnectException("URL Connection problem",e);
  }
  if (response == null) {
    throw new FedexConnectException("Received a null response");
  }
  if (Debug.verboseOn()) {
    Debug.logVerbose("Fedex Response : " + response,module);
  }
  return response;
}
