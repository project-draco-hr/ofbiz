{
  Map<String,Object> result=new HashMap<String,Object>();
  Delegator delegator=ctx.getDelegator();
  String orderId=(String)context.get("orderId");
  try {
    List<GenericValue> orderItems=EntityQuery.use(delegator).from("OrderItem").where("orderId",orderId).queryList();
    for (    GenericValue orderItem : orderItems) {
      String shoppingListId=orderItem.getString("shoppingListId");
      String shoppingListItemSeqId=orderItem.getString("shoppingListItemSeqId");
      if (UtilValidate.isNotEmpty(shoppingListId)) {
        GenericValue shoppingListItem=EntityQuery.use(delegator).from("ShoppingListItem").where("shoppingListId",shoppingListId,"shoppingListItemSeqId",shoppingListItemSeqId).queryOne();
        if (shoppingListItem != null) {
          BigDecimal quantityPurchased=shoppingListItem.getBigDecimal("quantityPurchased");
          BigDecimal orderQuantity=orderItem.getBigDecimal("quantity");
          if (quantityPurchased != null) {
            shoppingListItem.set("quantityPurchased",orderQuantity.add(quantityPurchased));
          }
 else {
            shoppingListItem.set("quantityPurchased",orderQuantity);
          }
          shoppingListItem.store();
        }
      }
    }
  }
 catch (  Exception e) {
    Debug.logInfo("updateShoppingListQuantitiesFromOrder error:" + e.getMessage(),module);
  }
  return result;
}
