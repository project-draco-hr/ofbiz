{
  Map<String,String> parameters=parseResponse(resp);
  String respCode=(String)parameters.get("RESULT");
  int codeInt=-999;
  try {
    codeInt=Integer.parseInt(respCode);
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Unable to parse response code; not a number!",module);
  }
  if (codeInt == 0) {
    result.put("refundResult",Boolean.TRUE);
    result.put("refundCode",parameters.get("AUTHCODE"));
  }
 else   if (codeInt < 0) {
    Debug.logWarning("In PayflowPro failing refund; respCode/RESULT=" + respCode + "; PNREF="+ parameters.get("PNREF")+ "; AUTHCODE="+ parameters.get("AUTHCODE"),module);
    result.put("refundResult",Boolean.FALSE);
    result.put("refundRefNum",respCode);
  }
 else {
    Debug.logWarning("In PayflowPro failing refund; respCode/RESULT=" + respCode + "; PNREF="+ parameters.get("PNREF")+ "; AUTHCODE="+ parameters.get("AUTHCODE"),module);
    result.put("refundResult",Boolean.FALSE);
  }
  result.put("refundRefNum",parameters.get("PNREF"));
  result.put("refundFlag",parameters.get("RESULT"));
  result.put("refundMessage",parameters.get("RESPMSG"));
}
