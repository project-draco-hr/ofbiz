{
  Map parameters=new HashMap();
  List params=StringUtil.split(resp,"&");
  Iterator i=params.iterator();
  while (i.hasNext()) {
    String str=(String)i.next();
    if (str.length() > 0) {
      List kv=StringUtil.split(str,"=");
      Object k=kv.get(0);
      Object v=kv.get(1);
      if (k != null && v != null)       parameters.put(k,v);
    }
  }
  String respCode=(String)parameters.get("RESULT");
  int codeInt=-999;
  try {
    codeInt=Integer.parseInt(respCode);
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Unable to parse response code; not a number!",module);
  }
  if (codeInt == 0) {
    result.put("captureResult",Boolean.TRUE);
    result.put("captureCode",parameters.get("AUTHCODE"));
  }
 else   if (codeInt < 0) {
    Debug.logWarning("In PayflowPro failing capture; respCode/RESULT=" + respCode + "; PNREF="+ parameters.get("PNREF")+ "; AUTHCODE="+ parameters.get("AUTHCODE"),module);
    result.put("captureResult",Boolean.FALSE);
    result.put("captureRefNum",respCode);
  }
 else {
    Debug.logWarning("In PayflowPro failing capture; respCode/RESULT=" + respCode + "; PNREF="+ parameters.get("PNREF")+ "; AUTHCODE="+ parameters.get("AUTHCODE"),module);
    result.put("captureResult",Boolean.FALSE);
  }
  result.put("captureRefNum",parameters.get("PNREF"));
  result.put("captureFlag",parameters.get("RESULT"));
  result.put("captureMessage",parameters.get("RESPMSG"));
}
