{
  String hostAddress=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"hostAddress",resource,"payment.verisign.hostAddress","test-payflow.verisign.com");
  Integer hostPort=Integer.decode(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"hostPort",resource,"payment.verisign.hostPort","443"));
  Integer timeout=Integer.decode(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"timeout",resource,"payment.verisign.timeout","80"));
  String proxyAddress=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"proxyAddress",resource,"payment.verisign.proxyAddress","");
  Integer proxyPort=Integer.decode(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"proxyPort",resource,"payment.verisign.proxyPort","80"));
  String proxyLogon=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"proxyLogon",resource,"payment.verisign.proxyLogon","");
  String proxyPassword=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"proxyPassword",resource,"payment.verisign.proxyPassword","");
  String logFileName=FlexibleStringExpander.expandString(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"logFileName",resource,"payment.verisign.logFileName",""),context);
  Integer loggingLevel=Integer.decode(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"loggingLevel",resource,"payment.verisign.loggingLevel","6"));
  Integer maxLogFileSize=Integer.decode(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"maxLogFileSize",resource,"payment.verisign.maxLogFileSize","1000000"));
  boolean stackTraceOn="Y".equalsIgnoreCase(getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"stackTraceOn",resource,"payment.verisign.stackTraceOn","N"));
  PayflowAPI pfp=new PayflowAPI(hostAddress,hostPort.intValue(),timeout.intValue(),proxyAddress,proxyPort.intValue(),proxyLogon,proxyPassword);
  SDKProperties.setLogFileName(logFileName);
  SDKProperties.setLoggingLevel(loggingLevel);
  SDKProperties.setMaxLogFileSize(maxLogFileSize);
  SDKProperties.setStackTraceOn(stackTraceOn);
  return pfp;
}
