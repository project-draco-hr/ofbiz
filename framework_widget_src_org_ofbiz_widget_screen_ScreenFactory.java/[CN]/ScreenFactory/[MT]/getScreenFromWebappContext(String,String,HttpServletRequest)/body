{
  String webappName=UtilHttp.getApplicationName(request);
  String cacheKey=webappName + "::" + resourceName;
  Map<String,ModelScreen> modelScreenMap=screenWebappCache.get(cacheKey);
  if (modelScreenMap == null) {
synchronized (ScreenFactory.class) {
      modelScreenMap=screenWebappCache.get(cacheKey);
      if (modelScreenMap == null) {
        ServletContext servletContext=(ServletContext)request.getAttribute("servletContext");
        URL screenFileUrl=servletContext.getResource(resourceName);
        Document screenFileDoc=UtilXml.readXmlDocument(screenFileUrl,true);
        modelScreenMap=readScreenDocument(screenFileDoc,resourceName);
        screenWebappCache.put(cacheKey,modelScreenMap);
      }
    }
  }
  ModelScreen modelScreen=(ModelScreen)modelScreenMap.get(screenName);
  if (modelScreen == null) {
    throw new IllegalArgumentException("Could not find screen with name [" + screenName + "] in webapp resource ["+ resourceName+ "] in the webapp ["+ webappName+ "]");
  }
  return modelScreen;
}
