{
  Map<String,Object> fieldMap;
  try {
    fieldMap=UtilGenerics.<Map<String,Object>>cast(obj.toObject(Map.class));
    String delegatorName=(String)fieldMap.remove("_DELEGATOR_NAME_");
    String entityName=(String)fieldMap.remove("_ENTITY_NAME_");
    if (delegatorName == null || entityName == null) {
      throw new ConversionException("Invalid JSON object");
    }
    Delegator delegator=DelegatorFactory.getDelegator(delegatorName);
    GenericValue value=delegator.makeValue(entityName);
    for (    Map.Entry<String,Object> entry : fieldMap.entrySet()) {
      String fieldName=entry.getKey();
      Object fieldValue=entry.getValue();
      ModelField field=value.getModelEntity().getField(fieldName);
      ModelFieldType type=delegator.getEntityFieldType(value.getModelEntity(),field.getType());
      value.set(fieldName,ObjectType.simpleTypeConvert(fieldValue,type.getJavaType(),null,null));
    }
    return value;
  }
 catch (  ConversionException e) {
    throw e;
  }
catch (  Exception e) {
    throw new ConversionException(e);
  }
}
