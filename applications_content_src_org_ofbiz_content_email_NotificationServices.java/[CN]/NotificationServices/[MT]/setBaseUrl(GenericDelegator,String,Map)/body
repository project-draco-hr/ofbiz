{
  if (!context.containsKey("baseUrl")) {
    StringBuffer httpBase=null;
    StringBuffer httpsBase=null;
    String localServer=null;
    String httpsPort=null;
    String httpsServer=null;
    String httpPort=null;
    String httpServer=null;
    Boolean enableHttps=null;
    try {
      InetAddress localHost=InetAddress.getLocalHost();
      localServer=localHost.getHostAddress();
    }
 catch (    UnknownHostException hostException) {
      Debug.logWarning(hostException,"Could not determine localhost, using '127.0.0.1'",module);
      localServer="127.0.0.1";
    }
    GenericValue webSite=null;
    if (webSiteId != null) {
      try {
        webSite=delegator.findByPrimaryKeyCache("WebSite",UtilMisc.toMap("webSiteId",webSiteId));
        if (webSite != null) {
          httpsPort=webSite.getString("httpsPort");
          httpsServer=webSite.getString("httpsHost");
          httpPort=webSite.getString("httpPort");
          httpServer=webSite.getString("httpHost");
          enableHttps=webSite.getBoolean("enableHttps");
        }
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,"Problems with WebSite entity; using global defaults",module);
      }
    }
    if (httpsPort == null) {
      httpsPort=UtilProperties.getPropertyValue("url.properties","port.https","443");
    }
    if (httpServer == null) {
      httpsServer=UtilProperties.getPropertyValue("url.properties","force.https.host",localServer);
    }
    if (httpPort == null) {
      httpPort=UtilProperties.getPropertyValue("url.properties","port.http","80");
    }
    if (httpServer == null) {
      httpServer=UtilProperties.getPropertyValue("url.properties","force.http.host",localServer);
    }
    if (enableHttps == null) {
      enableHttps=(UtilProperties.propertyValueEqualsIgnoreCase("url.properties","port.https.enabled","Y")) ? Boolean.TRUE : Boolean.FALSE;
    }
    httpBase=new StringBuffer("http://");
    httpBase.append(httpServer);
    if (!"80".equals(httpPort)) {
      httpBase.append(":");
      httpBase.append(httpPort);
    }
    context.put("baseUrl",httpBase.toString());
    if (enableHttps.booleanValue()) {
      httpsBase=new StringBuffer("https://");
      httpsBase.append(httpsServer);
      if (!"443".equals(httpsPort)) {
        httpsBase.append(":");
        httpsBase.append(httpsPort);
      }
      context.put("baseSecureUrl",httpsBase.toString());
    }
 else {
      context.put("baseSecureUrl",httpBase.toString());
    }
  }
}
