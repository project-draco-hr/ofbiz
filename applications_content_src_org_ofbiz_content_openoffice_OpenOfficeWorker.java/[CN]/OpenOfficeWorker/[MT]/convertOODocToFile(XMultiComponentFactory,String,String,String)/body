{
  XPropertySet xpropertysetMultiComponentFactory=(XPropertySet)UnoRuntime.queryInterface(XPropertySet.class,xmulticomponentfactory);
  Object objectDefaultContext=xpropertysetMultiComponentFactory.getPropertyValue("DefaultContext");
  XComponentContext xcomponentcontext=(XComponentContext)UnoRuntime.queryInterface(XComponentContext.class,objectDefaultContext);
  Object desktopObj=xmulticomponentfactory.createInstanceWithContext("com.sun.star.frame.Desktop",xcomponentcontext);
  XComponentLoader xcomponentloader=(XComponentLoader)UnoRuntime.queryInterface(XComponentLoader.class,desktopObj);
  PropertyValue propertyvalue[]=new PropertyValue[2];
  propertyvalue[0]=new PropertyValue();
  propertyvalue[0].Name="Hidden";
  propertyvalue[0].Value=new Boolean(false);
  propertyvalue[1]=new PropertyValue();
  propertyvalue[1].Name="UpdateDocMode";
  propertyvalue[1].Value="1";
  String stringUrl=convertToUrl(fileInPath,xcomponentcontext);
  Debug.logInfo("stringUrl:" + stringUrl,module);
  Object objectDocumentToStore=xcomponentloader.loadComponentFromURL(stringUrl,"_blank",0,propertyvalue);
  XStorable xstorable=(XStorable)UnoRuntime.queryInterface(XStorable.class,objectDocumentToStore);
  propertyvalue=new PropertyValue[3];
  propertyvalue[0]=new PropertyValue();
  propertyvalue[0].Name="Overwrite";
  propertyvalue[0].Value=new Boolean(true);
  String filterName=getFilterNameFromMimeType(outputMimeType);
  propertyvalue[1]=new PropertyValue();
  propertyvalue[1].Name="FilterName";
  propertyvalue[1].Value=filterName;
  propertyvalue[2]=new PropertyValue();
  propertyvalue[2].Name="CompressionMode";
  propertyvalue[2].Value="1";
  String stringConvertedFile=convertToUrl(fileOutPath,xcomponentcontext);
  Debug.logInfo("stringConvertedFile: " + stringConvertedFile,module);
  xstorable.storeToURL(stringConvertedFile,propertyvalue);
  XComponent xcomponent=(XComponent)UnoRuntime.queryInterface(XComponent.class,xstorable);
  xcomponent.dispose();
  return;
}
