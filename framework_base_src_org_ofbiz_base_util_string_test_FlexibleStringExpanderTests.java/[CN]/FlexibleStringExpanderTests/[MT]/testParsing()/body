{
  parserTest("visible nested replacement","${'Hello ${var}'}!",true,"${'Hello ${var}'}!");
  parserTest("hidden (runtime) nested null callreplacement","Hello ${${groovy:" + FlexibleStringExpanderTests.class.getName() + ".StaticReturnNull()}}World!",true,"Hello ${${groovy:" + FlexibleStringExpanderTests.class.getName() + ".StaticReturnNull()}}World!");
  parserTest("UEL integration(nested): throw Exception","${${throwException.value}}",true,"${throwException.value}");
  parserTest("nested-constant-emptynest-emptynest","${a${}${}",true,"a${}${}");
  parserTest("null",null,true,"");
  parserTest("empty","",true,"");
  parserTest("constant-only","a",false,"a");
  parserTest("nested-constant-emptynest-emptynest","${a${}${}",true,"a${}${}");
  parserTest("bsh","${bsh:}",true,"");
  parserTest("groovy","${groovy:}",true,"");
  parserTest("escaped","\\${}",true,"\\${}");
  parserTest("constant-escaped","a\\${}",true,"a\\${}");
  parserTest("escaped-bsd","\\${bsh:}",true,"\\${bsh:}");
  parserTest("escaped-groovy","\\${groovy:}",true,"\\${groovy:}");
  parserTest("missing-}","${",true,"${");
  parserTest("nested-constant-missing-}","${a${}",true,"a${}");
  parserTest("nested-constant-nested-nested-missing-}","${a${${}",true,"a${${}");
  parserTest("escaped-missing-}","\\${",true,"\\${");
  parserTest("constant-escaped-missing-}","a\\${",true,"a\\${");
  parserTest("currency","${?currency(",true,"${?currency(");
  parserTest("currency","${?currency()",true,"${?currency()");
  parserTest("currency","${price?currency(",true,"${price?currency(");
  parserTest("currency","${price?currency()",true,"${price?currency()");
  parserTest("currency","${?currency(usd",true,"${?currency(usd");
  parserTest("currency","${?currency(usd)",true,"${?currency(usd)");
  parserTest("currency","${price?currency(usd",true,"${price?currency(usd");
  parserTest("currency","${price?currency(usd)",true,"${price?currency(usd)");
  parserTest("currency","${?currency(}",true,"?currency(");
  parserTest("currency","${?currency()}",true,"?currency()");
  parserTest("currency","${?currency(usd}",true,"?currency(usd");
  parserTest("currency","${?currency(usd)}",true,"?currency(usd)");
  parserTest("currency","${price?currency(}",true,"price?currency(");
  parserTest("currency","${price?currency()}",true,"price?currency()");
  parserTest("currency","${price?currency(usd}",true,"price?currency(usd");
  parserTest("currency","${price?currency(usd)}",true,"price?currency(usd)");
  parserTest("currency","a${price?currency(usd)}b",true,"a${price?currency(usd)}b");
}
