{
  Map<String,Object> testMap=new HashMap<String,Object>();
  testMap.put("date",new java.util.Date(1234567890));
  testMap.put("usd","USD");
  testMap.put("amount",new BigDecimal("1234567.89"));
  testMap.put("blank","");
  testMap.put("exc","Exception");
  testMap.put("nullVar",null);
  testMap.put("throwException",new ThrowException());
  testMap.put("throwNPE",new ThrowNPE());
  testMap.put("var","World");
  testMap.put("nested","Hello ${var}");
  testMap.put("testMap",testMap);
  testMap.put("nestedNull","Hello ${nullVar}${var}");
  testMap.put("specialNumber",new SpecialNumber("1.00"));
  List<String> testList=new ArrayList<String>();
  testList.add("World");
  testMap.put("testList",testList);
  fseTest("null FlexibleStringExpander, null map",null,null,"",true);
  fseTest("null FlexibleStringExpander",null,testMap,"",true);
  fseTest("null context","Hello World!",null,"Hello World!",false);
  fseTest("simple replacement","Hello ${var}!",testMap,"Hello World!",false);
  fseTest("null FlexibleStringExpander with timeZone/locale",null,testMap,timeZoneToTest,localeToTest,"",true);
  fseTest("empty FlexibleStringExpander","",testMap,"",true);
  fseTest("UEL integration(nested): throw Exception","${${throwException.value}}",testMap,"",false);
  fseTest("UEL integration: throw Exception","${throwException.value}",testMap,"",false);
  fseTest("hidden (runtime) nested replacement","${nested}!",testMap,"Hello World!",false);
  fseTest("hidden (runtime) nested null replacement","Hello ${${nullVar}}World!",testMap,"Hello World!",false);
  fseTest("hidden (runtime) nested null callreplacement","Hello ${${groovy:" + FlexibleStringExpanderTests.class.getName() + ".StaticReturnNull()}}World!",testMap,"Hello World!",false);
  fseTest("UEL integration(nested): throw Exception","${throw${exc}.value}",testMap,"",false);
  fseTest("UEL integration(nested): throw NPE","${throwNPE${blank}.value}",testMap,"",false);
  fseTest("visible nested replacement","${'Hello ${var}'}!",testMap,"Hello World!",false);
  fseTest("blank nested replacement","${'Hel${blank}lo ${var}'}!",testMap,"Hello World!",false);
  fseTest("UEL integration(nested): null","${${nu${nullVar}ll}}",testMap,"",false);
  fseTest("UEL integration(nested): NPE","${${nullVar.noProp}}",testMap,"",false);
  fseTest("UEL integration(nested): missing","${${noL${nullVar}ist[0]}}",testMap,"",false);
  fseTest("date w/ timezone","The date is ${date}.",testMap,timeZoneToTest,localeToTest,"The date is 1970-01-14 22:56:07.890.",false);
  fseTest("just bad","${foobar",testMap,"${foobar",false);
  fseTest("constant and bad","Hello${foobar",testMap,"Hello${foobar",false);
  fseTest("good and bad","Hello ${var}${foobar",testMap,"Hello World${foobar",false);
  fseTest("null nested","${${nullVar}}!",testMap,"!",false);
  fseTest("bsh: script","${bsh:return \"Hello \" + var + \"!\";}",testMap,"Hello World!",false);
  fseTest("bsh: null","${bsh:return null;}!",testMap,"!",false);
  fseTest("bsh: throw Exception","${bsh:return throwException.value;}!",testMap,"!",false);
  fseTest("bsh: converter exception","${bsh:return specialNumber;}!",testMap,SpecialNumber.class.getName() + "!",false);
  fseTest("groovy: script","${groovy:return \"Hello \" + var + \"!\";}",testMap,"Hello World!",false);
  fseTest("groovy: null","${groovy:return null;}!",testMap,"!",false);
  fseTest("groovy missing property","${groovy: return noList[0]}",testMap,"",false);
  fseTest("groovy: throw Exception","${groovy:return throwException.value;}!",testMap,"!",false);
  fseTest("groovy: converter exception","${groovy:return specialNumber;}!",testMap,SpecialNumber.class.getName() + "!",false);
  fseTest("UEL integration: Map","Hello ${testMap.var}!",testMap,"Hello World!",false);
  fseTest("UEL integration: blank","Hello ${testMap.blank}World!",testMap,"Hello World!",false);
  fseTest("UEL integration: List","Hello ${testList[0]}!",testMap,"Hello World!",false);
  fseTest("UEL integration: null","${null}",testMap,"",false);
  fseTest("UEL integration: null dereference","${nullVar.noProp}",testMap,"",false);
  fseTest("UEL integration: throw NPE","${" + FlexibleStringExpanderTests.class.getName() + ".ThrowNPE.noProp}",testMap,"",false);
  fseTest("UEL integration: missing","${noList[0]}",testMap,"",false);
  fseTest("Escaped expression","This is an \\${escaped} expression",testMap,"This is an ${escaped} expression",false);
  fseTest("Escaped(bsh) expression","This is an \\${bsh:escaped} expression",testMap,"This is an ${bsh:escaped} expression",false);
  fseTest("Escaped(groovy) expression","This is an \\${groovy:escaped} expression",testMap,"This is an ${groovy:escaped} expression",false);
}
