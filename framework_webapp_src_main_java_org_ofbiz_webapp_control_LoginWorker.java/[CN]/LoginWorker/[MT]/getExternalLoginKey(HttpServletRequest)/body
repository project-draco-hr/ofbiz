{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  boolean externalLoginKeyEnabled="true".equals(EntityUtilProperties.getPropertyValue("security","security.login.externalLoginKey.enabled","true",delegator));
  if (!externalLoginKeyEnabled) {
    return null;
  }
  GenericValue userLogin=(GenericValue)request.getAttribute("userLogin");
  String externalKey=(String)request.getAttribute(EXTERNAL_LOGIN_KEY_ATTR);
  if (externalKey != null)   return externalKey;
  HttpSession session=request.getSession();
synchronized (session) {
    String sesExtKey=(String)session.getAttribute(EXTERNAL_LOGIN_KEY_ATTR);
    if (sesExtKey != null) {
      if (isAjax(request))       return sesExtKey;
      externalLoginKeys.remove(sesExtKey);
    }
    if (userLogin == null)     return "";
    while (externalKey == null || externalLoginKeys.containsKey(externalKey)) {
      UUID uuid=UUID.randomUUID();
      externalKey="EL" + uuid.toString();
    }
    request.setAttribute(EXTERNAL_LOGIN_KEY_ATTR,externalKey);
    session.setAttribute(EXTERNAL_LOGIN_KEY_ATTR,externalKey);
    externalLoginKeys.put(externalKey,userLogin);
    return externalKey;
  }
}
