{
  if (fieldName != null) {
    if (UtilValidate.isEmpty(value)) {
      if (UtilValidate.isNotEmpty(envName) && envName.startsWith("${")) {
        FlexibleStringExpander exp=FlexibleStringExpander.getInstance(envName);
        String s=exp.expandString(context);
        if (UtilValidate.isNotEmpty(s)) {
          value=s;
        }
        Debug.log("Expanded String: " + s,module);
      }
    }
    String mapName=null;
    Map<String,Object> map=null;
    if (UtilValidate.isNotEmpty(fieldName) && fieldName.indexOf('.') != -1) {
      mapName=fieldName.substring(0,fieldName.indexOf('.'));
      fieldName=fieldName.substring(fieldName.indexOf('.') + 1);
      if (context.containsKey(mapName)) {
        map=(Map<String,Object>)context.get(mapName);
      }
 else {
        map=FastMap.newInstance();
      }
    }
    String newValue=null;
    if (UtilValidate.isNotEmpty(value)) {
      newValue=(String)this.format(value,context);
    }
 else     if (UtilValidate.isNotEmpty(envName) && context.get(envName) != null) {
      newValue=(String)this.format((String)context.get(envName),context);
    }
    if (newValue != null) {
      if (map != null) {
        map.put(fieldName,newValue);
        context.put(mapName,map);
      }
 else {
        context.put(fieldName,newValue);
      }
    }
  }
}
