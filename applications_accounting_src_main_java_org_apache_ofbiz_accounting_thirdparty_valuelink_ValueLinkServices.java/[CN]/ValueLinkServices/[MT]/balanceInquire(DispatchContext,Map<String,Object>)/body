{
  Delegator delegator=dctx.getDelegator();
  Properties props=getProperties(context);
  String cardNumber=(String)context.get("cardNumber");
  String pin=(String)context.get("pin");
  String currency=(String)context.get("currency");
  String orderId=(String)context.get("orderId");
  String partyId=(String)context.get("partyId");
  Locale locale=(Locale)context.get("locale");
  ValueLinkApi vl=ValueLinkApi.getInstance(delegator,props);
  Map<String,Object> request=vl.getInitialRequestMap(context);
  request.put("Interface","Balance");
  request.put("CardNo",cardNumber);
  request.put("PIN",vl.encryptPin(pin));
  request.put("LocalCurr",vl.getCurrency(currency));
  if (UtilValidate.isNotEmpty(orderId)) {
    request.put("User1",orderId);
  }
  if (UtilValidate.isNotEmpty(partyId)) {
    request.put("User2",partyId);
  }
  Map<String,Object> response=null;
  try {
    response=vl.send(request);
  }
 catch (  HttpClientException e) {
    Debug.logError(e,"Problem communicating with VL");
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"AccountingValueLinkUnableToCallBalanceInquiry",locale));
  }
  if (response != null) {
    String responseCode=(String)response.get("responsecode");
    Map<String,Object> result=ServiceUtil.returnSuccess();
    if (responseCode.equals("00")) {
      result.put("processResult",Boolean.TRUE);
    }
 else {
      result.put("processResult",Boolean.FALSE);
    }
    result.put("responseCode",responseCode);
    result.put("balance",vl.getAmount((String)response.get("currbal")));
    result.put("expireDate",response.get("expiredate"));
    result.put("cardClass",response.get("cardclass"));
    result.put("referenceNum",response.get("traceno"));
    Debug.logInfo("Balance Result : " + result,module);
    return result;
  }
 else {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"AccountingValueLinkReceivedEmptyResponse",locale));
  }
}
