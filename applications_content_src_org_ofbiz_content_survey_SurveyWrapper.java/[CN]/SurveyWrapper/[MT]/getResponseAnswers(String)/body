{
  if (responseId == null) {
    throw new SurveyWrapperException("Null response ID is not supported at this time");
  }
  Map answerMap=new HashMap();
  if (responseId != null) {
    List answers=null;
    try {
      answers=delegator.findByAnd("SurveyResponseAnswer",UtilMisc.toMap("surveyResponseId",responseId));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    if (answers != null && answers.size() > 0) {
      Iterator i=answers.iterator();
      while (i.hasNext()) {
        GenericValue answer=(GenericValue)i.next();
        answerMap.put(answer.get("surveyQuestionId"),answer);
      }
    }
  }
  if (passThru != null && passThru.size() > 0) {
    Iterator i=passThru.keySet().iterator();
    while (i.hasNext()) {
      String key=(String)i.next();
      if (key.toUpperCase().startsWith("ANSWERS_")) {
        int splitIndex=key.indexOf('_');
        String questionId=key.substring(splitIndex + 1);
        Map thisAnswer=new HashMap();
        String answer=(String)passThru.remove(key);
        thisAnswer.put("booleanResponse",answer);
        thisAnswer.put("currencyResponse",answer);
        thisAnswer.put("floatResponse",answer);
        thisAnswer.put("numericResponse",answer);
        thisAnswer.put("textResponse",answer);
        thisAnswer.put("surveyOptionSeqId",answer);
        answerMap.put(questionId,thisAnswer);
      }
    }
  }
  return answerMap;
}
