{
  List resp=null;
  boolean beganTransaction=false;
  try {
    beganTransaction=TransactionUtil.begin();
    int maxRows=startIndex + number;
    EntityListIterator eli=this.getEli(question,maxRows);
    if (startIndex > 0 && number > 0) {
      resp=eli.getPartialList(startIndex,number);
    }
 else {
      resp=eli.getCompleteList();
    }
    eli.close();
  }
 catch (  GenericEntityException e) {
    try {
      TransactionUtil.rollback(beganTransaction,"Error getting survey question responses",e);
    }
 catch (    GenericEntityException e2) {
      Debug.logError(e2,"Could not rollback transaction: " + e2.toString(),module);
    }
    throw new SurveyWrapperException(e);
  }
 finally {
    try {
      TransactionUtil.commit(beganTransaction);
    }
 catch (    GenericEntityException e) {
      throw new SurveyWrapperException(e);
    }
  }
  return resp;
}
