{
  StringBuilder buf=new StringBuilder();
  if (args != null) {
    for (    Map.Entry<String,? extends Object> entry : args.entrySet()) {
      String name=entry.getKey();
      Object value=entry.getValue();
      String valueStr=null;
      if (name == null || value == null) {
        continue;
      }
      Collection<?> col;
      if (value instanceof String) {
        col=Arrays.asList(value);
      }
 else       if (value instanceof Collection) {
        col=UtilGenerics.cast(value);
      }
 else       if (value.getClass().isArray()) {
        col=Arrays.asList((Object[])value);
      }
 else {
        col=Arrays.asList(value);
      }
      for (      Object colValue : col) {
        if (colValue instanceof String) {
          valueStr=(String)colValue;
        }
 else         if (colValue == null) {
          continue;
        }
 else {
          valueStr=colValue.toString();
        }
        if (UtilValidate.isNotEmpty(valueStr)) {
          if (buf.length() > 0) {
            if (useExpandedEntites) {
              buf.append("&amp;");
            }
 else {
              buf.append("&");
            }
          }
          buf.append(UtilCodec.getEncoder("url").encode(name));
          buf.append('=');
          buf.append(UtilCodec.getEncoder("url").encode(valueStr));
        }
      }
    }
  }
  return buf.toString();
}
