{
  boolean passedCondition=false;
  if (serviceName != null) {
    Map<String,Object> result=null;
    try {
      result=dispatcher.runSync(serviceName,UtilMisc.<String,Object>toMap("messageWrapper",messageWrapper,"userLogin",userLogin));
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,module);
      return false;
    }
    if (result == null) {
      Debug.logError("Service MCA Condition Service [" + serviceName + "] returned null!",module);
      return false;
    }
 else {
      if (ServiceUtil.isError(result)) {
        Debug.logError(ServiceUtil.getErrorMessage(result),module);
        return false;
      }
 else {
        Boolean reply=(Boolean)result.get("conditionReply");
        if (reply == null) {
          reply=Boolean.FALSE;
        }
        return reply.booleanValue();
      }
    }
  }
 else   if (headerName != null) {
    MimeMessage message=messageWrapper.getMessage();
    String[] headerValues=null;
    try {
      headerValues=message.getHeader(headerName);
    }
 catch (    MessagingException e) {
      Debug.logError(e,module);
    }
    if (headerValues != null) {
      for (      String headerValue : headerValues) {
        if ("equals".equals(operator)) {
          if (headerValue.equals(value)) {
            passedCondition=true;
            break;
          }
        }
 else         if ("not-equals".equals(operator)) {
          if (!headerValue.equals(value)) {
            passedCondition=true;
          }
 else {
            passedCondition=false;
          }
        }
 else         if ("matches".equals(operator)) {
          if (headerValue.matches(value)) {
            passedCondition=true;
            break;
          }
        }
 else         if ("not-matches".equals(operator)) {
          if (!headerValue.matches(value)) {
            passedCondition=true;
          }
 else {
            passedCondition=false;
          }
        }
 else         if ("not-empty".equals(operator)) {
          passedCondition=true;
          break;
        }
      }
    }
 else     if ("empty".equals(operator)) {
      passedCondition=true;
    }
  }
 else   if (fieldName != null) {
    MimeMessage message=messageWrapper.getMessage();
    String[] fieldValues=null;
    try {
      fieldValues=this.getFieldValue(message,fieldName);
    }
 catch (    MessagingException e) {
      Debug.logError(e,module);
    }
catch (    IOException e) {
      Debug.logError(e,module);
    }
    if (fieldValues != null) {
      for (      String fieldValue : fieldValues) {
        if ("equals".equals(operator)) {
          if (fieldValue.equals(value)) {
            passedCondition=true;
            break;
          }
        }
 else         if ("not-equals".equals(operator)) {
          if (!fieldValue.equals(value)) {
            passedCondition=true;
          }
 else {
            passedCondition=false;
          }
        }
 else         if ("matches".equals(operator)) {
          if (fieldValue.matches(value)) {
            passedCondition=true;
            break;
          }
        }
 else         if ("not-matches".equals(operator)) {
          if (!fieldValue.matches(value)) {
            passedCondition=true;
          }
 else {
            passedCondition=false;
          }
        }
 else         if ("not-empty".equals(operator)) {
          passedCondition=true;
          break;
        }
      }
    }
 else     if ("empty".equals(operator)) {
      passedCondition=true;
    }
  }
 else {
    passedCondition=false;
  }
  return passedCondition;
}
