{
  Boolean isError=(Boolean)context.get("isError");
  Boolean useRequestParameters=(Boolean)context.get("useRequestParameters");
  Locale locale=(Locale)context.get("locale");
  if (locale == null)   locale=Locale.getDefault();
  TimeZone timeZone=(TimeZone)context.get("timeZone");
  if (timeZone == null)   timeZone=TimeZone.getDefault();
  if ((Boolean.TRUE.equals(isError) && !Boolean.FALSE.equals(useRequestParameters)) || (Boolean.TRUE.equals(useRequestParameters))) {
    Map parameters=(Map)context.get("parameters");
    String parameterName=this.getParameterName(context);
    if (parameters != null && parameters.get(parameterName) != null) {
      Object parameterValue=parameters.get(parameterName);
      if (parameterValue instanceof String) {
        return (String)parameterValue;
      }
 else {
        Debug.logWarning("Found a non-String parameter value for field [" + this.getModelForm().getName() + "."+ this.getFieldName()+ "]",module);
        return defaultValue;
      }
    }
 else {
      return defaultValue;
    }
  }
 else {
    Map dataMap=this.getMap(context);
    boolean dataMapIsContext=false;
    if (dataMap == null) {
      dataMap=context;
      dataMapIsContext=true;
    }
    Object retVal=null;
    if (this.entryAcsr != null && !this.entryAcsr.isEmpty()) {
      if (dataMap instanceof GenericEntity) {
        GenericEntity genEnt=(GenericEntity)dataMap;
        if (genEnt.getModelEntity().isField(this.entryAcsr.getOriginalName())) {
          retVal=genEnt.get(this.entryAcsr.getOriginalName());
        }
 else {
        }
      }
 else {
        retVal=this.entryAcsr.get(dataMap);
      }
    }
 else {
      retVal=dataMap.get(this.name);
    }
    if (dataMapIsContext && retVal == null && !Boolean.FALSE.equals(useRequestParameters)) {
      Map parameters=(Map)context.get("parameters");
      if (parameters != null) {
        if (this.entryAcsr != null && !this.entryAcsr.isEmpty()) {
          retVal=this.entryAcsr.get(parameters);
        }
 else {
          retVal=parameters.get(this.name);
        }
      }
    }
    if (retVal != null) {
      if (retVal instanceof Double || retVal instanceof Float || retVal instanceof BigDecimal) {
        NumberFormat nf=NumberFormat.getInstance(locale);
        nf.setMaximumFractionDigits(10);
        return nf.format(retVal);
      }
 else       if (retVal instanceof java.sql.Date) {
        DateFormat df=UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT,timeZone,null);
        return df.format((java.util.Date)retVal);
      }
 else       if (retVal instanceof java.sql.Time) {
        DateFormat df=UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT,timeZone,null);
        return df.format((java.util.Date)retVal);
      }
 else       if (retVal instanceof java.sql.Timestamp) {
        DateFormat df=UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT,timeZone,null);
        return df.format((java.util.Date)retVal);
      }
 else       if (retVal instanceof java.util.Date) {
        DateFormat df=UtilDateTime.toDateTimeFormat("EEE MMM dd hh:mm:ss z yyyy",timeZone,null);
        return df.format((java.util.Date)retVal);
      }
 else {
        return retVal.toString();
      }
    }
 else {
      return defaultValue;
    }
  }
}
