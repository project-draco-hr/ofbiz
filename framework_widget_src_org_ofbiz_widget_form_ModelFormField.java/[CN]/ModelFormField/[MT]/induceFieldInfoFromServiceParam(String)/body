{
  if (UtilValidate.isEmpty(this.getServiceName()) || UtilValidate.isEmpty(this.getAttributeName()))   return false;
  DispatchContext dispatchContext=this.getModelForm().dispatchContext;
  try {
    ModelService modelService=dispatchContext.getModelService(this.getServiceName());
    if (modelService != null) {
      ModelParam modelParam=modelService.getParam(this.getAttributeName());
      if (modelParam != null) {
        if (UtilValidate.isNotEmpty(modelParam.entityName) && UtilValidate.isNotEmpty(modelParam.fieldName)) {
          this.entityName=modelParam.entityName;
          this.fieldName=modelParam.fieldName;
          if (this.induceFieldInfoFromEntityField(defaultFieldType)) {
            return true;
          }
        }
        this.induceFieldInfoFromServiceParam(modelService,modelParam,defaultFieldType);
        return true;
      }
    }
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"error getting service parameter definition for auto-field with serviceName: " + this.getServiceName() + ", and attributeName: "+ this.getAttributeName(),module);
  }
  return false;
}
