{
  super(element,modelFormField);
  this.current=element.getAttribute("current");
  this.allowEmpty="true".equals(element.getAttribute("allow-empty"));
  this.currentDescription=new FlexibleStringExpander(element.getAttribute("current-description"));
  String sizeStr=element.getAttribute("other-field-size");
  try {
    this.otherFieldSize=Integer.parseInt(sizeStr);
  }
 catch (  Exception e) {
    if (sizeStr != null && sizeStr.length() > 0) {
      Debug.logError("Could not parse the size value of the text element: [" + sizeStr + "], setting to the default of "+ this.otherFieldSize,module);
    }
  }
  Element subHyperlinkElement=UtilXml.firstChildElement(element,"sub-hyperlink");
  if (subHyperlinkElement != null) {
    this.subHyperlink=new SubHyperlink(subHyperlinkElement);
  }
}
