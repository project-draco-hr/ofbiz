{
  super(element,modelFormField);
  int cols=60;
  String colsStr=element.getAttribute("cols");
  if (!colsStr.isEmpty()) {
    try {
      cols=Integer.parseInt(colsStr);
    }
 catch (    Exception e) {
      if (UtilValidate.isNotEmpty(colsStr)) {
        Debug.logError("Could not parse the size value of the text element: [" + colsStr + "], setting to default of "+ cols,module);
      }
    }
  }
  this.cols=cols;
  this.defaultValue=FlexibleStringExpander.getInstance(element.getAttribute("default-value"));
  this.readOnly="true".equals(element.getAttribute("read-only"));
  int rows=2;
  String rowsStr=element.getAttribute("rows");
  if (!rowsStr.isEmpty()) {
    try {
      rows=Integer.parseInt(rowsStr);
    }
 catch (    Exception e) {
      if (UtilValidate.isNotEmpty(rowsStr)) {
        Debug.logError("Could not parse the size value of the text element: [" + rowsStr + "], setting to default of "+ rows,module);
      }
    }
  }
  this.rows=rows;
  this.visualEditorButtons=FlexibleStringExpander.getInstance(element.getAttribute("visual-editor-buttons"));
  this.visualEditorEnable="true".equals(element.getAttribute("visual-editor-enable"));
}
