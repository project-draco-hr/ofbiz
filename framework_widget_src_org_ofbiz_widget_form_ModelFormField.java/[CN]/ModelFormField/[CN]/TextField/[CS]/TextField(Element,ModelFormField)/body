{
  super(element,modelFormField);
  this.setDefaultValue(element.getAttribute("default-value"));
  String sizeStr=element.getAttribute("size");
  try {
    size=Integer.parseInt(sizeStr);
  }
 catch (  Exception e) {
    if (sizeStr != null && sizeStr.length() > 0) {
      Debug.logError("Could not parse the size value of the text element: [" + sizeStr + "], setting to the default of "+ size,module);
    }
  }
  String maxlengthStr=element.getAttribute("maxlength");
  try {
    maxlength=Integer.valueOf(maxlengthStr);
  }
 catch (  Exception e) {
    maxlength=null;
    if (maxlengthStr != null && maxlengthStr.length() > 0) {
      Debug.logError("Could not parse the max-length value of the text element: [" + maxlengthStr + "], setting to null; default of no maxlength will be used",module);
    }
  }
  this.disabled="true".equals(element.getAttribute("disabled"));
  Element subHyperlinkElement=UtilXml.firstChildElement(element,"sub-hyperlink");
  if (subHyperlinkElement != null) {
    this.subHyperlink=new SubHyperlink(subHyperlinkElement);
  }
}
