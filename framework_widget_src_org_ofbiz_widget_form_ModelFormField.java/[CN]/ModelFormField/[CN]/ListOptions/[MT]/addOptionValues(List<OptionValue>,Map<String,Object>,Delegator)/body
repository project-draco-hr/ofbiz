{
  List<? extends Object> dataList=UtilGenerics.checkList(this.listAcsr.get(context));
  if (dataList != null && dataList.size() != 0) {
    for (    Object data : dataList) {
      Map<String,Object> localContext=FastMap.newInstance();
      localContext.putAll(context);
      if (UtilValidate.isNotEmpty(this.listEntryName)) {
        localContext.put(this.listEntryName,data);
      }
 else {
        Map<String,Object> dataMap=UtilGenerics.checkMap(data);
        localContext.putAll(dataMap);
      }
      Object keyObj=keyAcsr.get(localContext);
      String key=null;
      if (keyObj instanceof String) {
        key=(String)keyObj;
      }
 else {
        try {
          key=(String)ObjectType.simpleTypeConvert(keyObj,"String",null,null);
        }
 catch (        GeneralException e) {
          String errMsg="Could not convert field value for the field: [" + this.keyAcsr.toString() + "] to String for the value ["+ keyObj+ "]: "+ e.toString();
          Debug.logError(e,errMsg,module);
        }
      }
      optionValues.add(new OptionValue(key,description.expandString(localContext)));
    }
  }
}
