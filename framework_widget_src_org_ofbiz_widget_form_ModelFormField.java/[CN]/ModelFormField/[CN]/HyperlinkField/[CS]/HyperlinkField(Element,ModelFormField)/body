{
  super(element,modelFormField);
  this.setDescription(element.getAttribute("description"));
  this.setAlternate(element.getAttribute("alternate"));
  this.setImageLocation(element.getAttribute("image-location"));
  this.setImageTitle(element.getAttribute("image-title"));
  this.setTarget(element.getAttribute("target"));
  this.alsoHidden=!"false".equals(element.getAttribute("also-hidden"));
  this.linkType=element.getAttribute("link-type");
  this.targetType=element.getAttribute("target-type");
  this.targetWindowExdr=FlexibleStringExpander.getInstance(element.getAttribute("target-window"));
  this.parametersMapAcsr=FlexibleMapAccessor.getInstance(element.getAttribute("parameters-map"));
  this.size=element.getAttribute("size");
  this.setRequestConfirmation("true".equals(element.getAttribute("request-confirmation")));
  this.setConfirmationMsg(element.getAttribute("confirmation-message"));
  List<? extends Element> parameterElementList=UtilXml.childElementList(element,"parameter");
  for (  Element parameterElement : parameterElementList) {
    this.parameterList.add(new WidgetWorker.Parameter(parameterElement));
  }
  Element autoServiceParamsElement=UtilXml.firstChildElement(element,"auto-parameters-service");
  if (autoServiceParamsElement != null) {
    autoServiceParameters=new WidgetWorker.AutoServiceParameters(autoServiceParamsElement);
  }
  Element autoEntityParamsElement=UtilXml.firstChildElement(element,"auto-parameters-entity");
  if (autoEntityParamsElement != null) {
    autoEntityParameters=new WidgetWorker.AutoEntityParameters(autoEntityParamsElement);
  }
}
