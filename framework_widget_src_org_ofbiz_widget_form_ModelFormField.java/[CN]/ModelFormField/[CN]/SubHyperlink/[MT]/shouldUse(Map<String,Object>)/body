{
  boolean shouldUse=true;
  String useWhen=this.getUseWhen(context);
  if (UtilValidate.isNotEmpty(useWhen)) {
    try {
      Interpreter bsh=(Interpreter)context.get("bshInterpreter");
      if (bsh == null) {
        bsh=BshUtil.makeInterpreter(context);
        context.put("bshInterpreter",bsh);
      }
      Object retVal=bsh.eval(StringUtil.convertOperatorSubstitutions(useWhen));
      if (retVal instanceof Boolean) {
        Boolean boolVal=(Boolean)retVal;
        shouldUse=boolVal.booleanValue();
      }
 else {
        throw new IllegalArgumentException("Return value from target condition eval was not a Boolean: " + retVal.getClass().getName() + " ["+ retVal+ "]");
      }
    }
 catch (    EvalError e) {
      String errmsg="Error evaluating BeanShell target conditions";
      Debug.logError(e,errmsg,module);
      throw new IllegalArgumentException(errmsg);
    }
  }
  return shouldUse;
}
