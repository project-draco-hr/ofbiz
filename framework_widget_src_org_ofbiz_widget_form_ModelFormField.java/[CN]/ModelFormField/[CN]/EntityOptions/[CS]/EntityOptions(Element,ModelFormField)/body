{
  super(modelFormField);
  this.cache=!"false".equals(entityOptionsElement.getAttribute("cache"));
  List<? extends Element> constraintElements=UtilXml.childElementList(entityOptionsElement,"entity-constraint");
  if (!constraintElements.isEmpty()) {
    List<EntityFinderUtil.ConditionExpr> constraintList=new ArrayList<EntityFinderUtil.ConditionExpr>(constraintElements.size());
    for (    Element constraintElement : constraintElements) {
      constraintList.add(new EntityFinderUtil.ConditionExpr(constraintElement));
    }
    this.constraintList=Collections.unmodifiableList(constraintList);
  }
 else {
    this.constraintList=Collections.emptyList();
  }
  this.description=FlexibleStringExpander.getInstance(entityOptionsElement.getAttribute("description"));
  this.entityName=entityOptionsElement.getAttribute("entity-name");
  this.filterByDate=entityOptionsElement.getAttribute("filter-by-date");
  this.keyFieldName=entityOptionsElement.getAttribute("key-field-name");
  List<? extends Element> orderByElements=UtilXml.childElementList(entityOptionsElement,"entity-order-by");
  if (!orderByElements.isEmpty()) {
    List<String> orderByList=new ArrayList<String>(orderByElements.size());
    for (    Element orderByElement : orderByElements) {
      orderByList.add(orderByElement.getAttribute("field-name"));
    }
    this.orderByList=Collections.unmodifiableList(orderByList);
  }
 else {
    this.orderByList=Collections.emptyList();
  }
}
