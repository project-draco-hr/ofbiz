{
  Locale locale=UtilMisc.ensureLocale(context.get("locale"));
  GenericValue value=null;
  String fieldKey=this.keyFieldName;
  if (UtilValidate.isEmpty(fieldKey)) {
    fieldKey=this.modelFormField.fieldName;
  }
  GenericDelegator delegator=this.modelFormField.modelForm.getDelegator(context);
  String fieldValue=modelFormField.getEntry(context);
  try {
    if (this.cache) {
      value=delegator.findByPrimaryKeyCache(this.entityName,UtilMisc.toMap(fieldKey,fieldValue));
    }
 else {
      value=delegator.findByPrimaryKey(this.entityName,UtilMisc.toMap(fieldKey,fieldValue));
    }
  }
 catch (  GenericEntityException e) {
    String errMsg="Error getting value from the database for display of field [" + this.modelFormField.getName() + "] on form ["+ this.modelFormField.modelForm.getName()+ "]: "+ e.toString();
    Debug.logError(e,errMsg,module);
    throw new IllegalArgumentException(errMsg);
  }
  String retVal=null;
  if (value != null) {
    retVal=this.description.expandString(value,locale);
  }
  if (retVal == null || retVal.length() == 0) {
    retVal=fieldValue;
  }
  if (retVal == null || retVal.length() == 0) {
    retVal="";
  }
  return retVal;
}
