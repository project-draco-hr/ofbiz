{
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=(Locale)context.get("locale");
  String communicationEventId=(String)context.get("communicationEventId");
  Map result=ServiceUtil.returnSuccess();
  List errorMessages=new LinkedList();
  try {
    GenericValue communicationEvent=delegator.findByPrimaryKey("CommunicationEvent",UtilMisc.toMap("communicationEventId",communicationEventId));
    if (communicationEvent == null) {
      String errMsg=UtilProperties.getMessage(resource,"commeventservices.communication_event_not_found_failure",locale);
      return ServiceUtil.returnError(errMsg + " " + communicationEventId);
    }
    if ((communicationEvent.getString("communicationEventTypeId") == null) || !(communicationEvent.getString("communicationEventTypeId").equals("EMAIL_COMMUNICATION"))) {
      String errMsg=UtilProperties.getMessage(resource,"commeventservices.communication_event_must_be_email_for_email",locale);
      return ServiceUtil.returnError(errMsg + " " + communicationEventId);
    }
    if ((communicationEvent.getRelatedOne("FromContactMech") == null) || (!(communicationEvent.getRelatedOne("FromContactMech").getString("contactMechTypeId").equals("EMAIL_ADDRESS")) || (communicationEvent.getRelatedOne("FromContactMech").getString("infoString") == null))) {
      String errMsg=UtilProperties.getMessage(resource,"commeventservices.communication_event_from_contact_mech_must_be_email",locale);
      return ServiceUtil.returnError(errMsg + " " + communicationEventId);
    }
    Map sendMailParams=new HashMap();
    sendMailParams.put("sendFrom",communicationEvent.getRelatedOne("FromContactMech").getString("infoString"));
    sendMailParams.put("subject",communicationEvent.getString("subject"));
    sendMailParams.put("body",communicationEvent.getString("content"));
    sendMailParams.put("contentType",communicationEvent.getString("contentMimeTypeId"));
    sendMailParams.put("userLogin",userLogin);
    if ((communicationEvent.getString("contactListId") == null) || (communicationEvent.getString("contactListId").equals(""))) {
      if ((communicationEvent.getRelatedOne("ToContactMech") == null) || (!(communicationEvent.getRelatedOne("ToContactMech").getString("contactMechTypeId").equals("EMAIL_ADDRESS")) || (communicationEvent.getRelatedOne("ToContactMech").getString("infoString") == null))) {
        String errMsg=UtilProperties.getMessage(resource,"commeventservices.communication_event_to_contact_mech_must_be_email",locale);
        return ServiceUtil.returnError(errMsg + " " + communicationEventId);
      }
      sendMailParams.put("communicationEventId",communicationEventId);
      sendMailParams.put("sendTo",communicationEvent.getRelatedOne("ToContactMech").getString("infoString"));
      sendMailParams.put("partyId",communicationEvent.getString("partyIdTo"));
      Map tmpResult=dispatcher.runSync("sendMail",sendMailParams);
      if (ServiceUtil.isError(tmpResult)) {
        errorMessages.add(ServiceUtil.getErrorMessage(tmpResult));
      }
 else {
        Map completeResult=dispatcher.runSync("setCommEventComplete",UtilMisc.toMap("communicationEventId",communicationEventId,"userLogin",userLogin));
        if (ServiceUtil.isError(completeResult)) {
          errorMessages.add(ServiceUtil.getErrorMessage(completeResult));
        }
      }
    }
 else {
      Map sendEmailToContactListContext=new HashMap();
      sendEmailToContactListContext.put("contactListId",communicationEvent.getString("contactListId"));
      sendEmailToContactListContext.put("communicationEventId",communicationEventId);
      sendEmailToContactListContext.put("userLogin",userLogin);
      try {
        dispatcher.runAsync("sendEmailToContactList",sendEmailToContactListContext);
      }
 catch (      GenericServiceException e) {
        String errMsg=UtilProperties.getMessage(resource,"commeventservices.errorCallingSendEmailToContactListService",locale);
        Debug.logError(e,errMsg,module);
        errorMessages.add(errMsg);
        errorMessages.addAll(e.getMessageList());
      }
    }
  }
 catch (  GenericEntityException eex) {
    ServiceUtil.returnError(eex.getMessage());
  }
catch (  GenericServiceException esx) {
    ServiceUtil.returnError(esx.getMessage());
  }
  if (errorMessages.size() > 0) {
    result=ServiceUtil.returnError(errorMessages);
  }
  return result;
}
