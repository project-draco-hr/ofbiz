{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.deprecatedAttribute(simpleMethod,element,"list-name","replace with \"list\"");
    MiniLangValidate.attributeNames(simpleMethod,element,"list","request-name");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"request-name");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"list");
    MiniLangValidate.noChildElements(simpleMethod,element);
  }
  boolean elementModified=autoCorrect(element);
  if (elementModified && MiniLangUtil.autoCorrectOn()) {
    MiniLangUtil.flagDocumentAsCorrected(element);
  }
  this.attributeNameFse=FlexibleStringExpander.getInstance(element.getAttribute("request-name"));
  String attributeName=element.getAttribute("list");
  if (!attributeName.isEmpty()) {
    this.listFma=FlexibleMapAccessor.getInstance(attributeName);
  }
 else {
    this.listFma=FlexibleMapAccessor.getInstance(attributeNameFse.toString());
  }
}
