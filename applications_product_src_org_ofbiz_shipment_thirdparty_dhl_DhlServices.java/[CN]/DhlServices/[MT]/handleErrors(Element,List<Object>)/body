{
  Element faultsElement=UtilXml.firstChildElement(responseElement,"Faults");
  List<? extends Element> faultElements=UtilXml.childElementList(faultsElement,"Fault");
  if (UtilValidate.isNotEmpty(faultElements)) {
    Iterator<? extends Element> errorElementIter=faultElements.iterator();
    while (errorElementIter.hasNext()) {
      StringBuilder errorMessageBuf=new StringBuilder();
      Element errorElement=errorElementIter.next();
      String errorCode=UtilXml.childElementValue(errorElement,"Code");
      String errorDescription=UtilXml.childElementValue(errorElement,"Desc");
      String errorSource=UtilXml.childElementValue(errorElement,"Source");
      if (UtilValidate.isEmpty(errorSource)) {
        errorSource=UtilXml.childElementValue(errorElement,"Context");
      }
      errorMessageBuf.append("An error occurred [code:");
      errorMessageBuf.append(errorCode);
      errorMessageBuf.append("] ");
      errorMessageBuf.append(" [Description:");
      errorMessageBuf.append(errorDescription);
      errorMessageBuf.append("] ");
      errorMessageBuf.append(". ");
      if (UtilValidate.isNotEmpty(errorSource)) {
        errorMessageBuf.append("The error was at Element [");
        errorMessageBuf.append(errorSource);
        errorMessageBuf.append("]");
      }
      errorList.add(errorMessageBuf.toString());
    }
  }
}
