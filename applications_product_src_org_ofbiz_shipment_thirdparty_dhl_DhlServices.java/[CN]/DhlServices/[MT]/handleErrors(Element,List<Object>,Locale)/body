{
  Element faultsElement=UtilXml.firstChildElement(responseElement,"Faults");
  List<? extends Element> faultElements=UtilXml.childElementList(faultsElement,"Fault");
  if (UtilValidate.isNotEmpty(faultElements)) {
    for (    Element errorElement : faultElements) {
      StringBuilder errorMessageBuf=new StringBuilder();
      String errorCode=UtilXml.childElementValue(errorElement,"Code");
      String errorDescription=UtilXml.childElementValue(errorElement,"Desc");
      String errorSource=UtilXml.childElementValue(errorElement,"Source");
      if (UtilValidate.isEmpty(errorSource)) {
        errorSource=UtilXml.childElementValue(errorElement,"Context");
      }
      errorMessageBuf.append(UtilProperties.getMessage(resourceError,"FacilityShipmentDhlErrorMessage",UtilMisc.toMap("errorCode",errorCode,"errorDescription",errorDescription),locale));
      if (UtilValidate.isNotEmpty(errorSource)) {
        errorMessageBuf.append(UtilProperties.getMessage(resourceError,"FacilityShipmentDhlErrorMessageElement",UtilMisc.toMap("errorSource",errorSource),locale));
      }
      errorList.add(errorMessageBuf.toString());
    }
  }
}
