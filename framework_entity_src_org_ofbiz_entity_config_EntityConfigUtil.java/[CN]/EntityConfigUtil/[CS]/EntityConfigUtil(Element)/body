{
  Element transactionFactoryElement=UtilXml.firstChildElement(rootElement,"transaction-factory");
  if (transactionFactoryElement == null) {
    throw new GenericEntityConfException("ERROR: no transaction-factory definition was found in " + ENTITY_ENGINE_XML_FILENAME);
  }
  txFactoryClass=transactionFactoryElement.getAttribute("class");
  Element userTxJndiElement=UtilXml.firstChildElement(transactionFactoryElement,"user-transaction-jndi");
  if (userTxJndiElement != null) {
    txFactoryUserTxJndiName=userTxJndiElement.getAttribute("jndi-name");
    txFactoryUserTxJndiServerName=userTxJndiElement.getAttribute("jndi-server-name");
  }
 else {
    txFactoryUserTxJndiName=null;
    txFactoryUserTxJndiServerName=null;
  }
  Element txMgrJndiElement=UtilXml.firstChildElement(transactionFactoryElement,"transaction-manager-jndi");
  if (txMgrJndiElement != null) {
    txFactoryTxMgrJndiName=txMgrJndiElement.getAttribute("jndi-name");
    txFactoryTxMgrJndiServerName=txMgrJndiElement.getAttribute("jndi-server-name");
  }
 else {
    txFactoryTxMgrJndiName=null;
    txFactoryTxMgrJndiServerName=null;
  }
  Element connectionFactoryElement=UtilXml.firstChildElement(rootElement,"connection-factory");
  if (connectionFactoryElement == null) {
    throw new GenericEntityConfException("ERROR: no connection-factory definition was found in " + ENTITY_ENGINE_XML_FILENAME);
  }
  connFactoryClass=connectionFactoryElement.getAttribute("class");
  Element debugXaResourcesElement=UtilXml.firstChildElement(rootElement,"debug-xa-resources");
  if (debugXaResourcesElement == null) {
    debugXAResources=false;
  }
 else {
    debugXAResources="true".equals(debugXaResourcesElement.getAttribute("value"));
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"resource-loader")) {
    ResourceLoaderInfo resourceLoaderInfo=new ResourceLoaderInfo(curElement);
    resourceLoaderInfos.put(resourceLoaderInfo.name,resourceLoaderInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"delegator")) {
    DelegatorInfo delegatorInfo=new DelegatorInfo(curElement);
    delegatorInfos.put(delegatorInfo.name,delegatorInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"entity-model-reader")) {
    EntityModelReaderInfo entityModelReaderInfo=new EntityModelReaderInfo(curElement);
    entityModelReaderInfos.put(entityModelReaderInfo.name,entityModelReaderInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"entity-group-reader")) {
    EntityGroupReaderInfo entityGroupReaderInfo=new EntityGroupReaderInfo(curElement);
    entityGroupReaderInfos.put(entityGroupReaderInfo.name,entityGroupReaderInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"entity-eca-reader")) {
    EntityEcaReaderInfo entityEcaReaderInfo=new EntityEcaReaderInfo(curElement);
    entityEcaReaderInfos.put(entityEcaReaderInfo.name,entityEcaReaderInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"entity-data-reader")) {
    EntityDataReaderInfo entityDataReaderInfo=new EntityDataReaderInfo(curElement);
    entityDataReaderInfos.put(entityDataReaderInfo.name,entityDataReaderInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"field-type")) {
    FieldTypeInfo fieldTypeInfo=new FieldTypeInfo(curElement);
    fieldTypeInfos.put(fieldTypeInfo.name,fieldTypeInfo);
  }
  for (  Element curElement : UtilXml.childElementList(rootElement,"datasource")) {
    DatasourceInfo datasourceInfo=new DatasourceInfo(curElement);
    datasourceInfos.put(datasourceInfo.name,datasourceInfo);
  }
}
