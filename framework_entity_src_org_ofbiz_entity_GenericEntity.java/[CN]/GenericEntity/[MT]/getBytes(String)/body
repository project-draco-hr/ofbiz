{
  Object value=get(name);
  if (value == null) {
    return null;
  }
  if (value instanceof Blob) {
    try {
      Blob valueBlob=(Blob)value;
      return valueBlob.getBytes(1,(int)valueBlob.length());
    }
 catch (    SQLException e) {
      String errMsg="Error getting byte[] from Blob: " + e.toString();
      Debug.logError(e,errMsg,module);
      return null;
    }
  }
  if (value instanceof byte[]) {
    return (byte[])value;
  }
  if (value instanceof ByteWrapper) {
    Debug.logWarning("Found a ByteWrapper object in the database for field [" + this.getEntityName() + "."+ name+ "]; converting to byte[] and returning, but note that you need to update your database to unwrap these objects for future compatibility",module);
    ByteWrapper wrapper=(ByteWrapper)value;
    return wrapper.getBytes();
  }
  throw new IllegalArgumentException("In call to getBytes the value is not a supported type, should be byte[] or ByteWrapper, is: " + value.getClass().getName());
}
