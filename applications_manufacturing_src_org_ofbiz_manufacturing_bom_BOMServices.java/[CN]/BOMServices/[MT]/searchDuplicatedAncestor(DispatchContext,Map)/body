{
  Map result=new HashMap();
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String productId=(String)context.get("productId");
  String productIdKey=(String)context.get("productIdTo");
  Timestamp fromDate=(Timestamp)context.get("fromDate");
  String bomType=(String)context.get("productAssocTypeId");
  if (fromDate == null) {
    fromDate=Timestamp.valueOf((new Date()).toString());
  }
  GenericValue duplicatedProductAssoc=null;
  try {
    duplicatedProductAssoc=BOMHelper.searchDuplicatedAncestor(productId,productIdKey,bomType,fromDate,delegator,dispatcher,userLogin);
  }
 catch (  GenericEntityException gee) {
    return ServiceUtil.returnError("Error running duplicated ancestor search: " + gee.getMessage());
  }
  result.put("duplicatedProductAssoc",duplicatedProductAssoc);
  return result;
}
