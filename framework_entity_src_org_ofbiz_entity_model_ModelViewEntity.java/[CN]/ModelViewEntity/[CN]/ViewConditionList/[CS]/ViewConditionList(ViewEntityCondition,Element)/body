{
  this.viewEntityCondition=viewEntityCondition;
  String combine=conditionListElement.getAttribute("combine");
  try {
    this.operator=EntityOperator.lookupJoin(combine);
  }
 catch (  IllegalArgumentException e) {
    throw new IllegalArgumentException("[" + this.viewEntityCondition.modelViewEntity.getEntityName() + "]: Could not find an entity operator for the name: "+ combine);
  }
  List<? extends Element> subElements=UtilXml.childElementList(conditionListElement);
  for (  Element subElement : subElements) {
    if ("condition-expr".equals(subElement.getNodeName())) {
      conditionList.add(new ViewConditionExpr(this.viewEntityCondition,subElement));
    }
 else     if ("condition-list".equals(subElement.getNodeName())) {
      conditionList.add(new ViewConditionList(this.viewEntityCondition,subElement));
    }
 else {
      throw new IllegalArgumentException("[" + this.viewEntityCondition.modelViewEntity.getEntityName() + "]: Invalid element with name ["+ subElement.getNodeName()+ "] found under a condition-list element.");
    }
  }
}
