{
  Calendar calStart=null;
  Calendar calEnd=null;
  boolean isNegative=false;
  if (cal1.before(cal2)) {
    calStart=(Calendar)cal1.clone();
    calEnd=(Calendar)cal2.clone();
  }
 else {
    isNegative=true;
    calStart=(Calendar)cal2.clone();
    calEnd=(Calendar)cal1.clone();
  }
  long targetMillis=calEnd.getTimeInMillis();
  long deltaMillis=targetMillis - calStart.getTimeInMillis();
  if (deltaMillis == 0) {
    return;
  }
  long yearMillis=86400000 * calStart.getMinimum(Calendar.DAY_OF_YEAR);
  float units=deltaMillis / yearMillis;
  this.years=advanceCalendar(calStart,calEnd,(int)units,Calendar.YEAR);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  long monthMillis=86400000 * calStart.getMinimum(Calendar.DAY_OF_MONTH);
  units=deltaMillis / monthMillis;
  this.months=advanceCalendar(calStart,calEnd,(int)units,Calendar.MONTH);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  units=deltaMillis / 86400000;
  this.days=advanceCalendar(calStart,calEnd,(int)units,Calendar.DAY_OF_MONTH);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  units=deltaMillis / 3600000;
  this.hours=advanceCalendar(calStart,calEnd,(int)units,Calendar.HOUR);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  units=deltaMillis / 60000;
  this.minutes=advanceCalendar(calStart,calEnd,(int)units,Calendar.MINUTE);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  units=deltaMillis / 1000;
  this.seconds=advanceCalendar(calStart,calEnd,(int)units,Calendar.SECOND);
  deltaMillis=targetMillis - calStart.getTimeInMillis();
  this.millis=(int)deltaMillis;
  if (isNegative) {
    makeNegative();
  }
}
