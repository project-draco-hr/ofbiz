{
  Calendar calStart;
  Calendar calEnd;
  int factor;
  if (cal1.before(cal2)) {
    factor=1;
    calStart=(Calendar)cal1.clone();
    calEnd=(Calendar)cal2.clone();
  }
 else {
    factor=-1;
    calStart=(Calendar)cal2.clone();
    calEnd=(Calendar)cal1.clone();
  }
  long targetMillis=calEnd.getTimeInMillis();
  long deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  if (deltaMillis == 0) {
    this.years=this.months=this.days=this.hours=this.minutes=this.seconds=this.milliseconds=0;
    return;
  }
  long yearMillis=86400000 * calStart.getLeastMaximum(Calendar.DAY_OF_YEAR);
  float units=deltaMillis / yearMillis;
  this.years=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.YEAR);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  long monthMillis=86400000 * calStart.getMinimum(Calendar.DAY_OF_MONTH);
  units=deltaMillis / monthMillis;
  this.months=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.MONTH);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  units=deltaMillis / 86400000;
  this.days=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.DAY_OF_MONTH);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  units=deltaMillis / 3600000;
  this.hours=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.HOUR);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  units=deltaMillis / 60000;
  this.minutes=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.MINUTE);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  units=deltaMillis / 1000;
  this.seconds=factor * advanceCalendar(calStart,calEnd,(int)units,Calendar.SECOND);
  deltaMillis=computeDeltaMillis(calStart.getTimeInMillis(),targetMillis);
  this.milliseconds=factor * (int)deltaMillis;
}
