{
  List<String> errorList=new LinkedList<String>();
  for (  VerifyPickSessionRow pickRow : this.getPickRows(orderId)) {
    BigDecimal reservedQty=this.getReservedQty(pickRow.getOrderId(),pickRow.getOrderItemSeqId(),pickRow.getShipGroupSeqId());
    BigDecimal verifiedQty=this.getReadyToVerifyQuantity(pickRow.getOrderId(),pickRow.getOrderItemSeqId());
    if (verifiedQty.compareTo(reservedQty) != 0) {
      errorList.add(UtilProperties.getMessage("ProductErrorUiLabels","ProductErrorVerifiedQtyDoesNotMatchTheReservedQtyForItem",UtilMisc.toMap("productId",pickRow.getProductId(),"verifiedQty",pickRow.getReadyToVerifyQty(),"reservedQty",reservedQty),locale));
    }
  }
  if (errorList.size() > 0) {
    throw new GeneralException(UtilProperties.getMessage("OrderErrorUiLabels","OrderErrorAttemptToVerifyOrderFailed",UtilMisc.toMap("orderId",orderId),locale),errorList);
  }
}
