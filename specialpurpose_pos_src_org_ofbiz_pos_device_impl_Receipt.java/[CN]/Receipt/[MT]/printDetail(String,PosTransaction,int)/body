{
  String loopStr=loop.substring(7);
  int size=trans.size();
  for (int i=0; i < size; i++) {
    Map expandMap=this.makeCodeExpandMap(trans,type);
    expandMap.putAll(trans.getItemInfo(i));
    expandMap.put("description",UtilFormatOut.padString((String)expandMap.get("description"),descLength[type],true,' '));
    expandMap.put("productId",UtilFormatOut.padString((String)expandMap.get("productId"),pridLength[type],true,' '));
    expandMap.put("basePrice",UtilFormatOut.padString((String)expandMap.get("basePrice"),priceLength[type],false,' '));
    expandMap.put("subtotal",UtilFormatOut.padString((String)expandMap.get("subtotal"),priceLength[type],false,' '));
    expandMap.put("quantity",UtilFormatOut.padString((String)expandMap.get("quantity"),qtyLength[type],false,' '));
    expandMap.put("adjustments",UtilFormatOut.padString((String)expandMap.get("adjustments"),priceLength[type],false,' '));
    String toPrint=FlexibleStringExpander.expandString(loopStr,expandMap);
    if (toPrint.indexOf("\n") > -1) {
      String[] lines=toPrint.split("\\n");
      for (int x=0; x < lines.length; x++) {
        String trimmed=lines[x].trim();
        if (trimmed.length() > 1) {
          this.println(lines[x]);
        }
      }
    }
 else {
      this.println(toPrint);
    }
    if (trans.isAggregatedItem(((String)expandMap.get("productId")).trim())) {
      List<Map> maps=trans.getItemConfigInfo(i);
      for (      Map map : maps) {
        expandMap=this.makeCodeExpandMap(trans,type);
        expandMap.putAll(map);
        expandMap.put("description",UtilFormatOut.padString(this.configPadding[type] + (String)expandMap.get("description"),descLength[type],true,' '));
        expandMap.put("productId",UtilFormatOut.padString((String)expandMap.get("productId"),pridLength[type],true,' '));
        expandMap.put("basePrice",UtilFormatOut.padString((String)" ",priceLength[type],false,' '));
        expandMap.put("subtotal",UtilFormatOut.padString((String)expandMap.get("subtotal"),priceLength[type],false,' '));
        expandMap.put("quantity",UtilFormatOut.padString((String)" ",qtyLength[type],false,' '));
        expandMap.put("isTaxable",UtilFormatOut.padString((String)" ",priceLength[type],false,' '));
        toPrint=FlexibleStringExpander.expandString(loopStr,expandMap);
        if (toPrint.indexOf("\n") > -1) {
          String[] lines=toPrint.split("\\n");
          for (int x=0; x < lines.length; x++) {
            String trimmed=lines[x].trim();
            if (trimmed.length() > 1) {
              this.println(lines[x]);
            }
          }
        }
 else {
          this.println(toPrint);
        }
      }
    }
  }
}
