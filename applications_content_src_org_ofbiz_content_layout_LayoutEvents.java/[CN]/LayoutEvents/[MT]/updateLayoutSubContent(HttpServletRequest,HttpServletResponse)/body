{
  try {
    LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
    HttpSession session=request.getSession();
    Map paramMap=UtilHttp.getParameterMap(request);
    String contentIdTo=(String)paramMap.get("contentIdTo");
    String mapKey=(String)paramMap.get("mapKey");
    Map context=FastMap.newInstance();
    List errorMessages=null;
    Locale loc=(Locale)request.getSession().getServletContext().getAttribute("locale");
    if (loc == null)     loc=Locale.getDefault();
    context.put("locale",loc);
    GenericValue userLogin=(GenericValue)session.getAttribute("userLogin");
    context.put("userLogin",userLogin);
    String rootDir=request.getSession().getServletContext().getRealPath("/");
    context.put("rootDir",rootDir);
    try {
      SimpleMapProcessor.runSimpleMapProcessor("component://content/script/org/ofbiz/content/ContentManagementMapProcessors.xml","contentIn",paramMap,context,errorMessages,loc);
      SimpleMapProcessor.runSimpleMapProcessor("component://content/script/org/ofbiz/content/ContentManagementMapProcessors.xml","dataResourceIn",paramMap,context,errorMessages,loc);
      SimpleMapProcessor.runSimpleMapProcessor("component://content/script/org/ofbiz/content/ContentManagementMapProcessors.xml","contentAssocIn",paramMap,context,errorMessages,loc);
    }
 catch (    MiniLangException e) {
      request.setAttribute("_ERROR_MESSAGE_",e.getMessage());
      return "error";
    }
    context.put("dataResourceName",context.get("contentName"));
    String contentPurposeTypeId=(String)paramMap.get("contentPurposeTypeId");
    if (UtilValidate.isNotEmpty(contentPurposeTypeId))     context.put("contentPurposeList",UtilMisc.toList(contentPurposeTypeId));
    context.put("contentIdTo",paramMap.get("contentIdTo"));
    context.put("textData",paramMap.get("textData"));
    context.put("contentAssocTypeId",null);
    Map result=dispatcher.runSync("persistContentAndAssoc",context);
    boolean isError=ModelService.RESPOND_ERROR.equals(result.get(ModelService.RESPONSE_MESSAGE));
    if (isError) {
      request.setAttribute("_ERROR_MESSAGE_",result.get(ModelService.ERROR_MESSAGE));
      return "error";
    }
    String contentId=(String)result.get("contentId");
    String dataResourceId=(String)result.get("dataResourceId");
    request.setAttribute("contentId",contentId);
    request.setAttribute("drDataResourceId",dataResourceId);
    request.setAttribute("currentEntityName","SubContentDataResourceId");
  }
 catch (  GenericServiceException e) {
    request.setAttribute("_ERROR_MESSAGE_",e.getMessage());
    return "error";
  }
  return "success";
}
