{
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> newContext=new LinkedHashMap<String,Object>();
  newContext.put("userLogin",context.get("userLogin"));
  newContext.put("sendFailureNotification",false);
  newContext.put("sendFrom",context.get("sendFrom"));
  newContext.put("sendTo",context.get("sendFrom"));
  newContext.put("subject",UtilProperties.getMessage(resource,"CommonEmailSendUndeliveredMail",locale));
  StringBuilder sb=new StringBuilder();
  sb.append(UtilProperties.getMessage(resource,"CommonEmailDeliveryFailed",locale));
  sb.append("/n/n");
  for (  SMTPAddressFailedException failure : failures) {
    sb.append(failure.getAddress());
    sb.append(": ");
    sb.append(failure.getMessage());
    sb.append("/n/n");
  }
  sb.append(UtilProperties.getMessage(resource,"CommonEmailDeliveryOriginalMessage",locale));
  sb.append("/n/n");
  List<Map<String,Object>> bodyParts=new LinkedList<Map<String,Object>>();
  bodyParts.add(UtilMisc.<String,Object>toMap("content",sb.toString(),"type","text/plain"));
  Map<String,Object> bodyPart=new LinkedHashMap<String,Object>();
  bodyPart.put("content",sb.toString());
  bodyPart.put("type","text/plain");
  try {
    bodyParts.add(UtilMisc.<String,Object>toMap("content",message.getDataHandler()));
  }
 catch (  MessagingException e) {
    Debug.logError(e,module);
  }
  try {
    dctx.getDispatcher().runSync("sendMailMultiPart",newContext);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,module);
  }
}
