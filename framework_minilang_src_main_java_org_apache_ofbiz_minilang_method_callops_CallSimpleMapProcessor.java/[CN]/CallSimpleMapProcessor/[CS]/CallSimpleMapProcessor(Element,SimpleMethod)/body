{
  super(element,simpleMethod);
  if (MiniLangValidate.validationOn()) {
    MiniLangValidate.attributeNames(simpleMethod,element,"processor-name","xml-resource","in-map-name","out-map-name","error-list-name");
    MiniLangValidate.constantAttributes(simpleMethod,element,"processor-name","xml-resource","error-list-name");
    MiniLangValidate.expressionAttributes(simpleMethod,element,"in-map-name","out-map-name");
    MiniLangValidate.requiredAttributes(simpleMethod,element,"in-map-name","out-map-name");
    MiniLangValidate.childElements(simpleMethod,element,"simple-map-processor");
  }
  processorName=element.getAttribute("processor-name");
  xmlResource=element.getAttribute("xml-resource");
  errorListFma=FlexibleMapAccessor.getInstance(MiniLangValidate.checkAttribute(element.getAttribute("error-list-name"),"error_list"));
  inMapFma=FlexibleMapAccessor.getInstance(element.getAttribute("in-map-name"));
  outMapFma=FlexibleMapAccessor.getInstance(element.getAttribute("out-map-name"));
  Element simpleMapProcessorElement=UtilXml.firstChildElement(element,"simple-map-processor");
  if (simpleMapProcessorElement != null) {
    inlineMapProcessor=new MapProcessor(simpleMapProcessorElement);
  }
 else {
    inlineMapProcessor=null;
  }
}
