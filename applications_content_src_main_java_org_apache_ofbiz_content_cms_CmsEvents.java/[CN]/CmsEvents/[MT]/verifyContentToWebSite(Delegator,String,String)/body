{
  List<GenericValue> publishPoints=null;
  boolean hadContent=false;
  try {
    publishPoints=EntityQuery.use(delegator).from("WebSiteContent").where("webSiteId",webSiteId,"contentId",contentId,"webSiteContentTypeId","PUBLISH_POINT").orderBy("-fromDate").cache().queryList();
  }
 catch (  GenericEntityException e) {
    throw e;
  }
  if (UtilValidate.isNotEmpty(publishPoints)) {
    hadContent=true;
  }
  publishPoints=EntityUtil.filterByDate(publishPoints);
  if (UtilValidate.isNotEmpty(publishPoints)) {
    if (Debug.verboseOn())     Debug.logVerbose("Found publish points: " + publishPoints,module);
    return HttpServletResponse.SC_OK;
  }
 else {
    List<GenericValue> topLevelContentValues=EntityQuery.use(delegator).from("WebSiteContent").where("webSiteId",webSiteId,"webSiteContentTypeId","PUBLISH_POINT").orderBy("-fromDate").cache().filterByDate().queryList();
    if (topLevelContentValues != null) {
      for (      GenericValue point : topLevelContentValues) {
        int subContentStatusCode=verifySubContent(delegator,contentId,point.getString("contentId"));
        if (subContentStatusCode == HttpServletResponse.SC_OK) {
          return HttpServletResponse.SC_OK;
        }
 else         if (subContentStatusCode == HttpServletResponse.SC_GONE) {
          hadContent=true;
        }
      }
    }
  }
  int responseCode;
  if (hadContent) {
    responseCode=HttpServletResponse.SC_GONE;
  }
 else {
    responseCode=HttpServletResponse.SC_NOT_FOUND;
  }
  Debug.logWarning("Could not verify contentId [" + contentId + "] to webSiteId ["+ webSiteId+ "], returning code: "+ responseCode,module);
  return responseCode;
}
