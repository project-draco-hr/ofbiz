{
  if (!store.isConnected()) {
    store.connect();
  }
  Folder folder=store.getDefaultFolder();
  if (!folder.exists()) {
    throw new MessagingException("No default (root) folder available");
  }
  folder=folder.getFolder(INBOX);
  if (!folder.exists()) {
    throw new MessagingException("No INBOX folder available");
  }
  folder.open(Folder.READ_WRITE);
  int totalMessages=folder.getMessageCount();
  if (totalMessages == 0) {
    folder.close(false);
    return;
  }
  Message[] messages=folder.search(new FlagTerm(new Flags(Flags.Flag.SEEN),false));
  FetchProfile profile=new FetchProfile();
  profile.add(FetchProfile.Item.ENVELOPE);
  profile.add(FetchProfile.Item.FLAGS);
  profile.add("X-Mailer");
  folder.fetch(messages,profile);
  for (  Message message : messages) {
    if (!message.isSet(Flags.Flag.SEEN)) {
      long messageSize=message.getSize();
      if (message instanceof MimeMessage && messageSize >= maxSize) {
        Debug.logWarning("Message from: " + message.getFrom()[0] + "not received, too big, size:"+ messageSize+ " cannot be more than "+ maxSize+ " bytes",module);
        message.setFlag(Flags.Flag.SEEN,true);
      }
 else {
        this.processMessage(message,session);
        if (Debug.verboseOn())         Debug.logVerbose("Message from " + UtilMisc.toListArray(message.getFrom()) + " with subject ["+ message.getSubject()+ "]  has been processed.",module);
        message.setFlag(Flags.Flag.SEEN,true);
        if (Debug.verboseOn())         Debug.logVerbose("Message [" + message.getSubject() + "] is marked seen",module);
        if (deleteMail) {
          if (Debug.verboseOn())           Debug.logVerbose("Message [" + message.getSubject() + "] is being deleted",module);
          message.setFlag(Flags.Flag.DELETED,true);
        }
      }
    }
  }
  folder.close(true);
}
