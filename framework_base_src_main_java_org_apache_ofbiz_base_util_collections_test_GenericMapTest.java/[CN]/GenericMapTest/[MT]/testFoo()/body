{
  TestGenericMap<String,Integer> map=new TestGenericMap<String,Integer>();
  map.put("a",0);
  System.err.println("put a\t\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertEquals("get a",Integer.valueOf(0),map.get("a"));
  map.put("b",1);
  System.err.println("put b\t\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertEquals("get b",Integer.valueOf(1),map.get("b"));
  map.put("c",2);
  System.err.println("put c\t\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertEquals("get c",Integer.valueOf(2),map.get("c"));
  map.put("d",3);
  System.err.println("put d\t\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertEquals("get d",Integer.valueOf(3),map.get("d"));
  map.put("c",22);
  System.err.println("put c-2\t\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertEquals("get c-2",Integer.valueOf(22),map.get("c"));
  map.remove("b");
  System.err.println("remove b\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  assertNull("null b",map.get("b"));
  map.remove("aaa");
  System.err.println("remove aaa\tcounts=" + map.getCounts() + ", modCount="+ map.getModCount());
  System.err.println("map=" + map);
  System.err.println("counts=" + map.getCounts() + ", modCount="+ map.getModCount());
  new HashMap<String,Integer>(map);
  System.err.println("counts=" + map.getCounts() + ", modCount="+ map.getModCount());
}
