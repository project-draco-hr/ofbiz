{
  String operator=methodContext.expandString(this.operator);
  String type=methodContext.expandString(this.type);
  String format=methodContext.expandString(this.format);
  Object fieldVal1=getFieldVal1(methodContext);
  Object fieldVal2=getFieldVal2(methodContext);
  List<Object> messages=FastList.newInstance();
  Boolean resultBool=BaseCompare.doRealCompare(fieldVal1,fieldVal2,operator,type,format,messages,null,methodContext.getLoader(),false);
  if (messages.size() > 0) {
    messages.add(0,"Error with comparison in if-compare-field between fields [" + mapAcsr.toString() + "."+ fieldAcsr.toString()+ "] with value ["+ fieldVal1+ "] and ["+ toMapAcsr.toString()+ "."+ toFieldAcsr.toString()+ "] with value ["+ fieldVal2+ "] with operator ["+ operator+ "] and type ["+ type+ "]: ");
    if (methodContext.getMethodType() == MethodContext.EVENT) {
      StringBuilder fullString=new StringBuilder();
      for (      Object message : messages) {
        fullString.append(message);
      }
      Debug.logWarning(fullString.toString(),module);
      methodContext.putEnv(simpleMethod.getEventErrorMessageName(),fullString.toString());
      methodContext.putEnv(simpleMethod.getEventResponseCodeName(),simpleMethod.getDefaultErrorCode());
    }
 else     if (methodContext.getMethodType() == MethodContext.SERVICE) {
      methodContext.putEnv(simpleMethod.getServiceErrorMessageListName(),messages);
      methodContext.putEnv(simpleMethod.getServiceResponseMessageName(),simpleMethod.getDefaultErrorCode());
    }
    return false;
  }
  if (resultBool != null)   return resultBool.booleanValue();
  return false;
}
