{
  GenericValue content=assoc.getRelatedOne("ToContent",true);
  String contentName=assoc.getString("contentIdTo");
  if (content != null && content.getString("contentName") != null) {
    contentName=content.getString("contentName");
    if (contentName.length() > CONTENT_NAME_MAX_LENGTH) {
      contentName=contentName.substring(0,CONTENT_NAME_MAX_LENGTH);
    }
  }
  Map<String,Object> data=UtilMisc.toMap("title",(Object)contentName);
  Map<String,Object> attr=UtilMisc.toMap("id",assoc.get("contentIdTo"),"contentId",assoc.get("contentId"),"fromDate",assoc.getTimestamp("fromDate").toString(),"contentAssocTypeId",assoc.get("contentAssocTypeId"));
  Map<String,Object> node=UtilMisc.toMap("data",(Object)data,"attr",(Object)attr);
  List<GenericValue> assocChildren=content.getRelated("FromContentAssoc",null,null,true);
  assocChildren=EntityUtil.filterByDate(assocChildren);
  if (!CollectionUtils.isEmpty(assocChildren)) {
    node.put("state","closed");
  }
  return node;
}
