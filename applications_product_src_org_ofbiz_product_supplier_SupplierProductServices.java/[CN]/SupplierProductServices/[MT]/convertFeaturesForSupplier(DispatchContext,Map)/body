{
  Map results=new HashMap();
  String partyId=(String)context.get("partyId");
  Collection features=(Collection)context.get("productFeatures");
  try {
    if (partyId != null && features != null && features.size() > 0) {
      for (Iterator fI=features.iterator(); fI.hasNext(); ) {
        GenericValue nextFeature=(GenericValue)fI.next();
        List supplierFeatures=EntityUtil.filterByAnd(nextFeature.getRelated("SupplierProductFeature"),UtilMisc.toMap("partyId",partyId));
        GenericValue supplierFeature=null;
        if ((supplierFeatures != null) && (supplierFeatures.size() > 0)) {
          supplierFeature=(GenericValue)supplierFeatures.get(0);
          if (supplierFeature.get("description") != null) {
            nextFeature.put("description",supplierFeature.get("description"));
          }
          if (supplierFeature.get("idCode") != null) {
            nextFeature.put("idCode",supplierFeature.get("idCode"));
          }
        }
      }
    }
    results=ServiceUtil.returnSuccess();
    results.put("convertedProductFeatures",features);
  }
 catch (  GenericEntityException ex) {
    Debug.logError(ex,ex.getMessage(),module);
    return ServiceUtil.returnError(ex.getMessage());
  }
  return results;
}
