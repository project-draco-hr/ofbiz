{
  assertEquals("first one","ONE",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("first","one")));
  assertEquals("first two","TWO",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("first","two")));
  assertEquals("first three","THREE",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("first","three")));
  assertEquals("first null","1",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("first","second","ONE")));
  assertEquals("second one","1",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("second","ONE")));
  assertEquals("second two","2",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("second","TWO")));
  assertEquals("second three","3",UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("second","THREE")));
  Exception caught=null;
  try {
    UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("first"));
  }
 catch (  ClassNotFoundException e) {
    caught=e;
  }
 finally {
    assertNotNull("nothing found first",caught);
  }
  caught=null;
  try {
    UtilObject.getObjectFromFactory(TestFactoryIntf.class,set("second"));
  }
 catch (  ClassNotFoundException e) {
    caught=e;
  }
 finally {
    assertNotNull("nothing found second",caught);
  }
}
