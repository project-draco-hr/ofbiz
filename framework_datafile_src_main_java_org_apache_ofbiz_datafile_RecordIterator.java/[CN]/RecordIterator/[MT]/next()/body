{
  if (!hasNext()) {
    return null;
  }
  if (ModelDataFile.SEP_DELIMITED.equals(modelDataFile.separatorStyle) || ModelDataFile.SEP_FIXED_RECORD.equals(modelDataFile.separatorStyle) || ModelDataFile.SEP_FIXED_LENGTH.equals(modelDataFile.separatorStyle)) {
    boolean isFixedRecord=ModelDataFile.SEP_FIXED_RECORD.equals(modelDataFile.separatorStyle);
    this.curLine=this.nextLine;
    this.curRecord=this.nextRecord;
    this.getNextLine();
    if (!isFixedRecord && modelDataFile.recordLength > 0 && curLine.length() != modelDataFile.recordLength) {
      throw new DataFileException("Line number " + this.getCurrentLineNumber() + " was not the expected length; expected: "+ modelDataFile.recordLength+ ", got: "+ curLine.length());
    }
    if (this.curRecord.getModelRecord().childRecords.size() > 0) {
      Stack<Record> parentStack=new Stack<Record>();
      parentStack.push(curRecord);
      while (this.nextRecord != null && this.nextRecord.getModelRecord().parentRecord != null) {
        Record parentRecord=null;
        while (parentStack.size() > 0) {
          parentRecord=parentStack.peek();
          if (parentRecord.recordName.equals(this.nextRecord.getModelRecord().parentName)) {
            break;
          }
 else {
            parentStack.pop();
            parentRecord=null;
          }
        }
        if (parentRecord == null) {
          throw new DataFileException("Expected Parent Record not found for line " + this.getCurrentLineNumber() + "; record name of expected parent is "+ this.nextRecord.getModelRecord().parentName);
        }
        parentRecord.addChildRecord(this.nextRecord);
        if (this.nextRecord.getModelRecord().childRecords.size() > 0) {
          parentStack.push(this.nextRecord);
        }
        this.getNextLine();
      }
    }
  }
 else {
    throw new DataFileException("Separator style " + modelDataFile.separatorStyle + " not recognized.");
  }
  return curRecord;
}
