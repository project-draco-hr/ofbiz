{
  String methodName=methodContext.expandString(this.methodName);
  String className=methodContext.expandString(this.className);
  String fieldString=getFieldString(methodContext);
  Class[] paramTypes=new Class[]{String.class};
  Object[] params=new Object[]{fieldString};
  Class valClass;
  try {
    valClass=methodContext.getLoader().loadClass(className);
  }
 catch (  ClassNotFoundException cnfe) {
    Debug.logError("Could not find validation class: " + className,module);
    return false;
  }
  Method valMethod;
  try {
    valMethod=valClass.getMethod(methodName,paramTypes);
  }
 catch (  NoSuchMethodException cnfe) {
    Debug.logError("Could not find validation method: " + methodName + " of class "+ className,module);
    return false;
  }
  Boolean resultBool=Boolean.FALSE;
  try {
    resultBool=(Boolean)valMethod.invoke(null,params);
  }
 catch (  Exception e) {
    Debug.logError(e,"Error in IfValidationMethod " + methodName + " of class "+ className+ ", not processing sub-ops ",module);
  }
  if (resultBool != null)   return resultBool.booleanValue();
  return false;
}
