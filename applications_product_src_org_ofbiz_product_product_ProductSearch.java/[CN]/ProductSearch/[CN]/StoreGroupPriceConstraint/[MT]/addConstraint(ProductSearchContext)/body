{
  String entityAlias="PSPP" + context.index;
  String prefix="PSPP" + context.index;
  context.dynamicViewEntity.addMemberEntity(entityAlias,"ProductPrice");
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "ProductPriceTypeId","productPriceTypeId",null,null,null,null);
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "ProductPricePurposeId","productPricePurposeId",null,null,null,null);
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "CurrencyUomId","currencyUomId",null,null,null,null);
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "ProductStoreGroupId","productStoreGroupId",null,null,null,null);
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "FromDate","fromDate",null,null,null,null);
  context.dynamicViewEntity.addAlias(entityAlias,prefix + "ThruDate","thruDate",null,null,null,null);
  context.dynamicViewEntity.addViewLink("PROD",entityAlias,Boolean.FALSE,ModelKeyMap.makeKeyMapList("productId"));
  context.entityConditionList.add(EntityCondition.makeCondition(prefix + "ProductPriceTypeId",EntityOperator.EQUALS,productPriceTypeId));
  context.entityConditionList.add(EntityCondition.makeCondition(prefix + "ProductPricePurposeId",EntityOperator.EQUALS,"PURCHASE"));
  context.entityConditionList.add(EntityCondition.makeCondition(prefix + "CurrencyUomId",EntityOperator.EQUALS,currencyUomId));
  context.entityConditionList.add(EntityCondition.makeCondition(prefix + "ProductStoreGroupId",EntityOperator.EQUALS,productStoreGroupId));
  context.entityConditionList.add(EntityCondition.makeCondition(EntityCondition.makeCondition(prefix + "ThruDate",EntityOperator.EQUALS,null),EntityOperator.OR,EntityCondition.makeCondition(prefix + "ThruDate",EntityOperator.GREATER_THAN,context.nowTimestamp)));
  context.entityConditionList.add(EntityCondition.makeCondition(prefix + "FromDate",EntityOperator.LESS_THAN,context.nowTimestamp));
}
