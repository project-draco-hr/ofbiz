{
  if (nowTimestamp == null) {
    nowTimestamp=UtilDateTime.nowTimestamp();
  }
  productCategoryIdSet.add(productCategoryId);
  try {
    List<GenericValue> productCategoryRollupList=EntityQuery.use(delegator).from("ProductCategoryRollup").where("parentProductCategoryId",productCategoryId).cache(true).queryList();
    for (    GenericValue productCategoryRollup : productCategoryRollupList) {
      String subProductCategoryId=productCategoryRollup.getString("productCategoryId");
      if (productCategoryIdSet.contains(subProductCategoryId)) {
        continue;
      }
      if (EntityUtil.isValueActive(productCategoryRollup,nowTimestamp)) {
        getAllSubCategoryIds(subProductCategoryId,productCategoryIdSet,delegator,nowTimestamp);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error finding sub-categories for product search",module);
  }
}
