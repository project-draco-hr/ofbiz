{
  Transaction suspendedTransaction=null;
  try {
    boolean beganTransaction=false;
    suspendedTransaction=TransactionUtil.suspend();
    try {
      beganTransaction=TransactionUtil.begin();
      try {
        getJobManager().schedule(jobName,poolName,serviceName,context,startTime,frequency,interval,count,endTime,maxRetry);
        if (Debug.verboseOn()) {
          Debug.logVerbose("[LocalDispatcher.schedule] : Current time : " + (new Date()).getTime(),module);
          Debug.logVerbose("[LocalDispatcher.schedule] : Runtime      : " + startTime,module);
          Debug.logVerbose("[LocalDispatcher.schedule] : Frequency    : " + frequency,module);
          Debug.logVerbose("[LocalDispatcher.schedule] : Interval     : " + interval,module);
          Debug.logVerbose("[LocalDispatcher.schedule] : Count        : " + count,module);
          Debug.logVerbose("[LocalDispatcher.schedule] : EndTime      : " + endTime,module);
          Debug.logVerbose("[LocalDispatcher.schedule] : MazRetry     : " + maxRetry,module);
        }
      }
 catch (      JobManagerException jme) {
        throw new GenericServiceException(jme.getMessage(),jme);
      }
    }
 catch (    Exception e) {
      String errMsg="General error while scheduling job";
      Debug.logError(e,errMsg,module);
      try {
        TransactionUtil.rollback(beganTransaction,errMsg,e);
      }
 catch (      GenericTransactionException gte1) {
        Debug.logError(gte1,"Unable to rollback transaction",module);
      }
    }
 finally {
      try {
        TransactionUtil.commit(beganTransaction);
      }
 catch (      GenericTransactionException gte2) {
        Debug.logError(gte2,"Unable to commit scheduled job",module);
      }
    }
  }
 catch (  GenericTransactionException gte) {
    Debug.logError(gte,"Error suspending transaction while scheduling job",module);
  }
 finally {
    if (suspendedTransaction != null) {
      try {
        TransactionUtil.resume(suspendedTransaction);
      }
 catch (      GenericTransactionException gte3) {
        Debug.logError(gte3,"Error resuming suspended transaction after scheduling job",module);
      }
    }
  }
}
