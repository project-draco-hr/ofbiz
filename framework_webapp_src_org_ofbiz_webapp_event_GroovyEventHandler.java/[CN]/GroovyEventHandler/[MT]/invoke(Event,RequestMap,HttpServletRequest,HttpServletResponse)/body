{
  try {
    Map<String,Object> groovyContext=FastMap.newInstance();
    groovyContext.put("request",request);
    groovyContext.put("response",response);
    HttpSession session=request.getSession();
    groovyContext.put("session",session);
    groovyContext.put("dispatcher",request.getAttribute("dispatcher"));
    groovyContext.put("delegator",request.getAttribute("delegator"));
    groovyContext.put("security",request.getAttribute("security"));
    groovyContext.put("locale",UtilHttp.getLocale(request));
    groovyContext.put("timeZone",UtilHttp.getTimeZone(request));
    groovyContext.put("userLogin",session.getAttribute("userLogin"));
    groovyContext.put("parameters",UtilHttp.getCombinedMap(request,UtilMisc.toSet("delegator","dispatcher","security","locale","timeZone","userLogin")));
    Object result=null;
    try {
      Script script=InvokerHelper.createScript(GroovyUtil.getScriptClassFromLocation(event.path,groovyClassLoader),GroovyUtil.getBinding(groovyContext));
      if (UtilValidate.isEmpty(event.invoke)) {
        result=script.run();
      }
 else {
        result=script.invokeMethod(event.invoke,EMPTY_ARGS);
      }
    }
 catch (    GenericEntityException gee) {
      return "error";
    }
catch (    ExecutionServiceException ese) {
      return "error";
    }
    if (result != null && !(result instanceof String)) {
      throw new EventHandlerException("Event did not return a String result, it returned a " + result.getClass().getName());
    }
    return (String)result;
  }
 catch (  Exception e) {
    throw new EventHandlerException("Groovy Event Error",e);
  }
}
