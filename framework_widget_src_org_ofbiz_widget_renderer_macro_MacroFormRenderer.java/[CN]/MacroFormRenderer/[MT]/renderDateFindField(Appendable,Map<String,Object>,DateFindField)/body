{
  ModelFormField modelFormField=dateFindField.getModelFormField();
  Locale locale=(Locale)context.get("locale");
  String opEquals=UtilProperties.getMessage("conditional","equals",locale);
  String opGreaterThan=UtilProperties.getMessage("conditional","greater_than",locale);
  String opSameDay=UtilProperties.getMessage("conditional","same_day",locale);
  String opGreaterThanFromDayStart=UtilProperties.getMessage("conditional","greater_than_from_day_start",locale);
  String opLessThan=UtilProperties.getMessage("conditional","less_than",locale);
  String opUpToDay=UtilProperties.getMessage("conditional","up_to_day",locale);
  String opUpThruDay=UtilProperties.getMessage("conditional","up_thru_day",locale);
  String opIsEmpty=UtilProperties.getMessage("conditional","is_empty",locale);
  Map<String,String> uiLabelMap=UtilGenerics.checkMap(context.get("uiLabelMap"));
  if (uiLabelMap == null) {
    Debug.logWarning("Could not find uiLabelMap in context",module);
  }
  String localizedInputTitle="", localizedIconTitle="";
  String className="";
  String alert="false";
  if (UtilValidate.isNotEmpty(modelFormField.getWidgetStyle())) {
    className=modelFormField.getWidgetStyle();
    if (modelFormField.shouldBeRed(context)) {
      alert="true";
    }
  }
  String name=modelFormField.getParameterName(context);
  int size=25;
  int maxlength=30;
  String dateType=dateFindField.getType();
  if ("date".equals(dateType)) {
    size=maxlength=10;
    if (uiLabelMap != null) {
      localizedInputTitle=uiLabelMap.get("CommonFormatDate");
    }
  }
 else   if ("time".equals(dateFindField.getType())) {
    size=maxlength=8;
    if (uiLabelMap != null) {
      localizedInputTitle=uiLabelMap.get("CommonFormatTime");
    }
  }
 else {
    if (uiLabelMap != null) {
      localizedInputTitle=uiLabelMap.get("CommonFormatDateTime");
    }
  }
  String value=modelFormField.getEntry(context,dateFindField.getDefaultValue(context));
  if (value == null) {
    value="";
  }
  if (uiLabelMap != null) {
    localizedIconTitle=uiLabelMap.get("CommonViewCalendar");
  }
  String formName="";
  String defaultDateTimeString="";
  StringBuilder imgSrc=new StringBuilder();
  if (!"time".equals(dateFindField.getType())) {
    ModelForm modelForm=modelFormField.getModelForm();
    formName=FormRenderer.getCurrentFormName(modelForm,context);
    defaultDateTimeString=UtilHttp.encodeBlanks(modelFormField.getEntry(context,dateFindField.getDefaultDateTimeString(context)));
    this.appendContentUrl(imgSrc,"/images/cal.gif");
  }
  String defaultOptionFrom=dateFindField.getDefaultOptionFrom();
  String defaultOptionThru=dateFindField.getDefaultOptionThru();
  String value2=modelFormField.getEntry(context);
  if (value2 == null) {
    value2="";
  }
  if (context.containsKey("parameters")) {
    Map<String,Object> parameters=UtilGenerics.checkMap(context.get("parameters"));
    if (parameters.containsKey(name + "_fld0_value")) {
      value=(String)parameters.get(name + "_fld0_value");
    }
    if (parameters.containsKey(name + "_fld1_value")) {
      value2=(String)parameters.get(name + "_fld1_value");
    }
  }
  String titleStyle="";
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    titleStyle=modelFormField.getTitleStyle();
  }
  String tabindex=modelFormField.getTabindex();
  StringWriter sr=new StringWriter();
  sr.append("<@renderDateFindField ");
  sr.append(" className=\"");
  sr.append(className);
  sr.append("\" alert=\"");
  sr.append(alert);
  sr.append("\" name=\"");
  sr.append(name);
  sr.append("\" localizedInputTitle=\"");
  sr.append(localizedInputTitle);
  sr.append("\" value=\"");
  sr.append(value);
  sr.append("\" value2=\"");
  sr.append(value2);
  sr.append("\" size=\"");
  sr.append(Integer.toString(size));
  sr.append("\" maxlength=\"");
  sr.append(Integer.toString(maxlength));
  sr.append("\" dateType=\"");
  sr.append(dateType);
  sr.append("\" formName=\"");
  sr.append(formName);
  sr.append("\" defaultDateTimeString=\"");
  sr.append(defaultDateTimeString);
  sr.append("\" imgSrc=\"");
  sr.append(imgSrc.toString());
  sr.append("\" localizedIconTitle=\"");
  sr.append(localizedIconTitle);
  sr.append("\" titleStyle=\"");
  sr.append(titleStyle);
  sr.append("\" defaultOptionFrom=\"");
  sr.append(defaultOptionFrom);
  sr.append("\" defaultOptionThru=\"");
  sr.append(defaultOptionThru);
  sr.append("\" opEquals=\"");
  sr.append(opEquals);
  sr.append("\" opSameDay=\"");
  sr.append(opSameDay);
  sr.append("\" opGreaterThanFromDayStart=\"");
  sr.append(opGreaterThanFromDayStart);
  sr.append("\" opGreaterThan=\"");
  sr.append(opGreaterThan);
  sr.append("\" opGreaterThan=\"");
  sr.append(opGreaterThan);
  sr.append("\" opLessThan=\"");
  sr.append(opLessThan);
  sr.append("\" opUpToDay=\"");
  sr.append(opUpToDay);
  sr.append("\" opUpThruDay=\"");
  sr.append(opUpThruDay);
  sr.append("\" opIsEmpty=\"");
  sr.append(opIsEmpty);
  sr.append("\" tabindex=\"");
  sr.append(tabindex);
  sr.append("\" />");
  executeMacro(writer,sr.toString());
  this.appendTooltip(writer,context,modelFormField);
}
