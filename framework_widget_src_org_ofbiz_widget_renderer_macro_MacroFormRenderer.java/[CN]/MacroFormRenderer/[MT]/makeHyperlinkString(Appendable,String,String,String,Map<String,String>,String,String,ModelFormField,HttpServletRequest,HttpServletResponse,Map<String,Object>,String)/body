{
  if (description != null || UtilValidate.isNotEmpty(request.getAttribute("image"))) {
    StringBuilder linkUrl=new StringBuilder();
    WidgetWorker.buildHyperlinkUrl(linkUrl,target,targetType,UtilValidate.isEmpty(request.getAttribute("uniqueItemName")) ? parameterMap : null,null,false,false,true,request,response,context);
    String event="";
    String action="";
    String imgSrc="";
    String alt="";
    String id="";
    String uniqueItemName="";
    String width="";
    String height="";
    String imgTitle="";
    String hiddenFormName=WidgetWorker.makeLinkHiddenFormName(context,modelFormField);
    if (UtilValidate.isNotEmpty(modelFormField.getEvent()) && UtilValidate.isNotEmpty(modelFormField.getAction(context))) {
      event=modelFormField.getEvent();
      action=modelFormField.getAction(context);
    }
    if (UtilValidate.isNotEmpty(request.getAttribute("image"))) {
      imgSrc=request.getAttribute("image").toString();
    }
    if (UtilValidate.isNotEmpty(request.getAttribute("alternate"))) {
      alt=request.getAttribute("alternate").toString();
    }
    if (UtilValidate.isNotEmpty(request.getAttribute("imageTitle"))) {
      imgTitle=request.getAttribute("imageTitle").toString();
    }
    Integer size=Integer.valueOf("0");
    if (UtilValidate.isNotEmpty(request.getAttribute("descriptionSize"))) {
      size=Integer.valueOf(request.getAttribute("descriptionSize").toString());
    }
    if (UtilValidate.isNotEmpty(description) && size > 0 && description.length() > size) {
      imgTitle=description;
      description=description.substring(0,size - 8) + "..." + description.substring(description.length() - 5);
    }
    if (UtilValidate.isEmpty(imgTitle)) {
      imgTitle=modelFormField.getTitle(context);
    }
    if (UtilValidate.isNotEmpty(request.getAttribute("id"))) {
      id=request.getAttribute("id").toString();
    }
    if (UtilValidate.isNotEmpty(request.getAttribute("uniqueItemName"))) {
      uniqueItemName=request.getAttribute("uniqueItemName").toString();
      width=request.getAttribute("width").toString();
      height=request.getAttribute("height").toString();
    }
    StringBuilder targetParameters=new StringBuilder();
    if (UtilValidate.isNotEmpty(parameterMap)) {
      targetParameters.append("{");
      for (      Map.Entry<String,String> parameter : parameterMap.entrySet()) {
        if (targetParameters.length() > 1) {
          targetParameters.append(",");
        }
        targetParameters.append("'");
        targetParameters.append(parameter.getKey());
        targetParameters.append("':'");
        targetParameters.append(parameter.getValue());
        targetParameters.append("'");
      }
      targetParameters.append("}");
    }
    StringWriter sr=new StringWriter();
    sr.append("<@makeHyperlinkString ");
    sr.append("linkStyle=\"");
    sr.append(linkStyle == null ? "" : linkStyle);
    sr.append("\" hiddenFormName=\"");
    sr.append(hiddenFormName == null ? "" : hiddenFormName);
    sr.append("\" event=\"");
    sr.append(event);
    sr.append("\" action=\"");
    sr.append(action);
    sr.append("\" imgSrc=\"");
    sr.append(imgSrc);
    sr.append("\" title=\"");
    sr.append(imgTitle);
    sr.append("\" alternate=\"");
    sr.append(alt);
    sr.append("\" targetParameters=\"");
    sr.append(targetParameters.toString());
    sr.append("\" linkUrl=\"");
    sr.append(linkUrl.toString());
    sr.append("\" targetWindow=\"");
    sr.append(targetWindow);
    sr.append("\" description=\"");
    sr.append(description);
    sr.append("\" confirmation =\"");
    sr.append(confirmation);
    sr.append("\" uniqueItemName=\"");
    sr.append(uniqueItemName);
    sr.append("\" height=\"");
    sr.append(height);
    sr.append("\" width=\"");
    sr.append(width);
    sr.append("\" id=\"");
    sr.append(id);
    sr.append("\" />");
    executeMacro(writer,sr.toString());
  }
}
