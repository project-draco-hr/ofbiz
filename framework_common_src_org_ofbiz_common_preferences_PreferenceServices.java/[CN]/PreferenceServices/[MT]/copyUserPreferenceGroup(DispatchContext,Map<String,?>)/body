{
  Delegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String userLoginId=PreferenceWorker.getUserLoginId(context,false);
  String fromUserLoginId=(String)context.get("fromUserLoginId");
  String userPrefGroupTypeId=(String)context.get("userPrefGroupTypeId");
  if (UtilValidate.isEmpty(userLoginId) || UtilValidate.isEmpty(userPrefGroupTypeId) || UtilValidate.isEmpty(fromUserLoginId)) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"copyPreference.invalidArgument",locale));
  }
  try {
    Map<String,String> fieldMap=UtilMisc.toMap("userLoginId",fromUserLoginId,"userPrefGroupTypeId",userPrefGroupTypeId);
    List<GenericValue> resultList=delegator.findByAnd("UserPreference",fieldMap,null,false);
    if (resultList != null) {
      for (      GenericValue preference : resultList) {
        preference.set("userLoginId",userLoginId);
      }
      delegator.storeAll(resultList);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"copyPreference.writeFailure",new Object[]{e.getMessage()},locale));
  }
  return ServiceUtil.returnSuccess();
}
