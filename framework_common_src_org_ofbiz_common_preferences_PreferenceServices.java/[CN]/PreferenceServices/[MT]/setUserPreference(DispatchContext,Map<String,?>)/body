{
  GenericDelegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String userLoginId=PreferenceWorker.getUserLoginId(context,false);
  String userPrefTypeId=(String)context.get("userPrefTypeId");
  Object userPrefValue=(String)context.get("userPrefValue");
  if (UtilValidate.isEmpty(userLoginId) || UtilValidate.isEmpty(userPrefTypeId) || userPrefValue == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.invalidArgument",locale));
  }
  String userPrefGroupTypeId=(String)context.get("userPrefGroupTypeId");
  String userPrefDataType=(String)context.get("userPrefDataType");
  try {
    if (UtilValidate.isNotEmpty(userPrefDataType)) {
      userPrefValue=ObjectType.simpleTypeConvert(userPrefValue,userPrefDataType,null,null,false);
    }
    GenericValue rec=delegator.makeValidValue("UserPreference",PreferenceWorker.toFieldMap(userLoginId,userPrefTypeId,userPrefGroupTypeId,userPrefValue));
    delegator.createOrStore(rec);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.writeFailure",new Object[]{e.getMessage()},locale));
  }
catch (  GeneralException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.writeFailure",new Object[]{e.getMessage()},locale));
  }
  return ServiceUtil.returnSuccess();
}
