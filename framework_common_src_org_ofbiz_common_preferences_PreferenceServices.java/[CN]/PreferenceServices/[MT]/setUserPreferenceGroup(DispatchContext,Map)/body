{
  GenericDelegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String userLoginId=PreferenceWorker.getUserLoginId(context,false);
  Map userPrefMap=(Map)context.get("userPrefMap");
  String userPrefGroupId=(String)context.get("userPrefGroupId");
  if (UtilValidate.isEmpty(userLoginId) || UtilValidate.isEmpty(userPrefGroupId) || userPrefMap == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.invalidArgument",locale));
  }
  try {
    for (Iterator i=userPrefMap.entrySet().iterator(); i.hasNext(); ) {
      Map.Entry mapEntry=(Map.Entry)i.next();
      GenericValue rec=delegator.makeValidValue("UserPreference",PreferenceWorker.toFieldMap(userLoginId,(String)mapEntry.getKey(),userPrefGroupId,(String)mapEntry.getValue()));
      delegator.createOrStore(rec);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.writeFailure",new Object[]{e.getMessage()},locale));
  }
catch (  GeneralException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"setPreference.writeFailure",new Object[]{e.getMessage()},locale));
  }
  return ServiceUtil.returnSuccess();
}
