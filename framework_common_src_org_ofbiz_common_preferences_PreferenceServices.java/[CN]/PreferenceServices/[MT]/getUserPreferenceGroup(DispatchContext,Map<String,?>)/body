{
  GenericDelegator delegator=ctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String userPrefGroupId=(String)context.get("userPrefGroupId");
  if (UtilValidate.isEmpty(userPrefGroupId)) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"getPreference.invalidArgument",locale));
  }
  String userLoginId=PreferenceWorker.getUserLoginId(context,true);
  Map<String,Object> userPrefMap=null;
  try {
    Map<String,String> fieldMap=UtilMisc.toMap("userLoginId",userLoginId,"userPrefGroupId",userPrefGroupId);
    userPrefMap=PreferenceWorker.createUserPrefMap(delegator.findByAnd("UserPreference",fieldMap));
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"getPreference.readFailure",new Object[]{e.getMessage()},locale));
  }
catch (  GeneralException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"getPreference.readFailure",new Object[]{e.getMessage()},locale));
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  result.put("userPrefMap",userPrefMap);
  return result;
}
