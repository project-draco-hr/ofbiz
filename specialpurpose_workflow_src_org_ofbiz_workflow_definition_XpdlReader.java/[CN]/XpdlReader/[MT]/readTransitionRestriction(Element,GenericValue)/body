{
  String packageId=activityValue.getString("packageId");
  String packageVersion=activityValue.getString("packageVersion");
  String processId=activityValue.getString("processId");
  String processVersion=activityValue.getString("processVersion");
  String activityId=activityValue.getString("activityId");
  Element inlineBlockElement=UtilXml.firstChildElement(transitionRestrictionElement,"InlineBlock");
  if (inlineBlockElement != null) {
    activityValue.set("isInlineBlock","Y");
    activityValue.set("blockName",UtilXml.childElementValue(inlineBlockElement,"BlockName"));
    activityValue.set("blockDescription",UtilXml.childElementValue(inlineBlockElement,"Description"));
    activityValue.set("blockIconUrl",UtilXml.childElementValue(inlineBlockElement,"Icon"));
    activityValue.set("blockDocumentationUrl",UtilXml.childElementValue(inlineBlockElement,"Documentation"));
    activityValue.set("blockBeginActivityId",inlineBlockElement.getAttribute("Begin"));
    activityValue.set("blockEndActivityId",inlineBlockElement.getAttribute("End"));
  }
  Element joinElement=UtilXml.firstChildElement(transitionRestrictionElement,"Join");
  if (joinElement != null) {
    String joinType=joinElement.getAttribute("Type");
    if (UtilValidate.isNotEmpty(joinType)) {
      activityValue.set("joinTypeEnumId","WJT_" + joinType);
    }
  }
  Element splitElement=UtilXml.firstChildElement(transitionRestrictionElement,"Split");
  if (splitElement != null) {
    String splitType=splitElement.getAttribute("Type");
    if (UtilValidate.isNotEmpty(splitType)) {
      activityValue.set("splitTypeEnumId","WST_" + splitType);
    }
    Element transitionRefsElement=UtilXml.firstChildElement(splitElement,"TransitionRefs");
    List transitionRefs=UtilXml.childElementList(transitionRefsElement,"TransitionRef");
    readTransitionRefs(transitionRefs,packageId,packageVersion,processId,processVersion,activityId);
  }
}
