{
  if (UtilValidate.isEmpty(responsibles)) {
    return;
  }
  String responsibleListId=delegator.getNextSeqId("WorkflowParticipantList");
  valueObject.set("responsibleListId",responsibleListId);
  Iterator responsibleIter=responsibles.iterator();
  int responsibleIndex=1;
  while (responsibleIter.hasNext()) {
    Element responsibleElement=(Element)responsibleIter.next();
    String responsibleId=UtilXml.elementValue(responsibleElement);
    GenericValue participantListValue=delegator.makeValue("WorkflowParticipantList");
    participantListValue.set("packageId",valueObject.getString("packageId"));
    participantListValue.set("packageVersion",valueObject.getString("packageVersion"));
    participantListValue.set("participantListId",responsibleListId);
    participantListValue.set("participantId",responsibleId);
    participantListValue.set("participantIndex",new Long(responsibleIndex));
    if (prefix.equals("process")) {
      participantListValue.set("processId",valueObject.getString("processId"));
      participantListValue.set("processVersion",valueObject.getString("processVersion"));
    }
 else {
      participantListValue.set("processId","_NA_");
      participantListValue.set("processVersion","_NA_");
    }
    values.add(participantListValue);
    responsibleIndex++;
  }
}
