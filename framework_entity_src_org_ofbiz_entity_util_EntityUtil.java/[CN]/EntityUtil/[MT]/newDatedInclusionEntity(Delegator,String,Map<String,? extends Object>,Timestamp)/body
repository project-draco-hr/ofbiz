{
  Map<String,Object> search;
  List<GenericValue> entities=findDatedInclusionEntity(delegator,entityName,find,now);
  if (UtilValidate.isNotEmpty(entities)) {
    search=null;
    for (    GenericValue entity : entities) {
      if (now.equals(entity.get("fromDate"))) {
        search=new HashMap<String,Object>();
        for (        Map.Entry<String,? super Object> entry : entity.getPrimaryKey().entrySet()) {
          search.put(entry.getKey(),entry.getValue());
        }
        entity.remove("thruDate");
      }
 else {
        entity.set("thruDate",now);
      }
      entity.store();
    }
    if (search == null) {
      search=new HashMap<String,Object>();
      search.putAll(EntityUtil.getFirst(entities));
    }
  }
 else {
    search=new HashMap<String,Object>();
    search.putAll(find);
  }
  if (now.equals(search.get("fromDate"))) {
    return EntityUtil.getOnly(EntityQuery.use(delegator).from(entityName).where(search).queryList());
  }
 else {
    search.put("fromDate",now);
    search.remove("thruDate");
    return delegator.makeValue(entityName,search);
  }
}
