{
  GenericDelegator delegator=dctx.getDelegator();
  List orderHeaderList=(List)context.get("orderHeaderList");
  List orderIdList=(List)context.get("orderIdList");
  if (orderHeaderList == null) {
    if (orderIdList != null) {
      List conditionList1=new ArrayList();
      List conditionList2=new ArrayList();
      conditionList2.add(EntityCondition.makeCondition("statusId",EntityOperator.EQUALS,"ORDER_APPROVED"));
      conditionList2.add(EntityCondition.makeCondition("orderTypeId",EntityOperator.EQUALS,"SALES_ORDER"));
      Iterator i=orderIdList.iterator();
      while (i.hasNext()) {
        String orderId=(String)i.next();
        conditionList1.add(EntityCondition.makeCondition("orderId",EntityOperator.EQUALS,orderId));
      }
      EntityCondition idCond=EntityCondition.makeCondition(conditionList1,EntityOperator.OR);
      conditionList2.add(idCond);
      EntityCondition cond=EntityCondition.makeCondition(conditionList2,EntityOperator.AND);
      try {
        orderHeaderList=delegator.findList("OrderHeader",cond,null,UtilMisc.toList("+orderDate"),null,false);
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
        return ServiceUtil.returnError(e.getMessage());
      }
      Debug.log("Recieved orderIdList  - " + orderIdList,module);
      Debug.log("Found orderHeaderList - " + orderHeaderList,module);
    }
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("orderHeaderList",orderHeaderList);
  return result;
}
