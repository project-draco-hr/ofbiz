{
  GenericValue userLogin=delegator.findOne("UserLogin",true,"userLoginId","system");
  prepareData();
  Map<String,Object> inputFields=new HashMap<String,Object>();
  Map<String,Object> performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  Map<String,Object> result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  List<GenericValue> foundElements=getCompleteList(result);
  assertTrue("performFind search without condition ",UtilValidate.isEmpty(foundElements));
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields,"noConditionFind","Y");
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  assertEquals("performFind search without condition with noConditionFind Y",9,foundElements.size());
  inputFields=UtilMisc.toMap("testingTypeId","PERFOMFINDTEST");
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  List<GenericValue> testingElements=delegator.findAll("Testing",false);
  assertEquals("performFind search without condition with equals on testingTypeId",testingElements.size(),foundElements.size());
  inputFields=UtilMisc.toMap("testingId","PERF_TEST_1");
  performFindMap=UtilMisc.toMap("userLogin",userLogin,"entityName","Testing","inputFields",inputFields);
  result=dispatcher.runSync("performFind",performFindMap);
  assertTrue(ServiceUtil.isSuccess(result));
  foundElements=getCompleteList(result);
  assertEquals("performFind search without condition with equals on testingId",1,foundElements.size());
}
