{
  Delegator delegator=(Delegator)params.get("delegator");
  String partyId=(String)params.get("partyId");
  String onclickFunction=(String)params.get("onclickFunction");
  String additionParam=(String)params.get("additionParam");
  String hrefString=(String)params.get("hrefString");
  String hrefString2=(String)params.get("hrefString2");
  List<Map<String,Object>> responseList=new ArrayList<>();
  long emplPosCount;
  try {
    emplPosCount=EntityQuery.use(delegator).from("EmplPosition").where("emplPositionId",partyId).queryCount();
    if (emplPosCount > 0) {
      String emplId=partyId;
      List<GenericValue> emlpfillCtxs=EntityQuery.use(delegator).from("EmplPositionFulfillment").where("emplPositionId",emplId).filterByDate().queryList();
      if (UtilValidate.isNotEmpty(emlpfillCtxs)) {
        for (        GenericValue emlpfillCtx : emlpfillCtxs) {
          String memberId=emlpfillCtx.getString("partyId");
          GenericValue memCtx=EntityQuery.use(delegator).from("Person").where("partyId",partyId).queryOne();
          String title=null;
          if (UtilValidate.isNotEmpty(memCtx)) {
            String firstname=memCtx.getString("firstName");
            String lastname=memCtx.getString("lastName");
            if (UtilValidate.isEmpty(lastname)) {
              lastname="";
            }
            if (UtilValidate.isEmpty(firstname)) {
              firstname="";
            }
            title=firstname + " " + lastname;
          }
          GenericValue memGroupCtx=EntityQuery.use(delegator).from("PartyGroup").where("partyId",partyId).queryOne();
          if (UtilValidate.isNotEmpty(memGroupCtx)) {
            title=memGroupCtx.getString("groupName");
          }
          Map<String,Object> josonMap=new HashMap<String,Object>();
          Map<String,Object> dataMap=new HashMap<String,Object>();
          Map<String,Object> dataAttrMap=new HashMap<String,Object>();
          Map<String,Object> attrMap=new HashMap<String,Object>();
          dataAttrMap.put("onClick",onclickFunction + "('" + memberId+ additionParam+ "')");
          String hrefStr=hrefString + memberId;
          if (UtilValidate.isNotEmpty(hrefString2)) {
            hrefStr=hrefStr + hrefString2;
          }
          dataAttrMap.put("href",hrefStr);
          attrMap.put("rel","P");
          attrMap.put("id",memberId);
          dataMap.put("title",title);
          dataMap.put("attr",dataAttrMap);
          josonMap.put("attr",attrMap);
          josonMap.put("data",dataMap);
          responseList.add(josonMap);
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    e.printStackTrace();
    throw new GenericEntityException(e);
  }
  return responseList;
}
