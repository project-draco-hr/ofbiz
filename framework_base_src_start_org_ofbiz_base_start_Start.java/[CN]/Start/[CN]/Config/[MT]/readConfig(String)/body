{
  String javaVersion=System.getProperty("java.version");
  String javaVendor=System.getProperty("java.vendor");
  double version=Double.parseDouble(javaVersion.substring(0,javaVersion.indexOf(".") + 2));
  if (REQUIRED_JDK > version) {
    System.err.println("");
    System.err.println("Java Version - " + javaVendor + " "+ javaVersion+ " - is not supported by OFBiz.");
    System.err.println("Please install Java2 SDK " + REQUIRED_JDK + "+");
    System.err.println("");
    System.exit(-1);
  }
  Properties props=this.getPropertiesFile(config);
  if (ofbizHome == null) {
    ofbizHome=props.getProperty("ofbiz.home",".");
    if (ofbizHome.equals(".")) {
      ofbizHome=System.getProperty("user.dir");
      ofbizHome=ofbizHome.replace('\\','/');
      System.out.println("Set OFBIZ_HOME to - " + ofbizHome);
    }
  }
  System.setProperty("ofbiz.home",ofbizHome);
  baseConfig=System.getProperty("ofbiz.base.config");
  if (baseConfig == null) {
    baseConfig=ofbizHome + "/" + props.getProperty("ofbiz.base.config","base/config");
  }
  baseDtd=System.getProperty("ofbiz.base.schema");
  if (baseDtd == null) {
    baseDtd=ofbizHome + "/" + props.getProperty("ofbiz.base.schema","base/dtd");
  }
  baseLib=System.getProperty("ofbiz.base.lib");
  if (baseLib == null) {
    baseLib=ofbizHome + "/" + props.getProperty("ofbiz.base.lib","base/lib");
  }
  baseJar=System.getProperty("ofbiz.base.jar");
  if (baseJar == null) {
    baseJar=ofbizHome + "/" + props.getProperty("ofbiz.base.jar","base/build/lib/ofbiz-base.jar");
  }
  String reqTJ=System.getProperty("java.tools.jar.required");
  if (reqTJ == null) {
    reqTJ=props.getProperty("java.tools.jar.required","false");
  }
  requireToolsJar="true".equalsIgnoreCase(reqTJ);
  toolsJar=this.findSystemJar(props,javaVendor,javaVersion,"tools.jar",requireToolsJar);
  String reqCJ=System.getProperty("java.comm.jar.required");
  if (reqTJ == null) {
    reqTJ=props.getProperty("java.comm.jar.required","false");
  }
  requireCommJar="true".equalsIgnoreCase(reqCJ);
  commJar=this.findSystemJar(props,javaVendor,javaVersion,"comm.jar",requireCommJar);
  logDir=System.getProperty("ofbiz.log.dir");
  if (logDir == null) {
    logDir=ofbizHome + "/" + props.getProperty("ofbiz.log.dir","logs");
  }
  containerConfig=System.getProperty("ofbiz.container.config");
  if (containerConfig == null) {
    containerConfig=ofbizHome + "/" + props.getProperty("ofbiz.container.config","base/config/ofbiz-containers.xml");
  }
  String serverHost=System.getProperty("ofbiz.admin.host");
  if (serverHost == null) {
    serverHost=props.getProperty("ofbiz.admin.host","127.0.0.1");
  }
  String adminPortStr=System.getProperty("ofbiz.admin.port");
  if (adminPortStr == null) {
    adminPortStr=props.getProperty("ofbiz.admin.port","0");
  }
  adminKey=System.getProperty("ofbiz.admin.key");
  if (adminKey == null) {
    adminKey=props.getProperty("ofbiz.admin.key","NA");
  }
  adminAddress=InetAddress.getByName(serverHost);
  try {
    adminPort=Integer.parseInt(adminPortStr);
  }
 catch (  Exception e) {
    adminPort=0;
  }
  String derbyPath=System.getProperty("derby.system.home");
  if (derbyPath == null) {
    derbyPath=props.getProperty("derby.system.home","data/derby");
  }
  System.setProperty("derby.system.home",derbyPath);
  String log4jConfig=System.getProperty("log4j.configuration");
  if (log4jConfig == null) {
    log4jConfig=props.getProperty("log4j.configuration");
  }
  if (log4jConfig == null) {
    log4jConfig=ofbizHome + "/base/config/debug.properties";
  }
  System.setProperty("log4j.configuration",log4jConfig);
  if (System.getProperty("ofbiz.enable.hook") != null && System.getProperty("ofbiz.enable.hook").length() > 0) {
    useShutdownHook="true".equalsIgnoreCase(System.getProperty("ofbiz.enable.hook"));
  }
 else   if (props.getProperty("ofbiz.enable.hook") != null && props.getProperty("ofbiz.enable.hook").length() > 0) {
    useShutdownHook="true".equalsIgnoreCase(props.getProperty("ofbiz.enable.hook"));
  }
  if (System.getProperty("ofbiz.auto.shutdown") != null && System.getProperty("ofbiz.auto.shutdown").length() > 0) {
    shutdownAfterLoad="true".equalsIgnoreCase(System.getProperty("ofbiz.auto.shutdown"));
  }
 else   if (props.getProperty("ofbiz.auto.shutdown") != null && props.getProperty("ofbiz.auto.shutdown").length() > 0) {
    shutdownAfterLoad="true".equalsIgnoreCase(props.getProperty("ofbiz.auto.shutdown"));
  }
  awtHeadless=System.getProperty("java.awt.headless");
  if (awtHeadless == null) {
    awtHeadless=props.getProperty("java.awt.headless");
  }
  if (awtHeadless != null) {
    System.setProperty("java.awt.headless",awtHeadless);
  }
  splashLogo=props.getProperty("ofbiz.start.splash.logo",null);
  System.setProperty("org.mortbay.jetty.servlet.AbstractSessionManager.24SessionDestroyed","true");
  loaders=new ArrayList();
  int currentPosition=1;
  while (true) {
    String loaderClass=props.getProperty("ofbiz.start.loader" + currentPosition);
    if (loaderClass == null || loaderClass.length() == 0) {
      break;
    }
 else {
      loaders.add(loaderClass);
      currentPosition++;
    }
  }
}
