{
  String tempExprId=exprValue.getString("tempExprId");
  String tempExprTypeId=exprValue.getString("tempExprTypeId");
  if (DateRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.DateRange(exprValue.getTimestamp("date1"),exprValue.getTimestamp("date2"));
  }
 else   if (DayInMonth.equals(tempExprTypeId)) {
    return new TemporalExpressions.DayInMonth(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (DayOfMonthRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.DayOfMonthRange(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (DayOfWeekRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.DayOfWeekRange(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (Difference.equals(tempExprTypeId)) {
    GenericValue inclAssoc=EntityUtil.getFirst(delegator.findList("TemporalExpressionAssoc",EntityCondition.makeCondition(EntityCondition.makeCondition("fromTempExprId",tempExprId),EntityCondition.makeCondition("exprAssocType","INCLUDE")),null,null,null,true));
    GenericValue exclAssoc=EntityUtil.getFirst(delegator.findList("TemporalExpressionAssoc",EntityCondition.makeCondition(EntityCondition.makeCondition("fromTempExprId",tempExprId),EntityCondition.makeCondition("exprAssocType","EXCLUDE")),null,null,null,true));
    if (inclAssoc != null && exclAssoc != null) {
      return new TemporalExpressions.Difference(getTemporalExpression(delegator,inclAssoc.getString("toTempExprId")),getTemporalExpression(delegator,exclAssoc.getString("toTempExprId")));
    }
  }
 else   if (Frequency.equals(tempExprTypeId)) {
    return new TemporalExpressions.Frequency(exprValue.getTimestamp("date1"),exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (HourRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.HourRange(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (Intersection.equals(tempExprTypeId)) {
    return new TemporalExpressions.Intersection(getChildExpressions(delegator,tempExprId));
  }
 else   if (MinuteRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.MinuteRange(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (MonthRange.equals(tempExprTypeId)) {
    return new TemporalExpressions.MonthRange(exprValue.getLong("integer1").intValue(),exprValue.getLong("integer2").intValue());
  }
 else   if (Substitution.equals(tempExprTypeId)) {
    GenericValue inclAssoc=EntityUtil.getFirst(delegator.findList("TemporalExpressionAssoc",EntityCondition.makeCondition(EntityCondition.makeCondition("fromTempExprId",tempExprId),EntityCondition.makeCondition("exprAssocType","INCLUDE")),null,null,null,true));
    GenericValue exclAssoc=EntityUtil.getFirst(delegator.findList("TemporalExpressionAssoc",EntityCondition.makeCondition(EntityCondition.makeCondition("fromTempExprId",tempExprId),EntityCondition.makeCondition("exprAssocType","EXCLUDE")),null,null,null,true));
    GenericValue substAssoc=EntityUtil.getFirst(delegator.findList("TemporalExpressionAssoc",EntityCondition.makeCondition(EntityCondition.makeCondition("fromTempExprId",tempExprId),EntityCondition.makeCondition("exprAssocType","SUBSTITUTION")),null,null,null,true));
    if (inclAssoc != null && exclAssoc != null && substAssoc != null) {
      return new TemporalExpressions.Substitution(getTemporalExpression(delegator,inclAssoc.getString("toTempExprId")),getTemporalExpression(delegator,exclAssoc.getString("toTempExprId")),getTemporalExpression(delegator,substAssoc.getString("toTempExprId")));
    }
  }
 else   if (TimeOfDayRange.equals(tempExprTypeId)) {
    Debug.logWarning(TimeOfDayRange + " has been deprecated. Use " + HourRange+ " and/or "+ MinuteRange,module);
    int interval=Calendar.HOUR_OF_DAY;
    int count=1;
    Long longObj=exprValue.getLong("integer1");
    if (longObj != null) {
      interval=longObj.intValue();
    }
    longObj=exprValue.getLong("integer2");
    if (longObj != null) {
      count=longObj.intValue();
    }
    return new TemporalExpressions.TimeOfDayRange(exprValue.getString("string1"),exprValue.getString("string2"),interval,count);
  }
 else   if (Union.equals(tempExprTypeId)) {
    return new TemporalExpressions.Union(getChildExpressions(delegator,tempExprId));
  }
  return TemporalExpressions.NullExpression;
}
