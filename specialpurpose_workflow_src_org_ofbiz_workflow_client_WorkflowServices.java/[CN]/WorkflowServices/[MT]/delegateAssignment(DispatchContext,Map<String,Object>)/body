{
  Map<String,Object> result=new HashMap<String,Object>();
  String workEffortId=(String)context.get("workEffortId");
  String fromParty=(String)context.get("fromPartyId");
  String fromRole=(String)context.get("fromRoleTypeId");
  Timestamp fromFromDate=(Timestamp)context.get("fromFromDate");
  String toParty=(String)context.get("toPartyId");
  String toRole=(String)context.get("toRoleTypeId");
  Timestamp toFromDate=(Timestamp)context.get("toFromDate");
  if (toFromDate == null)   toFromDate=UtilDateTime.nowTimestamp();
  try {
    WorkflowClient client=new WorkflowClient(ctx);
    client.delegate(workEffortId,fromParty,fromRole,fromFromDate,toParty,toRole,toFromDate);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  }
 catch (  WfException we) {
    we.printStackTrace();
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,we.getMessage());
  }
  return result;
}
