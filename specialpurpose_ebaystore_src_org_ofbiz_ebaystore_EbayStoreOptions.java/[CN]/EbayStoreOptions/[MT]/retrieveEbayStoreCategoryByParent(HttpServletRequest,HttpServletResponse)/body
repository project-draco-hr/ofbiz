{
  List<StoreCustomCategoryType> results;
  try {
    Map<String,Object> paramMap=UtilHttp.getCombinedMap(request);
    if (paramMap.get("productStoreId") != null) {
      String ebayStoreCategory=(String)paramMap.get("ebayCategoryId");
      if (ebayStoreCategory.indexOf("CH_") != -1) {
        ebayStoreCategory=ebayStoreCategory.replace("CH_","");
        if (UtilValidate.isNotEmpty(ebayStoreCategory)) {
          ApiContext apiContext=EbayEvents.getApiContext(request);
          Map<String,Object> addItemObject=EbayEvents.getAddItemListingObject(request,apiContext);
          String refName="itemCateFacade_".concat(ebayStoreCategory);
          if (UtilValidate.isNotEmpty(addItemObject.get(refName))) {
            addItemObject.remove(refName);
          }
        }
        ebayStoreCategory="";
      }
      request.setAttribute("productStoreId",paramMap.get("productStoreId"));
      request.setAttribute("categoryId",ebayStoreCategory);
      results=EbayEvents.getStoreChildCategories(request);
      if (UtilValidate.isNotEmpty(results)) {
        List<Map<String,Object>> categories=FastList.newInstance();
        for (        StoreCustomCategoryType category : results) {
          Map<String,Object> context=FastMap.newInstance();
          context.put("CategoryCode",category.getCategoryID());
          context.put("CategoryName",category.getName());
          String isLeaf="false";
          if (category.getChildCategory().length == 0) {
            isLeaf="true";
          }
 else {
            isLeaf="false";
          }
          context.put("IsLeafCategory",isLeaf);
          categories.add(context);
        }
        if (categories.size() > 0) {
          request.setAttribute("categories",categories);
        }
      }
    }
  }
 catch (  GenericServiceException e) {
    Debug.logError(e.getMessage(),module);
  }
catch (  EventHandlerException e) {
    Debug.logError(e.getMessage(),module);
  }
catch (  ApiException e) {
    Debug.logError(e.getMessage(),module);
  }
catch (  SdkException e) {
    Debug.logError(e.getMessage(),module);
  }
catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
  }
  return "success";
}
