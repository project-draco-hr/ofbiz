{
  if (party == null)   return null;
  try {
    List<GenericValue> partyContactMechList;
    if (contactMechPurposeTypeId == null) {
      partyContactMechList=party.getRelated("PartyContactMech",null,null,false);
    }
 else {
      List<GenericValue> list;
      list=party.getRelated("PartyContactMechPurpose",UtilMisc.toMap("contactMechPurposeTypeId",contactMechPurposeTypeId),null,false);
      if (!includeOld) {
        list=EntityUtil.filterByDate(list,true);
      }
      partyContactMechList=EntityUtil.getRelated("PartyContactMech",null,list,false);
    }
    if (!includeOld) {
      partyContactMechList=EntityUtil.filterByDate(partyContactMechList,true);
    }
    partyContactMechList=EntityUtil.orderBy(partyContactMechList,UtilMisc.toList("fromDate DESC"));
    if (contactMechTypeId == null) {
      return EntityUtil.getRelated("ContactMech",null,partyContactMechList,false);
    }
 else {
      return EntityUtil.getRelated("ContactMech",UtilMisc.toMap("contactMechTypeId",contactMechTypeId),partyContactMechList,false);
    }
  }
 catch (  GenericEntityException gee) {
    Debug.logWarning(gee,module);
    return Collections.emptyList();
  }
}
