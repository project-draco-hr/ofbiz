{
  int mainIndex, subIndex;
  try {
    if (indexStr.indexOf(".") == -1) {
      mainIndex=Integer.parseInt(indexStr);
      subIndex=-1;
    }
 else {
      String[] indexSplit=indexStr.split("\\.");
      mainIndex=Integer.parseInt(indexSplit[0]);
      subIndex=Integer.parseInt(indexSplit[1]);
    }
  }
 catch (  NumberFormatException e) {
    Debug.logError(e,"Illegal index string format. Should be part 'dot' subpart: " + indexStr,module);
    return null;
  }
catch (  ArrayIndexOutOfBoundsException e) {
    Debug.logError(e,"Illegal index string format. Should be part 'dot' subpart: " + indexStr,module);
    return null;
  }
  if (getMainPartCount() > 0 && getMainPartCount() > mainIndex) {
    MimeMessage message=this.getMessage();
    try {
      Multipart mp=(Multipart)message.getContent();
      if (subIndex == -1) {
        return mp.getBodyPart(mainIndex);
      }
 else {
        BodyPart part=mp.getBodyPart(mainIndex);
        int subPartCount=getSubPartCount(mainIndex);
        if (subPartCount > subIndex) {
          Multipart sp=(Multipart)part.getContent();
          return sp.getBodyPart(subIndex);
        }
 else {
          Debug.logWarning("Requested a subpart [" + subIndex + "] which deos not exist; only ["+ getSubPartCount(mainIndex)+ "] parts",module);
          return part;
        }
      }
    }
 catch (    MessagingException e) {
      Debug.logError(e,module);
      return null;
    }
catch (    IOException e) {
      Debug.logError(e,module);
      return null;
    }
  }
 else {
    Debug.logWarning("Requested a part [" + mainIndex + "] which deos not exist; only ["+ getMainPartCount()+ "] parts",module);
    return null;
  }
}
