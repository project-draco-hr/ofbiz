{
  Delegator delegator=dctx.getDelegator();
  String shipmentGatewayConfigId=(String)context.get("shipmentGatewayConfigId");
  String resource=(String)context.get("configProps");
  Locale locale=(Locale)context.get("locale");
  Document requestDocument=createUspsRequestDocument("TrackRequest",true,delegator,shipmentGatewayConfigId,resource);
  Element trackingElement=UtilXml.addChildElement(requestDocument.getDocumentElement(),"TrackID",requestDocument);
  trackingElement.setAttribute("ID",(String)context.get("trackingId"));
  Document responseDocument=null;
  try {
    responseDocument=sendUspsRequest("TrackV2",requestDocument,delegator,shipmentGatewayConfigId,resource,locale);
  }
 catch (  UspsRequestException e) {
    Debug.logInfo(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsTrackingSendingError",UtilMisc.toMap("errorString",e.getMessage()),locale));
  }
  Element trackInfoElement=UtilXml.firstChildElement(responseDocument.getDocumentElement(),"TrackInfo");
  if (trackInfoElement == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"FacilityShipmentUspsTrackingIncompleteResponse",locale));
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  result.put("trackingSummary",UtilXml.childElementValue(trackInfoElement,"TrackSummary"));
  List<? extends Element> detailElementList=UtilXml.childElementList(trackInfoElement,"TrackDetail");
  if (UtilValidate.isNotEmpty(detailElementList)) {
    List<String> trackingDetailList=new LinkedList<String>();
    for (    Element detailElement : detailElementList) {
      trackingDetailList.add(UtilXml.elementValue(detailElement));
    }
    result.put("trackingDetailList",trackingDetailList);
  }
  return result;
}
