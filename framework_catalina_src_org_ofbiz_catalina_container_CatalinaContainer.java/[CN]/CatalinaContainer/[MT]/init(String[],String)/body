{
  ContainerConfig.Container cc=ContainerConfig.getContainer("catalina-container",configFile);
  if (cc == null) {
    throw new ContainerException("No catalina-container configuration found in container config!");
  }
  boolean useNaming=ContainerConfig.getPropertyValue(cc,"use-naming",false);
  this.delegator=DelegatorFactory.getDelegator(ContainerConfig.getPropertyValue(cc,"delegator-name","default"));
  this.contextReloadable=ContainerConfig.getPropertyValue(cc,"apps-context-reloadable",false);
  this.crossContext=ContainerConfig.getPropertyValue(cc,"apps-cross-context",true);
  this.distribute=ContainerConfig.getPropertyValue(cc,"apps-distributable",true);
  this.catalinaRuntimeHome=ContainerConfig.getPropertyValue(cc,"catalina-runtime-home","runtime/catalina");
  System.setProperty("catalina.home",System.getProperty("ofbiz.home") + "/" + this.catalinaRuntimeHome);
  StandardServer server=(StandardServer)ServerFactory.getServer();
  try {
    server.setGlobalNamingContext(new InitialContext());
  }
 catch (  NamingException e) {
    throw new ContainerException(e);
  }
  embedded=new Embedded();
  embedded.setUseNaming(useNaming);
  List<ContainerConfig.Container.Property> engineProps=cc.getPropertiesWithValue("engine");
  if (UtilValidate.isEmpty(engineProps)) {
    throw new ContainerException("Cannot load CatalinaContainer; no engines defined!");
  }
  for (  ContainerConfig.Container.Property engineProp : engineProps) {
    createEngine(engineProp);
  }
  loadComponents();
  List<ContainerConfig.Container.Property> connectorProps=cc.getPropertiesWithValue("connector");
  if (UtilValidate.isEmpty(connectorProps)) {
    throw new ContainerException("Cannot load CatalinaContainer; no connectors defined!");
  }
  for (  ContainerConfig.Container.Property connectorProp : connectorProps) {
    createConnector(connectorProp);
  }
  try {
    embedded.initialize();
  }
 catch (  LifecycleException e) {
    throw new ContainerException(e);
  }
}
