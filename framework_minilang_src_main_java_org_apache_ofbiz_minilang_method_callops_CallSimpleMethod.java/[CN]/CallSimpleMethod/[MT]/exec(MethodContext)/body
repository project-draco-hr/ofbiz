{
  if (UtilValidate.isEmpty(this.methodName)) {
    throw new MiniLangRuntimeException("method-name attribute is empty",this);
  }
  SimpleMethod simpleMethodToCall=SimpleMethod.getSimpleMethod(this.xmlURL,this.methodName);
  if (simpleMethodToCall == null) {
    throw new MiniLangRuntimeException("Could not find <simple-method name=\"" + this.methodName + "\"> in XML document "+ this.xmlResource,this);
  }
  MethodContext localContext=methodContext;
  if ("function".equals(this.scope)) {
    Map<String,Object> localEnv=new HashMap<String,Object>();
    localEnv.putAll(methodContext.getEnvMap());
    localEnv.remove(this.simpleMethod.getEventResponseCodeName());
    localEnv.remove(this.simpleMethod.getServiceResponseMessageName());
    localContext=new MethodContext(localEnv,methodContext.getLoader(),methodContext.getMethodType());
  }
  String returnVal=simpleMethodToCall.exec(localContext);
  if (Debug.verboseOn())   Debug.logVerbose("Called simple-method named [" + this.methodName + "] in resource ["+ this.xmlResource+ "], returnVal is ["+ returnVal+ "]",module);
  if (simpleMethodToCall.getDefaultErrorCode().equals(returnVal)) {
    if (methodContext.getMethodType() == MethodContext.EVENT) {
      methodContext.putEnv(simpleMethod.getEventResponseCodeName(),simpleMethod.getDefaultErrorCode());
    }
 else     if (methodContext.getMethodType() == MethodContext.SERVICE) {
      methodContext.putEnv(simpleMethod.getServiceResponseMessageName(),simpleMethod.getDefaultErrorCode());
    }
    return false;
  }
  if (methodContext.getMethodType() == MethodContext.EVENT) {
    String responseCode=(String)localContext.getEnv(this.simpleMethod.getEventResponseCodeName());
    if (this.simpleMethod.getDefaultErrorCode().equals(responseCode)) {
      Debug.logWarning("Got error [" + responseCode + "] calling inline simple-method named ["+ this.methodName+ "] in resource ["+ this.xmlResource+ "], message is "+ methodContext.getEnv(this.simpleMethod.getEventErrorMessageName()),module);
      return false;
    }
  }
 else   if (methodContext.getMethodType() == MethodContext.SERVICE) {
    String responseMessage=(String)localContext.getEnv(this.simpleMethod.getServiceResponseMessageName());
    if (this.simpleMethod.getDefaultErrorCode().equals(responseMessage)) {
      Debug.logWarning("Got error [" + responseMessage + "] calling inline simple-method named ["+ this.methodName+ "] in resource ["+ this.xmlResource+ "], message is "+ methodContext.getEnv(this.simpleMethod.getServiceErrorMessageName())+ ", and the error message list is: "+ methodContext.getEnv(this.simpleMethod.getServiceErrorMessageListName()),module);
      return false;
    }
  }
  if ("function".equals(this.scope) && this.resultToFieldList != null) {
    Map<String,Object> results=localContext.getResults();
    if (results != null) {
      for (      ResultToField resultToField : this.resultToFieldList) {
        resultToField.exec(methodContext.getEnvMap(),results);
      }
    }
  }
  return true;
}
