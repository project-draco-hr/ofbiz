{
  if ("simple".equals(this.modelService.engineName)) {
    SimpleMethod simpleMethodToCall=null;
    try {
      Map<String,SimpleMethod> simpleMethods=SimpleMethod.getSimpleMethods(this.modelService.location,null);
      simpleMethodToCall=(SimpleMethod)simpleMethods.get(this.modelService.invoke);
    }
 catch (    MiniLangException e) {
      Debug.logWarning("Error getting Simple-method [" + this.modelService.invoke + "] in ["+ this.modelService.location+ "] referenced in service ["+ this.modelService.name+ "]: "+ e.toString(),module);
    }
    if (simpleMethodToCall == null) {
      Debug.logWarning("Simple-method [" + this.modelService.invoke + "] in ["+ this.modelService.location+ "] referenced in service ["+ this.modelService.name+ "] not found",module);
      return;
    }
    Set<String> allEntityNameSet=simpleMethodToCall.getAllEntityNamesUsed();
    for (    String entityName : allEntityNameSet) {
      if (entityName.contains("${")) {
        continue;
      }
      if (!aif.getEntityModelReader().getEntityNames().contains(entityName)) {
        Debug.logWarning("Entity [" + entityName + "] reference in service ["+ this.modelService.name+ "] does not exist!",module);
        continue;
      }
      this.entitiesUsedByThisService.add(aif.getEntityArtifactInfo(entityName));
      UtilMisc.addToSetInMap(this,aif.allServiceInfosReferringToEntityName,entityName);
    }
  }
 else   if ("java".equals(this.modelService.engineName)) {
  }
}
