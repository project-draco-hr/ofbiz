{
  final StringBuilder buf=new StringBuilder();
  final boolean fullPath=checkArg(args,"fullPath",false);
  final boolean secure=checkArg(args,"secure",false);
  return new Writer(out){
    public void write(    char[] cbuf,    int off,    int len) throws IOException {
      buf.append(cbuf,off,len);
    }
    public void flush() throws IOException {
      out.flush();
    }
    public void close() throws IOException {
      try {
        Environment env=Environment.getCurrentEnvironment();
        BeanModel req=(BeanModel)env.getVariable("request");
        String previousCategoryId=getStringArg(args,"previousCategoryId");
        String productCategoryId=getStringArg(args,"productCategoryId");
        String productId=getStringArg(args,"productId");
        String url="";
        Object prefix=env.getVariable("urlPrefix");
        String viewSize=getStringArg(args,"viewSize");
        String viewIndex=getStringArg(args,"viewIndex");
        String viewSort=getStringArg(args,"viewSort");
        String searchString=getStringArg(args,"searchString");
        if (req != null) {
          HttpServletRequest request=(HttpServletRequest)req.getWrappedObject();
          StringBuilder newURL=new StringBuilder();
          if (UtilValidate.isNotEmpty(productId)) {
            if (SeoConfigUtil.isCategoryUrlEnabled(request.getContextPath())) {
              url=CatalogUrlSeoTransform.makeProductUrl(request,productId,productCategoryId,previousCategoryId);
            }
 else {
              url=CatalogUrlFilter.makeProductUrl(request,previousCategoryId,productCategoryId,productId);
            }
          }
 else {
            if (SeoConfigUtil.isCategoryUrlEnabled(request.getContextPath())) {
              url=CatalogUrlSeoTransform.makeCategoryUrl(request,productCategoryId,previousCategoryId,viewSize,viewIndex,viewSort,searchString);
            }
 else {
              url=CatalogUrlFilter.makeCategoryUrl(request,previousCategoryId,productCategoryId,productId,viewSize,viewIndex,viewSort,searchString);
            }
          }
          if (fullPath) {
            try {
              OfbizUrlBuilder builder=OfbizUrlBuilder.from(request);
              builder.buildHostPart(newURL,"",secure);
            }
 catch (            WebAppConfigurationException e) {
              Debug.logError(e.getMessage(),module);
            }
          }
          newURL.append(url);
          out.write(newURL.toString());
        }
 else         if (prefix != null) {
          Delegator delegator=FreeMarkerWorker.getWrappedObject("delegator",env);
          LocalDispatcher dispatcher=FreeMarkerWorker.getWrappedObject("dispatcher",env);
          Locale locale=(Locale)args.get("locale");
          String prefixString=((StringModel)prefix).getAsString();
          prefixString=prefixString.replaceAll("&#47;","/");
          String contextPath=prefixString;
          int lastSlashIndex=prefixString.lastIndexOf("/");
          if (lastSlashIndex > -1 && lastSlashIndex < prefixString.length()) {
            contextPath=prefixString.substring(prefixString.lastIndexOf("/"));
          }
          if (UtilValidate.isNotEmpty(productId)) {
            GenericValue product=delegator.findOne("Product",UtilMisc.toMap("productId",productId),false);
            ProductContentWrapper wrapper=new ProductContentWrapper(dispatcher,product,locale,EntityUtilProperties.getPropertyValue("content","defaultMimeType","text/html; charset=utf-8",delegator));
            if (SeoConfigUtil.isCategoryUrlEnabled(contextPath)) {
              url=CatalogUrlSeoTransform.makeProductUrl(delegator,wrapper,prefixString,contextPath,productCategoryId,previousCategoryId,productId);
            }
 else {
              url=CatalogUrlFilter.makeProductUrl(delegator,wrapper,null,prefixString,previousCategoryId,productCategoryId,productId);
            }
          }
 else {
            GenericValue productCategory=delegator.findOne("ProductCategory",UtilMisc.toMap("productCategoryId",productCategoryId),false);
            CategoryContentWrapper wrapper=new CategoryContentWrapper(dispatcher,productCategory,locale,EntityUtilProperties.getPropertyValue("content","defaultMimeType","text/html; charset=utf-8",delegator));
            if (SeoConfigUtil.isCategoryUrlEnabled(contextPath)) {
              url=CatalogUrlSeoTransform.makeCategoryUrl(delegator,wrapper,prefixString,productCategoryId,previousCategoryId,productId,viewSize,viewIndex,viewSort,searchString);
            }
 else {
              url=CatalogUrlFilter.makeCategoryUrl(delegator,wrapper,null,prefixString,previousCategoryId,productCategoryId,productId,viewSize,viewIndex,viewSort,searchString);
            }
          }
          out.write(url.toString());
        }
 else {
          out.write(buf.toString());
        }
      }
 catch (      TemplateModelException e) {
        throw new IOException(e.getMessage());
      }
catch (      GenericEntityException e) {
        throw new IOException(e.getMessage());
      }
    }
  }
;
}
