{
  String systemHost=null;
  if ("default".equals(listenerProps.getProperty("type").value)) {
    systemHost=System.getProperty(listenerProps.name + ".host");
  }
  if (listenerProps.getProperty("host") != null && systemHost == null) {
    try {
      listener.setHost(listenerProps.getProperty("host").value);
    }
 catch (    UnknownHostException e) {
      throw new ContainerException(e);
    }
  }
 else {
    String host="0.0.0.0";
    if (systemHost != null) {
      host=systemHost;
    }
    try {
      listener.setHost(host);
    }
 catch (    UnknownHostException e) {
      throw new ContainerException(e);
    }
  }
  String systemPort=null;
  if ("default".equals(listenerProps.getProperty("type").value)) {
    systemPort=System.getProperty(listenerProps.name + ".port");
  }
  if (listenerProps.getProperty("port") != null && systemPort == null) {
    int value=8080;
    try {
      value=Integer.parseInt(listenerProps.getProperty("port").value);
    }
 catch (    NumberFormatException e) {
      value=8080;
    }
    if (value == 0)     value=8080;
    listener.setPort(value);
  }
 else {
    int port=8080;
    if (systemPort != null) {
      try {
        port=Integer.parseInt(systemPort);
      }
 catch (      NumberFormatException e) {
        port=8080;
      }
    }
    listener.setPort(port);
  }
  if (listenerProps.getProperty("min-threads") != null) {
    int value=0;
    try {
      value=Integer.parseInt(listenerProps.getProperty("min-threads").value);
    }
 catch (    NumberFormatException e) {
      value=0;
    }
    if (value > 0) {
      listener.setMinThreads(value);
    }
  }
  if (listenerProps.getProperty("max-threads") != null) {
    int value=0;
    try {
      value=Integer.parseInt(listenerProps.getProperty("max-threads").value);
    }
 catch (    NumberFormatException e) {
      value=0;
    }
    if (value > 0) {
      listener.setMaxThreads(value);
    }
  }
  if (listenerProps.getProperty("max-idle-time") != null) {
    int value=0;
    try {
      value=Integer.parseInt(listenerProps.getProperty("max-idle-time").value);
    }
 catch (    NumberFormatException e) {
      value=0;
    }
    if (value > 0) {
      listener.setMaxIdleTimeMs(value);
    }
  }
  if (listenerProps.getProperty("linger-time") != null) {
    int value=0;
    try {
      value=Integer.parseInt(listenerProps.getProperty("linger-time").value);
    }
 catch (    NumberFormatException e) {
      value=0;
    }
    if (value > 0) {
      listener.setLingerTimeSecs(value);
    }
  }
}
