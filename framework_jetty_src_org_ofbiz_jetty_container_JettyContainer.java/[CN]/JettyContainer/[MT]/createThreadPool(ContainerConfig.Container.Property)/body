{
  QueuedThreadPool threadPool=new QueuedThreadPool();
  if (UtilValidate.isNotEmpty(serverConfig.getProperty("min-threads"))) {
    String minThreadsPropertyValue=serverConfig.getProperty("min-threads").value;
    try {
      threadPool.setMinThreads(Integer.parseInt(minThreadsPropertyValue));
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,"invalid value for min-threads: " + minThreadsPropertyValue,module);
    }
  }
  if (UtilValidate.isNotEmpty(serverConfig.getProperty("max-threads"))) {
    String maxThreadsPropertyValue=serverConfig.getProperty("max-threads").value;
    try {
      threadPool.setMaxThreads(Integer.parseInt(maxThreadsPropertyValue));
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,"invalid value for max-threads: " + maxThreadsPropertyValue,module);
    }
  }
  if (UtilValidate.isNotEmpty(serverConfig.getProperty("max-idle-time-ms"))) {
    String maxIdleTimeMsPropertyValue=serverConfig.getProperty("max-idle-time-ms").value;
    try {
      threadPool.setMaxIdleTimeMs(Integer.parseInt(maxIdleTimeMsPropertyValue));
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,"invalid value for max-idle-time-ms: " + maxIdleTimeMsPropertyValue,module);
    }
  }
  if (UtilValidate.isNotEmpty(serverConfig.getProperty("max-stop-time-ms"))) {
    String maxStopTimeMsPropertyValue=serverConfig.getProperty("max-stop-time-ms").value;
    try {
      threadPool.setMaxStopTimeMs(Integer.parseInt(maxStopTimeMsPropertyValue));
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,"invalid value for max-stop-time-ms: " + maxStopTimeMsPropertyValue,module);
    }
  }
  return threadPool;
}
