{
  SSLUtil.loadJsseProperties();
  ContainerConfig.Container jettyContainerConfig=ContainerConfig.getContainer("jetty-container",configFile);
  for (  ContainerConfig.Container.Property serverConfig : jettyContainerConfig.getPropertiesWithValue("server")) {
    servers.put(serverConfig.name,createServer(serverConfig));
  }
  for (  ComponentConfig componentConfig : ComponentConfig.getAllComponents()) {
    for (    ComponentConfig.WebappInfo webappInfo : componentConfig.getWebappInfos()) {
      Server server=servers.get(webappInfo.server);
      if (server == null) {
        Debug.logError("Server with name [" + webappInfo.server + "] not found; not mounting ["+ webappInfo.name+ "]",module);
      }
 else {
        String location=componentConfig.getRootLocation() + webappInfo.location;
        location=location.replace('\\','/');
        if (location.endsWith("/")) {
          location=location.substring(0,location.lastIndexOf("/"));
        }
        String mountPoint=webappInfo.mountPoint;
        if (mountPoint.endsWith("/*")) {
          mountPoint=mountPoint.substring(0,mountPoint.lastIndexOf("/"));
        }
        WebAppContext context=new WebAppContext(location,mountPoint);
        context.setAttribute("_serverId",webappInfo.server);
        context.setLogUrlOnStart(true);
        HashSessionManager sm=new HashSessionManager();
        context.setSessionHandler(new SessionHandler(sm));
        List<String> virtualHosts=webappInfo.getVirtualHosts();
        if (UtilValidate.isNotEmpty(virtualHosts)) {
          context.setVirtualHosts(virtualHosts.toArray(new String[virtualHosts.size()]));
        }
        Map<String,String> initParameters=webappInfo.getInitParameters();
        if (UtilValidate.isNotEmpty(initParameters)) {
          for (          Map.Entry<String,String> e : initParameters.entrySet()) {
            context.setInitParameter(e.getKey(),e.getValue());
          }
        }
        ((HandlerCollection)server.getHandler()).addHandler(context);
      }
    }
  }
}
