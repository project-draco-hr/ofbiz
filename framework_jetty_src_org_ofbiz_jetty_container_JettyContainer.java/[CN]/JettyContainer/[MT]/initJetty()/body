{
  SSLUtil.loadJsseProperties();
  Log log=Log.instance();
  log.disableLog();
  Log4jSink sink=new Log4jSink();
  log.add(sink);
  sink.setOptions(UtilURL.fromResource("debug.properties").toExternalForm());
  try {
    sink.start();
  }
 catch (  Exception e) {
    Debug.logWarning(e,module);
  }
  ContainerConfig.Container jc=ContainerConfig.getContainer("jetty-container",configFile);
  for (  ContainerConfig.Container.Property prop : jc.properties.values()) {
    servers.put(prop.name,createServer(prop));
  }
  Collection<ComponentConfig> componentConfigs=ComponentConfig.getAllComponents();
  if (componentConfigs != null) {
    for (    ComponentConfig component : componentConfigs) {
      for (      ComponentConfig.WebappInfo appInfo : component.getWebappInfos()) {
        List<String> virtualHosts=appInfo.getVirtualHosts();
        Map<String,String> initParameters=appInfo.getInitParameters();
        Server server=servers.get(appInfo.server);
        if (server == null) {
          Debug.logWarning("Server with name [" + appInfo.server + "] not found; not mounting ["+ appInfo.name+ "]",module);
        }
 else {
          try {
            String location=component.getRootLocation() + appInfo.location;
            location=location.replace('\\','/');
            if (!location.endsWith("/")) {
              location=location + "/";
            }
            WebApplicationContext ctx=server.addWebApplication(appInfo.mountPoint,location);
            ctx.setAttribute("_serverId",appInfo.server);
            SessionManager sm=new HashSessionManager();
            ctx.getWebApplicationHandler().setSessionManager(sm);
            for (            String vh : virtualHosts) {
              ctx.addVirtualHost(vh);
            }
            for (            Map.Entry<String,String> entry : initParameters.entrySet()) {
              ctx.setInitParameter(entry.getKey(),entry.getValue());
            }
          }
 catch (          IOException e) {
            Debug.logError(e,"Problem mounting application [" + appInfo.name + " / "+ appInfo.location+ "]",module);
          }
        }
      }
    }
  }
}
