{
  SSLUtil.loadJsseProperties();
  ContainerConfig.Container jc=ContainerConfig.getContainer("jetty-container",configFile);
  for (  ContainerConfig.Container.Property property : jc.properties.values()) {
    servers.put(property.name,createServer(property));
  }
  Collection<ComponentConfig> componentConfigs=ComponentConfig.getAllComponents();
  if (componentConfigs != null) {
    for (    Object componentConfig : componentConfigs) {
      ComponentConfig component=(ComponentConfig)componentConfig;
      for (      ComponentConfig.WebappInfo webappInfo : component.getWebappInfos()) {
        List<String> virtualHosts=webappInfo.getVirtualHosts();
        Map<String,String> initParameters=webappInfo.getInitParameters();
        Server server=servers.get(webappInfo.server);
        if (server == null) {
          Debug.logWarning("Server with name [" + webappInfo.server + "] not found; not mounting ["+ webappInfo.name+ "]",module);
        }
 else {
          String location=component.getRootLocation() + webappInfo.location;
          location=location.replace('\\','/');
          if (location.endsWith("/")) {
            location=location.substring(0,location.lastIndexOf("/"));
          }
          String mountPoint=webappInfo.mountPoint;
          if (mountPoint.endsWith("/*")) {
            mountPoint=mountPoint.substring(0,mountPoint.lastIndexOf("/"));
          }
          WebAppContext context=new WebAppContext(location,mountPoint);
          context.setAttribute("_serverId",webappInfo.server);
          context.setLogUrlOnStart(true);
          HashSessionManager sm=new HashSessionManager();
          context.setSessionHandler(new SessionHandler(sm));
          if (UtilValidate.isNotEmpty(virtualHosts)) {
            context.setVirtualHosts(virtualHosts.toArray(new String[virtualHosts.size()]));
          }
          if (UtilValidate.isNotEmpty(initParameters)) {
            context.setInitParams(initParameters);
          }
          server.addHandler(context);
        }
      }
    }
  }
}
