{
  try {
    if (number == 0)     return FastList.newInstance();
    List<GenericValue> list=FastList.newInstance();
    if (start == 0)     start=1;
    if (start == 1) {
      if (!resultSet.next()) {
        return list;
      }
    }
 else {
      if (!this.absolute(start)) {
        return list;
      }
    }
    list.add(this.currentGenericValue());
    GenericValue nextValue=null;
    int numRetrieved=1;
    while (number > numRetrieved && (nextValue=this.next()) != null) {
      list.add(nextValue);
      numRetrieved++;
    }
    return list;
  }
 catch (  SQLException e) {
    if (!closed) {
      this.close();
      Debug.logWarning("Warning: auto-closed EntityListIterator because of exception: " + e.toString(),module);
    }
    throw new GeneralRuntimeException("Error getting results",e);
  }
catch (  GeneralRuntimeException e) {
    if (!closed) {
      this.close();
      Debug.logWarning("Warning: auto-closed EntityListIterator because of exception: " + e.toString(),module);
    }
    throw new GenericEntityException(e.getNonNestedMessage(),e.getNested());
  }
}
