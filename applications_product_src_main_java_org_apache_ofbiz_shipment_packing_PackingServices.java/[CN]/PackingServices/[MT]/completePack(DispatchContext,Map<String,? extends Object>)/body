{
  PackingSession session=(PackingSession)context.get("packingSession");
  Locale locale=(Locale)context.get("locale");
  String instructions=(String)context.get("handlingInstructions");
  String pickerPartyId=(String)context.get("pickerPartyId");
  BigDecimal additionalShippingCharge=(BigDecimal)context.get("additionalShippingCharge");
  Map<String,String> packageWeights=UtilGenerics.checkMap(context.get("packageWeights"));
  Map<String,String> boxTypes=UtilGenerics.checkMap(context.get("boxTypes"));
  String weightUomId=(String)context.get("weightUomId");
  session.setHandlingInstructions(instructions);
  session.setPickerPartyId(pickerPartyId);
  session.setAdditionalShippingCharge(additionalShippingCharge);
  session.setWeightUomId(weightUomId);
  setSessionPackageWeights(session,packageWeights);
  setSessionShipmentBoxTypes(session,boxTypes);
  Boolean force=(Boolean)context.get("forceComplete");
  if (force == null) {
    force=Boolean.FALSE;
  }
  String shipmentId=null;
  try {
    shipmentId=session.complete(force);
  }
 catch (  GeneralException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage(),e.getMessageList());
  }
  Map<String,Object> resp;
  if ("EMPTY".equals(shipmentId)) {
    resp=ServiceUtil.returnError(UtilProperties.getMessage(resource,"ProductPackCompleteNoItems",locale));
  }
 else {
    resp=ServiceUtil.returnSuccess(UtilProperties.getMessage(resource,"ProductPackComplete",UtilMisc.toMap("shipmentId",shipmentId),locale));
  }
  resp.put("shipmentId",shipmentId);
  return resp;
}
