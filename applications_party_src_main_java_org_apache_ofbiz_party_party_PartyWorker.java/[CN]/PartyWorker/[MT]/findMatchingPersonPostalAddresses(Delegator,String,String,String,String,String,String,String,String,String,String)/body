{
  List<GenericValue> returnList=new LinkedList<GenericValue>();
  if (firstName == null || lastName == null) {
    throw new IllegalArgumentException();
  }
  List<GenericValue> validFound=findMatchingPartyPostalAddress(delegator,address1,address2,city,stateProvinceGeoId,postalCode,postalCodeExt,countryGeoId,"PERSON");
  if (UtilValidate.isNotEmpty(validFound)) {
    for (    GenericValue partyAndAddr : validFound) {
      String partyId=partyAndAddr.getString("partyId");
      if (UtilValidate.isNotEmpty(partyId)) {
        GenericValue p=EntityQuery.use(delegator).from("Person").where("partyId",partyId).queryOne();
        if (p != null) {
          String fName=p.getString("firstName");
          String lName=p.getString("lastName");
          String mName=p.getString("middleName");
          if (lName.toUpperCase().equals(lastName.toUpperCase())) {
            if (fName.toUpperCase().equals(firstName.toUpperCase())) {
              if (mName != null && middleName != null) {
                if (mName.toUpperCase().equals(middleName.toUpperCase())) {
                  returnList.add(partyAndAddr);
                }
              }
 else               if (middleName == null) {
                returnList.add(partyAndAddr);
              }
            }
          }
        }
      }
    }
  }
  return returnList;
}
