{
  GenericDelegator delegator=dctx.getDelegator();
  Security security=dctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=getLocale(context);
  if (!security.hasPermission("SERVICE_INVOKE_ANY",userLogin)) {
    String errMsg=UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.no_permission_to_run",locale) + ".";
    return ServiceUtil.returnError(errMsg);
  }
  String jobId=(String)context.get("jobId");
  Map fields=UtilMisc.toMap("jobId",jobId);
  GenericValue job;
  try {
    job=delegator.findOne("JobSandbox",fields,false);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (job != null) {
    job.set("statusId","SERVICE_PENDING");
    job.set("startDateTime",null);
    job.set("finishDateTime",null);
    job.set("cancelDateTime",null);
    job.set("runByInstanceId",null);
    try {
      job.store();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
  }
  return ServiceUtil.returnSuccess();
}
