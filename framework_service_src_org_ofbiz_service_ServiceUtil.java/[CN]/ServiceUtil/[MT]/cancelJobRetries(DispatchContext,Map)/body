{
  GenericDelegator delegator=dctx.getDelegator();
  Security security=dctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=getLocale(context);
  if (!security.hasPermission("SERVICE_INVOKE_ANY",userLogin)) {
    String errMsg=UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.no_permission_to_run",locale) + ".";
    return ServiceUtil.returnError(errMsg);
  }
  String jobId=(String)context.get("jobId");
  Map<String,Object> fields=UtilMisc.<String,Object>toMap("jobId",jobId);
  GenericValue job=null;
  try {
    job=delegator.findByPrimaryKey("JobSandbox",fields);
    if (job != null) {
      job.set("maxRetry",new Long(0));
      job.store();
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    String errMsg=UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.unable_to_cancel_job_retries",locale) + " : " + fields;
    return ServiceUtil.returnError(errMsg);
  }
  Timestamp cancelDate=job.getTimestamp("cancelDateTime");
  if (cancelDate != null) {
    return ServiceUtil.returnSuccess();
  }
 else {
    String errMsg=UtilProperties.getMessage(ServiceUtil.resource,"serviceUtil.unable_to_cancel_job_retries",locale) + " : " + job;
    return ServiceUtil.returnError(errMsg);
  }
}
