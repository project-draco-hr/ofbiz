{
  Map lookupMap=FastMap.newInstance();
  lookupMap.put("orderId",orderId);
  lookupMap.put("productId",productId);
  lookupMap.put("shipGroupSeqId",shipGroupSeqId);
  List sort=UtilMisc.toList("-quantity");
  List orderItems=this.getDelegator().findByAnd("OrderItemAndShipGroupAssoc",lookupMap,sort);
  String orderItemSeqId=null;
  if (orderItems != null) {
    Iterator i=orderItems.iterator();
    while (i.hasNext()) {
      GenericValue item=(GenericValue)i.next();
      Double qty=item.getDouble("quantity");
      if (quantity <= qty.doubleValue()) {
        orderItemSeqId=item.getString("orderItemSeqId");
        break;
      }
    }
  }
  if (orderItemSeqId != null) {
    return orderItemSeqId;
  }
 else {
    throw new GeneralException("No valid order item found for product [" + productId + "] with quantity: "+ quantity);
  }
}
