{
  Delegator delegator=this.getDelegator();
  Map<String,Object> newShipment=FastMap.newInstance();
  newShipment.put("originFacilityId",this.facilityId);
  newShipment.put("primaryShipGroupSeqId",primaryShipGrp);
  newShipment.put("primaryOrderId",primaryOrderId);
  newShipment.put("shipmentTypeId","OUTGOING_SHIPMENT");
  newShipment.put("statusId","SHIPMENT_INPUT");
  newShipment.put("handlingInstructions",instructions);
  newShipment.put("picklistBinId",picklistBinId);
  newShipment.put("additionalShippingCharge",additionalShippingCharge);
  newShipment.put("userLogin",userLogin);
  GenericValue orderRoleShipTo=EntityQuery.use(delegator).from("OrderRole").where("orderId",primaryOrderId,"roleTypeId","SHIP_TO_CUSTOMER").queryFirst();
  if (UtilValidate.isNotEmpty(orderRoleShipTo)) {
    newShipment.put("partyIdTo",orderRoleShipTo.getString("partyId"));
  }
  String partyIdFrom=null;
  if (primaryOrderId != null) {
    GenericValue orderItemShipGroup=EntityQuery.use(delegator).from("OrderItemShipGroup").where("orderId",primaryOrderId,"shipGroupSeqId",primaryShipGrp).queryFirst();
    if (UtilValidate.isNotEmpty(orderItemShipGroup.getString("vendorPartyId"))) {
      partyIdFrom=orderItemShipGroup.getString("vendorPartyId");
    }
 else     if (UtilValidate.isNotEmpty(orderItemShipGroup.getString("facilityId"))) {
      GenericValue facility=EntityQuery.use(delegator).from("Facility").where("facilityId",orderItemShipGroup.getString("facilityId")).queryOne();
      if (UtilValidate.isNotEmpty(facility.getString("ownerPartyId"))) {
        partyIdFrom=facility.getString("ownerPartyId");
      }
    }
    if (UtilValidate.isEmpty(partyIdFrom)) {
      GenericValue orderRoleShipFrom=EntityQuery.use(delegator).from("OrderRole").where("orderId",primaryOrderId,"roleTypeId","SHIP_FROM_VENDOR").queryFirst();
      if (UtilValidate.isNotEmpty(orderRoleShipFrom)) {
        partyIdFrom=orderRoleShipFrom.getString("partyId");
      }
 else {
        orderRoleShipFrom=EntityQuery.use(delegator).from("OrderRole").where("orderId",primaryOrderId,"roleTypeId","BILL_FROM_VENDOR").queryFirst();
        partyIdFrom=orderRoleShipFrom.getString("partyId");
      }
    }
  }
 else   if (this.facilityId != null) {
    GenericValue facility=EntityQuery.use(delegator).from("Facility").where("facilityId",this.facilityId).queryOne();
    if (UtilValidate.isNotEmpty(facility.getString("ownerPartyId"))) {
      partyIdFrom=facility.getString("ownerPartyId");
    }
  }
  newShipment.put("partyIdFrom",partyIdFrom);
  Debug.logInfo("Creating new shipment with context: " + newShipment,module);
  Map<String,Object> newShipResp=this.getDispatcher().runSync("createShipment",newShipment);
  if (ServiceUtil.isError(newShipResp)) {
    throw new GeneralException(ServiceUtil.getErrorMessage(newShipResp));
  }
  this.shipmentId=(String)newShipResp.get("shipmentId");
}
