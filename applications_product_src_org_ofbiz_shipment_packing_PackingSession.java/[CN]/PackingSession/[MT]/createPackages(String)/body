{
  List<GenericValue> shipmentPackageRouteSegs=this.getDelegator().findByAnd("ShipmentPackageRouteSeg",UtilMisc.toMap("shipmentId",shipmentId));
  if (UtilValidate.isNotEmpty(shipmentPackageRouteSegs)) {
    for (    GenericValue shipmentPackageRouteSeg : shipmentPackageRouteSegs) {
      shipmentPackageRouteSeg.remove();
    }
  }
  List<GenericValue> shipmentPackages=this.getDelegator().findByAnd("ShipmentPackage",UtilMisc.toMap("shipmentId",shipmentId));
  if (UtilValidate.isNotEmpty(shipmentPackages)) {
    for (    GenericValue shipmentPackage : shipmentPackages) {
      shipmentPackage.remove();
    }
  }
  for (int i=0; i < packageSeq; i++) {
    PackingSessionLine line=this.getLine(i + 1);
    String shipmentPackageSeqId=UtilFormatOut.formatPaddedNumber(i + 1,5);
    Map<String,Object> shipmentPackageCtx=FastMap.newInstance();
    shipmentPackageCtx.put("shipmentId",shipmentId);
    shipmentPackageCtx.put("shipmentPackageSeqId",shipmentPackageSeqId);
    shipmentPackageCtx.put("length",line.getLength());
    shipmentPackageCtx.put("width",line.getWidth());
    shipmentPackageCtx.put("height",line.getHeight());
    shipmentPackageCtx.put("dimensionUomId",getDimensionUomId());
    shipmentPackageCtx.put("shipmentBoxTypeId",line.getShipmentBoxTypeId());
    shipmentPackageCtx.put("weight",getPackageWeight(i + 1));
    shipmentPackageCtx.put("weightUomId",getWeightUomId());
    shipmentPackageCtx.put("userLogin",userLogin);
    Map<String,Object> shipmentPackageResult=this.getDispatcher().runSync("createShipmentPackage",shipmentPackageCtx);
    if (ServiceUtil.isError(shipmentPackageResult)) {
      throw new GeneralException(ServiceUtil.getErrorMessage(shipmentPackageResult));
    }
  }
}
