{
  if (!mgrLoggedIn) {
    pos.showDialog("dialog/error/mgrnotloggedin");
    return;
  }
  PosTransaction trans=PosTransaction.getCurrentTx(pos.getSession());
  if (!trans.isOpen()) {
    pos.showDialog("dialog/error/terminalclosed");
    return;
  }
  Output output=pos.getOutput();
  Input input=pos.getInput();
  if (input.isFunctionSet("PAID_" + type)) {
    String[] func=input.getFunction("PAID_" + type);
    String lastValue=input.value();
    if (UtilValidate.isNotEmpty(lastValue)) {
      String[] paidInfo=new String[0];
switch (func[1].split("\\|").length) {
case 1:
        try {
          double dbl=Double.parseDouble(lastValue);
          dbl=dbl / 100;
          lastValue=UtilFormatOut.formatPrice(dbl);
        }
 catch (        NumberFormatException e) {
          Debug.logError(e,module);
        }
      func[1]=func[1] + "|";
    func[1]=func[1] + lastValue;
  input.setFunction("PAID_" + type,func[1]);
output.print(UtilProperties.getMessage("pos","ENT_COMM_" + type,Locale.getDefault()));
break;
case 2:
func[1]=func[1] + "|";
func[1]=func[1] + lastValue;
paidInfo=func[1].split("\\|");
GenericValue internTx=pos.getSession().getDelegator().makeValue("PosTerminalInternTx",null);
internTx.set("posTerminalLogId",trans.getTerminalLogId());
try {
internTx.set("paidAmount",new Double(priceDecimalFormat.parse(paidInfo[1]).doubleValue()));
}
 catch (ParseException pe) {
Debug.logError(pe,module);
}
internTx.set("reasonComment",paidInfo[2]);
try {
internTx.create();
}
 catch (GenericEntityException e) {
Debug.logError(e,module);
pos.showDialog("dialog/error/exception",e.getMessage());
}
trans.paidInOut(type);
NavagationEvents.showPosScreen(pos);
break;
}
}
}
 else {
trans.popDrawer();
input.clear();
input.setFunction("PAID_" + type);
output.print(UtilProperties.getMessage("pos","ENT_" + type,Locale.getDefault()));
}
}
