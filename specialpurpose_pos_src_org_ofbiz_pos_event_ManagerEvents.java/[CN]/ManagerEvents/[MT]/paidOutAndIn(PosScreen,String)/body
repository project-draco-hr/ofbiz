{
  if (!mgrLoggedIn) {
    pos.showDialog("dialog/error/mgrnotloggedin");
    return;
  }
  PosTransaction trans=PosTransaction.getCurrentTx(pos.getSession());
  if (!trans.isOpen()) {
    pos.showDialog("dialog/error/terminalclosed");
    return;
  }
  PaidInOut PaidInOut=new PaidInOut(trans,pos,type);
  Map<String,String> mapInOut=PaidInOut.openDlg();
  if (null != mapInOut.get("amount")) {
    String amount=(String)mapInOut.get("amount");
    BigDecimal amt=ZERO;
    try {
      amt=new BigDecimal(amount);
      amt=amt.movePointLeft(2);
    }
 catch (    NumberFormatException e) {
      Debug.logError(e,module);
      return;
    }
    GenericValue internTx=pos.getSession().getDelegator().makeValue("PosTerminalInternTx");
    internTx.set("posTerminalLogId",trans.getTerminalLogId());
    internTx.set("paidAmount",amt);
    internTx.set("reasonComment",mapInOut.get("reasonComment"));
    internTx.set("reasonEnumId",mapInOut.get("reason"));
    try {
      internTx.create();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
      pos.showDialog("dialog/error/exception",e.getMessage());
      return;
    }
    trans.paidInOut(type);
    NavagationEvents.showPosScreen(pos);
  }
}
