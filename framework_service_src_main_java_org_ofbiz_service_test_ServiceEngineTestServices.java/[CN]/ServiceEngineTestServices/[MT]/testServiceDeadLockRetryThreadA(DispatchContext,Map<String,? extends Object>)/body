{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  try {
    GenericValue testingTypeA=EntityQuery.use(delegator).from("TestingType").where("testingTypeId","SVCLRT_A").queryOne();
    testingTypeA.set("description","New description for SVCLRT_A");
    testingTypeA.store();
    Debug.logInfo("In testServiceDeadLockRetryThreadA just updated SVCLRT_A, beginning wait",module);
    Thread.sleep(100);
    Debug.logInfo("In testServiceDeadLockRetryThreadA done with wait, updating SVCLRT_B",module);
    GenericValue testingTypeB=EntityQuery.use(delegator).from("TestingType").where("testingTypeId","SVCLRT_B").queryOne();
    testingTypeB.set("description","New description for SVCLRT_B");
    testingTypeB.store();
    Debug.logInfo("In testServiceDeadLockRetryThreadA done with updating SVCLRT_B, updating SVCLRT_AONLY",module);
    GenericValue testingTypeAOnly=EntityQuery.use(delegator).from("TestingType").where("testingTypeId","SVCLRT_AONLY").queryOne();
    testingTypeAOnly.set("description","New description for SVCLRT_AONLY; this is only changed by thread A so if it doesn't match something happened to thread A!");
    testingTypeAOnly.store();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Entity Engine Exception running dead lock test thread A: " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestEntityEngineExceptionThreadA",UtilMisc.toMap("errorString",e.toString()),locale));
  }
catch (  InterruptedException e) {
    Debug.logError(e,"Wait Interrupted Exception running dead lock test thread A: " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestEntityEngineWaitInterruptedExceptionThreadA",UtilMisc.toMap("errorString",e.toString()),locale));
  }
  return ServiceUtil.returnSuccess();
}
