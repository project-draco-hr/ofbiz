{
  BigDecimal paymentApplied=BigDecimal.ZERO;
  List<GenericValue> paymentApplications=null;
  try {
    List<EntityExpr> cond=UtilMisc.toList(EntityCondition.makeCondition("paymentId",EntityOperator.EQUALS,payment.getString("paymentId")),EntityCondition.makeCondition("toPaymentId",EntityOperator.EQUALS,payment.getString("paymentId")));
    EntityCondition partyCond=EntityCondition.makeCondition(cond,EntityOperator.OR);
    paymentApplications=payment.getDelegator().findList("PaymentApplication",partyCond,null,UtilMisc.toList("invoiceId","billingAccountId"),null,false);
    if (UtilValidate.isNotEmpty(paymentApplications)) {
      for (      GenericValue paymentApplication : paymentApplications) {
        BigDecimal amountApplied=paymentApplication.getBigDecimal("amountApplied");
        if (actual.equals(Boolean.FALSE) && paymentApplication.get("invoiceId") != null && payment.get("actualCurrencyAmount") != null && payment.get("actualCurrencyUomId") != null) {
          GenericValue invoice=paymentApplication.getRelatedOne("Invoice");
          if (payment.getString("actualCurrencyUomId").equals(invoice.getString("currencyUomId"))) {
            amountApplied=amountApplied.multiply(payment.getBigDecimal("amount")).divide(payment.getBigDecimal("actualCurrencyAmount"),new MathContext(100));
          }
        }
        paymentApplied=paymentApplied.add(amountApplied).setScale(decimals,rounding);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting entities",module);
  }
  return paymentApplied;
}
