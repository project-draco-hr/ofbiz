{
  List paymentMethodValueMaps=new LinkedList();
  try {
    List paymentMethods=delegator.findByAnd("PaymentMethod",UtilMisc.toMap("partyId",partyId));
    if (!showOld)     paymentMethods=EntityUtil.filterByDate(paymentMethods,true);
    if (paymentMethods != null) {
      Iterator pmIter=paymentMethods.iterator();
      while (pmIter.hasNext()) {
        GenericValue paymentMethod=(GenericValue)pmIter.next();
        Map valueMap=new HashMap();
        paymentMethodValueMaps.add(valueMap);
        valueMap.put("paymentMethod",paymentMethod);
        if ("CREDIT_CARD".equals(paymentMethod.getString("paymentMethodTypeId"))) {
          GenericValue creditCard=paymentMethod.getRelatedOne("CreditCard");
          if (creditCard != null)           valueMap.put("creditCard",creditCard);
        }
 else         if ("GIFT_CARD".equals(paymentMethod.getString("paymentMethodTypeId"))) {
          GenericValue giftCard=paymentMethod.getRelatedOne("GiftCard");
          if (giftCard != null)           valueMap.put("giftCard",giftCard);
        }
 else         if ("EFT_ACCOUNT".equals(paymentMethod.getString("paymentMethodTypeId"))) {
          GenericValue eftAccount=paymentMethod.getRelatedOne("EftAccount");
          if (eftAccount != null)           valueMap.put("eftAccount",eftAccount);
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  return paymentMethodValueMaps;
}
