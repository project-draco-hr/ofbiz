{
  List<Map<String,GenericValue>> paymentMethodValueMaps=FastList.newInstance();
  try {
    List<GenericValue> paymentMethods=EntityQuery.use(delegator).from("PaymentMethod").where("partyId",partyId).queryList();
    if (!showOld)     paymentMethods=EntityUtil.filterByDate(paymentMethods,true);
    for (    GenericValue paymentMethod : paymentMethods) {
      Map<String,GenericValue> valueMap=FastMap.newInstance();
      paymentMethodValueMaps.add(valueMap);
      valueMap.put("paymentMethod",paymentMethod);
      if ("CREDIT_CARD".equals(paymentMethod.getString("paymentMethodTypeId"))) {
        GenericValue creditCard=paymentMethod.getRelatedOne("CreditCard",false);
        if (creditCard != null)         valueMap.put("creditCard",creditCard);
      }
 else       if ("GIFT_CARD".equals(paymentMethod.getString("paymentMethodTypeId"))) {
        GenericValue giftCard=paymentMethod.getRelatedOne("GiftCard",false);
        if (giftCard != null)         valueMap.put("giftCard",giftCard);
      }
 else       if ("EFT_ACCOUNT".equals(paymentMethod.getString("paymentMethodTypeId"))) {
        GenericValue eftAccount=paymentMethod.getRelatedOne("EftAccount",false);
        if (eftAccount != null)         valueMap.put("eftAccount",eftAccount);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
  return paymentMethodValueMaps;
}
