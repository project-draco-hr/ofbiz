{
  GenericValue paymentApplication=null;
  BigDecimal appliedAmount=BigDecimal.ZERO;
  try {
    paymentApplication=delegator.findByPrimaryKey("PaymentApplication",UtilMisc.toMap("paymentApplicationId",paymentApplicationId));
    appliedAmount=paymentApplication.getBigDecimal("amountApplied");
    if (paymentApplication.get("paymentId") != null) {
      GenericValue payment=paymentApplication.getRelatedOne("Payment");
      if (paymentApplication.get("invoiceId") != null && payment.get("actualCurrencyAmount") != null && payment.get("actualCurrencyUomId") != null) {
        GenericValue invoice=paymentApplication.getRelatedOne("Invoice");
        if (payment.getString("actualCurrencyUomId").equals(invoice.getString("currencyUomId"))) {
          appliedAmount=appliedAmount.multiply(payment.getBigDecimal("amount")).divide(payment.getBigDecimal("actualCurrencyAmount"),new MathContext(100));
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Problem getting Payment",module);
  }
  return appliedAmount;
}
