{
  BigDecimal paymentApplied=BigDecimal.ZERO;
  List paymentApplications=null;
  try {
    paymentApplications=payment.getRelated("PaymentApplication");
    if (UtilValidate.isNotEmpty(paymentApplications)) {
      Iterator p=paymentApplications.iterator();
      while (p.hasNext()) {
        GenericValue paymentApplication=(GenericValue)p.next();
        BigDecimal amountApplied=paymentApplication.getBigDecimal("amountApplied");
        if (paymentApplication.get("invoiceId") != null && payment.get("actualCurrencyAmount") != null && payment.get("actualCurrencyUomId") != null) {
          GenericValue invoice=paymentApplication.getRelatedOne("Invoice");
          if (payment.getString("actualCurrencyUomId").equals(invoice.getString("currencyUomId"))) {
            amountApplied=amountApplied.multiply(payment.getBigDecimal("amount")).divide(payment.getBigDecimal("actualCurrencyAmount"),new MathContext(100));
          }
        }
        paymentApplied=paymentApplied.add(amountApplied).setScale(decimals,rounding);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Trouble getting entities",module);
  }
  return paymentApplied;
}
