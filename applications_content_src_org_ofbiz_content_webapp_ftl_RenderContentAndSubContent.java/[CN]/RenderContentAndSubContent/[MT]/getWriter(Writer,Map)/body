{
  final Environment env=Environment.getCurrentEnvironment();
  final LocalDispatcher dispatcher=(LocalDispatcher)FreeMarkerWorker.getWrappedObject("dispatcher",env);
  final GenericDelegator delegator=(GenericDelegator)FreeMarkerWorker.getWrappedObject("delegator",env);
  final HttpServletRequest request=(HttpServletRequest)FreeMarkerWorker.getWrappedObject("request",env);
  final HttpServletResponse response=(HttpServletResponse)FreeMarkerWorker.getWrappedObject("response",env);
  final Map envMap=FreeMarkerWorker.createEnvironmentMap(env);
  final Map templateRoot=MapStack.create();
  ((MapStack)templateRoot).push(envMap);
  if (Debug.verboseOn())   Debug.logVerbose("in RenderContentAndSubContent, contentId(0):" + templateRoot.get("contentId"),module);
  FreeMarkerWorker.getSiteParameters(request,templateRoot);
  FreeMarkerWorker.overrideWithArgs(templateRoot,args);
  final Map savedValues=FastMap.newInstance();
  return new Writer(out){
    public void write(    char cbuf[],    int off,    int len){
    }
    public void flush() throws IOException {
      out.flush();
    }
    public void close() throws IOException {
      renderSubContent();
    }
    public void renderSubContent() throws IOException {
      String mimeTypeId=(String)templateRoot.get("mimeTypeId");
      Object localeObject=templateRoot.get("locale");
      Locale locale=null;
      if (localeObject == null) {
        locale=UtilHttp.getLocale(request);
      }
 else {
        locale=UtilMisc.ensureLocale(localeObject);
      }
      if (Debug.verboseOn())       Debug.logVerbose("in RenderContentAndSubContent, contentId(2):" + templateRoot.get("contentId"),module);
      if (Debug.verboseOn())       Debug.logVerbose("in RenderContentAndSubContent, subContentId(2):" + templateRoot.get("subContentId"),module);
      try {
        String contentId=(String)templateRoot.get("contentId");
        String mapKey=(String)templateRoot.get("mapKey");
        String contentAssocTypeId=(String)templateRoot.get("contentAssocTypeId");
        if (UtilValidate.isNotEmpty(mapKey) || UtilValidate.isNotEmpty(contentAssocTypeId)) {
          String txt=ContentWorker.renderSubContentAsText(dispatcher,delegator,contentId,mapKey,templateRoot,locale,mimeTypeId,true);
          out.write(txt);
        }
 else         if (contentId != null) {
          ContentWorker.renderContentAsText(dispatcher,delegator,contentId,out,templateRoot,locale,mimeTypeId,true);
        }
      }
 catch (      GeneralException e) {
        String errMsg="Error rendering thisContentId:" + (String)templateRoot.get("contentId") + " msg:"+ e.toString();
        Debug.logError(e,errMsg,module);
      }
    }
  }
;
}
