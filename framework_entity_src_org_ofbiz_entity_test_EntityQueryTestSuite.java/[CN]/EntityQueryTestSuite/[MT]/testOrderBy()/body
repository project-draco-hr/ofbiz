{
  List<GenericValue> testingTypes=new LinkedList<GenericValue>();
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","orderBy-1","description","B"));
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","orderBy-2","description","C"));
  testingTypes.add(delegator.makeValue("TestingType","testingTypeId","orderBy-3","description","A"));
  delegator.storeAll(testingTypes);
  List<GenericValue> orderedByEntityEngine=delegator.findList("TestingType",EntityCondition.makeCondition("testingTypeId",EntityOperator.LIKE,"orderBy-%"),null,UtilMisc.toList("description"),null,false);
  List<GenericValue> orderedByEntityQuery=EntityQuery.use(delegator).from("TestingType").where(EntityCondition.makeCondition("testingTypeId",EntityOperator.LIKE,"orderBy-%")).orderBy("description").queryList();
  assertEquals("orderBy(): Number of records found by both the methods matched",orderedByEntityEngine.size(),orderedByEntityQuery.size());
  assertEquals("orderBy(): Record matched = testingTypeId",orderedByEntityEngine.get(0).getString("testingTypeId"),orderedByEntityQuery.get(0).getString("testingTypeId"));
  assertEquals("orderBy(): Record matched = description",orderedByEntityEngine.get(0).getString("description"),orderedByEntityQuery.get(0).getString("description"));
}
