{
  GenericValue _parentProduct=null;
  if (productId == null) {
    Debug.logWarning("Bad product id",module);
  }
  try {
    List<GenericValue> virtualProductAssocs=EntityQuery.use(delegator).from("ProductAssoc").where("productIdTo",productId,"productAssocTypeId","PRODUCT_VARIANT").orderBy("-fromDate").cache(true).filterByDate().queryList();
    if (UtilValidate.isEmpty(virtualProductAssocs)) {
      virtualProductAssocs=EntityQuery.use(delegator).from("ProductAssoc").where("productIdTo",productId,"productAssocTypeId","UNIQUE_ITEM").orderBy("-fromDate").cache(true).filterByDate().queryList();
    }
    if (UtilValidate.isNotEmpty(virtualProductAssocs)) {
      GenericValue productAssoc=EntityUtil.getFirst(virtualProductAssocs);
      _parentProduct=productAssoc.getRelatedOne("MainProduct",true);
    }
  }
 catch (  GenericEntityException e) {
    throw new RuntimeException("Entity Engine error getting Parent Product (" + e.getMessage() + ")");
  }
  return _parentProduct;
}
