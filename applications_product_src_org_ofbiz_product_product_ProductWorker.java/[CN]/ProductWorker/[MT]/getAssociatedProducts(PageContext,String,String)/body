{
  GenericValue product=(GenericValue)pageContext.getAttribute(productAttributeName);
  if (product == null)   return;
  try {
    List<GenericValue> upgradeProducts=product.getRelatedByAndCache("MainProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_UPGRADE"));
    List<GenericValue> complementProducts=product.getRelatedByAndCache("MainProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_COMPLEMENT"));
    List<GenericValue> obsolescenceProducts=product.getRelatedByAndCache("AssocProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_OBSOLESCENCE"));
    List<GenericValue> obsoleteByProducts=product.getRelatedByAndCache("MainProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_OBSOLESCENCE"));
    upgradeProducts=EntityUtil.filterByDate(upgradeProducts);
    complementProducts=EntityUtil.filterByDate(complementProducts);
    obsolescenceProducts=EntityUtil.filterByDate(obsolescenceProducts);
    obsoleteByProducts=EntityUtil.filterByDate(obsoleteByProducts);
    if (UtilValidate.isNotEmpty(upgradeProducts))     pageContext.setAttribute(assocPrefix + "upgrade",upgradeProducts);
    if (UtilValidate.isNotEmpty(complementProducts))     pageContext.setAttribute(assocPrefix + "complement",complementProducts);
    if (UtilValidate.isNotEmpty(obsolescenceProducts))     pageContext.setAttribute(assocPrefix + "obsolescence",obsolescenceProducts);
    if (UtilValidate.isNotEmpty(obsoleteByProducts))     pageContext.setAttribute(assocPrefix + "obsoleteby",obsoleteByProducts);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,module);
  }
}
