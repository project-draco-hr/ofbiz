{
  if (product == null) {
    return null;
  }
  List featureTypeFeatures=new ArrayList();
  try {
    if (product != null) {
      GenericDelegator delegator=product.getDelegator();
      List productAppls=null;
      Map fields=UtilMisc.toMap("productId",product.getString("productId"),"productFeatureApplTypeId","SELECTABLE_FEATURE");
      List order=UtilMisc.toList("productFeatureTypeId","sequenceNum");
      List features=delegator.findByAndCache("ProductFeatureAndAppl",fields,order);
      List featuresSorted=UtilMisc.sortMaps(features,order);
      Iterator it=featuresSorted.iterator();
      String oldType=null;
      List featureList=new LinkedList();
      while (it.hasNext()) {
        GenericValue productFeatureAppl=(GenericValue)it.next();
        if (oldType == null || !oldType.equals(productFeatureAppl.getString("productFeatureTypeId"))) {
          if (oldType != null) {
            featureTypeFeatures.add(featureList);
            featureList=new LinkedList();
            Debug.log("=====add feature: " + oldType);
          }
          GenericValue productFeatureType=delegator.findByPrimaryKey("ProductFeatureType",UtilMisc.toMap("productFeatureTypeId",productFeatureAppl.getString("productFeatureTypeId")));
          featureList.add(UtilMisc.toMap("productFeatureTypeId",productFeatureAppl.getString("productFeatureTypeId"),"description",productFeatureType.getString("description")));
          oldType=productFeatureAppl.getString("productFeatureTypeId");
        }
        featureList.add(UtilMisc.toMap("productFeatureId",productFeatureAppl.getString("productFeatureId"),"description",productFeatureAppl.getString("description")));
      }
      if (oldType != null) {
        featureTypeFeatures.add(featureList);
        Debug.log("=====add feature: " + oldType);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  Debug.log("=====total list: " + featureTypeFeatures.toString());
  return featureTypeFeatures;
}
