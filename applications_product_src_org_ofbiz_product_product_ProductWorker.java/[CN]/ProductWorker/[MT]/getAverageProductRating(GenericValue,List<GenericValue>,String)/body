{
  if (product == null) {
    Debug.logWarning("Invalid product entity passed; unable to obtain valid product rating",module);
    return BigDecimal.ZERO;
  }
  BigDecimal productRating=BigDecimal.ZERO;
  BigDecimal productEntityRating=product.getBigDecimal("productRating");
  String entityFieldType=product.getString("ratingTypeEnum");
  if (productEntityRating == null) {
    productEntityRating=BigDecimal.ZERO;
  }
  if (entityFieldType == null) {
    entityFieldType="";
  }
  if ("PRDR_FLAT".equals(entityFieldType)) {
    productRating=productEntityRating;
  }
 else {
    Map<String,String> reviewByAnd=UtilMisc.toMap("statusId","PRR_APPROVED");
    if (productStoreId != null) {
      reviewByAnd.put("productStoreId",productStoreId);
    }
    if (reviews == null) {
      try {
        reviews=product.getRelatedCache("ProductReview",reviewByAnd,UtilMisc.toList("-postedDateTime"));
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
      }
    }
    BigDecimal ratingTally=BigDecimal.ZERO;
    BigDecimal numRatings=BigDecimal.ZERO;
    if (reviews != null) {
      for (      GenericValue productReview : reviews) {
        BigDecimal rating=productReview.getBigDecimal("productRating");
        if (rating != null) {
          ratingTally=ratingTally.add(rating);
          numRatings.add(BigDecimal.ONE);
        }
      }
    }
    if (ratingTally.compareTo(BigDecimal.ZERO) > 0 && numRatings.compareTo(BigDecimal.ZERO) > 0) {
      productRating=ratingTally.divide(numRatings,generalRounding);
    }
    if ("PRDR_MIN".equals(entityFieldType)) {
      if (productEntityRating.compareTo(productRating) > 0) {
        productRating=productEntityRating;
      }
    }
 else     if ("PRDR_MAX".equals(entityFieldType)) {
      if (productRating.compareTo(productEntityRating) > 0) {
        productRating=productEntityRating;
      }
    }
  }
  return productRating;
}
