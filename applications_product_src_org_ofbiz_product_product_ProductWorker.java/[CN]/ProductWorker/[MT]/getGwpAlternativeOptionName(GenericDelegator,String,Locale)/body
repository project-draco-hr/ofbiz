{
  try {
    GenericValue alternativeOptionProduct=delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",alternativeOptionProductId));
    if (alternativeOptionProduct != null) {
      if ("Y".equals(alternativeOptionProduct.getString("isVariant"))) {
        Set distFeatures=getVariantDistinguishingFeatures(alternativeOptionProduct);
        if (distFeatures != null && distFeatures.size() > 0) {
          StringBuffer nameBuf=new StringBuffer();
          Iterator distFeatIter=distFeatures.iterator();
          while (distFeatIter.hasNext()) {
            GenericValue productFeature=(GenericValue)distFeatIter.next();
            GenericValue productFeatureType=productFeature.getRelatedOneCache("ProductFeatureType");
            if (productFeatureType != null) {
              nameBuf.append(productFeatureType.get("description",locale));
              nameBuf.append(":");
            }
            nameBuf.append(productFeature.get("description",locale));
            if (distFeatIter.hasNext()) {
              nameBuf.append(", ");
            }
          }
          return nameBuf.toString();
        }
      }
      String alternativeProductName=ProductContentWrapper.getProductContentAsText(alternativeOptionProduct,"PRODUCT_NAME",locale);
      return alternativeProductName;
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
catch (  Exception e) {
    Debug.logError(e,module);
  }
  return "[" + alternativeOptionProductId + "]";
}
