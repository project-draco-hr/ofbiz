{
  if (productId == null) {
    return null;
  }
  List featureTypes=new ArrayList();
  try {
    GenericValue product=delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",productId));
    if (product != null) {
      List productAppls=null;
      Map fields=UtilMisc.toMap("productId",product.getString("productId"),"productFeatureApplTypeId","SELECTABLE_FEATURE");
      List order=UtilMisc.toList("productFeatureTypeId","sequenceNum");
      List features=delegator.findByAndCache("ProductFeatureAndAppl",fields,order);
      Iterator it=features.iterator();
      String oldType=null;
      while (it.hasNext()) {
        GenericValue productFeatureAppl=(GenericValue)it.next();
        if (oldType == null || !oldType.equals(productFeatureAppl.getString("productFeatureTypeId"))) {
          featureTypes.add(productFeatureAppl.getString("productFeatureTypeId"));
          oldType=productFeatureAppl.getString("productFeatureTypeId");
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  return featureTypes;
}
