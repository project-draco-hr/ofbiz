{
  Map<String,Object> result=null;
  String contentId=content.getString("contentId");
  List<String> contentAssocTypeIdList=UtilGenerics.checkList(context.get("contentAssocTypeIdList"));
  Locale locale=(Locale)context.get("locale");
  Set<String> visitedSet=UtilGenerics.checkSet(context.get("visitedSet"));
  if (visitedSet == null) {
    visitedSet=new HashSet<String>();
    context.put("visitedSet",visitedSet);
  }
 else {
    if (visitedSet.contains(contentId)) {
      Debug.logWarning("visitedSet already contains:" + contentId,module);
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentVisitedSet",locale) + contentId);
    }
 else {
      visitedSet.add(contentId);
    }
  }
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  result=dispatcher.runSync(serviceName,UtilMisc.toMap("content",content,"userLogin",userLogin));
  List<GenericValue> kids=ContentWorker.getAssociatedContent(content,"from",contentAssocTypeIdList,null,null,null);
  for (  GenericValue kidContent : kids) {
    followNodeChildrenMethod(kidContent,dispatcher,serviceName,context);
  }
  return result;
}
