{
  Map result=new HashMap();
  GenericDelegator delegator=dctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String noteString=(String)context.get("note");
  String orderId=(String)context.get("orderId");
  String internalNote=(String)context.get("internalNote");
  Map noteCtx=UtilMisc.toMap("note",noteString,"userLogin",userLogin);
  Locale locale=(Locale)context.get("locale");
  Map noteRes=org.ofbiz.common.CommonServices.createNote(dctx,noteCtx);
  if (noteRes.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_ERROR))   return noteRes;
  String noteId=(String)noteRes.get("noteId");
  if (noteId == null || noteId.length() == 0) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderProblemCreatingTheNoteNoNoteIdReturned",locale));
  }
  try {
    Map fields=UtilMisc.toMap("orderId",orderId,"noteId",noteId,"internalNote",internalNote);
    GenericValue v=delegator.makeValue("OrderHeaderNote",fields);
    delegator.create(v);
  }
 catch (  GenericEntityException ee) {
    Debug.logError(ee,module);
    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);
    result.put(ModelService.ERROR_MESSAGE,"Problem associating note with order (" + ee.getMessage() + ").");
  }
  return result;
}
