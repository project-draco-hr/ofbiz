{
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String noteString=(String)context.get("note");
  String orderId=(String)context.get("orderId");
  String internalNote=(String)context.get("internalNote");
  Map noteCtx=UtilMisc.toMap("note",noteString,"userLogin",userLogin);
  Locale locale=(Locale)context.get("locale");
  try {
    Map noteRes=dispatcher.runSync("createNote",noteCtx);
    if (ServiceUtil.isError(noteRes))     return noteRes;
    String noteId=(String)noteRes.get("noteId");
    if (noteId == null || noteId.length() == 0) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderProblemCreatingTheNoteNoNoteIdReturned",locale));
    }
    Map fields=UtilMisc.toMap("orderId",orderId,"noteId",noteId,"internalNote",internalNote);
    GenericValue v=delegator.makeValue("OrderHeaderNote",fields);
    delegator.create(v);
  }
 catch (  GenericEntityException ee) {
    Debug.logError(ee,module);
    return ServiceUtil.returnError("Problem associating note with order (" + ee.getMessage() + ")");
  }
catch (  GenericServiceException se) {
    Debug.logError(se,module);
    return ServiceUtil.returnError("Problem associating note with order (" + se.getMessage() + ")");
  }
  return ServiceUtil.returnSuccess();
}
