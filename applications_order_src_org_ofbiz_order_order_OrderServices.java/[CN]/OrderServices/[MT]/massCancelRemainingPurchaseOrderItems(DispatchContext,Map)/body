{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  List orderIds=(List)context.get("orderIdList");
  for (  Object orderId : orderIds) {
    if (UtilValidate.isEmpty(orderId)) {
      continue;
    }
    Map ctx=FastMap.newInstance();
    ctx.put("orderId",orderId);
    ctx.put("userLogin",userLogin);
    Map resp=null;
    try {
      resp=dispatcher.runSync("cancelRemainingPurchaseOrderItems",ctx);
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
    if (ServiceUtil.isError(resp)) {
      return ServiceUtil.returnError("Error cancelRemainingPurchaseOrderItems for order: ",null,null,resp);
    }
    try {
      resp=dispatcher.runSync("checkOrderItemStatus",ctx);
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
    if (ServiceUtil.isError(resp)) {
      return ServiceUtil.returnError("Error checkOrderItemStatus for order: ",null,null,resp);
    }
  }
  return ServiceUtil.returnSuccess();
}
