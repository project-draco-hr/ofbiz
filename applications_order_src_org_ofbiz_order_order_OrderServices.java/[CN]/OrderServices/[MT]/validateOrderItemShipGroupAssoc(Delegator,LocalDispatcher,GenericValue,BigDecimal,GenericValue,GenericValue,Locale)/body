{
  String result=null;
  BigDecimal qty=(BigDecimal)orderItem.get("quantity");
  if (UtilValidate.isEmpty(qty)) {
    qty=BigDecimal.ZERO;
  }
  BigDecimal cancelQty=(BigDecimal)orderItem.get("cancelQuantity");
  if (UtilValidate.isEmpty(cancelQty)) {
    cancelQty=BigDecimal.ZERO;
  }
  BigDecimal orderItemQuantity=qty.subtract(cancelQty);
  if (totalQuantity.compareTo(orderItemQuantity) < 0) {
    BigDecimal adjustementQuantity=orderItemQuantity.subtract(totalQuantity);
    BigDecimal lastOISGAssocQuantity=(BigDecimal)lastOISGAssoc.get("quantity");
    if (UtilValidate.isEmpty(lastOISGAssocQuantity)) {
      lastOISGAssocQuantity=BigDecimal.ZERO;
    }
    BigDecimal oisgaQty=lastOISGAssocQuantity.add(adjustementQuantity);
    lastOISGAssoc.set("quantity",oisgaQty);
    lastOISGAssoc.store();
    GenericValue orderHeader=EntityQuery.use(delegator).from("OrderHeader").where("orderId",lastOISGAssoc.get("orderId")).queryOne();
    if (UtilValidate.isNotEmpty(orderHeader)) {
      Map<String,Object> cancelOrderInventoryReservationMap=UtilMisc.toMap("userLogin",userLogin,"locale",locale);
      cancelOrderInventoryReservationMap.put("orderId",lastOISGAssoc.get("orderId"));
      cancelOrderInventoryReservationMap.put("orderItemSeqId",lastOISGAssoc.get("orderItemSeqId"));
      cancelOrderInventoryReservationMap.put("shipGroupSeqId",lastOISGAssoc.get("shipGroupSeqId"));
      Map<String,Object> cancelResp=dispatcher.runSync("cancelOrderInventoryReservation",cancelOrderInventoryReservationMap);
      if (ServiceUtil.isError(cancelResp)) {
        throw new GeneralException(ServiceUtil.getErrorMessage(cancelResp));
      }
      String productStoreId=orderHeader.getString("productStoreId");
      String orderTypeId=orderHeader.getString("orderTypeId");
      List<String> resErrorMessages=new LinkedList<String>();
      if (Debug.infoOn())       Debug.logInfo("Calling reserve inventory...",module);
      reserveInventory(delegator,dispatcher,userLogin,locale,UtilMisc.toList(lastOISGAssoc),null,UtilMisc.<String,GenericValue>toMap(lastOISGAssoc.getString("orderItemSeqId"),orderItem),orderTypeId,productStoreId,resErrorMessages);
    }
    Map<String,Object> messageParameters=new HashMap<String,Object>();
    messageParameters.put("shipByDate",lastOISGAssoc.getRelatedOne("OrderItemShipGroup",false).getString("shipByDate"));
    messageParameters.put("adjustementQuantity",adjustementQuantity);
    return "Order OISG Assoc Quantity Auto Completed";
  }
  return result;
}
