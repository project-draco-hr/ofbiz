{
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String orderId=(String)context.get("orderId");
  Security security=ctx.getSecurity();
  if (!security.hasEntityPermission("ORDERMGR","_UPDATE",userLogin)) {
    GenericValue placingCustomer=null;
    try {
      Map placingCustomerFields=UtilMisc.toMap("orderId",orderId,"partyId",userLogin.getString("partyId"),"roleTypeId","PLACING_CUSTOMER");
      placingCustomer=delegator.findByPrimaryKey("OrderRole",placingCustomerFields);
    }
 catch (    GenericEntityException e) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderErrorCannotGetOrderRoleEntity",locale) + e.getMessage());
    }
    if (placingCustomer == null) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderYouDoNotHavePermissionToChangeThisOrdersStatus",locale));
    }
  }
  GenericValue orderHeader=null;
  try {
    orderHeader=delegator.findByPrimaryKey("OrderHeader",UtilMisc.toMap("orderId",orderId));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot get OrderHeader record",module);
  }
  if (orderHeader == null) {
    Debug.logError("OrderHeader came back as null",module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderCannotUpdateNullOrderHeader",UtilMisc.toMap("orderId",orderId),locale));
  }
  List orderItems=null;
  try {
    orderItems=delegator.findByAnd("OrderItem",UtilMisc.toMap("orderId",orderId));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot get OrderItem records",module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderProblemGettingOrderItemRecords",locale));
  }
  boolean allCanceled=true;
  boolean allComplete=true;
  boolean allApproved=true;
  if (orderItems != null) {
    Iterator itemIter=orderItems.iterator();
    while (itemIter.hasNext()) {
      GenericValue item=(GenericValue)itemIter.next();
      String statusId=item.getString("statusId");
      if (!"ITEM_CANCELLED".equals(statusId)) {
        allCanceled=false;
        if (!"ITEM_COMPLETED".equals(statusId)) {
          allComplete=false;
          if (!"ITEM_APPROVED".equals(statusId)) {
            allApproved=false;
            break;
          }
        }
      }
    }
    String newStatus=null;
    if (allCanceled) {
      newStatus="ORDER_CANCELLED";
    }
 else     if (allComplete) {
      newStatus="ORDER_COMPLETED";
    }
 else     if (allApproved) {
      if (!"ORDER_SENT".equals(orderHeader.getString("statusId"))) {
        newStatus="ORDER_APPROVED";
      }
    }
    if (newStatus != null) {
      Map serviceContext=UtilMisc.toMap("orderId",orderId,"statusId",newStatus,"userLogin",userLogin);
      Map newSttsResult=null;
      try {
        newSttsResult=dispatcher.runSync("changeOrderStatus",serviceContext);
      }
 catch (      GenericServiceException e) {
        Debug.logError(e,"Problem calling the changeOrderStatus service",module);
      }
      if (ServiceUtil.isError(newSttsResult)) {
        return ServiceUtil.returnError(ServiceUtil.getErrorMessage(newSttsResult));
      }
    }
  }
 else {
    Debug.logWarning(UtilProperties.getMessage(resource_error,"OrderReceivedNullForOrderItemRecordsOrderId",UtilMisc.toMap("orderId",orderId),locale),module);
  }
  return ServiceUtil.returnSuccess();
}
