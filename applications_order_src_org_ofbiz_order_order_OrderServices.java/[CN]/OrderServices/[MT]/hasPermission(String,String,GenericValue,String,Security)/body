{
  boolean hasPermission=security.hasEntityPermission("ORDERMGR","_" + action,userLogin);
  if (!hasPermission) {
    if (orderTypeId.equals("SALES_ORDER")) {
      if (security.hasEntityPermission("ORDERMGR","_SALES_" + action,userLogin)) {
        hasPermission=true;
      }
 else {
        List<GenericValue> repsCustomers=new LinkedList<GenericValue>();
        try {
          repsCustomers=EntityUtil.filterByDate(userLogin.getRelatedOne("Party",false).getRelated("FromPartyRelationship",UtilMisc.toMap("roleTypeIdFrom","AGENT","roleTypeIdTo","CUSTOMER","partyIdTo",partyId),null,false));
        }
 catch (        GenericEntityException ex) {
          Debug.logError("Could not determine if " + partyId + " is a customer of user "+ userLogin.getString("userLoginId")+ " due to "+ ex.getMessage(),module);
        }
        if ((repsCustomers != null) && (repsCustomers.size() > 0) && (security.hasEntityPermission("ORDERMGR","_ROLE_" + action,userLogin))) {
          hasPermission=true;
        }
        if (!hasPermission) {
          try {
            repsCustomers=EntityUtil.filterByDate(userLogin.getRelatedOne("Party",false).getRelated("FromPartyRelationship",UtilMisc.toMap("roleTypeIdFrom","SALES_REP","roleTypeIdTo","CUSTOMER","partyIdTo",partyId),null,false));
          }
 catch (          GenericEntityException ex) {
            Debug.logError("Could not determine if " + partyId + " is a customer of user "+ userLogin.getString("userLoginId")+ " due to "+ ex.getMessage(),module);
          }
          if ((repsCustomers != null) && (repsCustomers.size() > 0) && (security.hasEntityPermission("ORDERMGR","_ROLE_" + action,userLogin))) {
            hasPermission=true;
          }
        }
      }
    }
 else     if ((orderTypeId.equals("PURCHASE_ORDER") && (security.hasEntityPermission("ORDERMGR","_PURCHASE_" + action,userLogin)))) {
      hasPermission=true;
    }
  }
  return hasPermission;
}
