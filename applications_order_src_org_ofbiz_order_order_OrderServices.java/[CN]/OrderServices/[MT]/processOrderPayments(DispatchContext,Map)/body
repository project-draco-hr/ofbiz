{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericDelegator delegator=dctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String orderId=(String)context.get("orderId");
  OrderReadHelper orh=new OrderReadHelper(delegator,orderId);
  String productStoreId=orh.getProductStoreId();
  if (!"PURCHASE_ORDER".equals(orh.getOrderTypeId())) {
    GenericValue productStore=ProductStoreWorker.getProductStore(productStoreId,delegator);
    Map paymentResp=null;
    try {
      Debug.log("Calling process payments...",module);
      paymentResp=CheckOutHelper.processPayment(orderId,orh.getOrderGrandTotalBd().doubleValue(),orh.getCurrency(),productStore,userLogin,false,false,dispatcher,delegator);
    }
 catch (    GeneralException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
catch (    GeneralRuntimeException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
    if (ServiceUtil.isError(paymentResp)) {
      return ServiceUtil.returnError("Error processing payments: ",null,null,paymentResp);
    }
  }
  return ServiceUtil.returnSuccess();
}
