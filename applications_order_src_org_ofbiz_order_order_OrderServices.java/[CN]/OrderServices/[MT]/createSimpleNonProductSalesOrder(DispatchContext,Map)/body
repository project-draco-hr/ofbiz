{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericDelegator delegator=dctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=(Locale)context.get("locale");
  String paymentMethodId=(String)context.get("paymentMethodId");
  String productStoreId=(String)context.get("productStoreId");
  String currency=(String)context.get("currency");
  String partyId=(String)context.get("partyId");
  Map itemMap=(Map)context.get("itemMap");
  ShoppingCart cart=new ShoppingCart(delegator,productStoreId,null,locale,currency);
  try {
    cart.setUserLogin(userLogin,dispatcher);
  }
 catch (  CartItemModifyException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  cart.setOrderType("SALES_ORDER");
  cart.setOrderPartyId(partyId);
  Iterator i=itemMap.keySet().iterator();
  while (i.hasNext()) {
    String item=(String)i.next();
    Double price=(Double)itemMap.get(item);
    try {
      cart.addNonProductItem("BULK_ORDER_ITEM",item,null,price,1,null,null,null,dispatcher);
    }
 catch (    CartItemModifyException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
  }
  try {
    cart.addPayment(paymentMethodId);
  }
 catch (  IllegalArgumentException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  Map createResp;
  try {
    createResp=dispatcher.runSync("createOrderFromShoppingCart",UtilMisc.toMap("shoppingCart",cart),90,true);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (ServiceUtil.isError(createResp)) {
    return createResp;
  }
  Map authResp;
  try {
    authResp=dispatcher.runSync("callProcessOrderPayments",UtilMisc.toMap("shoppingCart",cart),180,true);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (ServiceUtil.isError(authResp)) {
    return authResp;
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("orderId",createResp.get("orderId"));
  return result;
}
