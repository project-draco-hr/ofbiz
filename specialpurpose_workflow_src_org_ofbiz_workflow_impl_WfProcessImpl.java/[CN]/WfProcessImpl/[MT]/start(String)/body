{
  if (state().equals("open.running"))   throw new AlreadyRunning("Process is already running");
  if (activityId == null && getDefinitionObject().get("defaultStartActivityId") == null)   throw new CannotStart("Initial activity is not defined.");
  changeState("open.running");
  GenericValue start=null;
  try {
    if (activityId != null) {
      GenericValue processDef=getDefinitionObject();
      Map<String,Object> fields=UtilMisc.toMap("packageId",(Object)processDef.getString("packageId"),"packageVersion",processDef.getString("packageVersion"),"processId",processDef.getString("processId"),"processVersion",processDef.getString("processVersion"),"activityId",activityId);
      start=getDelegator().findByPrimaryKey("WorkflowActivity",fields);
      if (!start.getBoolean("canStart").booleanValue())       throw new CannotStart("The specified activity cannot initiate the workflow process");
    }
 else {
      start=getDefinitionObject().getRelatedOne("DefaultStartWorkflowActivity");
    }
  }
 catch (  GenericEntityException e) {
    throw new WfException(e.getMessage(),e.getNested());
  }
  if (start == null)   throw new CannotStart("No initial activity available");
  if (Debug.verboseOn())   Debug.logVerbose("[WfProcess.start] : Started the workflow process.",module);
  try {
    GenericValue v=getRuntimeObject();
    v.set("actualStartDate",UtilDateTime.nowTimestamp());
    v.store();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning("Could not set 'actualStartDate'.",module);
    e.printStackTrace();
  }
  startActivity(start);
}
