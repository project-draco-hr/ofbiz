{
  if (orm == null) {
    return;
  }
  try {
    if (this.ocm.getSession().itemExists(orm.getPath())) {
      throw new ItemExistsException("There already exists an object stored at " + orm.getPath() + ". Please use update if you want to change it.");
    }
  }
 catch (  ItemExistsException e) {
    throw (e);
  }
catch (  RepositoryException e) {
    Debug.logError(e,module);
    return;
  }
  String path=orm.getPath();
  String[] nodeStructure=path.split(ConstantsJackrabbit.NODEPATHDELIMITER);
  Node parentNode=null;
  try {
    parentNode=this.ocm.getSession().getRootNode();
  }
 catch (  RepositoryException e) {
    Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
    return;
  }
  for (int i=0; i < (nodeStructure.length - 1); i++) {
    String node=nodeStructure[i];
    if (UtilValidate.isEmpty(node)) {
      continue;
    }
    try {
      if (parentNode.hasNode(node)) {
        parentNode=parentNode.getNode(node);
        versioningManager.checkOutContentObject(parentNode.getPath());
      }
 else {
        versioningManager.checkOutContentObject(parentNode.getPath());
        Node newNode=parentNode.addNode(node);
        newNode.addMixin(ConstantsJackrabbit.MIXIN_VERSIONING);
        if (!ConstantsJackrabbit.ROOTPATH.equals(parentNode.getPath())) {
          newNode.setPrimaryType(parentNode.getPrimaryNodeType().getName());
        }
        versioningManager.addContentToCheckInList(newNode.getPath());
        parentNode=newNode;
      }
    }
 catch (    PathNotFoundException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
catch (    RepositoryException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
  }
  ocm.insert(orm);
  versioningManager.addContentToCheckInList(orm.getPath());
  this.saveState();
}
