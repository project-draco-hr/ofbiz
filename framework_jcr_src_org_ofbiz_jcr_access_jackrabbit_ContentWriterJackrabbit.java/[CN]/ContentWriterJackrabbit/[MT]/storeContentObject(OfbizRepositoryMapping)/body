{
  if (orm == null) {
    return;
  }
  String path=orm.getPath();
  String[] nodeStructure=path.split("/");
  Node parentNode=null;
  try {
    parentNode=this.ocm.getSession().getRootNode();
  }
 catch (  RepositoryException e) {
    Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
    return;
  }
  for (int i=0; i < (nodeStructure.length - 1); i++) {
    String node=nodeStructure[i];
    if (UtilValidate.isEmail(node)) {
      continue;
    }
    try {
      if (parentNode.hasNode(node)) {
        parentNode=parentNode.getNode(node);
      }
 else {
        OfbizRepositoryMapping newNode=orm.getClass().newInstance();
        String parentNodePath=parentNode.getPath();
        if (!parentNodePath.endsWith("/")) {
          parentNodePath=parentNodePath + "/";
        }
        newNode.setPath(parentNodePath + node);
        ocm.insert(newNode);
        parentNode=parentNode.getNode(node);
      }
    }
 catch (    PathNotFoundException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
catch (    RepositoryException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
catch (    InstantiationException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
catch (    IllegalAccessException e) {
      Debug.logError(e,"The new node could not be created: " + orm.getPath(),module);
      return;
    }
  }
  ocm.insert(orm);
  this.saveState();
}
