{
  Object ds;
  ds=dsCache.get(jndiName);
  if (ds != null) {
    if (ds instanceof XADataSource) {
      XADataSource xads=(XADataSource)ds;
      return TransactionUtil.enlistConnection(xads.getXAConnection());
    }
 else {
      DataSource nds=(DataSource)ds;
      return nds.getConnection();
    }
  }
synchronized (ConnectionFactory.class) {
    ds=dsCache.get(jndiName);
    if (ds != null) {
      if (ds instanceof XADataSource) {
        XADataSource xads=(XADataSource)ds;
        return TransactionUtil.enlistConnection(xads.getXAConnection());
      }
 else {
        DataSource nds=(DataSource)ds;
        return nds.getConnection();
      }
    }
    try {
      if (Debug.infoOn())       Debug.logInfo("Doing JNDI lookup for name " + jndiName,module);
      InitialContext ic=JNDIContextFactory.getInitialContext(jndiServerName);
      if (ic != null) {
        ds=ic.lookup(jndiName);
      }
 else {
        Debug.logWarning("Initial Context returned was NULL for server name " + jndiServerName,module);
      }
      if (ds != null) {
        if (Debug.verboseOn())         Debug.logVerbose("Got a Datasource object.",module);
        dsCache.put(jndiName,ds);
        Connection con=null;
        if (ds instanceof XADataSource) {
          if (Debug.infoOn())           Debug.logInfo("Got XADataSource for name " + jndiName,module);
          XADataSource xads=(XADataSource)ds;
          XAConnection xac=xads.getXAConnection();
          con=TransactionUtil.enlistConnection(xac);
        }
 else {
          if (Debug.infoOn())           Debug.logInfo("Got DataSource for name " + jndiName,module);
          DataSource nds=(DataSource)ds;
          con=nds.getConnection();
        }
        return con;
      }
 else {
        Debug.logError("Datasource returned was NULL.",module);
      }
    }
 catch (    NamingException ne) {
      Debug.logWarning(ne,"[ConnectionFactory.getConnection] Failed to find DataSource named " + jndiName + " in JNDI server with name "+ jndiServerName+ ". Trying normal database.",module);
    }
catch (    GenericConfigException gce) {
      throw new GenericEntityException("Problems with the JNDI configuration.",gce.getNested());
    }
  }
  return null;
}
