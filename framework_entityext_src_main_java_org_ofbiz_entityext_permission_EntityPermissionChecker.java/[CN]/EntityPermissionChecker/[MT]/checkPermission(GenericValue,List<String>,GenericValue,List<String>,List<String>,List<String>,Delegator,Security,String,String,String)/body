{
  List<Object> entityIds=new LinkedList<Object>();
  if (content != null)   entityIds.add(content);
  if (UtilValidate.isNotEmpty(quickCheckContentId)) {
    List<String> quickList=StringUtil.split(quickCheckContentId,"|");
    if (UtilValidate.isNotEmpty(quickList))     entityIds.addAll(quickList);
  }
  Map<String,Object> results=new HashMap<String,Object>();
  boolean passed=false;
  if (userLogin != null && entityAction != null) {
    passed=security.hasEntityPermission("CONTENTMGR",entityAction,userLogin);
  }
  if (passed) {
    results.put("permissionStatus","granted");
    return results;
  }
  try {
    boolean check=checkPermissionMethod(delegator,userLogin,targetOperations,"Content",entityIds,passedPurposes,null,privilegeEnumId);
    if (check) {
      results.put("permissionStatus","granted");
    }
 else {
      results.put("permissionStatus","rejected");
    }
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  return results;
}
