{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=ctx.getDelegator();
  Security security=ctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String partyId=ServiceUtil.getPartyIdCheckSecurity(userLogin,security,context,result,"PARTYMGR","_PCM_DELETE");
  String errMsg=null;
  Locale locale=(Locale)context.get("locale");
  if (result.size() > 0)   return result;
  String contactMechId=(String)context.get("contactMechId");
  String contactMechPurposeTypeId=(String)context.get("contactMechPurposeTypeId");
  Timestamp fromDate=(Timestamp)context.get("fromDate");
  GenericValue pcmp=null;
  try {
    pcmp=delegator.findByPrimaryKey("PartyContactMechPurpose",UtilMisc.toMap("partyId",partyId,"contactMechId",contactMechId,"contactMechPurposeTypeId",contactMechPurposeTypeId,"fromDate",fromDate));
    if (pcmp == null) {
      errMsg=UtilProperties.getMessage(resource,"contactmechservices.could_not_delete_purpose_from_contact_mechanism_not_found",locale);
      return ServiceUtil.returnError(errMsg);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"contactmechservices.could_not_delete_purpose_from_contact_mechanism_read",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  pcmp.set("thruDate",UtilDateTime.nowTimestamp());
  try {
    pcmp.store();
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.getMessage());
    errMsg=UtilProperties.getMessage(resource,"contactmechservices.could_not_delete_purpose_from_contact_mechanism_write",messageMap,locale);
    return ServiceUtil.returnError(errMsg);
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
