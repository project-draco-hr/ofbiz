{
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Security security=dctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=(Locale)context.get("locale");
  String partyIdFrom=(String)context.get("partyIdFrom");
  String partyIdTo=(String)context.get("partyIdTo");
  try {
    List valueMaps=ContactMechWorker.getPartyContactMechValueMaps(delegator,partyIdFrom,false);
    for (Iterator iter=valueMaps.iterator(); iter.hasNext(); ) {
      Map thisMap=(Map)iter.next();
      GenericValue contactMech=(GenericValue)thisMap.get("contactMech");
      GenericValue partyContactMech=(GenericValue)thisMap.get("partyContactMech");
      List partyContactMechPurposes=(List)thisMap.get("partyContactMechPurposes");
      String contactMechId=contactMech.getString("contactMechId");
      Map serviceResults=dispatcher.runSync("createPartyContactMech",UtilMisc.toMap("partyId",partyIdTo,"userLogin",userLogin,"contactMechId",contactMechId,"fromDate",UtilDateTime.nowTimestamp(),"allowSolicitation",partyContactMech.getString("allowSolicitation"),"extension",partyContactMech.getString("extension")));
      if (ServiceUtil.isError(serviceResults)) {
        return serviceResults;
      }
      for (Iterator piter=partyContactMechPurposes.iterator(); piter.hasNext(); ) {
        GenericValue purpose=(GenericValue)piter.next();
        Map input=UtilMisc.toMap("partyId",partyIdTo,"contactMechId",contactMechId,"userLogin",userLogin);
        input.put("contactMechPurposeTypeId",purpose.getString("contactMechPurposeTypeId"));
        serviceResults=dispatcher.runSync("createPartyContactMechPurpose",input);
        if (ServiceUtil.isError(serviceResults)) {
          return serviceResults;
        }
      }
    }
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,e.getMessage(),module);
    return ServiceUtil.returnError("Failed to copy contact mechs. Error: " + e.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
