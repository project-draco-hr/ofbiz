{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=ctx.getDelegator();
  Security security=ctx.getSecurity();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String partyId=ServiceUtil.getPartyIdCheckSecurity(userLogin,security,context,result,"PARTYMGR","_PCM_CREATE");
  String errMsg=null;
  Locale locale=(Locale)context.get("locale");
  if (result.size() > 0) {
    return result;
  }
  String contactMechId=(String)context.get("contactMechId");
  String contactMechPurposeTypeId=(String)context.get("contactMechPurposeTypeId");
  Timestamp fromDate=(Timestamp)context.get("fromDate");
  GenericValue tempVal=null;
  try {
    Map<String,String> pcmpFindMap=UtilMisc.toMap("partyId",partyId,"contactMechId",contactMechId,"contactMechPurposeTypeId",contactMechPurposeTypeId);
    List<GenericValue> allPCWPs=delegator.findByAnd("PartyContactWithPurpose",pcmpFindMap,null,false);
    allPCWPs=EntityUtil.filterByDate(allPCWPs,null,"contactFromDate","contactThruDate",true);
    allPCWPs=EntityUtil.filterByDate(allPCWPs,null,"purposeFromDate","purposeThruDate",true);
    tempVal=EntityUtil.getFirst(allPCWPs);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    tempVal=null;
  }
  if (UtilValidate.isEmpty(fromDate)) {
    fromDate=UtilDateTime.nowTimestamp();
  }
  if (tempVal != null) {
    errMsg=UtilProperties.getMessage(resourceError,"contactmechservices.could_not_create_new_purpose_already_exists",locale);
    errMsg+=": " + tempVal.getPrimaryKey().toString();
    return ServiceUtil.returnError(errMsg);
  }
 else {
    GenericValue newPartyContactMechPurpose=delegator.makeValue("PartyContactMechPurpose",UtilMisc.toMap("partyId",partyId,"contactMechId",contactMechId,"contactMechPurposeTypeId",contactMechPurposeTypeId,"fromDate",fromDate));
    try {
      delegator.create(newPartyContactMechPurpose);
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e.getMessage(),module);
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"contactmechservices.could_not_add_purpose_write",UtilMisc.toMap("errMessage",e.getMessage()),locale));
    }
  }
  result.put("fromDate",fromDate);
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
