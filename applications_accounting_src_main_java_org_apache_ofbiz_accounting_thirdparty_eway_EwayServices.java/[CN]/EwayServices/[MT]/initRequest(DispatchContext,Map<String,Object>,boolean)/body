{
  String pgcId=(String)context.get("paymentGatewayConfigId");
  String cfgStr=(String)context.get("paymentConfig");
  Delegator delegator=dctx.getDelegator();
  String customerId=getPaymentGatewayConfigValue(delegator,pgcId,"customerId",cfgStr,"payment.eway.customerId");
  String refundPwd=getPaymentGatewayConfigValue(delegator,pgcId,"refundPwd",cfgStr,"payment.eway.refundPwd");
  Boolean testMode="Y".equalsIgnoreCase(getPaymentGatewayConfigValue(delegator,pgcId,"testMode",cfgStr,"payment.eway.testMode"));
  Boolean beagle="Y".equalsIgnoreCase(getPaymentGatewayConfigValue(delegator,pgcId,"enableBeagle",cfgStr,"payment.eway.enableBeagle"));
  Boolean cvn="Y".equalsIgnoreCase(getPaymentGatewayConfigValue(delegator,pgcId,"enableCvn",cfgStr,"payment.eway.enableCvn"));
  int requestMode=refund ? GatewayRequest.REQUEST_METHOD_REFUND : beagle ? GatewayRequest.REQUEST_METHOD_BEAGLE : cvn ? GatewayRequest.REQUEST_METHOD_CVN : 0;
  GatewayRequest req=new GatewayRequest(requestMode);
  req.setTestMode(testMode);
  req.setCustomerID(customerId);
  if (refund) {
    req.setRefundPassword(refundPwd);
  }
  return req;
}
