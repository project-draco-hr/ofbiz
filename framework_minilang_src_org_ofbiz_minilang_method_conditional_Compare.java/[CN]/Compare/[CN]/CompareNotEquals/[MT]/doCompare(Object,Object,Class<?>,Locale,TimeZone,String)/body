{
  Object convertedLvalue=MiniLangUtil.convertType(lValue,type,locale,timeZone,format);
  Object convertedRvalue=MiniLangUtil.convertType(rValue,type,locale,timeZone,format);
  if (convertedLvalue == null) {
    return convertedRvalue != null;
  }
  if (convertedRvalue == null) {
    return true;
  }
  try {
    BigDecimal lBigDecimal=(BigDecimal)convertedLvalue;
    BigDecimal rBigDecimal=(BigDecimal)convertedRvalue;
    return compareBigDecimals(lBigDecimal,rBigDecimal) != 0;
  }
 catch (  ClassCastException e) {
  }
  try {
    Comparable<Object> comparable=UtilGenerics.cast(convertedLvalue);
    return comparable.compareTo(convertedRvalue) != 0;
  }
 catch (  ClassCastException e) {
  }
  return !convertedLvalue.equals(convertedRvalue);
}
