{
  if (quantity == null) {
    quantity=BigDecimal.ONE;
  }
  if (task == null)   return 0;
  double setupTime=0;
  double taskTime=1;
  double totalTaskTime=0;
  if (task.get("estimatedSetupMillis") != null) {
    setupTime=task.getDouble("estimatedSetupMillis").doubleValue();
  }
  if (task.get("estimatedMilliSeconds") != null) {
    taskTime=task.getDouble("estimatedMilliSeconds").doubleValue();
  }
  totalTaskTime=(setupTime + taskTime * quantity.doubleValue());
  if (task.get("estimateCalcMethod") != null) {
    String serviceName=null;
    try {
      GenericValue genericService=task.getRelatedOne("CustomMethod",false);
      if (genericService != null && genericService.getString("customMethodName") != null) {
        serviceName=genericService.getString("customMethodName");
        Map<String,Object> estimateCalcServiceMap=UtilMisc.<String,Object>toMap("workEffort",task,"quantity",quantity,"productId",productId,"routingId",routingId);
        Map<String,Object> serviceContext=UtilMisc.<String,Object>toMap("arguments",estimateCalcServiceMap);
        Map<String,Object> resultService=dispatcher.runSync(serviceName,serviceContext);
        totalTaskTime=((BigDecimal)resultService.get("totalTime")).doubleValue();
      }
    }
 catch (    Exception exc) {
      Debug.logError(exc,"Problem calling the customMethod service " + serviceName);
    }
  }
  return (long)totalTaskTime;
}
