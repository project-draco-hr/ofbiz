{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String productId=request.getParameter("productId");
  String productFeatureTypeId=request.getParameter("productFeatureTypeId");
  try {
    GenericValue product=delegator.findOne("Product",UtilMisc.toMap("productId",productId),false);
    List<GenericValue> variantAssocs=product.getRelated("MainProductAssoc",UtilMisc.toMap("productAssocTypeId","PRODUCT_VARIANT"),null,false);
    variantAssocs=EntityUtil.filterByDate(variantAssocs);
    List<GenericValue> variants=EntityUtil.getRelated("AssocProduct",null,variantAssocs,false);
    for (    GenericValue variant : variants) {
      List<GenericValue> productFeatureAndAppls=variant.getRelated("ProductFeatureAndAppl",UtilMisc.toMap("productFeatureTypeId",productFeatureTypeId,"productFeatureApplTypeId","STANDARD_FEATURE"),null,false);
      for (      GenericValue productFeatureAndAppl : productFeatureAndAppls) {
        GenericPK productFeatureApplPK=delegator.makePK("ProductFeatureAppl");
        productFeatureApplPK.setPKFields(productFeatureAndAppl);
        delegator.removeByPrimaryKey(productFeatureApplPK);
      }
    }
    List<GenericValue> productFeatureAndAppls=product.getRelated("ProductFeatureAndAppl",UtilMisc.toMap("productFeatureTypeId",productFeatureTypeId,"productFeatureApplTypeId","SELECTABLE_FEATURE"),null,false);
    for (    GenericValue productFeatureAndAppl : productFeatureAndAppls) {
      GenericPK productFeatureApplPK=delegator.makePK("ProductFeatureAppl");
      productFeatureApplPK.setPKFields(productFeatureAndAppl);
      delegator.removeByPrimaryKey(productFeatureApplPK);
    }
  }
 catch (  GenericEntityException e) {
    String errMsg="Error creating new virtual product from variant products: " + e.toString();
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
  return "success";
}
