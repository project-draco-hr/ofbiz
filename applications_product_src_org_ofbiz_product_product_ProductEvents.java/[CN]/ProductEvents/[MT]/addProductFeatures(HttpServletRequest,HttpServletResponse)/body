{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String productId=request.getParameter("productId");
  String productFeatureApplTypeId=request.getParameter("productFeatureApplTypeId");
  String fromDateStr=request.getParameter("fromDate");
  Timestamp fromDate=UtilDateTime.nowTimestamp();
  if (UtilValidate.isNotEmpty(fromDateStr)) {
    fromDate=Timestamp.valueOf(fromDateStr);
  }
  String[] productFeatureIdArray=request.getParameterValues("productFeatureId");
  if (productFeatureIdArray != null && productFeatureIdArray.length > 0) {
    try {
      for (      String productFeatureId : productFeatureIdArray) {
        if (!productFeatureId.equals("~~any~~")) {
          List<GenericValue> featureAppls=EntityQuery.use(delegator).from("ProductFeatureAppl").where("productId",productId,"productFeatureId",productFeatureId,"productFeatureApplTypeId",productFeatureApplTypeId).queryList();
          if (featureAppls.size() == 0) {
            delegator.create("ProductFeatureAppl",UtilMisc.toMap("productId",productId,"productFeatureId",productFeatureId,"productFeatureApplTypeId",productFeatureApplTypeId,"fromDate",fromDate));
          }
        }
      }
    }
 catch (    GenericEntityException e) {
      String errMsg="Error adding feature: " + e.toString();
      request.setAttribute("_ERROR_MESSAGE_",errMsg);
      return "error";
    }
  }
  return "success";
}
