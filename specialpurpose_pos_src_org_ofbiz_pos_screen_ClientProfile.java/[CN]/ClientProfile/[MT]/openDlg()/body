{
  m_dialog=(XDialog)pageMgr.loadPage(m_pos.getScreenLocation() + "/dialog/ClientProfile");
  m_nameEdit=(XEdit)m_dialog.findComponent("nameEdit");
  m_nameLabel=(XLabel)m_dialog.findComponent("nameLabel");
  m_emailLabel=(XLabel)m_dialog.findComponent("emailLabel");
  m_emailEdit=(XEdit)m_dialog.findComponent("emailEdit");
  m_phoneLabel=(XLabel)m_dialog.findComponent("phoneLabel");
  m_phoneEdit=(XEdit)m_dialog.findComponent("phoneEdit");
  m_cardLabel=(XLabel)m_dialog.findComponent("cardLabel");
  m_cardEdit=(XEdit)m_dialog.findComponent("cardEdit");
  m_clientListLabel=(XLabel)m_dialog.findComponent("clientListLabel");
  m_clientListCombo=(XComboBox)m_dialog.findComponent("clientListCombo");
  m_tipLoginPwdLabel=(XLabel)m_dialog.findComponent("tipLoginPwdLabel");
  m_search=(XButton)m_dialog.findComponent("BtnSearch");
  m_create=(XButton)m_dialog.findComponent("BtnCreate");
  m_edit=(XButton)m_dialog.findComponent("BtnEdit");
  m_select=(XButton)m_dialog.findComponent("BtnSelect");
  m_cancel=(XButton)m_dialog.findComponent("BtnCancel");
  XEventHelper.addMouseHandler(this,m_search,"search");
  XEventHelper.addMouseHandler(this,m_create,"edit(create)");
  XEventHelper.addMouseHandler(this,m_edit,"edit(update)");
  XEventHelper.addMouseHandler(this,m_select,"select");
  XEventHelper.addMouseHandler(this,m_cancel,"cancel");
  XEventHelper.addMouseHandler(this,m_nameEdit,"editName");
  XEventHelper.addMouseHandler(this,m_emailEdit,"editEmail");
  XEventHelper.addMouseHandler(this,m_phoneEdit,"editPhone");
  XEventHelper.addMouseHandler(this,m_cardEdit,"editCard");
  m_comboModel=new DefaultComboBoxModel();
  m_dialog.setCaption(UtilProperties.getMessage(PosTransaction.resource,"PosClientProfile",locale));
  m_clientListCombo.setModel(m_comboModel);
  m_clientListCombo.setToolTipText(UtilProperties.getMessage(PosTransaction.resource,"PosSelectClientToEdit",locale));
  m_clientListCombo.addActionListener(this);
  m_dialog.pack();
  m_nameEdit.requestFocusInWindow();
  m_dialog.showDialog(this);
  if (!cancelled) {
    m_trans.setPartyId(m_partyId);
    GenericValue person=null;
    try {
      person=m_trans.getSession().getDelegator().findByPrimaryKey("Person",UtilMisc.toMap("partyId",m_partyId));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    if (UtilValidate.isNotEmpty(person)) {
      String promoCode=person.getString("cardId");
      if (UtilValidate.isNotEmpty(promoCode)) {
        String result=m_trans.addProductPromoCode(promoCode);
        if (UtilValidate.isNotEmpty(result)) {
          m_pos.showDialog("dialog/error/exception",result);
        }
      }
    }
  }
}
