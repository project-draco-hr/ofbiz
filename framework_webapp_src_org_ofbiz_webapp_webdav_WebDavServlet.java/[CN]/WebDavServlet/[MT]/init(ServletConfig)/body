{
  try {
    super.init(config);
    ClassLoader loader=new CachedClassLoader(Thread.currentThread().getContextClassLoader(),null);
    Thread.currentThread().setContextClassLoader(loader);
    ServletContext context=this.getServletContext();
    String delegatorName=context.getInitParameter("entityDelegatorName");
    this.delegator=DelegatorFactory.getDelegator(delegatorName);
    String dispatcherName=context.getInitParameter("localDispatcherName");
    this.dispatcher=ServiceContainer.getLocalDispatcher(dispatcherName,this.delegator);
    this.security=SecurityFactory.getInstance(this.delegator);
    String factoryClassName=context.getInitParameter("requestHandlerFactoryClass");
    this.handlerFactory=(RequestHandlerFactory)loader.loadClass(factoryClassName).newInstance();
  }
 catch (  Exception e) {
    Debug.logError(e,"Error while initializing WebDAV servlet: ",module);
    throw new ServletException(e);
  }
  if (Debug.verboseOn()) {
    StringBuilder buff=new StringBuilder("WebDAV servlet initialized: delegator = ");
    buff.append(this.delegator.getDelegatorName());
    buff.append(", dispatcher = ");
    buff.append(this.dispatcher.getName());
    buff.append(", security = ");
    buff.append(this.security.getClass().getName());
    buff.append(", handler factory = ");
    buff.append(this.handlerFactory.getClass().getName());
    Debug.logVerbose(buff.toString(),module);
  }
}
