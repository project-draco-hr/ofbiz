{
  Map<String,Integer> result=new HashMap<String,Integer>();
  result.put("BIT",Types.BIT);
  result.put("BLOB",Types.BLOB);
  result.put("BOOLEAN",Types.BOOLEAN);
  result.put("CHAR",Types.CHAR);
  result.put("CHARACTER",Types.CHAR);
  result.put("CLOB",Types.CLOB);
  result.put("DATE",Types.DATE);
  result.put("DEC",Types.DECIMAL);
  result.put("DECIMAL",Types.DECIMAL);
  result.put("DOUBLE",Types.DOUBLE);
  result.put("DOUBLE PRECISION",Types.DOUBLE);
  result.put("FLOAT",Types.FLOAT);
  result.put("INT",Types.INTEGER);
  result.put("INTEGER",Types.INTEGER);
  result.put("NUMERIC",Types.NUMERIC);
  result.put("REAL",Types.REAL);
  result.put("SMALLINT",Types.SMALLINT);
  result.put("TIME",Types.TIME);
  result.put("TIMESTAMP",Types.TIMESTAMP);
  result.put("VARCHAR",Types.VARCHAR);
  result.put("CHAR VARYING",Types.VARCHAR);
  result.put("CHARACTER VARYING",Types.VARCHAR);
  result.put("LONGVARCHAR",Types.LONGVARCHAR);
  result.put("LONG VARCHAR",Types.LONGVARCHAR);
  result.put("BIGINT",Types.BIGINT);
  result.put("TEXT",Types.LONGVARCHAR);
  result.put("IMAGE",Types.BLOB);
  result.put("BINARY",Types.BINARY);
  result.put("VARBINARY",Types.VARBINARY);
  result.put("LONGVARBINARY",Types.LONGVARBINARY);
  result.put("LONG VARBINARY",Types.LONGVARBINARY);
  result.put("BYTEA",Types.BINARY);
  return result;
}
