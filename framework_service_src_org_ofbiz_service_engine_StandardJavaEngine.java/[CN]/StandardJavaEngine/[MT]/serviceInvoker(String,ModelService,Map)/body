{
  DispatchContext dctx=dispatcher.getLocalContext(localName);
  if (modelService == null)   Debug.logError("ERROR: Null Model Service.",module);
  if (dctx == null)   Debug.logError("ERROR: Null DispatchContext.",module);
  if (context == null)   Debug.logError("ERROR: Null Service Context.",module);
  Class[] paramTypes=new Class[]{DispatchContext.class,Map.class};
  Object[] params=new Object[]{dctx,context};
  Object result=null;
  if (modelService.location == null || modelService.invoke == null)   throw new GenericServiceException("Cannot locate service to invoke (location or invoke name missing)");
  ClassLoader cl=null;
  if (dctx == null)   cl=this.getClass().getClassLoader();
 else   cl=dctx.getClassLoader();
  try {
    Class c=cl.loadClass(this.getLocation(modelService));
    Method m=c.getMethod(modelService.invoke,paramTypes);
    result=m.invoke(null,params);
  }
 catch (  ClassNotFoundException cnfe) {
    throw new GenericServiceException("Cannot find service location",cnfe);
  }
catch (  NoSuchMethodException nsme) {
    throw new GenericServiceException("Service method does not exist",nsme);
  }
catch (  SecurityException se) {
    throw new GenericServiceException("Access denied",se);
  }
catch (  IllegalAccessException iae) {
    throw new GenericServiceException("Method not accessible",iae);
  }
catch (  IllegalArgumentException iarge) {
    throw new GenericServiceException("Invalid parameter match",iarge);
  }
catch (  InvocationTargetException ite) {
    throw new GenericServiceException("Service target threw an unexpected exception",ite.getTargetException());
  }
catch (  NullPointerException npe) {
    throw new GenericServiceException("Specified object is null",npe);
  }
catch (  ExceptionInInitializerError eie) {
    throw new GenericServiceException("Initialization failed",eie);
  }
catch (  Throwable th) {
    throw new GenericServiceException("Error or nknown exception",th);
  }
  return result;
}
