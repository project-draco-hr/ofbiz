{
  ShoppingCart.CartShipInfo csi=cart.getShipInfo(shipGroup);
  int totalItems=csi.shipItemInfo.size();
  List product=new ArrayList(totalItems);
  List amount=new ArrayList(totalItems);
  List price=new ArrayList(totalItems);
  List shipAmt=new ArrayList(totalItems);
  Iterator it=csi.shipItemInfo.keySet().iterator();
  for (int i=0; i < totalItems; i++) {
    ShoppingCartItem cartItem=(ShoppingCartItem)it.next();
    ShoppingCart.CartShipInfo.CartShipItemInfo itemInfo=csi.getShipItemInfo(cartItem);
    product.add(i,cartItem.getProduct());
    amount.add(i,cartItem.getItemSubTotal(itemInfo.quantity));
    price.add(i,cartItem.getBasePrice());
    shipAmt.add(i,BigDecimal.ZERO);
    shoppingCartItemIndexMap.put(Integer.valueOf(i),cartItem);
  }
  List allAdjustments=cart.getAdjustments();
  BigDecimal orderPromoAmt=OrderReadHelper.calcOrderPromoAdjustmentsBd(allAdjustments);
  BigDecimal shipAmount=csi.shipEstimate;
  if (shipAddress == null) {
    shipAddress=cart.getShippingAddress(shipGroup);
  }
  if (shipAddress == null) {
    for (int i=0; i < cart.selectedPayments(); i++) {
      ShoppingCart.CartPaymentInfo cpi=cart.getPaymentInfo(i);
      GenericValue billAddr=cpi.getBillingAddress(delegator);
      if (billAddr != null) {
        shipAddress=billAddr;
        Debug.logInfo("In makeTaxContext no shipping address, but found address with ID [" + shipAddress.get("contactMechId") + "] from payment method.",module);
        break;
      }
    }
  }
  Map serviceContext=UtilMisc.toMap("productStoreId",cart.getProductStoreId());
  serviceContext.put("payToPartyId",cart.getBillFromVendorPartyId());
  serviceContext.put("billToPartyId",cart.getBillToCustomerPartyId());
  serviceContext.put("itemProductList",product);
  serviceContext.put("itemAmountList",amount);
  serviceContext.put("itemPriceList",price);
  serviceContext.put("itemShippingList",shipAmt);
  serviceContext.put("orderShippingAmount",shipAmount);
  serviceContext.put("shippingAddress",shipAddress);
  serviceContext.put("orderPromotionsAmount",orderPromoAmt);
  return serviceContext;
}
