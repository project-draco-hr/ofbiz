{
  if (UtilValidate.isEmpty(cart.getShippingContactMechId()) && cart.getBillingAddress() == null && shipAddress == null) {
    return;
  }
  int shipGroups=this.cart.getShipGroupSize();
  for (int i=0; i < shipGroups; i++) {
    Map<Integer,ShoppingCartItem> shoppingCartItemIndexMap=new HashMap<Integer,ShoppingCartItem>();
    Map<String,Object> serviceContext=this.makeTaxContext(i,shipAddress,shoppingCartItemIndexMap);
    List<List<? extends Object>> taxReturn=this.getTaxAdjustments(dispatcher,"calcTax",serviceContext);
    if (Debug.verboseOn())     Debug.logVerbose("ReturnList: " + taxReturn,module);
    ShoppingCart.CartShipInfo csi=cart.getShipInfo(i);
    List<GenericValue> orderAdj=UtilGenerics.checkList(taxReturn.get(0));
    List<List<GenericValue>> itemAdj=UtilGenerics.checkList(taxReturn.get(1));
    if (itemAdj != null) {
      for (int x=0; x < itemAdj.size(); x++) {
        List<GenericValue> adjs=itemAdj.get(x);
        ShoppingCartItem item=shoppingCartItemIndexMap.get(Integer.valueOf(x));
        if (adjs == null) {
          adjs=new LinkedList<GenericValue>();
        }
        csi.setItemInfo(item,adjs);
        if (Debug.verboseOn())         Debug.logVerbose("Added item adjustments to ship group [" + i + " / "+ x+ "] - "+ adjs,module);
      }
    }
    csi.shipTaxAdj.clear();
    csi.shipTaxAdj.addAll(orderAdj);
  }
}
