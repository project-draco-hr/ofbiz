{
  if (mapAcsr.isEmpty()) {
    Debug.logWarning("No map-name specified in iterate tag, doing nothing: " + rawString(),module);
    return true;
  }
  Object oldKey=keyAcsr.get(methodContext);
  Object oldValue=valueAcsr.get(methodContext);
  if (oldKey != null) {
    Debug.logWarning("In iterate-map the key had a non-null value before entering the loop for the operation: " + this.rawString(),module);
  }
  if (oldValue != null) {
    Debug.logWarning("In iterate-map the value had a non-null value before entering the loop for the operation: " + this.rawString(),module);
  }
  Map<? extends Object,? extends Object> theMap=mapAcsr.get(methodContext);
  if (theMap == null) {
    if (Debug.infoOn())     Debug.logInfo("Map not found with name " + mapAcsr + ", doing nothing: "+ rawString(),module);
    return true;
  }
  if (theMap.size() == 0) {
    if (Debug.verboseOn())     Debug.logVerbose("Map with name " + mapAcsr + " has zero entries, doing nothing: "+ rawString(),module);
    return true;
  }
  for (  Map.Entry<? extends Object,? extends Object> theEntry : theMap.entrySet()) {
    keyAcsr.put(methodContext,theEntry.getKey());
    valueAcsr.put(methodContext,theEntry.getValue());
    try {
      for (      MethodOperation methodOperation : subOps) {
        if (!methodOperation.exec(methodContext)) {
          return false;
        }
      }
    }
 catch (    MiniLangException e) {
      if (e instanceof BreakElementException) {
        break;
      }
      if (e instanceof ContinueElementException) {
        continue;
      }
      throw e;
    }
  }
  return true;
}
