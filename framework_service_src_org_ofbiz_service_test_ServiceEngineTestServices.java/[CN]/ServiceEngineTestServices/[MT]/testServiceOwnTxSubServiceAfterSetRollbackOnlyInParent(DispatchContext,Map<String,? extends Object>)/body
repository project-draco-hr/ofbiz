{
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  try {
    GenericValue testingType=delegator.findOne("TestingType",false,"testingTypeId","SVC_SRBO");
    testingType.set("description","New description for SVC_SRBO; this should be reset on the rollback, if this is in the db then the test failed");
    testingType.store();
    TransactionUtil.setRollbackOnly("Intentionally setting rollback only for testing purposes",null);
    Map<String,Object> resultMap=dispatcher.runSync("testServiceOwnTxSubServiceAfterSetRollbackOnlyInParentSubService",null,60,true);
    if (ServiceUtil.isError(resultMap)) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestOwnTxSubServiceAfterSetRollbackOnlyInParent",locale),null,null,resultMap);
    }
  }
 catch (  Exception e) {
    Debug.logError(e,"Error running sub-service with own tx: " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestOwnTxError",UtilMisc.toMap("errorString",e.toString()),locale));
  }
  return ServiceUtil.returnSuccess();
}
