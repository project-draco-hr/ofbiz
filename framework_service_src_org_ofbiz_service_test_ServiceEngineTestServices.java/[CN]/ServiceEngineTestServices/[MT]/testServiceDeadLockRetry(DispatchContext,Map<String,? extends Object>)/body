{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  try {
    GenericResultWaiter threadAWaiter=dispatcher.runAsyncWait("testServiceDeadLockRetryThreadA",null,false);
    GenericResultWaiter threadBWaiter=dispatcher.runAsyncWait("testServiceDeadLockRetryThreadB",null,false);
    Map<String,Object> threadAResult=threadAWaiter.waitForResult();
    Map<String,Object> threadBResult=threadBWaiter.waitForResult();
    List<Object> errorList=FastList.newInstance();
    if (ServiceUtil.isError(threadAResult)) {
      errorList.add("Error running testServiceDeadLockRetryThreadA: " + ServiceUtil.getErrorMessage(threadAResult));
    }
    if (ServiceUtil.isError(threadBResult)) {
      errorList.add("Error running testServiceDeadLockRetryThreadB: " + ServiceUtil.getErrorMessage(threadBResult));
    }
    if (errorList.size() > 0) {
      return ServiceUtil.returnError("Error(s) running sub-services in testServiceDeadLockRetry",errorList,null,null);
    }
  }
 catch (  Exception e) {
    String errMsg="Error running deadlock test services: " + e.toString();
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
  return ServiceUtil.returnSuccess();
}
