{
  GenericDelegator delegator=dctx.getDelegator();
  try {
    GenericValue testingTypeA=delegator.findByPrimaryKey("TestingType",UtilMisc.toMap("testingTypeId","SVCLRT_A"));
    testingTypeA.set("description","New description for SVCLRT_A from Thread A");
    testingTypeA.store();
    Debug.logInfo("In testServiceDeadLockRetryThreadA just updated SVCLRT_A, beginning wait",module);
    UtilMisc.staticWait(100);
    Debug.logInfo("In testServiceDeadLockRetryThreadA done with wait, updating SVCLRT_B",module);
    GenericValue testingTypeB=delegator.findByPrimaryKey("TestingType",UtilMisc.toMap("testingTypeId","SVCLRT_B"));
    testingTypeB.set("description","New description for SVCLRT_B from Thread A");
    testingTypeB.store();
  }
 catch (  GenericEntityException e) {
    String errMsg="Entity Engine Exception running dead lock test thread A: " + e.toString();
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
catch (  InterruptedException e) {
    String errMsg="Wait Interrupted Exception running dead lock test thread A: " + e.toString();
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
  return ServiceUtil.returnSuccess();
}
