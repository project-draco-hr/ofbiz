{
  String resourceName=createResourceName(resource,locale,true);
  UtilResourceBundle bundle=bundleCache.get(resourceName);
  if (bundle == null) {
synchronized (bundleCache) {
      if (bundle != null) {
        return bundle;
      }
      double startTime=System.currentTimeMillis();
      FastList<Locale> candidateLocales=(FastList<Locale>)getCandidateLocales(locale);
      ResourceBundle parentBundle=null;
      while (candidateLocales.size() > 0) {
        Locale candidateLocale=candidateLocales.removeLast();
        String parentName=createResourceName(resource,candidateLocale,true);
        UtilResourceBundle lookupBundle=bundleCache.get(parentName);
        if (lookupBundle == null) {
          Properties newProps=getProperties(resource,candidateLocale);
          if (UtilValidate.isNotEmpty(newProps)) {
            bundle=new UtilResourceBundle(newProps,candidateLocale,parentBundle);
            bundleCache.put(parentName,bundle);
            parentBundle=bundle;
          }
        }
 else {
          parentBundle=bundle;
          bundle=lookupBundle;
        }
      }
      if (bundle == null) {
        throw new MissingResourceException("Resource " + resource + ", locale "+ locale+ " not found",null,null);
      }
 else       if (!bundle.getLocale().equals(locale)) {
        bundle=new UtilResourceBundle(bundle.properties,locale,parentBundle);
      }
      double totalTime=System.currentTimeMillis() - startTime;
      Debug.logInfo("ResourceBundle " + resource + " ("+ locale+ ") created in "+ totalTime+ " mS",module);
      bundleCache.put(resourceName,bundle);
    }
  }
  return bundle;
}
