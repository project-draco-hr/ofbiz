{
  StringBuilder sb=new StringBuilder();
  Iterator<ModelForm.UpdateArea> updateAreaIter=updateAreas.iterator();
  while (updateAreaIter.hasNext()) {
    ModelForm.UpdateArea updateArea=updateAreaIter.next();
    sb.append(updateArea.getAreaId()).append(",");
    String ajaxTarget=updateArea.getAreaTarget(context);
    String urlPath=UtilHttp.removeQueryStringFromTarget(ajaxTarget);
    sb.append(this.rh.makeLink(this.request,this.response,urlPath)).append(",");
    String queryString=UtilHttp.getQueryStringFromTarget(ajaxTarget).replace("?","");
    Map<String,Object> parameters=UtilHttp.getQueryStringOnlyParameterMap(queryString);
    Map<String,Object> ctx=UtilGenerics.checkMap(context);
    Map<String,Object> updateParams=UtilGenerics.checkMap(updateArea.getParameterMap(ctx));
    parameters.putAll(updateParams);
    UtilHttp.canonicalizeParameterMap(parameters);
    parameters.putAll(extraParams);
    Iterator<Map.Entry<String,Object>> paramIter=parameters.entrySet().iterator();
    while (paramIter.hasNext()) {
      Map.Entry<String,Object> entry=paramIter.next();
      sb.append(entry.getKey()).append("=").append(entry.getValue());
      if (paramIter.hasNext()) {
        sb.append("&");
      }
    }
    if (anchor != null) {
      sb.append("#").append(anchor);
    }
    if (updateAreaIter.hasNext()) {
      sb.append(",");
    }
  }
  Locale locale=UtilMisc.ensureLocale(context.get("locale"));
  return FlexibleStringExpander.expandString(sb.toString(),context,locale);
}
