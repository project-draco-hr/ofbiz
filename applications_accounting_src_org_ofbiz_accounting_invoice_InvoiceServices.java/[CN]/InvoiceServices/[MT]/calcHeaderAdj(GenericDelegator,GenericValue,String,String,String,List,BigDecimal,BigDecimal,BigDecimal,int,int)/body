{
  BigDecimal adjAmount=ZERO;
  if (adj.get("amount") != null) {
    BigDecimal baseAdjAmount=adj.getBigDecimal("amount");
    BigDecimal amount=ZERO;
    if (divisor.signum() != 0) {
      amount=baseAdjAmount.multiply(multiplier).divide(divisor,decimals,rounding);
    }
    if (amount.signum() != 0) {
      GenericValue invoiceItem=delegator.makeValue("InvoiceItem",UtilMisc.toMap("invoiceId",invoiceId,"invoiceItemSeqId",invoiceItemSeqId));
      invoiceItem.set("invoiceItemTypeId",getInvoiceItemType(delegator,adj.getString("orderAdjustmentTypeId"),null,invoiceTypeId,"INVOICE_ADJ"));
      invoiceItem.set("quantity",new Double(1));
      invoiceItem.set("amount",new Double(amount.doubleValue()));
      invoiceItem.set("description",adj.get("description"));
      invoiceItem.set("taxAuthPartyId",adj.get("taxAuthPartyId"));
      invoiceItem.set("overrideGlAccountId",adj.get("overrideGlAccountId"));
      invoiceItem.set("taxAuthGeoId",adj.get("taxAuthGeoId"));
      invoiceItem.set("taxAuthorityRateSeqId",adj.get("taxAuthorityRateSeqId"));
      toStore.add(invoiceItem);
    }
    amount.setScale(decimals,rounding);
    adjAmount=amount;
  }
  if (Debug.verboseOn()) {
    Debug.logVerbose("adjAmount: " + adjAmount + ", divisor: "+ divisor+ ", multiplier: "+ multiplier+ ", invoiceTypeId: "+ invoiceTypeId+ ", invoiceId: "+ invoiceId+ ", itemSeqId: "+ invoiceItemSeqId+ ", decimals: "+ decimals+ ", rounding: "+ rounding+ ", adj: "+ adj,module);
  }
  return adjAmount;
}
