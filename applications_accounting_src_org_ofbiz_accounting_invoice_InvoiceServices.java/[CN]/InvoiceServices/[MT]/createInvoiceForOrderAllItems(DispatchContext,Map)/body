{
  GenericDelegator delegator=dctx.getDelegator();
  try {
    List orderItems=delegator.findByAnd("OrderItem",UtilMisc.toMap("orderId",(String)context.get("orderId")));
    if (orderItems != null && orderItems.size() > 0) {
      context.put("billItems",orderItems);
    }
    GenericValue userLogin=(GenericValue)delegator.findByPrimaryKey("UserLogin",UtilMisc.toMap("userLoginId","system"));
    if (userLogin != null) {
      context.put("userLogin",userLogin);
    }
  }
 catch (  GenericEntityException e) {
    String errMsg=UtilProperties.getMessage(resource,"AccountingEntityDataProblemCreatingInvoiceFromOrderItems",UtilMisc.toMap("reason",e.toString()),(Locale)context.get("locale"));
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg);
  }
  return createInvoiceForOrder(dctx,context);
}
