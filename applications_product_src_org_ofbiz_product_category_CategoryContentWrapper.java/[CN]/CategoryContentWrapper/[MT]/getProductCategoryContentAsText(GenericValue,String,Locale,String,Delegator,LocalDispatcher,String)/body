{
  String candidateFieldName=ModelUtil.dbNameToVarName(prodCatContentTypeId);
  UtilCodec.SimpleEncoder encoder=UtilCodec.getEncoder(encoderType);
  String cacheKey=prodCatContentTypeId + SEPARATOR + locale+ SEPARATOR+ mimeTypeId+ SEPARATOR+ productCategory.get("productCategoryId");
  try {
    String cachedValue=categoryContentCache.get(cacheKey);
    if (cachedValue != null) {
      return cachedValue;
    }
    Writer outWriter=new StringWriter();
    getProductCategoryContentAsText(null,productCategory,prodCatContentTypeId,locale,mimeTypeId,delegator,dispatcher,outWriter);
    String outString=outWriter.toString();
    if (outString.length() > 0) {
      outString=categoryContentCache.putIfAbsentAndGet(cacheKey,encoder.encode(outString));
      return encoder.encode(outString);
    }
 else {
      return null;
    }
  }
 catch (  GeneralException e) {
    Debug.logError(e,"Error rendering CategoryContent, inserting empty String",module);
    return productCategory.getString(candidateFieldName);
  }
catch (  IOException e) {
    Debug.logError(e,"Error rendering CategoryContent, inserting empty String",module);
    return productCategory.getString(candidateFieldName);
  }
}
