{
  if (productCategoryId == null && productCategory != null) {
    productCategoryId=productCategory.getString("productCategoryId");
  }
  if (delegator == null && productCategory != null) {
    delegator=productCategory.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId="text/html";
  }
  if (delegator == null) {
    throw new GeneralRuntimeException("Unable to find a delegator to use!");
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(prodCatContentTypeId);
  ModelEntity categoryModel=delegator.getModelEntity("ProductCategory");
  if (categoryModel.isField(candidateFieldName)) {
    if (productCategory == null) {
      productCategory=delegator.findByPrimaryKeyCache("ProductCategory",UtilMisc.toMap("productCategoryId",productCategoryId));
    }
    if (productCategory != null) {
      String candidateValue=productCategory.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
  List categoryContentList=delegator.findByAndCache("ProductCategoryContent",UtilMisc.toMap("productCategoryId",productCategoryId,"prodCatContentTypeId",prodCatContentTypeId),UtilMisc.toList("-fromDate"));
  categoryContentList=EntityUtil.filterByDate(categoryContentList);
  GenericValue categoryContent=EntityUtil.getFirst(categoryContentList);
  if (categoryContent != null) {
    Map inContext=FastMap.newInstance();
    inContext.put("productCategory",productCategory);
    inContext.put("categoryContent",categoryContent);
    ContentWorker.renderContentAsText(dispatcher,delegator,categoryContent.getString("contentId"),outWriter,inContext,locale,mimeTypeId,false);
  }
}
