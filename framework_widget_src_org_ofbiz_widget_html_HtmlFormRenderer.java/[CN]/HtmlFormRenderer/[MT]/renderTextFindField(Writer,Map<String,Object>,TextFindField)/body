{
  ModelFormField modelFormField=textFindField.getModelFormField();
  String defaultOption=textFindField.getDefaultOption();
  Locale locale=(Locale)context.get("locale");
  if (!textFindField.getHideOptions()) {
    String opEquals=UtilProperties.getMessage("conditional","equals",locale);
    String opBeginsWith=UtilProperties.getMessage("conditional","begins_with",locale);
    String opContains=UtilProperties.getMessage("conditional","contains",locale);
    String opIsEmpty=UtilProperties.getMessage("conditional","is_empty",locale);
    String opNotEqual=UtilProperties.getMessage("conditional","not_equal",locale);
    writer.write(" <select name=\"");
    writer.write(modelFormField.getParameterName(context));
    writer.write("_op\" class=\"selectBox\">");
    writer.write("<option value=\"equals\"" + ("equals".equals(defaultOption) ? " selected" : "") + ">"+ opEquals+ "</option>");
    writer.write("<option value=\"like\"" + ("like".equals(defaultOption) ? " selected" : "") + ">"+ opBeginsWith+ "</option>");
    writer.write("<option value=\"contains\"" + ("contains".equals(defaultOption) ? " selected" : "") + ">"+ opContains+ "</option>");
    writer.write("<option value=\"empty\"" + ("empty".equals(defaultOption) ? " selected" : "") + ">"+ opIsEmpty+ "</option>");
    writer.write("<option value=\"notEqual\"" + ("notEqual".equals(defaultOption) ? " selected" : "") + ">"+ opNotEqual+ "</option>");
    writer.write("</select>");
  }
 else {
    writer.write(" <input type=\"hidden\" name=\"");
    writer.write(modelFormField.getParameterName(context));
    writer.write("_op\" value=\"" + defaultOption + "\"/>");
  }
  writer.write("<input type=\"text\"");
  appendClassNames(writer,context,modelFormField);
  writer.write(" name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write('"');
  String value=modelFormField.getEntry(context,textFindField.getDefaultValue(context));
  if (UtilValidate.isNotEmpty(value)) {
    writer.write(" value=\"");
    writer.write(value);
    writer.write('"');
  }
  writer.write(" size=\"");
  writer.write(Integer.toString(textFindField.getSize()));
  writer.write('"');
  Integer maxlength=textFindField.getMaxlength();
  if (maxlength != null) {
    writer.write(" maxlength=\"");
    writer.write(maxlength.toString());
    writer.write('"');
  }
  if (!textFindField.getClientAutocompleteField()) {
    writer.write(" autocomplete=\"off\"");
  }
  writer.write("/>");
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write(" <span class=\"");
    writer.write(modelFormField.getTitleStyle());
    writer.write("\">");
  }
  String ignoreCase=UtilProperties.getMessage("conditional","ignore_case",locale);
  boolean ignCase=textFindField.getIgnoreCase();
  if (!textFindField.getHideIgnoreCase()) {
    writer.write(" <input type=\"checkbox\" name=\"");
    writer.write(modelFormField.getParameterName(context));
    writer.write("_ic\" value=\"Y\"" + (ignCase ? " checked=\"checked\"" : "") + "/>");
    writer.write(ignoreCase);
  }
 else {
    writer.write("<input type=\"hidden\" name=\"");
    writer.write(modelFormField.getParameterName(context));
    writer.write("_ic\" value=\"" + (ignCase ? "Y" : "") + "\"/>");
  }
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write("</span>");
  }
  this.appendTooltip(writer,context,modelFormField);
}
