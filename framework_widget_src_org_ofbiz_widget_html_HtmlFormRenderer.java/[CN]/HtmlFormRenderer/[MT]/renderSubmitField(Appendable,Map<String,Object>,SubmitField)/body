{
  ModelFormField modelFormField=submitField.getModelFormField();
  ModelForm modelForm=modelFormField.getModelForm();
  String event=null;
  String action=null;
  String confirmation=encode(submitField.getConfirmation(context),modelFormField,context);
  if ("text-link".equals(submitField.getButtonType())) {
    writer.append("<a");
    appendClassNames(writer,context,modelFormField);
    if (UtilValidate.isNotEmpty(confirmation)) {
      writer.append(" onclick=\"return confirm('");
      writer.append(confirmation);
      writer.append("'); \" ");
    }
    writer.append(" href=\"javascript:document.");
    writer.append(FormRenderer.getCurrentFormName(modelForm,context));
    writer.append(".submit()\">");
    writer.append(encode(modelFormField.getTitle(context),modelFormField,context));
    writer.append("</a>");
  }
 else   if ("image".equals(submitField.getButtonType())) {
    writer.append("<input type=\"image\"");
    appendClassNames(writer,context,modelFormField);
    writer.append(" name=\"");
    writer.append(modelFormField.getParameterName(context));
    writer.append('"');
    String title=modelFormField.getTitle(context);
    if (UtilValidate.isNotEmpty(title)) {
      writer.append(" alt=\"");
      writer.append(encode(title,modelFormField,context));
      writer.append('"');
    }
    writer.append(" src=\"");
    this.appendContentUrl(writer,submitField.getImageLocation(context));
    writer.append('"');
    event=modelFormField.getEvent();
    action=modelFormField.getAction(context);
    if (UtilValidate.isNotEmpty(event) && UtilValidate.isNotEmpty(action)) {
      writer.append(" ");
      writer.append(event);
      writer.append("=\"");
      writer.append(action);
      writer.append('"');
    }
    if (UtilValidate.isNotEmpty(confirmation)) {
      writer.append("onclick=\" return confirm('");
      writer.append(confirmation);
      writer.append("); \" ");
    }
    writer.append("/>");
  }
 else {
    String formId=modelForm.getContainerId();
    List<ModelForm.UpdateArea> updateAreas=modelForm.getOnSubmitUpdateAreas();
    String backgroundSubmitRefreshTarget=submitField.getBackgroundSubmitRefreshTarget(context);
    if (UtilValidate.isNotEmpty(backgroundSubmitRefreshTarget)) {
      if (updateAreas == null) {
        updateAreas=new LinkedList<ModelForm.UpdateArea>();
      }
      updateAreas.add(new ModelForm.UpdateArea("submit",formId,backgroundSubmitRefreshTarget));
    }
    boolean ajaxEnabled=(UtilValidate.isNotEmpty(updateAreas) || UtilValidate.isNotEmpty(backgroundSubmitRefreshTarget)) && this.javaScriptEnabled;
    if (ajaxEnabled) {
      writer.append("<input type=\"button\"");
    }
 else {
      writer.append("<input type=\"submit\"");
    }
    appendClassNames(writer,context,modelFormField);
    writer.append(" name=\"");
    writer.append(modelFormField.getParameterName(context));
    writer.append('"');
    String title=modelFormField.getTitle(context);
    if (UtilValidate.isNotEmpty(title)) {
      writer.append(" value=\"");
      writer.append(encode(title,modelFormField,context));
      writer.append('"');
    }
    event=modelFormField.getEvent();
    action=modelFormField.getAction(context);
    if (UtilValidate.isNotEmpty(event) && UtilValidate.isNotEmpty(action)) {
      writer.append(" ");
      writer.append(event);
      writer.append("=\"");
      writer.append(action);
      writer.append('"');
    }
 else {
    }
    if (ajaxEnabled) {
      writer.append(" onclick=\"");
      if (UtilValidate.isNotEmpty(confirmation)) {
        writer.append("if  (confirm('");
        writer.append(confirmation);
        writer.append(");) ");
      }
      writer.append("ajaxSubmitFormUpdateAreas('");
      writer.append(formId);
      writer.append("', '").append(createAjaxParamsFromUpdateAreas(updateAreas,null,context));
      writer.append("')\"");
    }
    writer.append("/>");
  }
  this.appendTooltip(writer,context,modelFormField);
}
