{
  ModelFormField modelFormField=dateFindField.getModelFormField();
  Locale locale=(Locale)context.get("locale");
  String opEquals=UtilProperties.getMessage("conditional","equals",locale);
  String opGreaterThan=UtilProperties.getMessage("conditional","greater_than",locale);
  String opSameDay=UtilProperties.getMessage("conditional","same_day",locale);
  String opGreaterThanFromDayStart=UtilProperties.getMessage("conditional","greater_than_from_day_start",locale);
  String opLessThan=UtilProperties.getMessage("conditional","less_than",locale);
  String opUpToDay=UtilProperties.getMessage("conditional","up_to_day",locale);
  String opUpThruDay=UtilProperties.getMessage("conditional","up_thru_day",locale);
  String opIsEmpty=UtilProperties.getMessage("conditional","is_empty",locale);
  Map uiLabelMap=(Map)context.get("uiLabelMap");
  if (uiLabelMap == null) {
    Debug.logWarning("Could not find uiLabelMap in context",module);
  }
  String localizedInputTitle="", localizedIconTitle="";
  writer.write("<input type=\"text\"");
  appendClassNames(writer,context,modelFormField);
  writer.write(" name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write("_fld0_value\"");
  int size=25;
  int maxlength=30;
  if ("date".equals(dateFindField.getType())) {
    size=maxlength=10;
    if (uiLabelMap != null) {
      localizedInputTitle=(String)uiLabelMap.get("CommonFormatDate");
    }
  }
 else   if ("time".equals(dateFindField.getType())) {
    size=maxlength=8;
    if (uiLabelMap != null) {
      localizedInputTitle=(String)uiLabelMap.get("CommonFormatTime");
    }
  }
 else {
    if (uiLabelMap != null) {
      localizedInputTitle=(String)uiLabelMap.get("CommonFormatDateTime");
    }
  }
  writer.write(" title=\"");
  writer.write(localizedInputTitle);
  writer.write('"');
  String value=modelFormField.getEntry(context,dateFindField.getDefaultValue(context));
  if (UtilValidate.isNotEmpty(value)) {
    if (value.length() > maxlength) {
      value=value.substring(0,maxlength);
    }
    writer.write(" value=\"");
    writer.write(value);
    writer.write('"');
  }
  writer.write(" size=\"");
  writer.write(Integer.toString(size));
  writer.write('"');
  writer.write(" maxlength=\"");
  writer.write(Integer.toString(maxlength));
  writer.write('"');
  writer.write("/>");
  if (uiLabelMap != null) {
    localizedIconTitle=(String)uiLabelMap.get("CommonViewCalendar");
  }
  if (!"time".equals(dateFindField.getType())) {
    if ("date".equals(dateFindField.getType())) {
      writer.write("<a href=\"javascript:call_cal_notime(document.");
    }
 else {
      writer.write("<a href=\"javascript:call_cal(document.");
    }
    writer.write(modelFormField.getModelForm().getCurrentFormName(context));
    writer.write('.');
    writer.write(modelFormField.getParameterName(context));
    writer.write("_fld0_value,'");
    writer.write(UtilHttp.encodeBlanks(modelFormField.getEntry(context,dateFindField.getDefaultDateTimeString(context))));
    writer.write("');\">");
    writer.write("<img src=\"");
    this.appendContentUrl(writer,"/images/cal.gif");
    writer.write("\" width=\"16\" height=\"16\" border=\"0\" alt=\"");
    writer.write(localizedIconTitle);
    writer.write("\" title=\"");
    writer.write(localizedIconTitle);
    writer.write("\"/></a>");
  }
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write(" <span class=\"");
    writer.write(modelFormField.getTitleStyle());
    writer.write("\">");
  }
  writer.write(" <select name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write("_fld0_op\" class=\"selectBox\">");
  writer.write("<option value=\"equals\" selected>" + opEquals + "</option>");
  writer.write("<option value=\"sameDay\">" + opSameDay + "</option>");
  writer.write("<option value=\"greaterThanFromDayStart\">" + opGreaterThanFromDayStart + "</option>");
  writer.write("<option value=\"greaterThan\">" + opGreaterThan + "</option>");
  writer.write("</select>");
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write(" </span>");
  }
  writer.write(" <br/> ");
  writer.write("<input type=\"text\"");
  appendClassNames(writer,context,modelFormField);
  writer.write(" name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write("_fld1_value\"");
  writer.write(" title=\"");
  writer.write(localizedInputTitle);
  writer.write('"');
  value=modelFormField.getEntry(context);
  if (UtilValidate.isNotEmpty(value)) {
    if (value.length() > maxlength) {
      value=value.substring(0,maxlength);
    }
    writer.write(" value=\"");
    writer.write(value);
    writer.write('"');
  }
  writer.write(" size=\"");
  writer.write(Integer.toString(size));
  writer.write('"');
  writer.write(" maxlength=\"");
  writer.write(Integer.toString(maxlength));
  writer.write('"');
  writer.write("/>");
  if (!"time".equals(dateFindField.getType())) {
    if ("date".equals(dateFindField.getType())) {
      writer.write("<a href=\"javascript:call_cal_notime(document.");
    }
 else {
      writer.write("<a href=\"javascript:call_cal(document.");
    }
    writer.write(modelFormField.getModelForm().getCurrentFormName(context));
    writer.write('.');
    writer.write(modelFormField.getParameterName(context));
    writer.write("_fld1_value,'");
    writer.write(UtilHttp.encodeBlanks(modelFormField.getEntry(context,dateFindField.getDefaultDateTimeString(context))));
    writer.write("');\">");
    writer.write("<img src=\"");
    this.appendContentUrl(writer,"/images/cal.gif");
    writer.write("\" width=\"16\" height=\"16\" border=\"0\" alt=\"");
    writer.write(localizedIconTitle);
    writer.write("\" title=\"");
    writer.write(localizedIconTitle);
    writer.write("\"/></a>");
  }
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write(" <span class=\"");
    writer.write(modelFormField.getTitleStyle());
    writer.write("\">");
  }
  writer.write(" <select name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write("_fld1_op\" class=\"selectBox\">");
  writer.write("<option value=\"lessThan\">" + opLessThan + "</option>");
  writer.write("<option value=\"upToDay\">" + opUpToDay + "</option>");
  writer.write("<option value=\"upThruDay\">" + opUpThruDay + "</option>");
  writer.write("<option value=\"empty\">" + opIsEmpty + "</option>");
  writer.write("</select>");
  if (UtilValidate.isNotEmpty(modelFormField.getTitleStyle())) {
    writer.write("</span>");
  }
  this.appendTooltip(writer,context,modelFormField);
}
