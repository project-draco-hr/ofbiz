{
  ModelFormField modelFormField=dropDownField.getModelFormField();
  ModelForm modelForm=modelFormField.getModelForm();
  String event=modelFormField.getEvent();
  String action=modelFormField.getAction(context);
  writer.write("<select");
  appendClassNames(writer,context,modelFormField);
  writer.write(" name=\"");
  writer.write(modelFormField.getParameterName(context));
  writer.write('"');
  String idName=modelFormField.getIdName();
  if (UtilValidate.isNotEmpty(idName)) {
    writer.write(" id=\"");
    writer.write(idName);
    writer.write('"');
  }
  if (dropDownField.isAllowMultiple()) {
    writer.write(" multiple=\"multiple\"");
  }
  int otherFieldSize=dropDownField.getOtherFieldSize();
  String otherFieldName=dropDownField.getParameterNameOther(context);
  if (otherFieldSize > 0) {
    writer.write(" onchange=\"process_choice(this,document.");
    writer.write(modelForm.getName());
    writer.write(".");
    writer.write(otherFieldName);
    writer.write(")\" ");
  }
  if (UtilValidate.isNotEmpty(event) && UtilValidate.isNotEmpty(action)) {
    writer.write(" ");
    writer.write(event);
    writer.write("=\"");
    writer.write(action);
    writer.write('"');
  }
  writer.write(" size=\"" + dropDownField.getSize() + "\">");
  String currentValue=modelFormField.getEntry(context);
  List allOptionValues=dropDownField.getAllOptionValues(context,modelForm.getDelegator(context));
  if (UtilValidate.isNotEmpty(currentValue) && "first-in-list".equals(dropDownField.getCurrent())) {
    writer.write("<option");
    writer.write(" selected=\"selected\"");
    writer.write(" value=\"");
    writer.write(currentValue);
    writer.write("\">");
    String explicitDescription=dropDownField.getCurrentDescription(context);
    if (UtilValidate.isNotEmpty(explicitDescription)) {
      writer.write(explicitDescription);
    }
 else {
      writer.write(ModelFormField.FieldInfoWithOptions.getDescriptionForOptionKey(currentValue,allOptionValues));
    }
    writer.write("</option>");
    writer.write("<option value=\"");
    writer.write(currentValue);
    writer.write("\">---</option>");
  }
  if (dropDownField.isAllowEmpty()) {
    writer.write("<option value=\"\">&nbsp;</option>");
  }
  Iterator optionValueIter=allOptionValues.iterator();
  while (optionValueIter.hasNext()) {
    ModelFormField.OptionValue optionValue=(ModelFormField.OptionValue)optionValueIter.next();
    String noCurrentSelectedKey=dropDownField.getNoCurrentSelectedKey(context);
    writer.write("<option");
    if (UtilValidate.isNotEmpty(currentValue) && currentValue.equals(optionValue.getKey()) && "selected".equals(dropDownField.getCurrent())) {
      writer.write(" selected=\"selected\"");
    }
 else     if (UtilValidate.isEmpty(currentValue) && noCurrentSelectedKey != null && noCurrentSelectedKey.equals(optionValue.getKey())) {
      writer.write(" selected=\"selected\"");
    }
    writer.write(" value=\"");
    writer.write(optionValue.getKey());
    writer.write("\">");
    writer.write(optionValue.getDescription());
    writer.write("</option>");
  }
  writer.write("</select>");
  if (otherFieldSize > 0) {
    String fieldName=modelFormField.getParameterName(context);
    Map dataMap=modelFormField.getMap(context);
    if (dataMap == null) {
      dataMap=context;
    }
    Object otherValueObj=dataMap.get(otherFieldName);
    String otherValue=(otherValueObj == null) ? "" : otherValueObj.toString();
    writer.write("<noscript>");
    writer.write("<input type='text' name='");
    writer.write(otherFieldName);
    writer.write("'/> ");
    writer.write("</noscript>");
    writer.write("\n<script type='text/javascript' language='JavaScript'><!--");
    writer.write("\ndisa = ' disabled';");
    writer.write("\nif(other_choice(document.");
    writer.write(modelForm.getName());
    writer.write(".");
    writer.write(fieldName);
    writer.write(")) disa = '';");
    writer.write("\ndocument.write(\"<input type=");
    writer.write("'text' name='");
    writer.write(otherFieldName);
    writer.write("' value='");
    writer.write(otherValue);
    writer.write("' size='");
    writer.write(Integer.toString(otherFieldSize));
    writer.write("' ");
    writer.write("\" +disa+ \" onfocus='check_choice(document.");
    writer.write(modelForm.getName());
    writer.write(".");
    writer.write(fieldName);
    writer.write(")'/>\");");
    writer.write("\nif(disa && document.styleSheets)");
    writer.write(" document.");
    writer.write(modelForm.getName());
    writer.write(".");
    writer.write(otherFieldName);
    writer.write(".style.visibility  = 'hidden';");
    writer.write("\n//--></script>");
  }
  this.makeHyperlinkString(writer,dropDownField.getSubHyperlink(),context);
  this.appendTooltip(writer,context,modelFormField);
}
