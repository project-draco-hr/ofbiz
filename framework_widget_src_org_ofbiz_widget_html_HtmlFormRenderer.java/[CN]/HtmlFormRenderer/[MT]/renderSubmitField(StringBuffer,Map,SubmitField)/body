{
  ModelFormField modelFormField=submitField.getModelFormField();
  ModelForm modelForm=modelFormField.getModelForm();
  String event=null;
  String action=null;
  if ("text-link".equals(submitField.getButtonType())) {
    buffer.append("<a");
    appendClassNames(buffer,context,modelFormField);
    buffer.append(" href=\"javascript:document.");
    buffer.append(modelForm.getCurrentFormName(context));
    buffer.append(".submit()\">");
    buffer.append(modelFormField.getTitle(context));
    buffer.append("</a>");
  }
 else   if ("image".equals(submitField.getButtonType())) {
    buffer.append("<input type=\"image\"");
    appendClassNames(buffer,context,modelFormField);
    buffer.append(" name=\"");
    buffer.append(modelFormField.getParameterName(context));
    buffer.append('"');
    String title=modelFormField.getTitle(context);
    if (UtilValidate.isNotEmpty(title)) {
      buffer.append(" alt=\"");
      buffer.append(title);
      buffer.append('"');
    }
    buffer.append(" src=\"");
    this.appendContentUrl(buffer,submitField.getImageLocation());
    buffer.append('"');
    event=modelFormField.getEvent();
    action=modelFormField.getAction(context);
    if (UtilValidate.isNotEmpty(event) && UtilValidate.isNotEmpty(action)) {
      buffer.append(" ");
      buffer.append(event);
      buffer.append("=\"");
      buffer.append(action);
      buffer.append('"');
    }
    buffer.append("/>");
  }
 else {
    String formId=modelForm.getContainerId();
    List<ModelForm.UpdateArea> updateAreas=modelForm.getOnSubmitUpdateAreas();
    String backgroundSubmitRefreshTarget=submitField.getBackgroundSubmitRefreshTarget(context);
    if (UtilValidate.isNotEmpty(backgroundSubmitRefreshTarget)) {
      if (updateAreas == null) {
        updateAreas=FastList.newInstance();
      }
      updateAreas.add(new ModelForm.UpdateArea("submit",formId,backgroundSubmitRefreshTarget));
    }
    boolean ajaxEnabled=(updateAreas != null || UtilValidate.isNotEmpty(backgroundSubmitRefreshTarget)) && UtilHttp.isJavaScriptEnabled(request);
    if (ajaxEnabled) {
      buffer.append("<input type=\"button\"");
    }
 else {
      buffer.append("<input type=\"submit\"");
    }
    appendClassNames(buffer,context,modelFormField);
    buffer.append(" name=\"");
    buffer.append(modelFormField.getParameterName(context));
    buffer.append('"');
    String title=modelFormField.getTitle(context);
    if (UtilValidate.isNotEmpty(title)) {
      buffer.append(" value=\"");
      buffer.append(title);
      buffer.append('"');
    }
    event=modelFormField.getEvent();
    action=modelFormField.getAction(context);
    if (UtilValidate.isNotEmpty(event) && UtilValidate.isNotEmpty(action)) {
      buffer.append(" ");
      buffer.append(event);
      buffer.append("=\"");
      buffer.append(action);
      buffer.append('"');
    }
 else {
    }
    if (ajaxEnabled) {
      buffer.append(" onclick=\"");
      if (updateAreas.size() == 1) {
        ModelForm.UpdateArea updateArea=updateAreas.get(0);
        buffer.append("submitFormInBackground($('");
        buffer.append(formId);
        buffer.append("'), '");
        buffer.append(updateArea.getAreaId());
        buffer.append("', '");
        this.appendOfbizUrl(buffer,updateArea.getAreaTarget(context));
      }
 else {
        buffer.append("ajaxSubmitFormUpdateAreas($('");
        buffer.append(formId);
        buffer.append("'), '");
        boolean firstLoop=true;
        for (        ModelForm.UpdateArea updateArea : updateAreas) {
          if (firstLoop) {
            firstLoop=false;
          }
 else {
            buffer.append(",");
          }
          String targetString=updateArea.getAreaTarget(context);
          String target=UtilHttp.removeQueryStringFromTarget(targetString);
          String targetParams=UtilHttp.getQueryStringFromTarget(targetString);
          buffer.append(updateArea.getAreaId() + "," + target+ ","+ targetParams);
        }
      }
      buffer.append("')\"");
    }
    buffer.append("/>");
  }
  this.appendTooltip(buffer,context,modelFormField);
}
