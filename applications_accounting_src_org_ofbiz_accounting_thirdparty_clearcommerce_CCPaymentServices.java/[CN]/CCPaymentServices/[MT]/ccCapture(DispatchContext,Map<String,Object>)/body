{
  Locale locale=(Locale)context.get("locale");
  Delegator delegator=dctx.getDelegator();
  GenericValue orderPaymentPreference=(GenericValue)context.get("orderPaymentPreference");
  GenericValue authTransaction=PaymentGatewayServices.getAuthTransaction(orderPaymentPreference);
  if (authTransaction == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"AccountingPaymentTransactionAuthorizationNotFoundCannotCapture",locale));
  }
  Document captureRequestDoc=buildSecondaryTxRequest(context,authTransaction.getString("referenceNum"),"PostAuth",(BigDecimal)context.get("captureAmount"),delegator);
  Document captureResponseDoc=null;
  try {
    captureResponseDoc=sendRequest(captureRequestDoc,(String)context.get("paymentConfig"),delegator);
  }
 catch (  ClearCommerceException cce) {
    return ServiceUtil.returnError(cce.getMessage());
  }
  if (getMessageListMaxSev(captureResponseDoc) > 4) {
    Map<String,Object> result=ServiceUtil.returnSuccess();
    result.put("captureResult",new Boolean(false));
    result.put("captureAmount",BigDecimal.ZERO);
    result.put("captureRefNum",getReferenceNum(captureResponseDoc));
    List<String> messages=getMessageList(captureResponseDoc);
    if (UtilValidate.isNotEmpty(messages)) {
      result.put("internalRespMsgs",messages);
    }
    return result;
  }
  return processCaptureResponse(captureResponseDoc);
}
