{
  GenericValue orderPaymentPreference=(GenericValue)context.get("orderPaymentPreference");
  GenericValue authTransaction=PaymentGatewayServices.getAuthTransaction(orderPaymentPreference);
  if (authTransaction == null) {
    return ServiceUtil.returnError("No authorization transaction found; cannot re-auth.");
  }
  Document reauthRequestDoc=buildSecondaryTxRequest(context,authTransaction.getString("referenceNum"),"RePreAuth",(BigDecimal)context.get("reauthAmount"));
  Document reauthResponseDoc=null;
  try {
    reauthResponseDoc=sendRequest(reauthRequestDoc,(String)context.get("paymentConfig"));
  }
 catch (  ClearCommerceException cce) {
    return ServiceUtil.returnError(cce.getMessage());
  }
  if (getMessageListMaxSev(reauthResponseDoc) > 4) {
    Map<String,Object> result=ServiceUtil.returnSuccess();
    result.put("reauthResult",new Boolean(false));
    result.put("reauthAmount",new BigDecimal("0.00"));
    result.put("reauthRefNum",getReferenceNum(reauthResponseDoc));
    List<String> messages=getMessageList(reauthResponseDoc);
    if (UtilValidate.isNotEmpty(messages)) {
      result.put("internalRespMsgs",messages);
    }
    return result;
  }
  return processReAuthResponse(reauthResponseDoc);
}
