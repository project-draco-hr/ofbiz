{
  Document document=element.getOwnerDocument();
  Element addressElement=UtilXml.addChildElement(element,"Address",document);
  UtilXml.addChildElementValue(addressElement,"Name",address.getString("toName"),document);
  UtilXml.addChildElementValue(addressElement,"Street1",address.getString("address1"),document);
  UtilXml.addChildElementValue(addressElement,"Street2",address.getString("address2"),document);
  UtilXml.addChildElementValue(addressElement,"City",address.getString("city"),document);
  UtilXml.addChildElementValue(addressElement,"StateProv",address.getString("stateProvinceGeoId"),document);
  UtilXml.addChildElementValue(addressElement,"PostalCode",address.getString("postalCode"),document);
  String countryGeoId=address.getString("countryGeoId");
  if (UtilValidate.isNotEmpty(countryGeoId)) {
    try {
      GenericValue countryGeo=address.getRelatedOneCache("CountryGeo");
      UtilXml.addChildElementValue(addressElement,"Country",countryGeo.getString("geoSecCode"),document);
    }
 catch (    GenericEntityException gee) {
      Debug.logInfo(gee,"Error finding related Geo for countryGeoId: " + countryGeoId,module);
    }
  }
}
