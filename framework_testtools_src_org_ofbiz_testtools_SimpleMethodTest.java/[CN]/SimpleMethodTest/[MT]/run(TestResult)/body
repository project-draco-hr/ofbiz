{
  result.startTest(this);
  try {
    Map serviceResult=SimpleMethod.runSimpleService(methodLocation,methodName,dispatcher.getDispatchContext(),UtilMisc.toMap("test",this,"testResult",result,"locale",Locale.getDefault()));
    String errorMessage=(String)serviceResult.get(ModelService.ERROR_MESSAGE);
    if (UtilValidate.isNotEmpty(errorMessage)) {
      result.addFailure(this,new AssertionFailedError(errorMessage));
    }
    List<Object> errorMessageList=UtilGenerics.cast(serviceResult.get(ModelService.ERROR_MESSAGE_LIST));
    if (UtilValidate.isNotEmpty(errorMessageList)) {
      for (      Object message : errorMessageList) {
        result.addFailure(this,new AssertionFailedError(message.toString()));
      }
    }
    Map<String,Object> errorMessageMap=UtilGenerics.cast(serviceResult.get(ModelService.ERROR_MESSAGE_MAP));
    if (!UtilValidate.isEmpty(errorMessageMap)) {
      for (      Map.Entry<String,Object> entry : errorMessageMap.entrySet()) {
        result.addFailure(this,new AssertionFailedError(entry.getKey() + ": " + entry.getValue()));
      }
    }
  }
 catch (  MiniLangException e) {
    result.addError(this,e);
  }
  result.endTest(this);
}
