{
  Delegator delegator=processDef.getDelegator();
  this.initialContext=new HashMap<String,Object>();
  List<GenericValue> dataFields=new ArrayList<GenericValue>();
  try {
    Map<String,Object> fields=new HashMap<String,Object>();
    fields.put("packageId",processDef.get("packageId"));
    fields.put("packageVersion",processDef.get("packageVersion"));
    fields.put("processId","_NA_");
    fields.put("processVersion","_NA_");
    List<GenericValue> data1=delegator.findByAnd("WorkflowDataField",fields);
    dataFields.addAll(data1);
    fields.put("processId",processDef.get("processId"));
    fields.put("processVersion",processDef.get("processVersion"));
    List<GenericValue> data2=delegator.findByAnd("WorkflowDataField",fields);
    dataFields.addAll(data2);
  }
 catch (  GenericEntityException e) {
    throw new WfException(e.getMessage(),e);
  }
  if (dataFields == null) {
    return;
  }
  for (  GenericValue dataField : dataFields) {
    String name=dataField.getString("dataFieldName");
    String type=dataField.getString("dataTypeEnumId");
    String value=dataField.getString("initialValue");
    try {
      initialContext.put(name,ObjectType.simpleTypeConvert(value,WfUtil.getJavaType(type),null,null));
    }
 catch (    GeneralException e) {
      throw new WfException(e.getMessage(),e);
    }
  }
}
