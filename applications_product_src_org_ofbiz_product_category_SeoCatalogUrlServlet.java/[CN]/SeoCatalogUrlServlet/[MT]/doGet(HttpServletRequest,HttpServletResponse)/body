{
  Delegator delegator=(Delegator)getServletContext().getAttribute("delegator");
  String pathInfo=request.getPathInfo();
  List<String> pathElements=StringUtil.split(pathInfo,"/");
  String productId=null;
  try {
    String lastPathElement=pathElements.get(pathElements.size() - 1);
    if (lastPathElement.startsWith("p_") || delegator.findOne("Product",UtilMisc.toMap("productId",lastPathElement),true) != null) {
      if (lastPathElement.startsWith("p_")) {
        productId=lastPathElement.substring(2);
      }
 else {
        productId=lastPathElement;
      }
      pathElements.remove(pathElements.size() - 1);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error looking up product info for ProductUrl with path info [" + pathInfo + "]: "+ e.toString(),module);
  }
  String categoryId=null;
  if (pathElements.size() == 1) {
    CategoryWorker.setTrail(request,pathElements.get(0),null);
    categoryId=pathElements.get(0);
  }
 else   if (pathElements.size() == 2) {
    CategoryWorker.setTrail(request,pathElements.get(1),pathElements.get(0));
    categoryId=pathElements.get(1);
  }
 else   if (pathElements.size() > 2) {
    List<String> trail=CategoryWorker.getTrail(request);
    if (trail == null) {
      trail=new LinkedList<String>();
    }
    if (trail.contains(pathElements.get(0))) {
      int firstElementIndex=trail.indexOf(pathElements.get(0));
      while (trail.size() > firstElementIndex) {
        trail.remove(firstElementIndex);
      }
      trail.addAll(pathElements);
    }
 else {
      trail.clear();
      trail.addAll(pathElements);
    }
    CategoryWorker.setTrail(request,trail);
    categoryId=pathElements.get(pathElements.size() - 1);
  }
  if (categoryId != null) {
    request.setAttribute("productCategoryId",categoryId);
  }
  String rootCategoryId=null;
  if (pathElements.size() >= 1) {
    rootCategoryId=pathElements.get(0);
  }
  if (rootCategoryId != null) {
    request.setAttribute("rootCategoryId",rootCategoryId);
  }
  if (productId != null) {
    request.setAttribute("product_id",productId);
    request.setAttribute("productId",productId);
  }
  RequestDispatcher rd=request.getRequestDispatcher("/" + (UtilValidate.isEmpty(SeoControlServlet.controlServlet) ? "" : (SeoControlServlet.controlServlet + "/")) + (productId != null ? PRODUCT_REQUEST : CATEGORY_REQUEST));
  rd.forward(request,response);
}
