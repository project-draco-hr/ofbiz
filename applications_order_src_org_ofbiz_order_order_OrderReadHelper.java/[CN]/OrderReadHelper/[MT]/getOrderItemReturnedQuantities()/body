{
  List<GenericValue> returnItems=getOrderReturnItems();
  Map<String,BigDecimal> returnMap=FastMap.newInstance();
  for (Iterator<GenericValue> iter=this.getValidOrderItems().iterator(); iter.hasNext(); ) {
    GenericValue orderItem=iter.next();
    List<GenericValue> group=EntityUtil.filterByAnd(returnItems,UtilMisc.toList(EntityCondition.makeCondition("orderId",orderItem.get("orderId")),EntityCondition.makeCondition("orderItemSeqId",orderItem.get("orderItemSeqId")),EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"RETURN_CANCELLED")));
    BigDecimal returned=BigDecimal.ZERO;
    for (Iterator<GenericValue> groupiter=group.iterator(); groupiter.hasNext(); ) {
      GenericValue returnItem=groupiter.next();
      if (returnItem.getBigDecimal("returnQuantity") != null) {
        returned=returned.add(returnItem.getBigDecimal("returnQuantity"));
      }
    }
    returnMap.put(orderItem.getString("orderItemSeqId"),returned);
  }
  return returnMap;
}
