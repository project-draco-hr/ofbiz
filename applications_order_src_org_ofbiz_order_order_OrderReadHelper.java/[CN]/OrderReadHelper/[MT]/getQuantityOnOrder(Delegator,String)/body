{
  BigDecimal quantity=BigDecimal.ZERO;
  List<GenericValue> openOrders=null;
  try {
    openOrders=EntityQuery.use(delegator).from("OrderHeaderAndItems").where(EntityCondition.makeCondition("orderTypeId",EntityOperator.EQUALS,"PURCHASE_ORDER"),EntityCondition.makeCondition("itemStatusId",EntityOperator.NOT_EQUAL,"ITEM_CANCELLED"),EntityCondition.makeCondition("itemStatusId",EntityOperator.NOT_EQUAL,"ITEM_REJECTED"),EntityCondition.makeCondition("itemStatusId",EntityOperator.NOT_EQUAL,"ITEM_COMPLETED"),EntityCondition.makeCondition("productId",EntityOperator.EQUALS,productId)).queryList();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  if (UtilValidate.isNotEmpty(openOrders)) {
    for (    GenericValue order : openOrders) {
      BigDecimal thisQty=order.getBigDecimal("quantity");
      if (thisQty == null) {
        thisQty=BigDecimal.ZERO;
      }
      quantity=quantity.add(thisQty);
    }
  }
  return quantity;
}
