{
  Map paymentMethodAmounts=new HashMap();
  List paymentPrefs=getPaymentPreferences();
  Iterator ppit=paymentPrefs.iterator();
  while (ppit.hasNext()) {
    GenericValue paymentPref=(GenericValue)ppit.next();
    List paymentGatewayResponses=new ArrayList();
    try {
      paymentGatewayResponses=paymentPref.getRelatedByAnd("PaymentGatewayResponse",UtilMisc.toMap("paymentServiceTypeEnumId","PRDS_PAY_CAPTURE"));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    BigDecimal chargedToPaymentPref=ZERO;
    Iterator pgrit=paymentGatewayResponses.iterator();
    while (pgrit.hasNext()) {
      GenericValue paymentGatewayResponse=(GenericValue)pgrit.next();
      if (paymentGatewayResponse.get("amount") != null) {
        chargedToPaymentPref=chargedToPaymentPref.add(paymentGatewayResponse.getBigDecimal("amount")).setScale(scale + 1,rounding);
      }
    }
    if (chargedToPaymentPref.compareTo(ZERO) == 1) {
      String paymentMethodKey=paymentPref.getString("paymentMethodId") != null ? paymentPref.getString("paymentMethodId") : paymentPref.getString("paymentMethodTypeId");
      paymentMethodAmounts.put(paymentMethodKey,new Double(chargedToPaymentPref.setScale(scale,rounding).doubleValue()));
    }
  }
  return paymentMethodAmounts;
}
