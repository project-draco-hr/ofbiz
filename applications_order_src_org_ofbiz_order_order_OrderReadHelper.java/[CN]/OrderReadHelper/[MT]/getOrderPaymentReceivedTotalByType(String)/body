{
  BigDecimal total=ZERO;
  try {
    List<GenericValue> orderItemBillings=orderHeader.getRelatedCache("OrderItemBilling");
    Set<String> invoiceIds=new HashSet<String>();
    for (Iterator<GenericValue> iter=orderItemBillings.iterator(); iter.hasNext(); ) {
      GenericValue orderItemBilling=iter.next();
      invoiceIds.add(orderItemBilling.getString("invoiceId"));
    }
    List<EntityExpr> conditions=UtilMisc.toList(EntityCondition.makeCondition("statusId",EntityOperator.EQUALS,"PMNT_RECEIVED"),EntityCondition.makeCondition("invoiceId",EntityOperator.IN,invoiceIds));
    if (paymentMethodTypeId != null) {
      conditions.add(EntityCondition.makeCondition("paymentMethodTypeId",EntityOperator.EQUALS,paymentMethodTypeId));
    }
    EntityConditionList<EntityExpr> ecl=EntityCondition.makeCondition(conditions,EntityOperator.AND);
    List<GenericValue> payments=orderHeader.getDelegator().findList("PaymentAndApplication",ecl,null,null,null,true);
    for (Iterator<GenericValue> iter=payments.iterator(); iter.hasNext(); ) {
      GenericValue payment=iter.next();
      if (payment.get("amountApplied") == null)       continue;
      total=total.add(payment.getBigDecimal("amountApplied")).setScale(scale,rounding);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,e.getMessage(),module);
  }
  return total;
}
