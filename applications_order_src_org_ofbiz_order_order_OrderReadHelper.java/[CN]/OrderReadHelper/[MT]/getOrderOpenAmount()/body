{
  BigDecimal total=getOrderGrandTotal();
  BigDecimal openAmount=BigDecimal.ZERO;
  List<GenericValue> prefs=getPaymentPreferences();
  for (Iterator<GenericValue> iter=prefs.iterator(); iter.hasNext(); ) {
    GenericValue pref=iter.next();
    if ("PAYMENT_CANCELLED".equals(pref.get("statusId")) || "PAYMENT_DECLINED".equals(pref.get("statusId"))) {
      continue;
    }
 else     if ("PAYMENT_SETTLED".equals(pref.get("statusId"))) {
      List<GenericValue> responses=pref.getRelatedByAnd("PaymentGatewayResponse",UtilMisc.toMap("transCodeEnumId","PGT_CAPTURE"));
      for (Iterator<GenericValue> respIter=responses.iterator(); respIter.hasNext(); ) {
        GenericValue response=respIter.next();
        BigDecimal amount=response.getBigDecimal("amount");
        if (amount != null) {
          openAmount=openAmount.add(amount);
        }
      }
      responses=pref.getRelatedByAnd("PaymentGatewayResponse",UtilMisc.toMap("transCodeEnumId","PGT_REFUND"));
      for (Iterator<GenericValue> respIter=responses.iterator(); respIter.hasNext(); ) {
        GenericValue response=respIter.next();
        BigDecimal amount=response.getBigDecimal("amount");
        if (amount != null) {
          openAmount=openAmount.subtract(amount);
        }
      }
    }
 else {
      BigDecimal maxAmount=pref.getBigDecimal("maxAmount");
      if (maxAmount != null) {
        openAmount=openAmount.add(maxAmount);
      }
    }
  }
  openAmount=total.subtract(openAmount).setScale(scale,rounding);
  return openAmount.compareTo(BigDecimal.ZERO) > 0 ? openAmount : BigDecimal.ZERO;
}
