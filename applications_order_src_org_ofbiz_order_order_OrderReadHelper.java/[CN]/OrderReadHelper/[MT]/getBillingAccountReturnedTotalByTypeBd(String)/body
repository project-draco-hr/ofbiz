{
  BigDecimal returnedAmount=ZERO;
  List<GenericValue> returnedItemsBase=getOrderReturnItems();
  if (returnTypeId != null) {
    returnedItemsBase=EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("returnTypeId",returnTypeId));
  }
  List<GenericValue> returnedItems=new ArrayList<GenericValue>(returnedItemsBase.size());
  returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("statusId","RETURN_RECEIVED")));
  returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("statusId","RETURN_COMPLETED")));
  try {
    for (    GenericValue returnItem : returnedItems) {
      GenericValue returnItemResponse=returnItem.getRelatedOne("ReturnItemResponse");
      if (returnItemResponse == null)       continue;
      if (returnItemResponse.get("billingAccountId") == null)       continue;
      returnedAmount=returnedAmount.add(returnItemResponse.getBigDecimal("responseAmount")).setScale(scale,rounding);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,e.getMessage(),module);
  }
  return returnedAmount;
}
