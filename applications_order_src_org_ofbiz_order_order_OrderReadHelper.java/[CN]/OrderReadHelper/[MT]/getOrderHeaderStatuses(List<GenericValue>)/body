{
  List<EntityExpr> contraints1=UtilMisc.toList(EntityCondition.makeCondition("orderItemSeqId",EntityOperator.EQUALS,null));
  contraints1.add(EntityCondition.makeCondition("orderItemSeqId",EntityOperator.EQUALS,DataModelConstants.SEQ_ID_NA));
  contraints1.add(EntityCondition.makeCondition("orderItemSeqId",EntityOperator.EQUALS,""));
  List<EntityExpr> contraints2=UtilMisc.toList(EntityCondition.makeCondition("orderPaymentPreferenceId",EntityOperator.EQUALS,null));
  contraints2.add(EntityCondition.makeCondition("orderPaymentPreferenceId",EntityOperator.EQUALS,DataModelConstants.SEQ_ID_NA));
  contraints2.add(EntityCondition.makeCondition("orderPaymentPreferenceId",EntityOperator.EQUALS,""));
  List<GenericValue> newOrderStatuses=new LinkedList<GenericValue>();
  newOrderStatuses.addAll(EntityUtil.filterByOr(orderStatuses,contraints1));
  return EntityUtil.orderBy(EntityUtil.filterByOr(newOrderStatuses,contraints2),UtilMisc.toList("-statusDatetime"));
}
