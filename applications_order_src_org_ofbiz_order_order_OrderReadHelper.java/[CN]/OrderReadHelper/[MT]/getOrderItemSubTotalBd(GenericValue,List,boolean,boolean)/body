{
  BigDecimal unitPrice=orderItem.getBigDecimal("unitPrice");
  BigDecimal quantity=getOrderItemQuantityBd(orderItem);
  BigDecimal result=ZERO;
  if (unitPrice == null || quantity == null) {
    Debug.logWarning("[getOrderItemTotal] unitPrice or quantity are null, using 0 for the item base price",module);
  }
 else {
    if (Debug.verboseOn())     Debug.logVerbose("Unit Price : " + unitPrice + " / "+ "Quantity : "+ quantity,module);
    result=unitPrice.multiply(quantity);
    if ("RENTAL_ORDER_ITEM".equals(orderItem.getString("orderItemTypeId"))) {
      List WorkOrderItemFulfillments=null;
      try {
        WorkOrderItemFulfillments=orderItem.getRelatedCache("WorkOrderItemFulfillment");
      }
 catch (      GenericEntityException e) {
      }
      Iterator iter=WorkOrderItemFulfillments.iterator();
      if (iter.hasNext()) {
        GenericValue WorkOrderItemFulfillment=(GenericValue)iter.next();
        GenericValue workEffort=null;
        try {
          workEffort=WorkOrderItemFulfillment.getRelatedOneCache("WorkEffort");
        }
 catch (        GenericEntityException e) {
        }
        result=result.multiply(getWorkEffortRentalQuantityBd(workEffort));
      }
    }
  }
  result=result.add(getOrderItemAdjustmentsTotalBd(orderItem,adjustments,true,false,false,forTax,forShipping));
  return result.setScale(scale,rounding);
}
