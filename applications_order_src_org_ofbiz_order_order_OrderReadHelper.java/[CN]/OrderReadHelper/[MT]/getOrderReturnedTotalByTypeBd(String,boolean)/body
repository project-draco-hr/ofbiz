{
  List<GenericValue> returnedItemsBase=getOrderReturnItems();
  if (returnTypeId != null) {
    returnedItemsBase=EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("returnTypeId",returnTypeId));
  }
  List<GenericValue> returnedItems=new ArrayList<GenericValue>(returnedItemsBase.size());
  if (!includeAll) {
    returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("statusId","RETURN_ACCEPTED")));
    returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("statusId","RETURN_RECEIVED")));
    returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toMap("statusId","RETURN_COMPLETED")));
  }
 else {
    returnedItems.addAll(EntityUtil.filterByAnd(returnedItemsBase,UtilMisc.toList(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"RETURN_CANCELLED"))));
  }
  BigDecimal returnedAmount=ZERO;
  String orderId=orderHeader.getString("orderId");
  List<String> returnHeaderList=FastList.newInstance();
  for (  GenericValue returnedItem : returnedItems) {
    if ((returnedItem.get("returnPrice") != null) && (returnedItem.get("returnQuantity") != null)) {
      returnedAmount=returnedAmount.add(returnedItem.getBigDecimal("returnPrice").multiply(returnedItem.getBigDecimal("returnQuantity")).setScale(scale,rounding));
    }
    Map<String,Object> itemAdjustmentCondition=UtilMisc.toMap("returnId",returnedItem.get("returnId"),"returnItemSeqId",returnedItem.get("returnItemSeqId"),"returnTypeId",returnTypeId);
    returnedAmount=returnedAmount.add(getReturnAdjustmentTotal(orderHeader.getDelegator(),itemAdjustmentCondition));
    if (orderId.equals(returnedItem.getString("orderId")) && (!returnHeaderList.contains(returnedItem.getString("returnId")))) {
      returnHeaderList.add(returnedItem.getString("returnId"));
    }
  }
  for (  String returnId : returnHeaderList) {
    Map<String,Object> returnHeaderAdjFilter=UtilMisc.<String,Object>toMap("returnId",returnId,"returnItemSeqId","_NA_","returnTypeId",returnTypeId);
    returnedAmount=returnedAmount.add(getReturnAdjustmentTotal(orderHeader.getDelegator(),returnHeaderAdjFilter)).setScale(scale,rounding);
  }
  return returnedAmount.setScale(scale,rounding);
}
