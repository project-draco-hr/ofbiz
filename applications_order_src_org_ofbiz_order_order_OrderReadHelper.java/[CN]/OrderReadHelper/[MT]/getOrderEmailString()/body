{
  Delegator delegator=orderHeader.getDelegator();
  List<GenericValue> orderContactMechs=null;
  try {
    Map<String,Object> ocFields=UtilMisc.toMap("orderId",orderHeader.get("orderId"),"contactMechPurposeTypeId","ORDER_EMAIL");
    orderContactMechs=delegator.findByAnd("OrderContactMech",ocFields,null,false);
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,"Problems getting order contact mechs",module);
  }
  StringBuilder emails=new StringBuilder();
  if (orderContactMechs != null) {
    for (    GenericValue orderContactMech : orderContactMechs) {
      try {
        GenericValue contactMech=orderContactMech.getRelatedOne("ContactMech");
        emails.append(emails.length() > 0 ? "," : "").append(contactMech.getString("infoString"));
      }
 catch (      GenericEntityException e) {
        Debug.logWarning(e,"Problems getting contact mech from order contact mech",module);
      }
    }
  }
  return emails.toString();
}
