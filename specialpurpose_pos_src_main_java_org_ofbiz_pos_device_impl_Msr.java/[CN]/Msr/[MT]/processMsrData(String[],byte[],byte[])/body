{
  StringBuffer msrStr=new StringBuffer();
  msrStr.append(decodedData[5]);
  msrStr.append("|");
  msrStr.append(decodedData[6]);
  msrStr.append("|");
  msrStr.append(decodedData[1]);
  msrStr.append("|");
  msrStr.append(decodedData[3]);
  int msrType=MSR_UNKNOWN;
  try {
    if (UtilValidate.isAnyCard(decodedData[5])) {
      msrType=MSR_CREDIT_CARD;
    }
 else     if (UtilValidate.isGiftCard(decodedData[5])) {
      msrType=MSR_GIFT_CARD;
    }
  }
 catch (  NumberFormatException e) {
  }
switch (msrType) {
case MSR_CREDIT_CARD:
    this.setPayPanel();
  PosScreen.currentScreen.getButtons().setLock(true);
String[] credInfo=PosScreen.currentScreen.getInput().getFunction("CREDIT");
if (credInfo == null) {
PosScreen.currentScreen.getInput().setFunction("CREDIT","");
}
PosScreen.currentScreen.getInput().setFunction("TRACK2",new String(track2));
PosScreen.currentScreen.getInput().setFunction("MSRINFO",msrStr.toString());
PosScreen.currentScreen.getOutput().print("Credit Card Read");
PosScreen.currentScreen.getInput().clearInput();
this.callEnter();
break;
case MSR_GIFT_CARD:
this.setPayPanel();
PosScreen.currentScreen.getButtons().setLock(true);
PosScreen.currentScreen.getInput().setFunction("MSRINFO",msrStr.toString());
PosScreen.currentScreen.getOutput().print("Gift Card Read");
PosScreen.currentScreen.getInput().clearInput();
this.callEnter();
break;
case MSR_UNKNOWN:
PosScreen.currentScreen.showDialog("dialog/error/unknowncardtype");
break;
}
}
