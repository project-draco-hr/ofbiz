{
  boolean isEntrySet=false;
  MapStack<String> contextMs=MapStack.create(context);
  String entryName=this.entryNameExdr.expandString(context);
  String keyName=this.keyNameExdr.expandString(context);
  Object obj=listNameExdr.get(context);
  if (obj == null) {
    Debug.logError("No object found for listName:" + listNameExdr.toString(),module);
    return;
  }
  List<?> theList=null;
  if (obj instanceof Map<?,?>) {
    Set<Map.Entry<String,Object>> entrySet=UtilGenerics.<Map<String,Object>>cast(obj).entrySet();
    Object[] a=entrySet.toArray();
    theList=Arrays.asList(a);
    isEntrySet=true;
  }
 else   if (obj instanceof List<?>) {
    theList=(List<?>)obj;
  }
 else {
    Debug.logError("Object not list or map type",module);
    return;
  }
  WidgetWorker.incrementPaginatorNumber(context);
  int startPageNumber=WidgetWorker.getPaginatorNumber(context);
  getListLimits(context,theList);
  int rowCount=0;
  Iterator<?> iter=theList.iterator();
  int itemIndex=-1;
  int iterateIndex=0;
  while (iter.hasNext()) {
    itemIndex++;
    if (itemIndex >= highIndex) {
      break;
    }
    Object item=iter.next();
    if (itemIndex < lowIndex) {
      continue;
    }
    if (isEntrySet) {
      Map.Entry<String,?> entry=UtilGenerics.cast(item);
      contextMs.put(entryName,entry.getValue());
      contextMs.put(keyName,entry.getKey());
    }
 else {
      contextMs.put(entryName,item);
    }
    contextMs.put("itemIndex",Integer.valueOf(itemIndex));
    if (iterateIndex < listSize) {
      contextMs.put("iterateId",String.valueOf(entryName + iterateIndex));
      iterateIndex++;
    }
    rowCount++;
    for (    ModelScreenWidget.Section section : this.sectionList) {
      section.renderWidgetString(writer,contextMs,screenStringRenderer);
    }
  }
  if ((itemIndex + 1) < highIndex) {
    setHighIndex(itemIndex + 1);
  }
  setActualPageSize(highIndex - lowIndex);
  if (getPaginate(context)) {
    try {
      Integer lastPageNumber=null;
      Map<String,Object> globalCtx=UtilGenerics.checkMap(context.get("globalContext"));
      if (globalCtx != null) {
        lastPageNumber=(Integer)globalCtx.get("PAGINATOR_NUMBER");
        globalCtx.put("PAGINATOR_NUMBER",Integer.valueOf(startPageNumber));
      }
      renderNextPrev(writer,context);
      if (globalCtx != null) {
        globalCtx.put("PAGINATOR_NUMBER",lastPageNumber);
      }
    }
 catch (    IOException e) {
      Debug.logError(e,module);
      throw new RuntimeException(e.getMessage());
    }
  }
}
