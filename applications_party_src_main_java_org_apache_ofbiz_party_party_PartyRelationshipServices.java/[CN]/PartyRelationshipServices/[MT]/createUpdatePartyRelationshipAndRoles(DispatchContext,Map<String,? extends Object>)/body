{
  Map<String,Object> result=new HashMap<String,Object>();
  Delegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  try {
    List<GenericValue> partyRelationShipList=PartyRelationshipHelper.getActivePartyRelationships(delegator,context);
    if (UtilValidate.isEmpty(partyRelationShipList)) {
      String partyId=(String)context.get("partyId");
      String partyIdFrom=(String)context.get("partyIdFrom");
      String partyIdTo=(String)context.get("partyIdTo");
      String roleTypeIdFrom=(String)context.get("roleTypeIdFrom");
      String roleTypeIdTo=(String)context.get("roleTypeIdTo");
      String partyRelationshipTypeId=(String)context.get("partyRelationshipTypeId");
      GenericValue partyToRole=null;
      partyToRole=EntityQuery.use(delegator).from("PartyRole").where("partyId",partyIdTo,"roleTypeId",roleTypeIdTo).queryOne();
      if (partyToRole == null) {
        partyToRole=delegator.makeValue("PartyRole",UtilMisc.toMap("partyId",partyIdTo,"roleTypeId",roleTypeIdTo));
        partyToRole.create();
      }
      GenericValue partyFromRole=null;
      partyFromRole=EntityQuery.use(delegator).from("PartyRole").where("partyId",partyIdFrom,"roleTypeId",roleTypeIdFrom).queryOne();
      if (partyFromRole == null) {
        partyFromRole=delegator.makeValue("PartyRole",UtilMisc.toMap("partyId",partyIdFrom,"roleTypeId",roleTypeIdFrom));
        partyFromRole.create();
      }
      String sideChecked=partyIdFrom.equals(partyId) ? "partyIdFrom" : "partyIdTo";
      GenericValue oldPartyRelationShip=EntityQuery.use(delegator).from("PartyRelationship").where(sideChecked,partyId,"roleTypeIdFrom",roleTypeIdFrom,"roleTypeIdTo",roleTypeIdTo,"partyRelationshipTypeId",partyRelationshipTypeId).filterByDate().queryFirst();
      if (UtilValidate.isNotEmpty(oldPartyRelationShip)) {
        oldPartyRelationShip.setFields(UtilMisc.toMap("thruDate",UtilDateTime.nowTimestamp()));
        oldPartyRelationShip.store();
      }
      try {
        dispatcher.runSync("createPartyRelationship",context);
      }
 catch (      GenericServiceException e) {
        Debug.logWarning(e.getMessage(),module);
        return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyrelationshipservices.could_not_create_party_role_write",UtilMisc.toMap("errorString",e.getMessage()),locale));
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e.getMessage(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"partyrelationshipservices.could_not_create_party_role_write",UtilMisc.toMap("errorString",e.getMessage()),locale));
  }
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  return result;
}
