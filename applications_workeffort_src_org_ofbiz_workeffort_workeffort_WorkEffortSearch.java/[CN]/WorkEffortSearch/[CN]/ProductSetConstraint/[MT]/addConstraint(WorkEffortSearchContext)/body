{
  String entityAlias="WEGS" + workEffortSearchContext.index;
  String prefix="wegs" + workEffortSearchContext.index;
  workEffortSearchContext.index++;
  workEffortSearchContext.dynamicViewEntity.addMemberEntity(entityAlias,"WorkEffortGoodStandard");
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "ProductId","productId",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "FromDate","fromDate",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addAlias(entityAlias,prefix + "ThruDate","thruDate",null,null,null,null);
  workEffortSearchContext.dynamicViewEntity.addViewLink("WEFF",entityAlias,Boolean.FALSE,ModelKeyMap.makeKeyMapList("workEffortId"));
  workEffortSearchContext.entityConditionList.add(new EntityExpr(prefix + "ProductId",EntityOperator.IN,productIdSet));
  workEffortSearchContext.entityConditionList.add(new EntityExpr(new EntityExpr(prefix + "ThruDate",EntityOperator.EQUALS,null),EntityOperator.OR,new EntityExpr(prefix + "ThruDate",EntityOperator.GREATER_THAN,workEffortSearchContext.nowTimestamp)));
  workEffortSearchContext.entityConditionList.add(new EntityExpr(prefix + "FromDate",EntityOperator.LESS_THAN,workEffortSearchContext.nowTimestamp));
  StringBuffer productIdInfo=new StringBuffer();
  Iterator productIdIter=this.productIdSet.iterator();
  while (productIdIter.hasNext()) {
    String productId=(String)productIdIter.next();
    productIdInfo.append(productId);
    if (productIdIter.hasNext()) {
      productIdInfo.append(",");
    }
  }
  workEffortSearchContext.workEffortSearchConstraintList.add(workEffortSearchContext.getDelegator().makeValue("WorkEffortSearchConstraint",UtilMisc.toMap("constraintName",constraintName,"infoString",productIdInfo.toString())));
}
