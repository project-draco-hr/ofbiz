{
  ContainerConfig.Container jc=ContainerConfig.getContainer("junit-container",configFile);
  Iterator<ContainerConfig.Container.Property> ti=jc.properties.values().iterator();
  if (ti == null) {
    Debug.log("No tests to load",module);
    return true;
  }
  TestSuite suite=new TestSuite();
  while (ti.hasNext()) {
    ContainerConfig.Container.Property prop=ti.next();
    Class clz=null;
    try {
      clz=ObjectType.loadClass(prop.value);
      suite.addTestSuite(clz);
    }
 catch (    Exception e) {
      Debug.logError(e,"Unable to load test suite class : " + prop.value,module);
    }
  }
  results=new TestResult();
  suite.run(results);
  Debug.log("[JUNIT] Pass: " + results.wasSuccessful() + " | # Tests: "+ results.runCount()+ " | # Failed: "+ results.failureCount()+ " # Errors: "+ results.errorCount(),module);
  if (Debug.infoOn()) {
    Debug.log("[JUNIT] ----------------------------- ERRORS ----------------------------- [JUNIT]",module);
    Enumeration err=results.errors();
    if (!err.hasMoreElements()) {
      Debug.log("None");
    }
 else {
      while (err.hasMoreElements()) {
        Debug.log("--> " + err.nextElement(),module);
      }
    }
    Debug.log("[JUNIT] ------------------------------------------------------------------ [JUNIT]",module);
    Debug.log("[JUNIT] ---------------------------- FAILURES ---------------------------- [JUNIT]",module);
    Enumeration fail=results.failures();
    if (!fail.hasMoreElements()) {
      Debug.log("None");
    }
 else {
      while (fail.hasMoreElements()) {
        Debug.log("--> " + fail.nextElement(),module);
      }
    }
    Debug.log("[JUNIT] ------------------------------------------------------------------ [JUNIT]",module);
  }
  return true;
}
