{
  ModelFormField modelFormField=dropDownField.getModelFormField();
  String currentValue=modelFormField.getEntry(context);
  List<ModelFormField.OptionValue> allOptionValues=dropDownField.getAllOptionValues(context,WidgetWorker.getDelegator(context));
  if (UtilValidate.isNotEmpty(currentValue) && "first-in-list".equals(dropDownField.getCurrent())) {
    String explicitDescription=dropDownField.getCurrentDescription(context);
    if (UtilValidate.isNotEmpty(explicitDescription)) {
      this.makeTextString(writer,modelFormField.getWidgetStyle(),explicitDescription);
    }
 else {
      this.makeTextString(writer,modelFormField.getWidgetStyle(),ModelFormField.FieldInfoWithOptions.getDescriptionForOptionKey(currentValue,allOptionValues));
    }
  }
 else {
    for (    ModelFormField.OptionValue optionValue : allOptionValues) {
      String noCurrentSelectedKey=dropDownField.getNoCurrentSelectedKey(context);
      if ((UtilValidate.isNotEmpty(currentValue) && currentValue.equals(optionValue.getKey()) && "selected".equals(dropDownField.getCurrent())) || (UtilValidate.isEmpty(currentValue) && noCurrentSelectedKey != null && noCurrentSelectedKey.equals(optionValue.getKey()))) {
        this.makeTextString(writer,modelFormField.getWidgetStyle(),optionValue.getDescription());
        break;
      }
    }
  }
}
