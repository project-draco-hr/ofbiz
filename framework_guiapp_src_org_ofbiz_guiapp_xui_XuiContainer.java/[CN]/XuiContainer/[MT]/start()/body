{
  if (this.getContainerConfigName() == null) {
    throw new ContainerException("Unknown container config name");
  }
  ContainerConfig.Container cc=ContainerConfig.getContainer(this.getContainerConfigName(),configFile);
  if (cc == null) {
    throw new ContainerException("No " + this.getContainerConfigName() + " configuration found in container config!");
  }
  String delegatorName=ContainerConfig.getPropertyValue(cc,"delegator-name","default");
  GenericDelegator delegator=DelegatorFactory.getGenericDelegator(delegatorName);
  String dispatcherName=ContainerConfig.getPropertyValue(cc,"dispatcher-name","xui-dispatcher");
  LocalDispatcher dispatcher=GenericDispatcher.getLocalDispatcher(dispatcherName,delegator);
  String xuiSessionId=ContainerConfig.getPropertyValue(cc,"xui-session-id",null);
  if (UtilValidate.isEmpty(xuiSessionId)) {
    throw new ContainerException("No xui-session-id value set in " + this.getContainerConfigName() + "!");
  }
  String laf=ContainerConfig.getPropertyValue(cc,"look-and-feel",null);
  if (UtilValidate.isNotEmpty(laf)) {
    try {
      UIManager.setLookAndFeel(laf);
    }
 catch (    Exception e) {
      throw new ContainerException(e);
    }
  }
  xuiSession=new XuiSession(xuiSessionId,delegator,dispatcher,this);
  this.configure(cc);
  if (this.startupFile == null) {
    this.startupDir=ContainerConfig.getPropertyValue(cc,"startup-directory","specialpurpose/pos/config/");
    this.startupFile=ContainerConfig.getPropertyValue(cc,"startup-file","xpos.properties");
  }
  String classPackageName=ContainerConfig.getPropertyValue(cc,"class-package-name","net.xoetrope.swing");
  JFrame jframe=new JFrame();
  jframe.setUndecorated(true);
  new XuiScreen(new String[]{this.startupDir + this.startupFile,classPackageName},jframe);
  return true;
}
