{
  if (UtilValidate.isEmpty(this.shipAddress)) {
    GenericValue facility=null;
    try {
      facility=webPosSession.getDelegator().findOne("Facility",UtilMisc.toMap("facilityId",webPosSession.getFacilityId()),false);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    if (UtilValidate.isEmpty(facility)) {
      return null;
    }
    List<GenericValue> fcp=null;
    try {
      fcp=facility.getRelated("FacilityContactMechPurpose",UtilMisc.toMap("contactMechPurposeTypeId","SHIP_ORIG_LOCATION"),null,false);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    fcp=EntityUtil.filterByDate(fcp);
    GenericValue purp=EntityUtil.getFirst(fcp);
    if (UtilValidate.isNotEmpty(purp)) {
      try {
        this.shipAddress=webPosSession.getDelegator().findOne("PostalAddress",UtilMisc.toMap("contactMechId",purp.getString("contactMechId")),false);
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
      }
    }
  }
  return this.shipAddress;
}
