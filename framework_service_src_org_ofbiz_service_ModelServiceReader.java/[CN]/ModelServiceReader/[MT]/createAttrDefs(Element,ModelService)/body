{
  List paramElements=UtilXml.childElementList(baseElement,"attribute");
  Iterator paramIter=paramElements.iterator();
  while (paramIter.hasNext()) {
    Element attribute=(Element)paramIter.next();
    ModelParam param=new ModelParam();
    param.name=UtilXml.checkEmpty(attribute.getAttribute("name"));
    param.type=UtilXml.checkEmpty(attribute.getAttribute("type"));
    param.mode=UtilXml.checkEmpty(attribute.getAttribute("mode"));
    param.entityName=UtilXml.checkEmpty(attribute.getAttribute("entity-name"));
    param.fieldName=UtilXml.checkEmpty(attribute.getAttribute("field-name"));
    param.stringMapPrefix=UtilXml.checkEmpty(attribute.getAttribute("string-map-prefix"));
    param.stringListSuffix=UtilXml.checkEmpty(attribute.getAttribute("string-list-suffix"));
    param.formLabel=attribute.hasAttribute("form-label") ? attribute.getAttribute("form-label") : null;
    param.optional="true".equalsIgnoreCase(attribute.getAttribute("optional"));
    param.formDisplay=!"false".equalsIgnoreCase(attribute.getAttribute("form-display"));
    String defValue=attribute.getAttribute("default-value");
    if (UtilValidate.isNotEmpty(defValue)) {
      Debug.logInfo("Got a default-value [" + defValue + "] for service attribute ["+ service.name+ "."+ param.name+ "]",module);
      param.setDefaultValue(defValue);
    }
    if (param.entityName.length() == 0) {
      param.entityName=service.defaultEntityName;
    }
    if (param.fieldName.length() == 0 && param.entityName.length() > 0) {
      param.fieldName=param.name;
    }
    this.addValidators(attribute,param);
    service.addParam(param);
  }
  ModelParam def;
  def=new ModelParam();
  def.name=ModelService.RESPONSE_MESSAGE;
  def.type="String";
  def.mode="OUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name=ModelService.ERROR_MESSAGE;
  def.type="String";
  def.mode="OUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name=ModelService.ERROR_MESSAGE_LIST;
  def.type="java.util.List";
  def.mode="OUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name=ModelService.SUCCESS_MESSAGE;
  def.type="String";
  def.mode="OUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name=ModelService.SUCCESS_MESSAGE_LIST;
  def.type="java.util.List";
  def.mode="OUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name="userLogin";
  def.type="org.ofbiz.entity.GenericValue";
  def.mode="INOUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name="locale";
  def.type="java.util.Locale";
  def.mode="INOUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
  def=new ModelParam();
  def.name="timeZone";
  def.type="java.util.TimeZone";
  def.mode="INOUT";
  def.optional=true;
  def.internal=true;
  service.addParam(def);
}
