{
  this.sendMode=group.getAttribute("send-mode");
  this.groupName=group.getAttribute("name");
  this.services=new LinkedList<GroupServiceModel>();
  this.lastServiceRan=-1;
  if (groupName == null) {
    throw new IllegalArgumentException("Group Definition found with no name attribute! : " + group);
  }
  for (  Element service : UtilXml.childElementList(group,"invoke")) {
    services.add(new GroupServiceModel(service));
  }
  List<? extends Element> oldServiceTags=UtilXml.childElementList(group,"service");
  if (oldServiceTags.size() > 0) {
    for (    Element service : oldServiceTags) {
      services.add(new GroupServiceModel(service));
    }
    Debug.logWarning("Service Group Definition : [" + group.getAttribute("name") + "] found with OLD 'service' attribute, change to use 'invoke'",module);
  }
  if (Debug.verboseOn())   Debug.logVerbose("Created Service Group Model --> " + this,module);
}
