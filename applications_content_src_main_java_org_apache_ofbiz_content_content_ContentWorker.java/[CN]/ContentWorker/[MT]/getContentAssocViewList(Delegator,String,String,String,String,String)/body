{
  List<EntityExpr> exprListAnd=new LinkedList<EntityExpr>();
  if (UtilValidate.isNotEmpty(contentIdTo)) {
    EntityExpr expr=EntityCondition.makeCondition("caContentIdTo",EntityOperator.EQUALS,contentIdTo);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(contentId)) {
    EntityExpr expr=EntityCondition.makeCondition("contentId",EntityOperator.EQUALS,contentId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(contentAssocTypeId)) {
    EntityExpr expr=EntityCondition.makeCondition("caContentAssocTypeId",EntityOperator.EQUALS,contentAssocTypeId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(statusId)) {
    EntityExpr expr=EntityCondition.makeCondition("statusId",EntityOperator.EQUALS,statusId);
    exprListAnd.add(expr);
  }
  if (UtilValidate.isNotEmpty(privilegeEnumId)) {
    EntityExpr expr=EntityCondition.makeCondition("privilegeEnumId",EntityOperator.EQUALS,privilegeEnumId);
    exprListAnd.add(expr);
  }
  return EntityQuery.use(delegator).from("ContentAssocDataResourceViewFrom").where(exprListAnd).filterByDate("caFromDate","caThruDate").queryList();
}
