{
  boolean isWhen=defaultReturn;
  if (UtilValidate.isNotEmpty(whenStr)) {
    FlexibleStringExpander fse=FlexibleStringExpander.getInstance(whenStr);
    String newWhen=fse.expandString(context);
    try {
      Object retVal=GroovyUtil.eval(newWhen,context);
      if (retVal instanceof Boolean) {
        Boolean boolVal=(Boolean)retVal;
        isWhen=boolVal.booleanValue();
      }
 else {
        throw new IllegalArgumentException("Return value from use-when condition eval was not a Boolean: " + (retVal != null ? retVal.getClass().getName() : "null") + " ["+ retVal+ "]");
      }
    }
 catch (    CompilationFailedException e) {
      Debug.logError("Error in evaluating :" + whenStr + " : "+ e.getMessage(),null);
      throw new RuntimeException(e.getMessage());
    }
  }
  return isWhen;
}
