{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  if (!isCategoryMapInitialed()) {
    initCategoryMap(request);
  }
  String contextPath=request.getContextPath();
  StringBuilder urlBuilder=new StringBuilder();
  GenericValue product=null;
  urlBuilder.append((request.getSession().getServletContext()).getContextPath());
  if (urlBuilder.charAt(urlBuilder.length() - 1) != '/') {
    urlBuilder.append("/");
  }
  if (UtilValidate.isNotEmpty(productId)) {
    try {
      product=delegator.findOne("Product",UtilMisc.toMap("productId",productId),true);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Error looking up product info for productId [" + productId + "]: "+ e.toString(),module);
    }
  }
  if (product != null) {
    urlBuilder.append(CatalogUrlServlet.PRODUCT_REQUEST + "/");
  }
  if (UtilValidate.isNotEmpty(currentCategoryId)) {
    List<String> trail=CategoryWorker.getTrail(request);
    trail=CategoryWorker.adjustTrail(trail,currentCategoryId,previousCategoryId);
    if (!SeoConfigUtil.isCategoryUrlEnabled(contextPath)) {
      for (      String trailCategoryId : trail) {
        if ("TOP".equals(trailCategoryId))         continue;
        urlBuilder.append("/");
        urlBuilder.append(trailCategoryId);
      }
    }
 else {
      if (trail.size() > 1) {
        String lastCategoryId=trail.get(trail.size() - 1);
        if (!"TOP".equals(lastCategoryId)) {
          if (SeoConfigUtil.isCategoryNameEnabled()) {
            String categoryName=CatalogUrlSeoTransform.getCategoryIdNameMap().get(lastCategoryId);
            if (UtilValidate.isNotEmpty(categoryName)) {
              urlBuilder.append(categoryName);
              if (product != null) {
                urlBuilder.append(URL_HYPHEN);
              }
            }
          }
        }
      }
    }
  }
  if (UtilValidate.isNotEmpty(productId)) {
    if (product != null) {
      String productName=product.getString("productName");
      productName=SeoUrlUtil.replaceSpecialCharsUrl(productName);
      if (UtilValidate.isNotEmpty(productName)) {
        urlBuilder.append(productName + URL_HYPHEN);
      }
 else {
        ProductContentWrapper wrapper=new ProductContentWrapper(product,request);
        StringWrapper alternativeUrl=wrapper.get("ALTERNATIVE_URL");
        if (UtilValidate.isNotEmpty(alternativeUrl) && UtilValidate.isNotEmpty(alternativeUrl.toString())) {
          productName=SeoUrlUtil.replaceSpecialCharsUrl(alternativeUrl.toString());
          if (UtilValidate.isNotEmpty(productName)) {
            urlBuilder.append(productName + URL_HYPHEN);
          }
        }
      }
    }
    try {
      SeoConfigUtil.addSpecialProductId(productId);
      urlBuilder.append(productId.toLowerCase());
    }
 catch (    Exception e) {
      urlBuilder.append(productId);
    }
  }
  if (!urlBuilder.toString().endsWith("/") && UtilValidate.isNotEmpty(SeoConfigUtil.getCategoryUrlSuffix())) {
    urlBuilder.append(SeoConfigUtil.getCategoryUrlSuffix());
  }
  return urlBuilder.toString();
}
