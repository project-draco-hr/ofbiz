{
  if (!isCategoryMapInitialed()) {
    initCategoryMap(request);
  }
  StringBuilder urlBuilder=new StringBuilder();
  urlBuilder.append((request.getSession().getServletContext()).getContextPath());
  if (urlBuilder.length() == 0 || urlBuilder.charAt(urlBuilder.length() - 1) != '/') {
    urlBuilder.append("/");
  }
  urlBuilder.append(CatalogUrlServlet.CATEGORY_REQUEST + "/");
  if (UtilValidate.isNotEmpty(currentCategoryId)) {
    List<String> trail=CategoryWorker.getTrail(request);
    trail=CategoryWorker.adjustTrail(trail,currentCategoryId,previousCategoryId);
    if (trail.size() > 1) {
      String lastCategoryId=trail.get(trail.size() - 1);
      if (!"TOP".equals(lastCategoryId)) {
        String categoryName=CatalogUrlSeoTransform.getCategoryIdNameMap().get(lastCategoryId);
        if (UtilValidate.isNotEmpty(categoryName)) {
          urlBuilder.append(categoryName);
          urlBuilder.append(URL_HYPHEN);
          urlBuilder.append(lastCategoryId.trim().replaceAll(" ",URL_HYPHEN));
        }
 else {
          urlBuilder.append(lastCategoryId.trim().replaceAll(" ",URL_HYPHEN));
        }
      }
    }
  }
  if (!urlBuilder.toString().endsWith("/") && UtilValidate.isNotEmpty(SeoConfigUtil.getCategoryUrlSuffix())) {
    urlBuilder.append(SeoConfigUtil.getCategoryUrlSuffix());
  }
  if (UtilValidate.isNotEmpty(viewIndex)) {
    if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
      urlBuilder.append("?");
    }
    urlBuilder.append("viewIndex=" + viewIndex + "&");
  }
  if (UtilValidate.isNotEmpty(viewSize)) {
    if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
      urlBuilder.append("?");
    }
    urlBuilder.append("viewSize=" + viewSize + "&");
  }
  if (UtilValidate.isNotEmpty(viewSort)) {
    if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
      urlBuilder.append("?");
    }
    urlBuilder.append("viewSort=" + viewSort + "&");
  }
  if (UtilValidate.isNotEmpty(searchString)) {
    if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
      urlBuilder.append("?");
    }
    urlBuilder.append("searchString=" + searchString + "&");
  }
  if (urlBuilder.toString().endsWith("&")) {
    return urlBuilder.toString().substring(0,urlBuilder.toString().length() - 1);
  }
  return urlBuilder.toString();
}
