{
  if (startTime == 0) {
    startTime=RecurrenceUtil.now();
  }
  if (checkTime == 0) {
    checkTime=startTime;
  }
  if (getEndTime() != 0 && getEndTime() <= RecurrenceUtil.now()) {
    return 0;
  }
  if (getCount() != -1 && currentCount >= getCount()) {
    return 0;
  }
  Date nextRun=getNextFreq(startTime,checkTime);
  Calendar cal=Calendar.getInstance();
  Calendar checkTimeCal=Calendar.getInstance();
  cal.setTime(nextRun);
  checkTimeCal.setTime(new Date(checkTime));
switch (getFrequency()) {
case YEARLY:
    cal.add(Calendar.YEAR,-getIntervalInt());
  if (cal.get(Calendar.YEAR) != checkTimeCal.get(Calendar.YEAR)) {
    return 0;
  }
break;
case MONTHLY:
if (MONTHLY == getFrequency()) {
cal.add(Calendar.MONTH,-getIntervalInt());
if (cal.get(Calendar.MONTH) != checkTimeCal.get(Calendar.MONTH)) {
  return 0;
}
}
 else {
cal.set(Calendar.MONTH,checkTimeCal.get(Calendar.MONTH));
}
break;
case WEEKLY:
if (WEEKLY == getFrequency()) {
cal.add(Calendar.WEEK_OF_YEAR,-getIntervalInt());
if (cal.get(Calendar.WEEK_OF_YEAR) != checkTimeCal.get(Calendar.WEEK_OF_YEAR)) {
return 0;
}
}
 else {
cal.set(Calendar.WEEK_OF_YEAR,checkTimeCal.get(Calendar.WEEK_OF_YEAR));
}
break;
case DAILY:
if (DAILY == getFrequency()) {
cal.add(Calendar.DAY_OF_MONTH,-getIntervalInt());
if (cal.get(Calendar.DAY_OF_MONTH) != checkTimeCal.get(Calendar.DAY_OF_MONTH)) {
return 0;
}
}
 else {
cal.set(Calendar.DAY_OF_MONTH,checkTimeCal.get(Calendar.DAY_OF_MONTH));
}
break;
case HOURLY:
if (HOURLY == getFrequency()) {
cal.add(Calendar.HOUR_OF_DAY,-getIntervalInt());
if (cal.get(Calendar.HOUR_OF_DAY) != checkTimeCal.get(Calendar.HOUR_OF_DAY)) {
return 0;
}
}
 else {
cal.set(Calendar.HOUR_OF_DAY,checkTimeCal.get(Calendar.HOUR_OF_DAY));
}
break;
case MINUTELY:
if (MINUTELY == getFrequency()) {
cal.add(Calendar.MINUTE,-getIntervalInt());
if (cal.get(Calendar.MINUTE) != checkTimeCal.get(Calendar.MINUTE)) {
return 0;
}
}
 else {
cal.set(Calendar.MINUTE,checkTimeCal.get(Calendar.MINUTE));
}
break;
case SECONDLY:
if (SECONDLY == getFrequency()) {
cal.add(Calendar.SECOND,-getIntervalInt());
if (cal.get(Calendar.SECOND) != checkTimeCal.get(Calendar.SECOND)) {
return 0;
}
}
 else {
cal.set(Calendar.SECOND,checkTimeCal.get(Calendar.SECOND));
}
break;
}
if (validByRule(cal.getTime())) {
return cal.getTime().getTime();
}
return 0;
}
