{
  if (triggeringServiceSet == null)   triggeringServiceSet=new HashSet<ServiceArtifactInfo>();
  if (triggeredServiceSet == null)   triggeredServiceSet=new HashSet<ServiceArtifactInfo>();
  Map<String,Object> topLevelMap=new HashMap<String,Object>();
  topLevelMap.put("name",this.getDisplayPrefixedName());
  topLevelMap.put("className","EOGenericRecord");
  List<String> classPropertiesList=new LinkedList<String>();
  topLevelMap.put("classProperties",classPropertiesList);
  for (  ServiceEcaCondition ecaCondition : this.serviceEcaRule.getEcaConditionList()) {
    classPropertiesList.add(ecaCondition.getShortDisplayDescription(useMoreDetailedNames));
  }
  for (  ServiceEcaAction ecaAction : this.serviceEcaRule.getEcaActionList()) {
    if (useMoreDetailedNames) {
      classPropertiesList.add(ecaAction.getShortDisplayDescription());
    }
 else {
      classPropertiesList.add(ecaAction.getServiceName());
    }
  }
  List<Map<String,Object>> relationshipsMapList=new LinkedList<Map<String,Object>>();
  for (  ServiceArtifactInfo sai : triggeringServiceSet) {
    Map<String,Object> relationshipMap=new HashMap<String,Object>();
    relationshipsMapList.add(relationshipMap);
    relationshipMap.put("name",sai.getDisplayPrefixedName());
    relationshipMap.put("destination",sai.getDisplayPrefixedName());
    relationshipMap.put("isToMany","N");
    relationshipMap.put("isMandatory","Y");
  }
  for (  ServiceArtifactInfo sai : triggeredServiceSet) {
    Map<String,Object> relationshipMap=new HashMap<String,Object>();
    relationshipsMapList.add(relationshipMap);
    relationshipMap.put("name",sai.getDisplayPrefixedName());
    relationshipMap.put("destination",sai.getDisplayPrefixedName());
    relationshipMap.put("isToMany","Y");
    relationshipMap.put("isMandatory","Y");
  }
  if (relationshipsMapList.size() > 0) {
    topLevelMap.put("relationships",relationshipsMapList);
  }
  return topLevelMap;
}
