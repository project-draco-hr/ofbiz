{
  GenericDelegator delegator=dctx.getDelegator();
  String facilityId=(String)context.get("facilityId");
  String idValue=(String)context.get("idValue");
  GenericValue product=null;
  List productsFound=null;
  GenericValue productItem=null;
  if (UtilValidate.isNotEmpty(idValue)) {
    try {
      productsFound=delegator.findByAnd("GoodIdentificationAndProduct",UtilMisc.toMap("idValue",idValue),UtilMisc.toList("productId"));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
      throw new GeneralRuntimeException(e.getMessage());
    }
  }
  productItem=null;
  try {
    productItem=delegator.findByPrimaryKey("Product",UtilMisc.toMap("productId",idValue));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    throw new GeneralRuntimeException(e.getMessage());
  }
  if (productItem != null) {
    if (productsFound == null) {
      productsFound=new ArrayList();
    }
    productsFound.add(productItem);
  }
  Map result=ServiceUtil.returnSuccess();
  if (UtilValidate.isNotEmpty(productsFound)) {
    result.put("productList",productsFound);
  }
  return result;
}
