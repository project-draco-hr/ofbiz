{
  Map<String,Repository> repos=FastMap.newInstance();
  String configFilePath=JCRContainer.getConfigFilePath();
  Element configRootElement=null;
  try {
    configRootElement=ResourceLoader.getXmlRootElement(configFilePath);
  }
 catch (  GenericConfigException e) {
    Debug.logError(e,"Could not load the jcr configuration in file " + configFilePath,module);
  }
  if (configRootElement == null) {
    Debug.logError("No jcr configuration found in file " + configFilePath,module);
  }
  ClassLoader loader=Thread.currentThread().getContextClassLoader();
  for (  Element curElement : UtilXml.childElementList(configRootElement,"jcr")) {
    String name=curElement.getAttribute("name");
    if (repos.get(name) != null && (repos.get(name) instanceof Repository)) {
      continue;
    }
    String jndiName=curElement.getAttribute("jndi-name");
    if (UtilValidate.isNotEmpty(jndiName)) {
      try {
        repos.put(name,(Repository)JNDIContextFactory.getInitialContext("default").lookup(jndiName));
      }
 catch (      NamingException e) {
        Debug.logError(e,module);
      }
catch (      GenericConfigException e) {
        Debug.logError(e,module);
      }
      continue;
    }
    String factoryClass=curElement.getAttribute("class");
    if (UtilValidate.isNotEmpty(factoryClass)) {
      try {
        repos.put(name,createFromFactory(name,loader,factoryClass));
      }
 catch (      Exception e) {
        Debug.logError(e,module);
      }
    }
  }
  return repos;
}
