{
  String webappName=UtilHttp.getApplicationName(request);
  String cacheKey=webappName + "::" + resourceName;
  Map modelTreeMap=(Map)treeWebappCache.get(cacheKey);
  if (modelTreeMap == null) {
synchronized (TreeFactory.class) {
      modelTreeMap=(Map)treeWebappCache.get(cacheKey);
      if (modelTreeMap == null) {
        ServletContext servletContext=(ServletContext)request.getAttribute("servletContext");
        GenericDelegator delegator=(GenericDelegator)request.getAttribute("delegator");
        LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
        URL treeFileUrl=servletContext.getResource(resourceName);
        Document treeFileDoc=UtilXml.readXmlDocument(treeFileUrl,true);
        modelTreeMap=readTreeDocument(treeFileDoc,delegator,dispatcher);
        treeWebappCache.put(cacheKey,modelTreeMap);
      }
    }
  }
  ModelTree modelTree=(ModelTree)modelTreeMap.get(treeName);
  if (modelTree == null) {
    throw new IllegalArgumentException("Could not find tree with name [" + treeName + "] in webapp resource ["+ resourceName+ "] in the webapp ["+ webappName+ "]");
  }
  return modelTree;
}
