{
  String globalStr=this.globalExdr.expandString(context);
  boolean global="true".equals(globalStr);
  Object newValue=null;
  if (!this.fromField.isEmpty()) {
    newValue=this.fromField.get(context);
    if (Debug.verboseOn())     Debug.logVerbose("In screen getting value for field from [" + this.fromField.getOriginalName() + "]: "+ newValue,module);
  }
 else   if (!this.valueExdr.isEmpty()) {
    newValue=this.valueExdr.expandString(context);
  }
  if (ObjectType.isEmpty(newValue) && !this.defaultExdr.isEmpty()) {
    newValue=this.defaultExdr.expandString(context);
  }
  if (UtilValidate.isNotEmpty(this.type)) {
    if ("NewMap".equals(this.type)) {
      newValue=FastMap.newInstance();
    }
 else     if ("NewList".equals(this.type)) {
      newValue=FastList.newInstance();
    }
 else {
      try {
        newValue=ObjectType.simpleTypeConvert(newValue,this.type,null,(TimeZone)context.get("timeZone"),(Locale)context.get("locale"),true);
      }
 catch (      GeneralException e) {
        String errMsg="Could not convert field value for the field: [" + this.field.getOriginalName() + "] to the ["+ this.type+ "] type for the value ["+ newValue+ "]: "+ e.toString();
        Debug.logError(e,errMsg,module);
        throw new IllegalArgumentException(errMsg);
      }
    }
  }
  if (Debug.verboseOn())   Debug.logVerbose("In screen setting field [" + this.field.getOriginalName() + "] to value: "+ newValue,module);
  this.field.put(context,newValue);
  if (global) {
    Map<String,Object> globalCtx=UtilGenerics.checkMap(context.get("globalContext"));
    if (globalCtx != null) {
      this.field.put(globalCtx,newValue);
    }
  }
  Map<String,Object> page=UtilGenerics.checkMap(context.get("page"));
  if (page != null) {
    this.field.put(page,newValue);
  }
}
