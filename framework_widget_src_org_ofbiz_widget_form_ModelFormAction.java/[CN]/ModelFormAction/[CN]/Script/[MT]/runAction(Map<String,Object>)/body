{
  if (location.endsWith(".bsh")) {
    try {
      BshUtil.runBshAtLocation(location,context);
    }
 catch (    GeneralException e) {
      String errMsg="Error running BSH script at location [" + location + "]: "+ e.toString();
      Debug.logError(e,errMsg,module);
      throw new IllegalArgumentException(errMsg);
    }
  }
 else   if (location.endsWith(".groovy")) {
    try {
      groovy.lang.Script script=InvokerHelper.createScript(GroovyUtil.getScriptClassFromLocation(location),GroovyUtil.getBinding(context));
      if (UtilValidate.isEmpty(method)) {
        script.run();
      }
 else {
        script.invokeMethod(method,EMPTY_ARGS);
      }
    }
 catch (    GeneralException e) {
      String errMsg="Error running Groovy script at location [" + location + "]: "+ e.toString();
      Debug.logError(e,errMsg,module);
      throw new IllegalArgumentException(errMsg);
    }
  }
 else   if (location.endsWith(".xml")) {
    Map<String,Object> localContext=FastMap.newInstance();
    localContext.putAll(context);
    DispatchContext ctx=this.modelForm.dispatchContext;
    MethodContext methodContext=new MethodContext(ctx,localContext,null);
    try {
      SimpleMethod.runSimpleMethod(location,method,methodContext);
      context.putAll(methodContext.getResults());
    }
 catch (    MiniLangException e) {
      throw new IllegalArgumentException("Error running simple method at location [" + location + "]",e);
    }
  }
 else {
    throw new IllegalArgumentException("For screen script actions the script type is not yet support for location:" + location);
  }
}
