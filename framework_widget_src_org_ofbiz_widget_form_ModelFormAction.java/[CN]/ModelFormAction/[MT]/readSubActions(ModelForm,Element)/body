{
  List<ModelWidgetAction> actions=new LinkedList<ModelWidgetAction>();
  for (  Element actionElement : UtilXml.childElementList(parentElement)) {
    if ("set".equals(actionElement.getNodeName())) {
      actions.add(new SetField(modelForm,actionElement));
    }
 else     if ("property-map".equals(actionElement.getNodeName())) {
      actions.add(new PropertyMap(modelForm,actionElement));
    }
 else     if ("property-to-field".equals(actionElement.getNodeName())) {
      actions.add(new PropertyToField(modelForm,actionElement));
    }
 else     if ("script".equals(actionElement.getNodeName())) {
      actions.add(new Script(modelForm,actionElement));
    }
 else     if ("service".equals(actionElement.getNodeName())) {
      actions.add(new Service(modelForm,actionElement));
    }
 else     if ("entity-one".equals(actionElement.getNodeName())) {
      actions.add(new EntityOne(modelForm,actionElement));
    }
 else     if ("entity-and".equals(actionElement.getNodeName())) {
      actions.add(new EntityAnd(modelForm,actionElement));
    }
 else     if ("entity-condition".equals(actionElement.getNodeName())) {
      actions.add(new EntityCondition(modelForm,actionElement));
    }
 else     if ("call-parent-actions".equals(actionElement.getNodeName())) {
      actions.add(new CallParentActions(modelForm,actionElement));
    }
 else {
      throw new IllegalArgumentException("Action element not supported with name: " + actionElement.getNodeName());
    }
  }
  return actions;
}
