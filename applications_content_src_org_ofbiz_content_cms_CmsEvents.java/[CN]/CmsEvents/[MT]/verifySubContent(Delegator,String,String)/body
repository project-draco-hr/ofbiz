{
  List<GenericValue> contentAssoc=delegator.findByAnd("ContentAssoc",UtilMisc.toMap("contentId",contentIdFrom,"contentIdTo",contentId,"contentAssocTypeId","SUB_CONTENT"));
  boolean hasContent=false;
  if (UtilValidate.isNotEmpty(contentAssoc)) {
    hasContent=true;
  }
  contentAssoc=EntityUtil.filterByDate(contentAssoc);
  if (UtilValidate.isEmpty(contentAssoc)) {
    List<GenericValue> assocs=delegator.findByAnd("ContentAssoc",UtilMisc.toMap("contentId",contentIdFrom));
    assocs=EntityUtil.filterByDate(assocs);
    if (assocs != null) {
      for (      GenericValue assoc : assocs) {
        int subContentStatusCode=verifySubContent(delegator,contentId,assoc.getString("contentIdTo"));
        if (subContentStatusCode == HttpServletResponseWrapper.SC_OK) {
          return HttpServletResponseWrapper.SC_OK;
        }
 else         if (subContentStatusCode == HttpServletResponseWrapper.SC_GONE) {
          hasContent=true;
        }
      }
    }
  }
 else {
    if (Debug.verboseOn())     Debug.logVerbose("Found assocs: " + contentAssoc,module);
    return HttpServletResponseWrapper.SC_OK;
  }
  if (hasContent)   return HttpServletResponseWrapper.SC_GONE;
  return HttpServletResponseWrapper.SC_NOT_FOUND;
}
