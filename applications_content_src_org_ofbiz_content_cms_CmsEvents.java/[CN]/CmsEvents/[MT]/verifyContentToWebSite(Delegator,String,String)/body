{
  List<GenericValue> publishPoints=null;
  boolean hasContent=false;
  try {
    publishPoints=delegator.findByAndCache("WebSiteContent",UtilMisc.toMap("webSiteId",webSiteId,"contentId",contentId,"webSiteContentTypeId","PUBLISH_POINT"),UtilMisc.toList("-fromDate"));
  }
 catch (  GenericEntityException e) {
    throw e;
  }
  if (UtilValidate.isNotEmpty(publishPoints)) {
    hasContent=true;
  }
  publishPoints=EntityUtil.filterByDate(publishPoints);
  if (UtilValidate.isNotEmpty(publishPoints)) {
    if (Debug.verboseOn())     Debug.logVerbose("Found publish points: " + publishPoints,module);
    return HttpServletResponseWrapper.SC_OK;
  }
 else {
    List<GenericValue> topLevelContentValues=delegator.findByAndCache("WebSiteContent",UtilMisc.toMap("webSiteId",webSiteId,"webSiteContentTypeId","PUBLISH_POINT"),UtilMisc.toList("-fromDate"));
    topLevelContentValues=EntityUtil.filterByDate(topLevelContentValues);
    if (topLevelContentValues != null) {
      for (      GenericValue point : topLevelContentValues) {
        int subContentStatusCode=verifySubContent(delegator,contentId,point.getString("contentId"));
        if (subContentStatusCode == HttpServletResponseWrapper.SC_OK) {
          return HttpServletResponseWrapper.SC_OK;
        }
 else         if (subContentStatusCode == HttpServletResponseWrapper.SC_GONE) {
          hasContent=true;
        }
      }
    }
  }
  if (hasContent)   return HttpServletResponseWrapper.SC_GONE;
  return HttpServletResponseWrapper.SC_NOT_FOUND;
}
