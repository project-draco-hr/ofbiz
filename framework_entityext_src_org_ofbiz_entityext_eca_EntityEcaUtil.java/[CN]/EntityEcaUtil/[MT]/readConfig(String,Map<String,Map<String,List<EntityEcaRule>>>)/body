{
  EntityEcaReader entityEcaReaderInfo=null;
  try {
    entityEcaReaderInfo=EntityConfig.getInstance().getEntityEcaReader(entityEcaReaderName);
  }
 catch (  GenericEntityConfException e) {
    Debug.logError(e,"Exception thrown while getting entity-eca-reader config with name: " + entityEcaReaderName,module);
  }
  if (entityEcaReaderInfo == null) {
    Debug.logError("BAD ERROR: Could not find entity-eca-reader config with name: " + entityEcaReaderName,module);
    return;
  }
  List<Future<List<EntityEcaRule>>> futures=new LinkedList<Future<List<EntityEcaRule>>>();
  for (  Resource eecaResourceElement : entityEcaReaderInfo.getResourceList()) {
    ResourceHandler handler=new MainResourceHandler(EntityConfig.ENTITY_ENGINE_XML_FILENAME,eecaResourceElement.getLoader(),eecaResourceElement.getLocation());
    futures.add(ExecutionPool.GLOBAL_FORK_JOIN.submit(createEcaLoaderCallable(handler)));
  }
  for (  ComponentConfig.EntityResourceInfo componentResourceInfo : ComponentConfig.getAllEntityResourceInfos("eca")) {
    if (entityEcaReaderName.equals(componentResourceInfo.readerName)) {
      futures.add(ExecutionPool.GLOBAL_FORK_JOIN.submit(createEcaLoaderCallable(componentResourceInfo.createResourceHandler())));
    }
  }
  for (  List<EntityEcaRule> oneFileRules : ExecutionPool.getAllFutures(futures)) {
    for (    EntityEcaRule rule : oneFileRules) {
      String entityName=rule.getEntityName();
      String eventName=rule.getEventName();
      Map<String,List<EntityEcaRule>> eventMap=ecaCache.get(entityName);
      List<EntityEcaRule> rules=null;
      if (eventMap == null) {
        eventMap=new HashMap<String,List<EntityEcaRule>>();
        rules=new LinkedList<EntityEcaRule>();
        ecaCache.put(entityName,eventMap);
        eventMap.put(eventName,rules);
      }
 else {
        rules=eventMap.get(eventName);
        if (rules == null) {
          rules=new LinkedList<EntityEcaRule>();
          eventMap.put(eventName,rules);
        }
      }
      rules.add(rule);
    }
  }
}
