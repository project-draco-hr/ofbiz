{
  GenericValue portalPage=null;
  if (UtilValidate.isNotEmpty(portalPageId)) {
    Delegator delegator=WidgetWorker.getDelegator(context);
    try {
      String userLoginId="_NA_";
      if (UtilValidate.isNotEmpty(context.get("userLogin"))) {
        userLoginId=((GenericValue)context.get("userLogin")).getString("userLoginId");
      }
      EntityCondition cond=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("portalPageId",EntityOperator.EQUALS,portalPageId),EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("ownerUserLoginId",EntityOperator.EQUALS,"_NA_"),EntityCondition.makeCondition("ownerUserLoginId",EntityOperator.EQUALS,userLoginId)),EntityOperator.OR)),EntityOperator.AND);
      List<GenericValue> portalPages=EntityQuery.use(delegator).from("PortalPage").where(cond).queryList();
      if (UtilValidate.isNotEmpty(portalPages)) {
        portalPage=EntityUtil.getFirst(portalPages);
      }
      cond=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("originalPortalPageId",EntityOperator.EQUALS,portalPageId),EntityCondition.makeCondition("ownerUserLoginId",EntityOperator.EQUALS,userLoginId)),EntityOperator.AND);
      List<GenericValue> privateDerivedPortalPages=EntityQuery.use(delegator).from("PortalPage").where(cond).queryList();
      if (UtilValidate.isNotEmpty(privateDerivedPortalPages)) {
        portalPage=EntityUtil.getFirst(privateDerivedPortalPages);
      }
    }
 catch (    GenericEntityException e) {
      Debug.logError("Could not retrieve portalpage:" + e.getMessage(),module);
    }
  }
  return portalPage;
}
