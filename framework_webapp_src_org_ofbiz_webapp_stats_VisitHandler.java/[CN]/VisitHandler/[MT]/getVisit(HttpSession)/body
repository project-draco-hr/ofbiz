{
  if (!UtilProperties.propertyValueEqualsIgnoreCase("serverstats","stats.persist.visit","false")) {
    GenericValue visit=(GenericValue)session.getAttribute("visit");
    if (visit == null) {
synchronized (session) {
        visit=(GenericValue)session.getAttribute("visit");
        if (visit == null) {
          Delegator delegator=null;
          String delegatorName=(String)session.getAttribute("delegatorName");
          if (UtilValidate.isNotEmpty(delegatorName)) {
            delegator=DelegatorFactory.getDelegator(delegatorName);
          }
          if (delegator == null) {
            delegator=(Delegator)session.getServletContext().getAttribute("delegator");
          }
          if (delegator == null) {
            Debug.logError("Could not find delegator with delegatorName [" + delegatorName + "] in session, or a delegator attribute in the ServletContext, not creating Visit entity",module);
          }
 else {
            String webappName=(String)session.getAttribute("_WEBAPP_NAME_");
            Locale initialLocaleObj=(Locale)session.getAttribute("_CLIENT_LOCALE_");
            String initialRequest=(String)session.getAttribute("_CLIENT_REQUEST_");
            String initialReferrer=(String)session.getAttribute("_CLIENT_REFERER_");
            String initialUserAgent=(String)session.getAttribute("_CLIENT_USER_AGENT_");
            String initialLocale=initialLocaleObj != null ? initialLocaleObj.toString() : "";
            if (UtilValidate.isEmpty(webappName)) {
              Debug.logInfo(new Exception(),"The webappName was empty, somehow the initial request settings were missing.",module);
            }
            visit=delegator.makeValue("Visit");
            visit.set("sessionId",session.getId());
            visit.set("fromDate",new Timestamp(session.getCreationTime()));
            visit.set("initialLocale",initialLocale);
            if (initialRequest != null)             visit.set("initialRequest",initialRequest.length() > 250 ? initialRequest.substring(0,250) : initialRequest);
            if (initialReferrer != null)             visit.set("initialReferrer",initialReferrer.length() > 250 ? initialReferrer.substring(0,250) : initialReferrer);
            if (initialUserAgent != null)             visit.set("initialUserAgent",initialUserAgent.length() > 250 ? initialUserAgent.substring(0,250) : initialUserAgent);
            visit.set("webappName",webappName);
            if (UtilProperties.propertyValueEquals("serverstats","stats.proxy.enabled","true")) {
              visit.set("clientIpAddress",session.getAttribute("_CLIENT_FORWARDED_FOR_"));
            }
 else {
              visit.set("clientIpAddress",session.getAttribute("_CLIENT_REMOTE_ADDR_"));
            }
            visit.set("clientHostName",session.getAttribute("_CLIENT_REMOTE_HOST_"));
            visit.set("clientUser",session.getAttribute("_CLIENT_REMOTE_USER_"));
            GenericValue visitor=(GenericValue)session.getAttribute("visitor");
            if (visitor != null) {
              String visitorId=visitor.getString("visitorId");
              try {
                GenericValue checkVisitor=delegator.findOne("Visitor",false,"visitorId",visitorId);
                if (checkVisitor == null) {
                  GenericValue newVisitor=delegator.create("Visitor","visitorId",visitorId);
                  session.setAttribute("visitor",newVisitor);
                }
                visit.set("visitorId",visitorId);
              }
 catch (              GenericEntityException e) {
                Debug.logWarning("Problem checking the visitorId: " + e.toString(),module);
              }
            }
            if (address != null) {
              visit.set("serverIpAddress",address.getHostAddress());
              visit.set("serverHostName",address.getHostName());
            }
            try {
              visit=delegator.createSetNextSeqId(visit);
              session.setAttribute("visit",visit);
            }
 catch (            GenericEntityException e) {
              Debug.logError(e,"Could not create new visit:",module);
              visit=null;
            }
          }
        }
      }
    }
    if (visit == null) {
      Debug.logWarning("Could not find or create the visit...",module);
    }
    return visit;
  }
  return null;
}
