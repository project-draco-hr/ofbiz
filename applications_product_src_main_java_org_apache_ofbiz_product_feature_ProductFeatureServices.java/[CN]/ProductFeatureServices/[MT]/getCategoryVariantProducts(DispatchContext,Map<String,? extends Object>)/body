{
  Map<String,Object> results=new HashMap<String,Object>();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  List<GenericValue> productFeatures=UtilGenerics.checkList(context.get("productFeatures"));
  String productCategoryId=(String)context.get("productCategoryId");
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> result;
  try {
    result=dispatcher.runSync("getProductCategoryMembers",UtilMisc.toMap("categoryId",productCategoryId));
  }
 catch (  GenericServiceException ex) {
    Debug.logError("Cannot get category memebers for " + productCategoryId + " due to error: "+ ex.getMessage(),module);
    return ServiceUtil.returnError(ex.getMessage());
  }
  List<GenericValue> memberProducts=UtilGenerics.checkList(result.get("categoryMembers"));
  if ((memberProducts != null) && (memberProducts.size() > 0)) {
    Map<String,String> featuresByType=new HashMap<String,String>();
    for (    GenericValue nextFeature : productFeatures) {
      featuresByType.put(nextFeature.getString("productFeatureTypeId"),nextFeature.getString("productFeatureId"));
    }
    List<GenericValue> products=new LinkedList<GenericValue>();
    for (    GenericValue memberProduct : memberProducts) {
      try {
        result=dispatcher.runSync("getProductVariant",UtilMisc.toMap("productId",memberProduct.getString("productId"),"selectedFeatures",featuresByType));
      }
 catch (      GenericServiceException ex) {
        Debug.logError("Cannot get product variants for " + memberProduct.getString("productId") + " due to error: "+ ex.getMessage(),module);
        return ServiceUtil.returnError(ex.getMessage());
      }
      List<GenericValue> variantProducts=UtilGenerics.checkList(result.get("products"));
      if ((variantProducts != null) && (variantProducts.size() > 0)) {
        products.addAll(variantProducts);
      }
 else {
        Debug.logWarning("Product " + memberProduct.getString("productId") + " did not have any variants for the given features",module);
      }
    }
    if (products.size() == 0) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ProductCategoryNoVariants",locale));
    }
 else {
      results=ServiceUtil.returnSuccess();
      results.put("products",products);
    }
  }
 else {
    Debug.logWarning("No products found in " + productCategoryId,module);
  }
  return results;
}
