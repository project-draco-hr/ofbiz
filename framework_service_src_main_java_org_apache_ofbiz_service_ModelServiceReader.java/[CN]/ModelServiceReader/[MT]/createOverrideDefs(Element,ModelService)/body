{
  for (  Element overrideElement : UtilXml.childElementList(baseElement,"override")) {
    String name=UtilXml.checkEmpty(overrideElement.getAttribute("name"));
    ModelParam param=service.getParam(name);
    boolean directToParams=true;
    if (param == null) {
      if (!service.inheritedParameters && (service.implServices.size() > 0 || "group".equals(service.engineName))) {
        directToParams=false;
        param=new ModelParam();
        param.name=name;
      }
 else {
        Debug.logWarning("No parameter found for override parameter named: " + name + " in service "+ service.name,module);
      }
    }
    if (param != null) {
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("type"))) {
        param.type=UtilXml.checkEmpty(overrideElement.getAttribute("type")).intern();
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("mode"))) {
        param.mode=UtilXml.checkEmpty(overrideElement.getAttribute("mode")).intern();
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("entity-name"))) {
        param.entityName=UtilXml.checkEmpty(overrideElement.getAttribute("entity-name")).intern();
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("field-name"))) {
        param.fieldName=UtilXml.checkEmpty(overrideElement.getAttribute("field-name")).intern();
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("form-label"))) {
        param.formLabel=UtilXml.checkEmpty(overrideElement.getAttribute("form-label")).intern();
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("optional"))) {
        param.optional="true".equalsIgnoreCase(overrideElement.getAttribute("optional"));
        param.overrideOptional=true;
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("form-display"))) {
        param.formDisplay=!"false".equalsIgnoreCase(overrideElement.getAttribute("form-display"));
        param.overrideFormDisplay=true;
      }
      if (UtilValidate.isNotEmpty(overrideElement.getAttribute("allow-html"))) {
        param.allowHtml=UtilXml.checkEmpty(overrideElement.getAttribute("allow-html")).intern();
      }
      String defValue=overrideElement.getAttribute("default-value");
      if (UtilValidate.isNotEmpty(defValue)) {
        param.setDefaultValue(defValue);
      }
      this.addValidators(overrideElement,param);
      if (directToParams) {
        service.addParam(param);
      }
 else {
        service.overrideParameters.add(param);
      }
    }
  }
}
