{
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  Map<String,Object> requestParams=UtilHttp.getParameterMap(request);
  Locale locale=UtilHttp.getLocale(request);
  String productStoreId=(String)requestParams.get("productStoreId");
  HttpSession session=request.getSession(true);
  GenericValue userLogin=(GenericValue)session.getAttribute("userLogin");
  try {
    ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
    Map<String,Object> addItemObject=getAddItemListingObject(request,apiContext);
    List<Map<String,Object>> listAddItem=null;
    if (UtilValidate.isNotEmpty(addItemObject.get("itemListing"))) {
      listAddItem=UtilGenerics.checkList(addItemObject.get("itemListing"));
    }
 else {
      listAddItem=FastList.newInstance();
    }
    for (    Map<String,Object> itemObj : listAddItem) {
      updateQuantityInventoryProduct(itemObj,productStoreId,locale,delegator,dispatcher,userLogin);
      dispatcher.runSync("exportProductEachItem",UtilMisc.toMap("itemObject",itemObj));
    }
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
    request.setAttribute("_ERROR_MESSAGE_","Exception: ".concat(e.getMessage()));
    return "error";
  }
  return "success";
}
