{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  Map<String,Object> requestParams=UtilHttp.getParameterMap(request);
  Locale locale=UtilHttp.getLocale(request);
  String productStoreId=(String)requestParams.get("productStoreId");
  try {
    ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
    Map<String,Object> addItemObject=getAddItemListingObject(request,apiContext);
    List<Map<String,Object>> listAddItem=null;
    if (UtilValidate.isNotEmpty(addItemObject.get("itemListing"))) {
      listAddItem=(List<Map<String,Object>>)addItemObject.get("itemListing");
    }
 else {
      listAddItem=FastList.newInstance();
    }
    int i=0;
    for (    Map<String,Object> itemObj : listAddItem) {
      AddItemCall addItemCall=(AddItemCall)itemObj.get("addItemCall");
      ItemType item=addItemCall.getItem();
      String SKU=item.getSKU();
      if (UtilValidate.isNotEmpty(requestParams.get("productId"))) {
        String productId=requestParams.get("productId").toString();
        if (productId.equals(SKU)) {
          listAddItem.remove(i);
        }
      }
      i++;
    }
    if (listAddItem.size() <= 0) {
      removeItemListingObject(request,apiContext);
    }
    request.setAttribute("productStoreId",requestParams.get("productStoreId"));
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
    request.setAttribute("_ERROR_MESSAGE_","Exception: ".concat(e.getMessage()));
    return "error";
  }
  return "success";
}
