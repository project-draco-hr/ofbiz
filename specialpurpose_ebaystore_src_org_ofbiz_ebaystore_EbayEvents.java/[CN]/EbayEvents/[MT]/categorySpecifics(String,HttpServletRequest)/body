{
  Map<String,Map<String,List<String>>> recommendationMap=FastMap.newInstance();
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  Map<String,Object> requestParams=UtilHttp.getParameterMap(request);
  Locale locale=UtilHttp.getLocale(request);
  String productStoreId=(String)requestParams.get("productStoreId");
  try {
    ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
    GetCategorySpecificsCall categorySpecifics=new GetCategorySpecificsCall(apiContext);
    String[] categoryIds={categoryId};
    categorySpecifics.setCategoryID(categoryIds);
    DetailLevelCodeType[] detailLevel=new DetailLevelCodeType[]{DetailLevelCodeType.RETURN_ALL,DetailLevelCodeType.ITEM_RETURN_ATTRIBUTES,DetailLevelCodeType.ITEM_RETURN_DESCRIPTION};
    categorySpecifics.setDetailLevel(detailLevel);
    RecommendationsType[] recommend=categorySpecifics.getCategorySpecifics();
    for (int i=0; i < recommend.length; i++) {
      NameRecommendationType[] nameRecommend=recommend[i].getNameRecommendation();
      Map<String,List<String>> nameRecommendationMap=FastMap.newInstance();
      for (int j=0; j < nameRecommend.length; j++) {
        String name=nameRecommend[j].getName();
        List<String> valueList=FastList.newInstance();
        ValueRecommendationType[] valueRecommend=nameRecommend[j].getValueRecommendation();
        for (int k=0; k < valueRecommend.length; k++) {
          String value=valueRecommend[k].getValue();
          valueList.add(value);
        }
        nameRecommendationMap.put(name,valueList);
      }
      recommendationMap.put("categorySpecifics",nameRecommendationMap);
    }
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
    return null;
  }
  return recommendationMap;
}
