{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=ctx.getDelegator();
  String workEffortId=(String)context.get("workEffortId");
  Locale locale=(Locale)context.get("locale");
  try {
    GenericValue workEffort=EntityQuery.use(delegator).from("WorkEffort").where("workEffortId",workEffortId).queryOne();
    if (workEffort == null) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingWorkEffortNotExist",locale) + " " + workEffortId);
    }
    List<GenericValue> costComponents=EntityQuery.use(delegator).from("CostComponent").where("workEffortId",workEffortId).filterByDate().queryList();
    result.put("costComponents",costComponents);
    BigDecimal totalCost=ZERO;
    BigDecimal totalCostNoMaterials=ZERO;
    for (    GenericValue costComponent : costComponents) {
      BigDecimal cost=costComponent.getBigDecimal("cost");
      totalCost=totalCost.add(cost);
      if (!"ACTUAL_MAT_COST".equals(costComponent.getString("costComponentTypeId"))) {
        totalCostNoMaterials=totalCostNoMaterials.add(cost);
      }
    }
    result.put("totalCost",totalCost);
    result.put("totalCostNoMaterials",totalCostNoMaterials);
  }
 catch (  GenericEntityException gee) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunUnableToFindCostsForWorkEffort",UtilMisc.toMap("workEffortId",workEffortId,"errorString",gee.getMessage()),locale));
  }
  return result;
}
