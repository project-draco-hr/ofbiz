{
  Delegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String inventoryItemId=(String)context.get("inventoryItemId");
  Locale locale=(Locale)context.get("locale");
  try {
    GenericValue inventoryItem=delegator.findByPrimaryKey("InventoryItem",UtilMisc.toMap("inventoryItemId",inventoryItemId));
    if (inventoryItem == null) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceProduct,"ProductInventoryItemNotFound",UtilMisc.toMap("inventoryItemId",inventoryItemId),locale));
    }
    if (inventoryItem.get("availableToPromiseTotal") != null && inventoryItem.getBigDecimal("availableToPromiseTotal").compareTo(ZERO) <= 0) {
      return ServiceUtil.returnSuccess();
    }
    GenericValue product=inventoryItem.getRelatedOne("Product");
    if (product == null) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceProduct,"ProductProductNotFound",locale) + " " + inventoryItem.get("productId"));
    }
    if (EntityTypeUtil.hasParentType(delegator,"ProductType","productTypeId",product.getString("productTypeId"),"parentTypeId","MARKETING_PKG_AUTO")) {
      Map<String,Object> serviceContext=UtilMisc.toMap("inventoryItemId",inventoryItemId,"userLogin",userLogin);
      dispatcher.runSync("decomposeInventoryItem",serviceContext);
    }
  }
 catch (  Exception e) {
    Debug.logError(e,"Problem calling the checkDecomposeInventoryItem service",module);
    return ServiceUtil.returnError(e.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
