{
  Map result=new HashMap();
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String productionRunId=(String)context.get("productionRunId");
  if (!UtilValidate.isEmpty(productionRunId)) {
    ProductionRun productionRun=new ProductionRun(productionRunId,delegator,dispatcher);
    if (productionRun.exist()) {
      if (!"PRUN_CREATED".equals(productionRun.getGenericValue().getString("currentStatusId")) && !"PRUN_SCHEDULED".equals(productionRun.getGenericValue().getString("currentStatusId"))) {
        return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunPrinted",locale));
      }
      BigDecimal quantity=(BigDecimal)context.get("quantity");
      if (quantity != null && !quantity.equals(productionRun.getQuantity())) {
        productionRun.setQuantity(quantity);
      }
      Timestamp estimatedStartDate=(Timestamp)context.get("estimatedStartDate");
      if (estimatedStartDate != null && !estimatedStartDate.equals(productionRun.getEstimatedStartDate())) {
        productionRun.setEstimatedStartDate(estimatedStartDate);
      }
      String workEffortName=(String)context.get("workEffortName");
      if (workEffortName != null) {
        productionRun.setProductionRunName(workEffortName);
      }
      String description=(String)context.get("description");
      if (description != null) {
        productionRun.setDescription(description);
      }
      String facilityId=(String)context.get("facilityId");
      if (facilityId != null) {
        productionRun.getGenericValue().set("facilityId",facilityId);
      }
      boolean updateEstimatedOrderDates=productionRun.isUpdateCompletionDate();
      if (productionRun.store()) {
        if (updateEstimatedOrderDates && "PRUN_SCHEDULED".equals(productionRun.getGenericValue().getString("currentStatusId"))) {
          try {
            Map resultService=dispatcher.runSync("setEstimatedDeliveryDates",UtilMisc.toMap("userLogin",userLogin));
          }
 catch (          GenericServiceException e) {
            Debug.logError(e,"Problem calling the setEstimatedDeliveryDates service",module);
            return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunNotUpdated",locale));
          }
        }
        return ServiceUtil.returnSuccess();
      }
 else {
        Debug.logError("productionRun.store() fail for productionRunId =" + productionRunId,module);
        return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunNotUpdated",locale));
      }
    }
    Debug.logError("no productionRun for productionRunId =" + productionRunId,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunNotUpdated",locale));
  }
  Debug.logError("service updateProductionRun call with productionRunId empty",module);
  return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunNotUpdated",locale));
}
