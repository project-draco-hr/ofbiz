{
  Map result=ServiceUtil.returnSuccess();
  Delegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String productionRunId=(String)context.get("productionRunId");
  ProductionRun productionRun=new ProductionRun(productionRunId,delegator,dispatcher);
  if (!productionRun.exist()) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunNotExists",locale));
  }
  List tasks=productionRun.getProductionRunRoutingTasks();
  GenericValue oneTask=null;
  String taskId=null;
  for (int i=0; i < tasks.size(); i++) {
    oneTask=(GenericValue)tasks.get(i);
    taskId=oneTask.getString("workEffortId");
    try {
      Map serviceContext=null;
      Map resultService=null;
      serviceContext=new HashMap();
      serviceContext.put("productionRunId",productionRunId);
      serviceContext.put("taskId",taskId);
      serviceContext.put("userLogin",userLogin);
      resultService=dispatcher.runSync("quickRunProductionRunTask",serviceContext);
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,"Problem calling the quickRunProductionRunTask service",module);
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ManufacturingProductionRunStatusNotChanged",locale));
    }
  }
  return result;
}
