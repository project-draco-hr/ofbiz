{
  try {
    GenericDelegator delegator=(GenericDelegator)context.get("delegator");
    GenericValue content=null;
    String expandedDataResourceId=getDataResourceId(context);
    if (UtilValidate.isEmpty(expandedDataResourceId)) {
      String expandedContentId=getContentId(context);
      if (!(context instanceof MapStack)) {
        context=MapStack.create(context);
      }
      ((MapStack)context).push();
      context.put("contentId",expandedContentId);
      if (UtilValidate.isNotEmpty(expandedContentId)) {
        content=delegator.findByPrimaryKeyCache("Content",UtilMisc.toMap("contentId",expandedContentId));
      }
 else {
        String errMsg="contentId is empty.";
        Debug.logError(errMsg,module);
        return;
      }
      if (content != null) {
        expandedDataResourceId=content.getString("dataResourceId");
        this.dataResourceId=new FlexibleStringExpander(expandedDataResourceId);
      }
 else {
        String errMsg="Could not find content with contentId [" + expandedContentId + "] ";
        Debug.logError(errMsg,module);
        throw new RuntimeException(errMsg);
      }
    }
    GenericValue dataResource=null;
    if (UtilValidate.isNotEmpty(expandedDataResourceId)) {
      dataResource=delegator.findByPrimaryKeyCache("DataResource",UtilMisc.toMap("dataResourceId",expandedDataResourceId));
    }
    String mimeTypeId=null;
    if (dataResource != null) {
      mimeTypeId=dataResource.getString("mimeTypeId");
    }
    if (UtilValidate.isNotEmpty(mimeTypeId) && ((mimeTypeId.indexOf("application") >= 0) || (mimeTypeId.indexOf("image")) >= 0)) {
      screenStringRenderer.renderContentFrame(writer,context,this);
    }
 else {
      screenStringRenderer.renderContentBegin(writer,context,this);
      screenStringRenderer.renderContentBody(writer,context,this);
      screenStringRenderer.renderContentEnd(writer,context,this);
    }
    ((MapStack)context).pop();
  }
 catch (  IOException e) {
    String errMsg="Error rendering content with contentId [" + getContentId(context) + "]: "+ e.toString();
    Debug.logError(e,errMsg,module);
    throw new RuntimeException(errMsg);
  }
catch (  GenericEntityException e) {
    String errMsg="Error obtaining content with contentId [" + getContentId(context) + "]: "+ e.toString();
    Debug.logError(e,errMsg,module);
    throw new RuntimeException(errMsg);
  }
}
