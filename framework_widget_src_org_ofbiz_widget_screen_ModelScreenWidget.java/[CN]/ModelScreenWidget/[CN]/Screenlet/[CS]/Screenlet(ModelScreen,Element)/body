{
  super(modelScreen,screenletElement);
  this.idExdr=FlexibleStringExpander.getInstance(screenletElement.getAttribute("id"));
  this.collapsible="true".equals(screenletElement.getAttribute("collapsible"));
  this.initiallyCollapsed="true".equals(screenletElement.getAttribute("initially-collapsed"));
  if (this.initiallyCollapsed) {
    this.collapsible=true;
  }
  this.padded=!"false".equals(screenletElement.getAttribute("padded"));
  if (this.collapsible && UtilValidate.isEmpty(this.name) && idExdr.isEmpty()) {
    throw new IllegalArgumentException("Collapsible screenlets must have a name or id [" + this.modelScreen.getName() + "]");
  }
  this.titleExdr=FlexibleStringExpander.getInstance(screenletElement.getAttribute("title"));
  List<? extends Element> subElementList=UtilXml.childElementList(screenletElement);
  this.subWidgets=ModelScreenWidget.readSubWidgets(this.modelScreen,subElementList);
  String navMenuName=screenletElement.getAttribute("navigation-menu-name");
  if (UtilValidate.isNotEmpty(navMenuName)) {
    for (    ModelWidget subWidget : this.subWidgets) {
      if (navMenuName.equals(subWidget.getName()) && subWidget instanceof Menu) {
        this.navigationMenu=(Menu)subWidget;
        subWidgets.remove(subWidget);
        break;
      }
    }
  }
  String tabMenuName=screenletElement.getAttribute("tab-menu-name");
  if (UtilValidate.isNotEmpty(tabMenuName)) {
    for (    ModelWidget subWidget : this.subWidgets) {
      if (tabMenuName.equals(subWidget.getName()) && subWidget instanceof Menu) {
        this.tabMenu=(Menu)subWidget;
        subWidgets.remove(subWidget);
        break;
      }
    }
  }
  String formName=screenletElement.getAttribute("navigation-form-name");
  if (UtilValidate.isNotEmpty(formName) && this.navigationMenu == null) {
    for (    ModelWidget subWidget : this.subWidgets) {
      if (formName.equals(subWidget.getName()) && subWidget instanceof Form) {
        this.navigationForm=(Form)subWidget;
        this.padded=false;
        break;
      }
    }
  }
}
