{
  super(element,simpleMethod);
  permissionInfo=new PermissionInfo(element);
  this.errorListAcsr=new ContextAccessor(element.getAttribute("error-list-name"),"error_list");
  Element acceptUserloginPartyElement=UtilXml.firstChildElement(element,"accept-userlogin-party");
  if (acceptUserloginPartyElement != null) {
    acceptUlPartyIdEnvNameAcsr=new ContextAccessor(acceptUserloginPartyElement.getAttribute("party-id-env-name"),"partyId");
  }
  List altPermElements=UtilXml.childElementList(element,"alt-permission");
  Iterator apeIter=altPermElements.iterator();
  if (apeIter.hasNext()) {
    altPermissions=new LinkedList();
  }
  while (apeIter.hasNext()) {
    Element altPermElement=(Element)apeIter.next();
    altPermissions.add(new PermissionInfo(altPermElement));
  }
  Element failMessage=UtilXml.firstChildElement(element,"fail-message");
  Element failProperty=UtilXml.firstChildElement(element,"fail-property");
  if (failMessage != null) {
    this.message=failMessage.getAttribute("message");
    this.isProperty=false;
  }
 else   if (failProperty != null) {
    this.propertyResource=failProperty.getAttribute("resource");
    this.message=failProperty.getAttribute("property");
    this.isProperty=true;
  }
}
