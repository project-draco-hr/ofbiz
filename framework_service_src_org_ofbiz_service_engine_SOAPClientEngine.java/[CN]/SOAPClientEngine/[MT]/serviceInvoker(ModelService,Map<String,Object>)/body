{
  Delegator delegator=dispatcher.getDelegator();
  if (modelService.location == null || modelService.invoke == null)   throw new GenericServiceException("Cannot locate service to invoke");
  ServiceClient client=null;
  QName serviceName=null;
  String axis2Repo="/framework/service/config/axis2";
  String axis2RepoLocation=System.getProperty("ofbiz.home") + axis2Repo;
  String axis2XmlFile="/framework/service/config/axis2/conf/axis2.xml";
  String axis2XmlFileLocation=System.getProperty("ofbiz.home") + axis2XmlFile;
  try {
    ConfigurationContext configContext=ConfigurationContextFactory.createConfigurationContextFromFileSystem(axis2RepoLocation,axis2XmlFileLocation);
    client=new ServiceClient(configContext,null);
    Options options=new Options();
    EndpointReference endPoint=new EndpointReference(this.getLocation(modelService));
    options.setTo(endPoint);
    client.setOptions(options);
  }
 catch (  AxisFault e) {
    throw new GenericServiceException("RPC service error",e);
  }
  List<ModelParam> inModelParamList=modelService.getInModelParamList();
  if (Debug.infoOn())   Debug.logInfo("[SOAPClientEngine.invoke] : Parameter length - " + inModelParamList.size(),module);
  if (UtilValidate.isNotEmpty(modelService.nameSpace)) {
    serviceName=new QName(modelService.nameSpace,modelService.invoke);
  }
 else {
    serviceName=new QName(modelService.invoke);
  }
  int i=0;
  Map<String,Object> parameterMap=new HashMap<String,Object>();
  for (  ModelParam p : inModelParamList) {
    if (Debug.infoOn())     Debug.logInfo("[SOAPClientEngine.invoke} : Parameter: " + p.name + " ("+ p.mode+ ") - "+ i,module);
    if (!p.internal) {
      parameterMap.put(p.name,context.get(p.name));
    }
    i++;
  }
  OMElement parameterSer=null;
  try {
    String xmlParameters=SoapSerializer.serialize(parameterMap);
    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(new StringReader(xmlParameters));
    OMXMLParserWrapper builder=OMXMLBuilderFactory.createStAXOMBuilder(reader);
    parameterSer=builder.getDocumentElement();
  }
 catch (  Exception e) {
    Debug.logError(e,module);
  }
  Map<String,Object> results=null;
  try {
    OMFactory factory=OMAbstractFactory.getOMFactory();
    OMElement payload=factory.createOMElement(serviceName);
    payload.addChild(parameterSer.getFirstElement());
    OMElement respOMElement=client.sendReceive(payload);
    client.cleanupTransport();
    results=UtilGenerics.cast(SoapSerializer.deserialize(respOMElement.toString(),delegator));
  }
 catch (  Exception e) {
    Debug.logError(e,module);
  }
  return results;
}
