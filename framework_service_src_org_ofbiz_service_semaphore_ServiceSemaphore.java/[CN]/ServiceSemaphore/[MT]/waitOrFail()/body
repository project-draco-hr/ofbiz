{
  if (SEMAPHORE_MODE_FAIL == mode) {
    throw new SemaphoreFailException("Service [" + model.name + "] is locked");
  }
 else   if (SEMAPHORE_MODE_WAIT == mode) {
    boolean timedOut=true;
    while (wait < MAX_WAIT) {
      wait++;
      try {
        Thread.sleep(SLEEP);
      }
 catch (      InterruptedException e) {
        Debug.logInfo(e,"Sleep interrupted: ServiceSemaphone.waitOrFail()",module);
      }
      if (!checkLockNeedToWait()) {
        timedOut=false;
        break;
      }
    }
    if (timedOut) {
      double waitTimeSec=((double)(System.currentTimeMillis() - lockTime.getTime()) / 1000.0);
      String errMsg="Service [" + model.name + "] with wait semaphore exceeded wait timeout, waited ["+ waitTimeSec+ "], wait started at "+ lockTime;
      Debug.logWarning(errMsg,module);
      throw new SemaphoreWaitException(errMsg);
    }
  }
 else   if (SEMAPHORE_MODE_NONE == mode) {
    Debug.logWarning("Semaphore mode [none] attempted to aquire a lock; but should not have!",module);
  }
 else {
    throw new SemaphoreFailException("Found invalid Semaphore mode [" + mode + "]");
  }
}
