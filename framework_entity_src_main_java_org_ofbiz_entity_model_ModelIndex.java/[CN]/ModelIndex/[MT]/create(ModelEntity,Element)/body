{
  String name=indexElement.getAttribute("name").intern();
  boolean unique="true".equals(indexElement.getAttribute("unique"));
  String description=UtilXml.childElementValue(indexElement,"description");
  List<Field> fields=Collections.emptyList();
  List<? extends Element> elementList=UtilXml.childElementList(indexElement,"index-field");
  if (!elementList.isEmpty()) {
    fields=new ArrayList<Field>(elementList.size());
    for (    Element indexFieldElement : elementList) {
      String fieldName=indexFieldElement.getAttribute("name").intern();
      String function=indexFieldElement.getAttribute("function").intern();
      fields.add(new Field(fieldName,UtilValidate.isNotEmpty(function) ? Function.valueOf(function.toUpperCase()) : null));
    }
    fields=Collections.unmodifiableList(fields);
  }
  return new ModelIndex(modelEntity,description,name,fields,unique);
}
