{
  if (value == null || mf == null || !mf.getEnableAuditLog() || this.testRollbackInProgress) {
    return;
  }
  GenericValue entityAuditLog=this.makeValue("EntityAuditLog");
  entityAuditLog.set("auditHistorySeqId",this.getNextSeqId("EntityAuditLog"));
  entityAuditLog.set("changedEntityName",value.getEntityName());
  entityAuditLog.set("changedFieldName",mf.getName());
  String pkCombinedValueText=value.getPkShortValueString();
  if (pkCombinedValueText.length() > 250) {
    pkCombinedValueText=pkCombinedValueText.substring(0,250);
  }
  entityAuditLog.set("pkCombinedValueText",pkCombinedValueText);
  GenericValue oldGv=null;
  if (isUpdate) {
    oldGv=this.findOne(value.getEntityName(),value.getPrimaryKey(),false);
  }
 else   if (isRemove) {
    oldGv=value;
  }
  if (oldGv == null) {
    if (isUpdate || isRemove) {
      entityAuditLog.set("oldValueText","[ERROR] Old value not found even though it was an update or remove");
    }
  }
 else {
    String oldValueText=null;
    Object oldValue=oldGv.get(mf.getName());
    if (oldValue != null) {
      oldValueText=oldValue.toString();
      if (oldValueText.length() > 250) {
        oldValueText=oldValueText.substring(0,250);
      }
    }
    entityAuditLog.set("oldValueText",oldValueText);
  }
  if (!isRemove) {
    String newValueText=null;
    Object newValue=value.get(mf.getName());
    if (newValue != null) {
      newValueText=newValue.toString();
      if (newValueText.length() > 250) {
        newValueText=newValueText.substring(0,250);
      }
    }
    entityAuditLog.set("newValueText",newValueText);
  }
  entityAuditLog.set("changedDate",UtilDateTime.nowTimestamp());
  entityAuditLog.set("changedByInfo",this.userIdentifier);
  entityAuditLog.set("changedSessionInfo",this.sessionIdentifier);
  this.create(entityAuditLog);
}
