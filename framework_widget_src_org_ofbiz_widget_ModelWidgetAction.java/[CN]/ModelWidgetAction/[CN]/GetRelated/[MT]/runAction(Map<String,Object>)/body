{
  Object valueObject=valueNameAcsr.get(context);
  if (valueObject == null) {
    Debug.logVerbose("Value not found with name: " + valueNameAcsr + ", not getting related...",module);
    return;
  }
  if (!(valueObject instanceof GenericValue)) {
    String errMsg="Env variable for value-name " + valueNameAcsr.toString() + " is not a GenericValue object; for the relation-name: "+ relationName+ "]";
    Debug.logError(errMsg,module);
    throw new IllegalArgumentException(errMsg);
  }
  GenericValue value=(GenericValue)valueObject;
  List<String> orderByNames=null;
  if (!orderByListAcsr.isEmpty()) {
    orderByNames=orderByListAcsr.get(context);
  }
  Map<String,Object> constraintMap=null;
  if (!mapAcsr.isEmpty()) {
    constraintMap=mapAcsr.get(context);
  }
  try {
    listNameAcsr.put(context,value.getRelated(relationName,constraintMap,orderByNames,useCache));
  }
 catch (  GenericEntityException e) {
    String errMsg="Problem getting related from entity with name " + value.getEntityName() + " for the relation-name: "+ relationName+ ": "+ e.getMessage();
    Debug.logError(e,errMsg,module);
    throw new IllegalArgumentException(errMsg);
  }
}
