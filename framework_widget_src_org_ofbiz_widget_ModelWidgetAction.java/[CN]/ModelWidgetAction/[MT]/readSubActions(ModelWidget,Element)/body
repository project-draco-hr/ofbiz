{
  List<? extends Element> actionElementList=UtilXml.childElementList(parentElement);
  List<ModelWidgetAction> actions=new ArrayList<ModelWidgetAction>(actionElementList.size());
  for (  Element actionElement : actionElementList) {
    if ("set".equals(actionElement.getNodeName())) {
      actions.add(new SetField(modelWidget,actionElement));
    }
 else     if ("property-map".equals(actionElement.getNodeName())) {
      actions.add(new PropertyMap(modelWidget,actionElement));
    }
 else     if ("property-to-field".equals(actionElement.getNodeName())) {
      actions.add(new PropertyToField(modelWidget,actionElement));
    }
 else     if ("script".equals(actionElement.getNodeName())) {
      actions.add(new Script(modelWidget,actionElement));
    }
 else     if ("service".equals(actionElement.getNodeName())) {
      actions.add(new Service(modelWidget,actionElement));
    }
 else     if ("entity-one".equals(actionElement.getNodeName())) {
      actions.add(new EntityOne(modelWidget,actionElement));
    }
 else     if ("entity-and".equals(actionElement.getNodeName())) {
      actions.add(new EntityAnd(modelWidget,actionElement));
    }
 else     if ("entity-condition".equals(actionElement.getNodeName())) {
      actions.add(new EntityCondition(modelWidget,actionElement));
    }
 else     if ("get-related-one".equals(actionElement.getNodeName())) {
      actions.add(new GetRelatedOne(modelWidget,actionElement));
    }
 else     if ("get-related".equals(actionElement.getNodeName())) {
      actions.add(new GetRelated(modelWidget,actionElement));
    }
 else {
      throw new IllegalArgumentException("Action element not supported with name: " + actionElement.getNodeName());
    }
  }
  return actions;
}
