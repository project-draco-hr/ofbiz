{
  Debug.logInfo("=====[testdoRefund] starting....",module);
  try {
    Map serviceInput=UtilMisc.toMap("paymentConfig",configFile,"orderPaymentPreference",orderPaymentPreference);
    serviceInput.put("refundAmount",refundAmount);
    Map result=dispatcher.runSync("ofbScRefund",serviceInput);
    String responseMessage=(String)result.get(ModelService.RESPONSE_MESSAGE);
    Debug.logInfo("[testdoRefund] responseMessage: " + responseMessage,module);
    TestCase.assertEquals("Service result is success",ModelService.RESPOND_SUCCESS,responseMessage);
    if (((Boolean)result.get("refundResult")).equals(new Boolean(false))) {
      Debug.logInfo("[testdoRefund] Error Messages from SecurePay: " + result.get("internalRespMsgs"),module);
      TestCase.fail("Returned messages:" + result.get("internalRespMsgs"));
    }
 else {
      Debug.logInfo("[testdoRefund] Result from SecurePay: " + result,module);
    }
  }
 catch (  GenericServiceException ex) {
    TestCase.fail(ex.getMessage());
  }
}
