{
  HttpSession session=request.getSession();
  if (UtilValidate.isEmpty(request.getParameter("frameContentId"))) {
    if (UtilValidate.isNotEmpty(request.getParameter("frameExistContentId")) && UtilValidate.isNotEmpty(request.getParameter("frameExistDataResourceId"))) {
      session.setAttribute("frameExistContentId",request.getParameter("frameExistContentId").toString());
      session.setAttribute("frameDataResourceId",request.getParameter("frameExistDataResourceId").toString());
    }
    request.setAttribute("_ERROR_MESSAGE_","Required frame image content ID");
    return "error";
  }
  String frameContentId=(String)request.getParameter("frameContentId");
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String frameDataResourceId=null;
  try {
    List<GenericValue> contentDataResources=delegator.findByAnd("ContentDataResourceView",UtilMisc.toMap("contentId",frameContentId));
    GenericValue contentDataResource=EntityUtil.getFirst(contentDataResources);
    frameDataResourceId=contentDataResource.getString("dataResourceId");
  }
 catch (  Exception e) {
    request.setAttribute("_ERROR_MESSAGE_",e.getMessage());
    return "error";
  }
  session.setAttribute("frameContentId",frameContentId);
  session.setAttribute("frameDataResourceId",frameDataResourceId);
  return "success";
}
