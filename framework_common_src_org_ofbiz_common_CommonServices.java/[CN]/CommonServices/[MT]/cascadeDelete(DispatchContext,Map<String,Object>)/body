{
  Delegator delegator=dctx.getDelegator();
  String entityName=(String)context.get("entityName");
  Map<String,Object> pkFields=UtilGenerics.checkMap(context.get("pkFields"));
  try {
    GenericValue value=delegator.findByPrimaryKey(entityName,pkFields);
    ModelEntity modelEntity=delegator.getModelEntity(entityName);
    List<ModelRelation> relations=modelEntity.getRelationsManyList();
    if (value == null || modelEntity instanceof ModelViewEntity) {
      return ServiceUtil.returnSuccess();
    }
    for (    ModelRelation relation : relations) {
      String combinedName=relation.getCombinedName();
      List<GenericValue> relatedValues=value.getRelated(combinedName);
      for (      GenericValue relatedValue : relatedValues) {
        pkFields=relatedValue.getPrimaryKey().getAllFields();
        entityName=relatedValue.getEntityName();
        Map<String,Object> newContext=UtilMisc.toMap("entityName",entityName,"pkFields",pkFields);
        Map<String,Object> result=CommonServices.cascadeDelete(dctx,newContext);
        if (ServiceUtil.isError(result)) {
          return result;
        }
      }
    }
    Debug.logInfo("Removing value: " + value,module);
    delegator.removeValue(value);
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  return ServiceUtil.returnSuccess();
}
