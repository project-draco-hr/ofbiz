{
  if (party == null) {
    return null;
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(partyContentTypeId);
  String cacheKey;
  if (contentId != null) {
    cacheKey=contentId + CACHE_KEY_SEPARATOR + locale+ CACHE_KEY_SEPARATOR+ mimeTypeId+ CACHE_KEY_SEPARATOR+ party.get("partyId");
  }
 else {
    cacheKey=partyContentTypeId + CACHE_KEY_SEPARATOR + locale+ CACHE_KEY_SEPARATOR+ mimeTypeId+ CACHE_KEY_SEPARATOR+ party.get("partyId");
  }
  try {
    if (useCache && partyContentCache.get(cacheKey) != null) {
      return partyContentCache.get(cacheKey);
    }
    Writer outWriter=new StringWriter();
    getPartyContentAsText(contentId,party.getString("partyId"),party,partyContentTypeId,locale,mimeTypeId,delegator,dispatcher,outWriter);
    String outString=outWriter.toString();
    if (outString.length() > 0) {
      if (partyContentCache != null) {
        partyContentCache.put(cacheKey,outString);
      }
      return outString;
    }
 else {
      String candidateOut=party.getModelEntity().isField(candidateFieldName) ? party.getString(candidateFieldName) : "";
      return candidateOut == null ? "" : candidateOut;
    }
  }
 catch (  GeneralException e) {
    Debug.logError(e,"Error rendering PartyContent, inserting empty String",module);
    String candidateOut=party.getModelEntity().isField(candidateFieldName) ? party.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : candidateOut;
  }
catch (  IOException e) {
    Debug.logError(e,"Error rendering PartyContent, inserting empty String",module);
    String candidateOut=party.getModelEntity().isField(candidateFieldName) ? party.getString(candidateFieldName) : "";
    return candidateOut == null ? "" : candidateOut;
  }
}
