{
  String hashedKeyName=useOldFunnyKeyHash ? HashCrypt.digestHashOldFunnyHex(null,originalKeyName) : HashCrypt.digestHash("SHA",null,originalKeyName);
  GenericValue keyValue=null;
  try {
    keyValue=delegator.findOne("EntityKeyStore",false,"keyName",hashedKeyName);
  }
 catch (  GenericEntityException e) {
    throw new EntityCryptoException(e);
  }
  if (keyValue == null || keyValue.get("keyText") == null) {
    SecretKey key=null;
    try {
      key=DesCrypt.generateKey();
    }
 catch (    NoSuchAlgorithmException e) {
      throw new EntityCryptoException(e);
    }
    final GenericValue newValue=delegator.makeValue("EntityKeyStore");
    newValue.set("keyText",StringUtil.toHexString(key.getEncoded()));
    newValue.set("keyName",hashedKeyName);
    try {
      TransactionUtil.doNewTransaction(new Callable<Void>(){
        public Void call() throws Exception {
          delegator.create(newValue);
          return null;
        }
      }
,"storing encrypted key",0,true);
    }
 catch (    GenericEntityException e) {
      throw new EntityCryptoException(e);
    }
    return key;
  }
 else {
    byte[] keyBytes=StringUtil.fromHexString(keyValue.getString("keyText"));
    try {
      return DesCrypt.getDesKey(keyBytes);
    }
 catch (    GeneralException e) {
      throw new EntityCryptoException(e);
    }
  }
}
