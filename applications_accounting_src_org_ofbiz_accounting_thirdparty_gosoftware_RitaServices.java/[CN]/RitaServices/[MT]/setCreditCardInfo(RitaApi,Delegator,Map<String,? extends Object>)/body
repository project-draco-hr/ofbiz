{
  GenericValue orderPaymentPreference=(GenericValue)context.get("orderPaymentPreference");
  GenericValue creditCard=(GenericValue)context.get("creditCard");
  if (creditCard == null) {
    creditCard=delegator.findOne("CreditCard",UtilMisc.toMap("paymentMethodId",orderPaymentPreference.getString("paymentMethodId")),false);
  }
  if (creditCard != null) {
    List<String> expDateList=StringUtil.split(creditCard.getString("expireDate"),"/");
    String month=expDateList.get(0);
    String year=expDateList.get(1);
    String y2d=year.substring(2);
    String title=creditCard.getString("titleOnCard");
    String fname=creditCard.getString("firstNameOnCard");
    String mname=creditCard.getString("middleNameOnCard");
    String lname=creditCard.getString("lastNameOnCard");
    String sufix=creditCard.getString("suffixOnCard");
    StringBuilder name=new StringBuilder();
    if (UtilValidate.isNotEmpty(title)) {
      name.append(title).append(" ");
    }
    if (UtilValidate.isNotEmpty(fname)) {
      name.append(fname).append(" ");
    }
    if (UtilValidate.isNotEmpty(mname)) {
      name.append(mname).append(" ");
    }
    if (UtilValidate.isNotEmpty(lname)) {
      name.append(lname).append(" ");
    }
    if (UtilValidate.isNotEmpty(sufix)) {
      name.append(sufix);
    }
    String nameOnCard=name.toString().trim();
    String acctNumber=creditCard.getString("cardNumber");
    String cvNum=(String)context.get("cardSecurityCode");
    api.set(RitaApi.ACCT_NUM,acctNumber);
    api.set(RitaApi.EXP_MONTH,month);
    api.set(RitaApi.EXP_YEAR,y2d);
    api.set(RitaApi.CARDHOLDER,nameOnCard);
    if (UtilValidate.isNotEmpty(cvNum)) {
      api.set(RitaApi.CVV2,cvNum);
    }
    GenericValue billingAddress=(GenericValue)context.get("billingAddress");
    if (billingAddress != null) {
      api.set(RitaApi.CUSTOMER_STREET,billingAddress.getString("address1"));
      api.set(RitaApi.CUSTOMER_ZIP,billingAddress.getString("postalCode"));
    }
 else {
      String zipCode=orderPaymentPreference.getString("billingPostalCode");
      if (UtilValidate.isNotEmpty(zipCode)) {
        api.set(RitaApi.CUSTOMER_ZIP,zipCode);
      }
    }
    String presentFlag=orderPaymentPreference.getString("presentFlag");
    if (presentFlag == null) {
      presentFlag="N";
    }
    api.set(RitaApi.PRESENT_FLAG,presentFlag.equals("Y") ? "3" : "1");
  }
 else {
    throw new GeneralException("No CreditCard object found");
  }
}
