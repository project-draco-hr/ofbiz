{
  String resource=methodContext.expandString(this.resource);
  String property=methodContext.expandString(this.property);
  String defaultVal=methodContext.expandString(this.defaultVal);
  String fieldVal=null;
  if (methodContext.getMethodType() == MethodContext.EVENT) {
    ServletContext servletContext=(ServletContext)methodContext.getRequest().getAttribute("servletContext");
    URL propsUrl=null;
    try {
      propsUrl=servletContext.getResource(resource);
    }
 catch (    java.net.MalformedURLException e) {
      Debug.logWarning(e,"Error finding webapp resource (properties file) not found with name " + resource,module);
    }
    if (propsUrl == null) {
      Debug.logWarning("Webapp resource (properties file) not found with name " + resource,module);
    }
 else {
      fieldVal=UtilProperties.getPropertyValue(propsUrl,property);
      if (UtilValidate.isEmpty(fieldVal)) {
        Debug.logWarning("Webapp resource property value not found with name " + property + " in resource "+ resource,module);
      }
    }
  }
  if ((fieldVal == null) || (fieldVal.length() == 0)) {
    fieldVal=defaultVal;
  }
  if (!mapAcsr.isEmpty()) {
    Map<String,Object> fromMap=mapAcsr.get(methodContext);
    if (fromMap == null) {
      Debug.logWarning("Map not found with name " + mapAcsr + " creating a new map",module);
      fromMap=FastMap.newInstance();
      mapAcsr.put(methodContext,fromMap);
    }
    fieldAcsr.put(fromMap,fieldVal,methodContext);
  }
 else {
    fieldAcsr.put(methodContext,fieldVal);
  }
  return true;
}
