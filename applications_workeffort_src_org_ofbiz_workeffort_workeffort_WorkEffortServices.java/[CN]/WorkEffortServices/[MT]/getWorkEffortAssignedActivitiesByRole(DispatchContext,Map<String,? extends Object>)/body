{
  Delegator delegator=ctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Locale locale=(Locale)context.get("locale");
  List<GenericValue> roleWorkEfforts=null;
  if (userLogin != null && userLogin.get("partyId") != null) {
    try {
      List<EntityExpr> constraints=FastList.newInstance();
      constraints.add(EntityCondition.makeCondition("partyId",EntityOperator.EQUALS,userLogin.get("partyId")));
      constraints.add(EntityCondition.makeCondition("workEffortTypeId",EntityOperator.EQUALS,"ACTIVITY"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_DECLINED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_DELEGATED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_COMPLETED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_CANCELLED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"PRTYASGN_UNASSIGNED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_COMPLETED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_TERMINATED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_ABORTED"));
      roleWorkEfforts=EntityQuery.use(delegator).from("WorkEffortPartyAssignByRole").where(constraints).orderBy("priority").filterByDate().queryList();
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"WorkEffortNotFound",UtilMisc.toMap("errorString",e.toString()),locale));
    }
  }
  Map<String,Object> result=FastMap.newInstance();
  if (roleWorkEfforts == null)   roleWorkEfforts=FastList.newInstance();
  result.put("roleActivities",roleWorkEfforts);
  return result;
}
