{
  GenericDelegator delegator=ctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  List<GenericValue> validWorkEfforts=null;
  if (userLogin != null && userLogin.get("partyId") != null) {
    try {
      List<EntityExpr> constraints=FastList.newInstance();
      constraints.add(EntityCondition.makeCondition("partyId",EntityOperator.EQUALS,userLogin.get("partyId")));
      constraints.add(EntityCondition.makeCondition("workEffortTypeId",EntityOperator.EQUALS,"ACTIVITY"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_DECLINED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_DELEGATED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_COMPLETED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"CAL_CANCELLED"));
      constraints.add(EntityCondition.makeCondition("statusId",EntityOperator.NOT_EQUAL,"PRTYASGN_UNASSIGNED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_COMPLETED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_TERMINATED"));
      constraints.add(EntityCondition.makeCondition("currentStatusId",EntityOperator.NOT_EQUAL,"WF_ABORTED"));
      EntityConditionList<EntityExpr> ecl=EntityCondition.makeCondition(constraints,EntityOperator.AND);
      validWorkEfforts=EntityUtil.filterByDate(delegator.findList("WorkEffortAndPartyAssign",ecl,null,UtilMisc.toList("priority"),null,false));
    }
 catch (    GenericEntityException e) {
      Debug.logWarning(e,module);
      return ServiceUtil.returnError("Error finding desired WorkEffort records: " + e.toString());
    }
  }
  Map<String,Object> result=FastMap.newInstance();
  if (validWorkEfforts == null)   validWorkEfforts=FastList.newInstance();
  result.put("activities",validWorkEfforts);
  return result;
}
