{
  Delegator delegator=dctx.getDelegator();
  String imageServerPath=FlexibleStringExpander.expandString(EntityUtilProperties.getPropertyValue("catalog","image.management.path",delegator),context);
  String productId=(String)context.get("productId");
  String dataResourceName=(String)context.get("dataResourceName");
  String width=(String)context.get("resizeWidth");
  int resizeWidth=Integer.parseInt(width);
  int resizeHeight=resizeWidth;
  try {
    BufferedImage bufImg=ImageIO.read(new File(imageServerPath + "/" + productId+ "/"+ dataResourceName));
    double imgHeight=bufImg.getHeight();
    double imgWidth=bufImg.getWidth();
    String filenameToUse=dataResourceName;
    String mimeType=dataResourceName.substring(dataResourceName.length() - 3,dataResourceName.length());
    Map<String,Object> resultResize=resizeImage(bufImg,imgHeight,imgWidth,resizeHeight,resizeWidth);
    ImageIO.write((RenderedImage)resultResize.get("bufferedImage"),mimeType,new File(imageServerPath + "/" + productId+ "/"+ filenameToUse));
  }
 catch (  Exception e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  String successMsg="Resize images successful";
  return ServiceUtil.returnSuccess(successMsg);
}
