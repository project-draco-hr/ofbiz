{
  HttpServletRequest httpRequest=(HttpServletRequest)request;
  HttpServletResponse httpResponse=(HttpServletResponse)response;
  Delegator delegator=(Delegator)httpRequest.getSession().getServletContext().getAttribute("delegator");
  ServletContext servletContext=config.getServletContext();
  ContextFilter.setCharacterEncoding(request);
  UrlServletHelper.setRequestAttributes(request,delegator,servletContext);
  String urlContentId=null;
  String pathInfo=UtilHttp.getFullRequestUrl(httpRequest);
  if (UtilValidate.isNotEmpty(pathInfo)) {
    String alternativeUrl=pathInfo.substring(pathInfo.lastIndexOf("/"));
    if (alternativeUrl.endsWith("-content")) {
      try {
        GenericValue contentDataResourceView=EntityQuery.use(delegator).from("ContentDataResourceView").where("drObjectInfo",alternativeUrl).orderBy("createdDate DESC").queryFirst();
        if (contentDataResourceView != null) {
          GenericValue content=EntityQuery.use(delegator).from("ContentAssoc").where("contentAssocTypeId","ALTERNATIVE_URL","contentIdTo",contentDataResourceView.get("contentId")).filterByDate().queryFirst();
          if (content != null) {
            urlContentId=content.getString("contentId");
          }
        }
      }
 catch (      Exception e) {
        Debug.logWarning(e.getMessage(),module);
      }
    }
    if (UtilValidate.isNotEmpty(urlContentId)) {
      StringBuilder urlBuilder=new StringBuilder();
      urlBuilder.append("/" + CONTROL_MOUNT_POINT);
      urlBuilder.append("/" + config.getInitParameter("viewRequest") + "?contentId="+ urlContentId);
      ContextFilter.setAttributesFromRequestBody(request);
      UrlServletHelper.setViewQueryParameters(request,urlBuilder);
      Debug.logInfo("[Filtered request]: " + pathInfo + " ("+ urlBuilder+ ")",module);
      RequestDispatcher dispatch=request.getRequestDispatcher(urlBuilder.toString());
      dispatch.forward(request,response);
      return;
    }
    UrlServletHelper.checkPathAlias(request,httpResponse,delegator,pathInfo);
  }
  chain.doFilter(request,response);
}
