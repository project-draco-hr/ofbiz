{
  if (UtilValidate.isEmpty(contentId)) {
    return null;
  }
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String url=null;
  try {
    List<EntityCondition> expr=FastList.newInstance();
    expr.add(EntityCondition.makeCondition("caContentAssocTypeId",EntityOperator.EQUALS,"ALTERNATIVE_URL"));
    expr.add(EntityCondition.makeCondition("caThruDate",EntityOperator.EQUALS,null));
    expr.add(EntityCondition.makeCondition("contentIdStart",EntityOperator.EQUALS,contentId));
    Set<String> fieldsToSelect=UtilMisc.toSet("contentIdStart","dataResourceId","caFromDate","caThruDate","caCreatedDate");
    List<GenericValue> contentAssocDataResources=delegator.findList("ContentAssocDataResourceViewTo",EntityCondition.makeCondition(expr),fieldsToSelect,UtilMisc.toList("-caCreatedDate"),null,true);
    if (contentAssocDataResources.size() > 0) {
      GenericValue contentAssocDataResource=EntityUtil.getFirst(contentAssocDataResources);
      GenericValue electronicText=delegator.findByPrimaryKey("ElectronicText",UtilMisc.toMap("dataResourceId",contentAssocDataResource.get("dataResourceId")));
      if (UtilValidate.isNotEmpty(electronicText) || UtilValidate.isNotEmpty(electronicText.get("textData"))) {
        String textData=UrlServletHelper.invalidCharacter(electronicText.getString("textData")) + "-" + contentId+ "-content";
        StringBuilder urlBuilder=new StringBuilder();
        urlBuilder.append(request.getSession().getServletContext().getContextPath());
        if (urlBuilder.charAt(urlBuilder.length() - 1) != '/') {
          urlBuilder.append("/");
        }
        url=urlBuilder.append(textData).toString();
      }
    }
  }
 catch (  Exception e) {
    Debug.logWarning("[Exception] : " + e.getMessage(),module);
  }
  if (UtilValidate.isEmpty(url)) {
    if (UtilValidate.isEmpty(viewContent)) {
      viewContent=defaultViewRequest;
    }
    url=makeContentUrl(request,response,contentId,viewContent);
  }
  return url;
}
