{
  super.failed(t);
  if (nextRecurrence == -1) {
    if (this.canRetry()) {
      Calendar cal=Calendar.getInstance();
      cal.setTime(new Date());
      cal.add(Calendar.MINUTE,ServiceConfigUtil.getFailedRetryMin());
      long next=cal.getTimeInMillis();
      GenericValue job=getJob();
      try {
        createRecurrence(job,next);
      }
 catch (      GenericEntityException gee) {
        Debug.logError(gee,"ERROR: Unable to re-schedule job [" + getJobId() + "] to re-run : "+ job,module);
      }
      job.set("statusId","SERVICE_FAILED");
      try {
        job.store();
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"Cannot update the job sandbox",module);
      }
      Debug.log("Persisted Job [" + getJobId() + "] Failed Re-Scheduling : "+ next,module);
    }
 else {
      Debug.logWarning("Persisted Job [" + getJobId() + "] Failed - Max Retry Hit; not re-scheduling",module);
    }
  }
}
