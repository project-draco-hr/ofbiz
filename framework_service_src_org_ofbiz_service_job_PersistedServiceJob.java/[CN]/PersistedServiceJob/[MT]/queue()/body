{
  super.queue();
  GenericValue jobValue=null;
  try {
    jobValue=this.getJob();
    jobValue.refresh();
  }
 catch (  GenericEntityException e) {
    runtime=-1;
    throw new InvalidJobException("Unable to refresh Job object",e);
  }
  if (runtime != -1) {
    Timestamp cancelTime=jobValue.getTimestamp("cancelDateTime");
    Timestamp startTime=jobValue.getTimestamp("startDateTime");
    if (cancelTime != null || startTime != null) {
      runtime=-1;
      throw new InvalidJobException("Job [" + getJobId() + "] is not available");
    }
 else {
      jobValue.set("startDateTime",UtilDateTime.nowTimestamp());
      jobValue.set("statusId","SERVICE_RUNNING");
      try {
        jobValue.store();
      }
 catch (      GenericEntityException e) {
        runtime=-1;
        throw new InvalidJobException("Unable to set the startDateTime on the current job [" + getJobId() + "]; not running!",e);
      }
    }
  }
}
