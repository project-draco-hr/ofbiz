{
  super.queue();
  GenericValue jobValue=null;
  try {
    jobValue=this.getJob();
    jobValue.refresh();
  }
 catch (  GenericEntityException e) {
    throw new InvalidJobException("Unable to refresh JobSandbox value",e);
  }
  Timestamp cancelTime=jobValue.getTimestamp("cancelDateTime");
  Timestamp startTime=jobValue.getTimestamp("startDateTime");
  if (cancelTime != null || startTime != null) {
    throw new InvalidJobException("Job [" + getJobId() + "] is not available");
  }
 else {
    jobValue.set("startDateTime",UtilDateTime.nowTimestamp());
    jobValue.set("statusId","SERVICE_RUNNING");
    try {
      jobValue.store();
    }
 catch (    GenericEntityException e) {
      throw new InvalidJobException("Unable to set the startDateTime on the current job [" + getJobId() + "]; not running!",e);
    }
  }
}
