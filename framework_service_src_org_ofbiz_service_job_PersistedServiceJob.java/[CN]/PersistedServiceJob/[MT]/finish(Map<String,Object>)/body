{
  super.finish(result);
  GenericValue job=getJob();
  job.set("statusId","SERVICE_FINISHED");
  job.set("finishDateTime",UtilDateTime.nowTimestamp());
  String jobResult=null;
  if (ServiceUtil.isError(result)) {
    jobResult=StringUtils.substring(ServiceUtil.getErrorMessage(result),0,255);
  }
 else {
    jobResult=StringUtils.substring(ServiceUtil.makeSuccessMessage(result,"","","",""),0,255);
  }
  if (UtilValidate.isNotEmpty(jobResult)) {
    job.set("jobResult",jobResult);
  }
  try {
    job.store();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot update the job [" + getJobId() + "] sandbox",module);
  }
}
