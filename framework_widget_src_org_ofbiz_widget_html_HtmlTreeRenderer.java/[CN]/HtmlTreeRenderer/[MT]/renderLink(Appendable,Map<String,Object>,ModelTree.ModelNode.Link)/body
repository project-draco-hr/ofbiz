{
  writer.append("<a");
  String id=link.getId(context);
  if (UtilValidate.isNotEmpty(id)) {
    writer.append(" id=\"");
    writer.append(id);
    writer.append("\"");
  }
  String style=link.getStyle(context);
  if (UtilValidate.isNotEmpty(style)) {
    writer.append(" class=\"");
    writer.append(style);
    writer.append("\"");
  }
  String name=link.getName(context);
  if (UtilValidate.isNotEmpty(name)) {
    writer.append(" name=\"");
    writer.append(name);
    writer.append("\"");
  }
  String title=link.getTitle(context);
  if (UtilValidate.isNotEmpty(title)) {
    writer.append(" title=\"");
    writer.append(title);
    writer.append("\"");
  }
  String targetWindow=link.getTargetWindow(context);
  if (UtilValidate.isNotEmpty(targetWindow)) {
    writer.append(" target=\"");
    writer.append(targetWindow);
    writer.append("\"");
  }
  String target=link.getTarget(context);
  if (UtilValidate.isNotEmpty(target)) {
    writer.append(" href=\"");
    String urlMode=link.getUrlMode();
    String prefix=link.getPrefix(context);
    HttpServletResponse res=(HttpServletResponse)context.get("response");
    HttpServletRequest req=(HttpServletRequest)context.get("request");
    if (urlMode != null && urlMode.equalsIgnoreCase("intra-app")) {
      if (req != null && res != null) {
        WidgetWorker.buildHyperlinkUrl(writer,target,link.getUrlMode(),link.getParameterMap(context),link.getPrefix(context),link.getFullPath(),link.getSecure(),link.getEncode(),req,res,context);
      }
 else       if (prefix != null) {
        writer.append(prefix).append(target);
      }
 else {
        writer.append(target);
      }
    }
 else     if (urlMode != null && urlMode.equalsIgnoreCase("content")) {
      StringBuilder newURL=new StringBuilder();
      ContentUrlTag.appendContentPrefix(req,newURL);
      newURL.append(target);
      writer.append(newURL.toString());
    }
 else     if ("inter-app".equalsIgnoreCase(urlMode) && req != null) {
      String externalLoginKey=(String)req.getAttribute("externalLoginKey");
      if (UtilValidate.isNotEmpty(externalLoginKey)) {
        writer.append(target);
        if (target.contains("?")) {
          writer.append("&externalLoginKey=");
        }
 else {
          writer.append("?externalLoginKey=");
        }
        writer.append(externalLoginKey);
      }
    }
 else {
      writer.append(target);
    }
    writer.append("\"");
  }
  writer.append(">");
  ModelTree.ModelNode.Image img=link.getImage();
  if (img == null) {
    writer.append(link.getText(context));
  }
 else {
    renderImage(writer,context,img);
  }
  writer.append("</a>");
}
