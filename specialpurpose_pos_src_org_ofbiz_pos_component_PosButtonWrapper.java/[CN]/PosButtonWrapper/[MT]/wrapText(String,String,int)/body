{
  if (UtilValidate.isEmpty(text)) {
    return "";
  }
  FontMetrics fm=xbutton.getFontMetrics(xbutton.getFont());
  Graphics g=xbutton.getGraphics();
  Border b=xbutton.getBorder();
  StringBuffer buf=new StringBuffer();
  int leftBorder=b.getBorderInsets(xbutton).left;
  int rightBorder=b.getBorderInsets(xbutton).right;
  int topBorder=b.getBorderInsets(xbutton).top;
  int bottomBorder=b.getBorderInsets(xbutton).bottom;
  int padWidth=((int)(fm.getStringBounds((new char[]{(char)32}),0,1,g).getWidth()) * padding);
  int butWidth=(((xbutton.getSize().width) - leftBorder - rightBorder) - padWidth);
  int maxLines=((xbutton.getSize().height - topBorder - bottomBorder) / fm.getHeight());
  int strWidth=(int)fm.getStringBounds(text,g).getWidth();
  if (strWidth <= butWidth) {
    return text;
  }
  int lineNumber=0;
  while (text.length() > 0) {
    int thisPosition=this.getMaxStrIndex(fm,g,text,butWidth);
    int space=-1;
    String line=null;
    if (thisPosition == text.length()) {
      line=text;
      buf.append(line);
      text="";
      break;
    }
    line=text.substring(0,thisPosition);
    space=line.lastIndexOf(32);
    if (space == -1 && ((int)text.charAt(thisPosition)) != 32) {
      buf.append(text);
      break;
    }
 else {
      if (space != -1) {
        thisPosition=space;
        line=line.substring(0,thisPosition);
        thisPosition++;
      }
      lineNumber++;
      if (lineNumber >= maxLines) {
        int dotWidth=(int)fm.getStringBounds("...",g).getWidth();
        int maxLineIdx=this.getMaxStrIndex(fm,g,text,(butWidth - dotWidth));
        line=text.substring(0,maxLineIdx);
        buf.append(line);
        buf.append("...");
        break;
      }
 else {
        text=text.substring(thisPosition);
        buf.append(line);
        buf.append(newLine);
      }
    }
  }
  return buf.toString();
}
