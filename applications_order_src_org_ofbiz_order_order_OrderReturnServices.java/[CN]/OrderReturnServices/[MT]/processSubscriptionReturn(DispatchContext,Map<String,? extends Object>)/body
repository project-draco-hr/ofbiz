{
  Delegator delegator=dctx.getDelegator();
  String returnId=(String)context.get("returnId");
  Timestamp now=UtilDateTime.nowTimestamp();
  GenericValue returnHeader;
  List<GenericValue> returnItems=null;
  try {
    returnHeader=delegator.findOne("ReturnHeader",UtilMisc.toMap("returnId",returnId),false);
    if (returnHeader != null) {
      returnItems=returnHeader.getRelatedByAnd("ReturnItem",UtilMisc.toMap("returnTypeId","RTN_REFUND"));
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(e.getMessage());
  }
  if (returnItems != null) {
    for (    GenericValue returnItem : returnItems) {
      String orderItemSeqId=returnItem.getString("orderItemSeqId");
      String orderId=returnItem.getString("orderId");
      List<GenericValue> subscriptions;
      try {
        subscriptions=delegator.findByAnd("Subscription",UtilMisc.toMap("orderId",orderId,"orderItemSeqId",orderItemSeqId));
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
        return ServiceUtil.returnError(e.getMessage());
      }
      if (subscriptions != null) {
        for (        GenericValue subscription : subscriptions) {
          Timestamp thruDate=subscription.getTimestamp("thruDate");
          if (thruDate == null || thruDate.after(now)) {
            subscription.set("thruDate",now);
            try {
              delegator.store(subscription);
            }
 catch (            GenericEntityException e) {
              Debug.logError(e,module);
              return ServiceUtil.returnError(e.getMessage());
            }
          }
        }
      }
    }
  }
  return ServiceUtil.returnSuccess();
}
