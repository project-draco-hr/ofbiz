{
  Delegator delegator=dctx.getDelegator();
  GenericValue returnItem=null;
  GenericValue returnAdjustment=null;
  String returnAdjustmentTypeId=null;
  BigDecimal amount;
  try {
    returnAdjustment=delegator.findByPrimaryKey("ReturnAdjustment",UtilMisc.toMap("returnAdjustmentId",context.get("returnAdjustmentId")));
    if (returnAdjustment != null) {
      returnItem=delegator.findByPrimaryKey("ReturnItem",UtilMisc.toMap("returnId",returnAdjustment.get("returnId"),"returnItemSeqId",returnAdjustment.get("returnItemSeqId")));
      returnAdjustmentTypeId=returnAdjustment.getString("returnAdjustmentTypeId");
    }
    if (returnItem != null) {
      BigDecimal originalReturnPrice=(context.get("originalReturnPrice") != null) ? ((BigDecimal)context.get("originalReturnPrice")) : returnItem.getBigDecimal("returnPrice");
      BigDecimal originalReturnQuantity=(context.get("originalReturnQuantity") != null) ? ((BigDecimal)context.get("originalReturnQuantity")) : returnItem.getBigDecimal("returnQuantity");
      if (needRecalculate(returnAdjustmentTypeId)) {
        BigDecimal returnTotal=returnItem.getBigDecimal("returnPrice").multiply(returnItem.getBigDecimal("returnQuantity"));
        BigDecimal originalReturnTotal=originalReturnPrice.multiply(originalReturnQuantity);
        amount=getAdjustmentAmount("RET_SALES_TAX_ADJ".equals(returnAdjustmentTypeId),returnTotal,originalReturnTotal,returnAdjustment.getBigDecimal("amount"));
      }
 else {
        amount=(BigDecimal)context.get("amount");
      }
    }
 else {
      amount=(BigDecimal)context.get("amount");
    }
    Map result=null;
    if (UtilValidate.isNotEmpty(amount)) {
      returnAdjustment.setNonPKFields(context);
      returnAdjustment.set("amount",amount);
      delegator.store(returnAdjustment);
      Debug.logInfo("Update ReturnAdjustment with Id:" + context.get("returnAdjustmentId") + " to amount "+ amount+ " successfully.",module);
      result=ServiceUtil.returnSuccess("Update ReturnAdjustment with Id:" + context.get("returnAdjustmentId") + " to amount "+ amount+ " successfully.");
    }
 else {
      result=ServiceUtil.returnSuccess();
    }
    return result;
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Failed to store returnAdjustment",module);
    return ServiceUtil.returnError("Failed to store returnAdjustment");
  }
}
