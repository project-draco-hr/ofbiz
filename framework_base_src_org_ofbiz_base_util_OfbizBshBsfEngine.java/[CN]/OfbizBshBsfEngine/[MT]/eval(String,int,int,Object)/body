{
  if (!(expr instanceof String))   throw new BSFException("BeanShell expression must be a string");
  try {
    Interpreter.ParsedScript script=null;
    if (UtilValidate.isNotEmpty(source)) {
      script=parsedScripts.get(source);
      if (script == null) {
        script=interpreter.parseScript(source,new StringReader((String)expr));
        Debug.logVerbose("Caching BSH script at: " + source,module);
        script=parsedScripts.putIfAbsentAndGet(source,script);
      }
    }
 else {
      script=interpreter.parseScript(source,new StringReader((String)expr));
    }
    return interpreter.evalParsedScript(script);
  }
 catch (  InterpreterError e) {
    throw new BSFException("BeanShell interpreter internal error: " + e + sourceInfo(source,lineNo,columnNo));
  }
catch (  TargetError e2) {
    Debug.logError(e2,"Error thrown in BeanShell script called through BSF at: " + sourceInfo(source,lineNo,columnNo),module);
    throw new BSFException("The application script threw an exception: " + e2 + " "+ sourceInfo(source,lineNo,columnNo));
  }
catch (  EvalError e3) {
    throw new BSFException("BeanShell script error: " + e3 + sourceInfo(source,lineNo,columnNo));
  }
}
