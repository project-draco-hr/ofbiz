{
  Delegator delegator=dctx.getDelegator();
  List<GenericValue> itemProductList=UtilGenerics.checkList(context.get("itemProductList"));
  List<BigDecimal> itemAmountList=UtilGenerics.checkList(context.get("itemAmountList"));
  List<BigDecimal> itemShippingList=UtilGenerics.checkList(context.get("itemShippingList"));
  BigDecimal orderShippingAmount=(BigDecimal)context.get("orderShippingAmount");
  GenericValue shippingAddress=(GenericValue)context.get("shippingAddress");
  String stateProvince=shippingAddress.getString("stateProvinceGeoId");
  String postalCode=shippingAddress.getString("postalCode");
  String city=shippingAddress.getString("city");
  List<GenericValue> orderAdjustments=FastList.newInstance();
  List<List<GenericValue>> itemAdjustments=FastList.newInstance();
  String validStates=EntityUtilProperties.getPropertyValue("zipsales.properties","zipsales.valid.states",delegator);
  if (UtilValidate.isNotEmpty(validStates)) {
    List<String> stateSplit=StringUtil.split(validStates,"|");
    if (!stateSplit.contains(stateProvince)) {
      Map<String,Object> result=ServiceUtil.returnSuccess();
      result.put("orderAdjustments",orderAdjustments);
      result.put("itemAdjustments",itemAdjustments);
      return result;
    }
  }
  try {
    for (int i=0; i < itemProductList.size(); i++) {
      GenericValue product=itemProductList.get(i);
      BigDecimal itemAmount=itemAmountList.get(i);
      BigDecimal shippingAmount=itemShippingList.get(i);
      itemAdjustments.add(getItemTaxList(delegator,product,postalCode,city,itemAmount,shippingAmount,false));
    }
    if (orderShippingAmount.compareTo(BigDecimal.ZERO) > 0) {
      List<GenericValue> taxList=getItemTaxList(delegator,null,postalCode,city,BigDecimal.ZERO,orderShippingAmount,false);
      orderAdjustments.addAll(taxList);
    }
  }
 catch (  GeneralException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  Map<String,Object> result=ServiceUtil.returnSuccess();
  result.put("orderAdjustments",orderAdjustments);
  result.put("itemAdjustments",itemAdjustments);
  return result;
}
