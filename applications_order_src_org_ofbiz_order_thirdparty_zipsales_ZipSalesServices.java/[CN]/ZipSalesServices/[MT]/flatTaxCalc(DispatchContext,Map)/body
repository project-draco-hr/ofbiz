{
  GenericDelegator delegator=dctx.getDelegator();
  List itemProductList=(List)context.get("itemProductList");
  List itemAmountList=(List)context.get("itemAmountList");
  List itemShippingList=(List)context.get("itemShippingList");
  Double orderShippingAmount=(Double)context.get("orderShippingAmount");
  GenericValue shippingAddress=(GenericValue)context.get("shippingAddress");
  String stateProvince=shippingAddress.getString("stateProvinceGeoId");
  String postalCode=shippingAddress.getString("postalCode");
  String city=shippingAddress.getString("city");
  List orderAdjustments=new ArrayList();
  List itemAdjustments=new ArrayList();
  String validStates=UtilProperties.getPropertyValue("zipsales.properties","zipsales.valid.states");
  if (validStates != null && validStates.length() > 0) {
    List stateSplit=StringUtil.split(validStates,"|");
    if (!stateSplit.contains(stateProvince)) {
      Map result=ServiceUtil.returnSuccess();
      result.put("orderAdjustments",orderAdjustments);
      result.put("itemAdjustments",itemAdjustments);
      return result;
    }
  }
  try {
    for (int i=0; i < itemProductList.size(); i++) {
      GenericValue product=(GenericValue)itemProductList.get(i);
      Double itemAmount=(Double)itemAmountList.get(i);
      Double shippingAmount=(Double)itemShippingList.get(i);
      itemAdjustments.add(getItemTaxList(delegator,product,postalCode,city,itemAmount.doubleValue(),shippingAmount.doubleValue(),false));
    }
    if (orderShippingAmount.doubleValue() > 0) {
      List taxList=getItemTaxList(delegator,null,postalCode,city,0.00,orderShippingAmount.doubleValue(),false);
      orderAdjustments.addAll(taxList);
    }
  }
 catch (  GeneralException e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("orderAdjustments",orderAdjustments);
  result.put("itemAdjustments",itemAdjustments);
  return result;
}
