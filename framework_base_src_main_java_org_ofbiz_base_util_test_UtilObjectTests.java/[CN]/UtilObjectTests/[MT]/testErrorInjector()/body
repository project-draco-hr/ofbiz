{
  byte[] source=new byte[]{0,1,2,3,4,5,6};
  InputStream in=new ErrorInjector(new ByteArrayInputStream(source),true);
  byte[] result=new byte[source.length];
  int r=in.read();
  assertEquals("onClose, read short length",2,in.read(new byte[2]));
  assertNotSame("onClose, not read/eof",-1,r);
  assertEquals("onClose, read length",source.length - 3,in.read(result,3,result.length - 3));
  Exception caught=null;
  try {
    in.close();
  }
 catch (  IOException e) {
    caught=e;
  }
 finally {
    assertNotNull("onClose, exception",caught);
  }
  in=new ErrorInjector(new ByteArrayInputStream(source),4);
  result=new byte[source.length];
  r=in.read();
  assertNotSame("after, not read/eof",-1,r);
  assertEquals("after, read short length",2,in.read(result,0,2));
  assertEquals("after, read long length",1,in.read(result,3,result.length - 3));
  caught=null;
  try {
    in.read(result,4,result.length - 4);
  }
 catch (  IOException e) {
    caught=e;
  }
 finally {
    assertNotNull("read, buffer exception",caught);
  }
  caught=null;
  try {
    in.read();
  }
 catch (  IOException e) {
    caught=e;
  }
 finally {
    assertNotNull("read, singleton exception",caught);
  }
  in.close();
}
