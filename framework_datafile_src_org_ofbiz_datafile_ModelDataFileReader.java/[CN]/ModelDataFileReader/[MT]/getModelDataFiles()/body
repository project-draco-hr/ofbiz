{
  if (modelDataFiles == null) {
synchronized (ModelDataFileReader.class) {
      if (modelDataFiles == null) {
        modelDataFiles=new HashMap();
        UtilTimer utilTimer=new UtilTimer();
        utilTimer.timerString("Before getDocument in file " + readerURL);
        Document document=getDocument(readerURL);
        if (document == null) {
          modelDataFiles=null;
          return null;
        }
        utilTimer.timerString("Before getDocumentElement in file " + readerURL);
        Element docElement=document.getDocumentElement();
        if (docElement == null) {
          modelDataFiles=null;
          return null;
        }
        docElement.normalize();
        Node curChild=docElement.getFirstChild();
        int i=0;
        if (curChild != null) {
          utilTimer.timerString("Before start of dataFile loop in file " + readerURL);
          do {
            if (curChild.getNodeType() == Node.ELEMENT_NODE && "data-file".equals(curChild.getNodeName())) {
              i++;
              Element curDataFile=(Element)curChild;
              String dataFileName=UtilXml.checkEmpty(curDataFile.getAttribute("name"));
              if (modelDataFiles.containsKey(dataFileName)) {
                Debug.logWarning("WARNING: DataFile " + dataFileName + " is defined more than once, most recent will over-write previous definition(s)",module);
              }
              ModelDataFile dataFile=createModelDataFile(curDataFile);
              if (dataFile != null) {
                modelDataFiles.put(dataFileName,dataFile);
                if (Debug.infoOn())                 Debug.logInfo("-- getModelDataFile: #" + i + " Loaded dataFile: "+ dataFileName,module);
              }
 else               Debug.logWarning("-- -- SERVICE ERROR:getModelDataFile: Could not create dataFile for dataFileName: " + dataFileName,module);
            }
          }
 while ((curChild=curChild.getNextSibling()) != null);
        }
 else {
          Debug.logWarning("No child nodes found.",module);
        }
        utilTimer.timerString("Finished file " + readerURL + " - Total Flat File Defs: "+ i+ " FINISHED");
      }
    }
  }
  return modelDataFiles;
}
