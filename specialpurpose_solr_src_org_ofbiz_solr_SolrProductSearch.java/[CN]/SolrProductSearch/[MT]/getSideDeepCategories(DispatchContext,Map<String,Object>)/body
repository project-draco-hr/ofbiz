{
  Map<String,Object> result;
  String solrIndexName=(String)context.get("indexName");
  try {
    String catalogId=null;
    if (UtilValidate.isNotEmpty(context.get("catalogId")))     catalogId=(String)context.get("catalogId");
    String productCategoryId=(String)context.get("productCategoryId") != null ? CategoryUtil.getCategoryNameWithTrail((String)context.get("productCategoryId"),dctx) : null;
    result=ServiceUtil.returnSuccess();
    Map<String,List<Map<String,Object>>> catLevel=new HashMap<String,List<Map<String,Object>>>();
    Debug.logInfo("productCategoryId: " + productCategoryId,module);
    String[] trailElements=productCategoryId.split("/");
    for (    String elements : trailElements) {
      if (elements.length() > 3) {
        Debug.logInfo("elements: " + elements,module);
        String categoryPath=CategoryUtil.getCategoryNameWithTrail(elements,dctx);
        String[] categoryPathArray=categoryPath.split("/");
        int level=Integer.parseInt(categoryPathArray[0]);
        String facetQuery=CategoryUtil.getFacetFilterForCategory(categoryPath,dctx);
        Map<String,Object> query=SolrUtil.categoriesAvailable(catalogId,categoryPath,null,facetQuery,false,0,0,solrIndexName);
        QueryResponse cat=(QueryResponse)query.get("rows");
        List<Map<String,Object>> categories=new ArrayList<Map<String,Object>>();
        List<FacetField> catList=(List<FacetField>)cat.getFacetFields();
        for (Iterator<FacetField> catIterator=catList.iterator(); catIterator.hasNext(); ) {
          FacetField field=(FacetField)catIterator.next();
          List<Count> catL=(List<Count>)field.getValues();
          if (catL != null) {
            for (Iterator<Count> catIter=catL.iterator(); catIter.hasNext(); ) {
              FacetField.Count f=(FacetField.Count)catIter.next();
              if (f.getCount() > 0) {
                Map<String,Object> catMap=new HashMap<String,Object>();
                LinkedList<String> iName=new LinkedList<String>();
                iName.addAll(Arrays.asList(f.getName().split("/")));
                catMap.put("catId",iName.getLast());
                iName.removeFirst();
                String path=f.getName();
                catMap.put("path",path);
                if (level > 0) {
                  iName.removeLast();
                  catMap.put("parentCategory",StringUtils.join(iName,"/"));
                }
 else {
                  catMap.put("parentCategory",null);
                }
                catMap.put("count",Long.toString(f.getCount()));
                categories.add(catMap);
              }
            }
          }
        }
        catLevel.put("menu-" + level,categories);
      }
    }
    result.put("categories",catLevel);
    result.put("numFound",(long)0);
  }
 catch (  Exception e) {
    result=ServiceUtil.returnError(e.toString());
    result.put("numFound",(long)0);
  }
  return result;
}
