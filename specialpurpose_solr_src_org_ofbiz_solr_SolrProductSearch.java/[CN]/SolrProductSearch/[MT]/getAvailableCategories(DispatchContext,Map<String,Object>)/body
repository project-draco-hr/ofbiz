{
  Map<String,Object> result;
  try {
    boolean displayProducts=false;
    if (UtilValidate.isNotEmpty(context.get("displayProducts")))     displayProducts=(Boolean)context.get("displayProducts");
    int viewIndex=0;
    int viewSize=9;
    if (displayProducts) {
      viewIndex=(Integer)context.get("viewIndex");
      viewSize=(Integer)context.get("viewSize");
    }
    String catalogId=null;
    if (UtilValidate.isNotEmpty(context.get("catalogId")))     catalogId=(String)context.get("catalogId");
    String productCategoryId=(String)context.get("productCategoryId") != null ? CategoryUtil.getCategoryNameWithTrail((String)context.get("productCategoryId"),dctx) : null;
    Debug.logInfo("productCategoryId " + productCategoryId,module);
    Map<String,Object> query=SolrUtil.categoriesAvailable(catalogId,productCategoryId,(String)context.get("productId"),displayProducts,viewIndex,viewSize);
    QueryResponse cat=(QueryResponse)query.get("rows");
    result=ServiceUtil.returnSuccess();
    result.put("numFound",(long)0);
    Map<String,Object> categories=FastMap.newInstance();
    List<FacetField> catList=(List<FacetField>)cat.getFacetFields();
    for (Iterator<FacetField> catIterator=catList.iterator(); catIterator.hasNext(); ) {
      FacetField field=(FacetField)catIterator.next();
      List<Count> catL=(List<Count>)field.getValues();
      if (catL != null) {
        for (Iterator<Count> catIter=catL.iterator(); catIter.hasNext(); ) {
          FacetField.Count f=(FacetField.Count)catIter.next();
          if (f.getCount() > 0) {
            categories.put(f.getName(),Long.toString(f.getCount()));
          }
        }
        result.put("categories",categories);
        result.put("numFound",cat.getResults().getNumFound());
      }
    }
  }
 catch (  Exception e) {
    result=ServiceUtil.returnError(e.toString());
    result.put("numFound",(long)0);
  }
  return result;
}
