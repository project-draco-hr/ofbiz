{
  Map<String,Object> result;
  LocalDispatcher dispatcher=dctx.getDispatcher();
  try {
    Map<String,Object> dispatchMap=new HashMap<String,Object>();
    if (UtilValidate.isNotEmpty(context.get("productCategoryId"))) {
      String productCategoryId=(String)context.get("productCategoryId");
      dispatchMap.put("query","cat:*" + productCategoryId + "*");
    }
 else     return ServiceUtil.returnError("Missing product category id");
    if (context.get("viewSize") != null)     dispatchMap.put("viewSize",Integer.parseInt(((String)context.get("viewSize"))));
    if (context.get("viewIndex") != null)     dispatchMap.put("viewIndex",Integer.parseInt((String)context.get("viewIndex")));
    if (context.get("queryFilter") != null)     dispatchMap.put("queryFilter",context.get("queryFilter"));
    dispatchMap.put("facet",false);
    dispatchMap.put("spellcheck",true);
    dispatchMap.put("highlight",true);
    Map<String,Object> searchResult=dispatcher.runSync("runSolrQuery",dispatchMap);
    QueryResponse queryResult=(QueryResponse)searchResult.get("queryResult");
    result=ServiceUtil.returnSuccess();
    result.put("results",queryResult.getResults());
    result.put("listSize",queryResult.getResults().getNumFound());
    result.put("viewIndex",queryResult.getResults().getStart());
    result.put("viewSize",queryResult.getResults().size());
  }
 catch (  Exception e) {
    Debug.logError(e,e.getMessage(),module);
    result=ServiceUtil.returnError(e.toString());
  }
  return result;
}
