{
  GenericValue orderHeader=null;
  try {
    orderHeader=dispatcher.getDelegator().findByPrimaryKey("OrderHeader",UtilMisc.toMap("orderId",orderId));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  if (orderHeader != null) {
    OrderReadHelper orh=new OrderReadHelper(orderHeader);
    GenericValue btparty=orh.getBillToParty();
    String partyId="_NA_";
    if (btparty != null) {
      partyId=btparty.getString("partyId");
    }
    List<GenericValue> opps=orh.getPaymentPreferences();
    for (    GenericValue opp : opps) {
      if ("PAYMENT_RECEIVED".equals(opp.getString("statusId"))) {
        List<GenericValue> payments=orh.getOrderPayments(opp);
        if (UtilValidate.isEmpty(payments)) {
          Map<String,Object> results=dispatcher.runSync("createPaymentFromPreference",UtilMisc.<String,Object>toMap("userLogin",userLogin,"orderPaymentPreferenceId",opp.getString("orderPaymentPreferenceId"),"paymentRefNum",UtilDateTime.nowTimestamp().toString(),"paymentFromId",partyId));
          if (results.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_ERROR)) {
            Debug.logError((String)results.get(ModelService.ERROR_MESSAGE),module);
          }
        }
      }
    }
  }
}
