{
  String countStr=this.countFse.expandString(methodContext.getEnvMap());
  int count=0;
  try {
    count=Double.valueOf(countStr).intValue();
  }
 catch (  NumberFormatException e) {
    throw new MiniLangRuntimeException("Error while converting \"" + countStr + "\" to a number: "+ e.getMessage(),this);
  }
  if (count < 0) {
    throw new MiniLangRuntimeException("Unable to execute loop operation because the count is negative: " + countStr,this);
  }
  for (int i=0; i < count; i++) {
    this.fieldFma.put(methodContext.getEnvMap(),i);
    try {
      for (      MethodOperation methodOperation : subOps) {
        if (!methodOperation.exec(methodContext)) {
          return false;
        }
      }
    }
 catch (    MiniLangException e) {
      if (e instanceof BreakElementException) {
        break;
      }
      if (e instanceof ContinueElementException) {
        continue;
      }
      throw e;
    }
  }
  return true;
}
