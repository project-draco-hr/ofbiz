{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Delegator delegator=dctx.getDelegator();
  ShoppingCart cart=(ShoppingCart)context.get("shoppingCart");
  Map<String,Object> result=ServiceUtil.returnSuccess();
  try {
    Map<String,Object> resp=dispatcher.runSync("resetShipGroupItems",context);
    if (ServiceUtil.isError(resp)) {
      return ServiceUtil.returnError(ServiceUtil.getErrorMessage(resp));
    }
  }
 catch (  GenericServiceException e) {
    Debug.logError(e.toString(),module);
    return ServiceUtil.returnError(e.toString());
  }
  Map<String,Object> vendorMap=FastMap.newInstance();
  for (  ShoppingCartItem item : cart) {
    GenericValue vendorProduct=null;
    String productId=item.getParentProductId();
    if (productId == null) {
      productId=item.getProductId();
    }
    int index=0;
    try {
      vendorProduct=EntityUtil.getFirst(delegator.findByAnd("VendorProduct",UtilMisc.toMap("productId",productId,"productStoreGroupId","_NA_"),null,false));
    }
 catch (    GenericEntityException e) {
      Debug.logError(e.toString(),module);
    }
    if (UtilValidate.isEmpty(vendorProduct)) {
      if (vendorMap.containsKey("_NA_")) {
        index=((Integer)vendorMap.get("_NA_")).intValue();
        cart.positionItemToGroup(item,item.getQuantity(),0,index,true);
      }
 else {
        index=cart.addShipInfo();
        vendorMap.put("_NA_",index);
        ShoppingCart.CartShipInfo info=cart.getShipInfo(index);
        info.setVendorPartyId("_NA_");
        info.setShipGroupSeqId(UtilFormatOut.formatPaddedNumber(index,5));
        cart.positionItemToGroup(item,item.getQuantity(),0,index,true);
      }
    }
    if (UtilValidate.isNotEmpty(vendorProduct)) {
      String vendorPartyId=vendorProduct.getString("vendorPartyId");
      if (vendorMap.containsKey(vendorPartyId)) {
        index=((Integer)vendorMap.get(vendorPartyId)).intValue();
        cart.positionItemToGroup(item,item.getQuantity(),0,index,true);
      }
 else {
        index=cart.addShipInfo();
        vendorMap.put(vendorPartyId,index);
        ShoppingCart.CartShipInfo info=cart.getShipInfo(index);
        info.setVendorPartyId(vendorPartyId);
        info.setShipGroupSeqId(UtilFormatOut.formatPaddedNumber(index,5));
        cart.positionItemToGroup(item,item.getQuantity(),0,index,true);
      }
    }
  }
  return result;
}
