{
  ShoppingCart cart=(ShoppingCart)context.get("shoppingCart");
  Integer groupIndex=(Integer)context.get("groupIndex");
  String shippingContactMechId=(String)context.get("shippingContactMechId");
  String shipmentMethodString=(String)context.get("shipmentMethodString");
  String shippingInstructions=(String)context.get("shippingInstructions");
  String giftMessage=(String)context.get("giftMessage");
  Boolean maySplit=(Boolean)context.get("maySplit");
  Boolean isGift=(Boolean)context.get("isGift");
  Locale locale=(Locale)context.get("locale");
  ShoppingCart.CartShipInfo csi=cart.getShipInfo(groupIndex.intValue());
  if (csi != null) {
    int idx=groupIndex.intValue();
    if (UtilValidate.isNotEmpty(shipmentMethodString)) {
      int delimiterPos=shipmentMethodString.indexOf('@');
      String shipmentMethodTypeId=null;
      String carrierPartyId=null;
      if (delimiterPos > 0) {
        shipmentMethodTypeId=shipmentMethodString.substring(0,delimiterPos);
        carrierPartyId=shipmentMethodString.substring(delimiterPos + 1);
      }
      cart.setShipmentMethodTypeId(idx,shipmentMethodTypeId);
      cart.setCarrierPartyId(idx,carrierPartyId);
    }
    cart.setShippingInstructions(idx,shippingInstructions);
    cart.setShippingContactMechId(idx,shippingContactMechId);
    cart.setGiftMessage(idx,giftMessage);
    if (maySplit != null) {
      cart.setMaySplit(idx,maySplit);
    }
    if (isGift != null) {
      cart.setIsGift(idx,isGift);
    }
  }
 else {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,"OrderCartShipGroupNotFound",UtilMisc.toMap("groupIndex",groupIndex),locale));
  }
  return ServiceUtil.returnSuccess();
}
