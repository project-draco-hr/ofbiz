{
  String envName=original.substring(start,end);
  localizeCurrency=false;
  int currencyPos=envName.indexOf("?currency(");
  if (currencyPos != -1) {
    int closeBracket=envName.indexOf(")",currencyPos + 10);
    currencyCode=envName.substring(currencyPos + 10,closeBracket);
    localizeCurrency=true;
    envName=envName.substring(0,currencyPos);
  }
  FlexibleMapAccessor fma=new FlexibleMapAccessor(envName);
  Object envVal=fma.get(context,locale);
  if (envVal != null) {
    if (envVal instanceof java.sql.Date) {
      DateFormat df=UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT,timeZone,null);
      targetBuffer.append(df.format((java.util.Date)envVal));
    }
 else     if (envVal instanceof java.sql.Time) {
      DateFormat df=UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT,timeZone,null);
      targetBuffer.append(df.format((java.util.Date)envVal));
    }
 else     if (envVal instanceof java.sql.Timestamp) {
      DateFormat df=UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT,timeZone,null);
      targetBuffer.append(df.format((java.util.Date)envVal));
    }
 else     if (envVal instanceof java.util.Date) {
      DateFormat df=UtilDateTime.toDateTimeFormat("EEE MMM dd hh:mm:ss z yyyy",timeZone,null);
      targetBuffer.append(df.format((java.util.Date)envVal));
    }
 else     if (localizeCurrency) {
      targetBuffer.append(UtilFormatOut.formatCurrency(new Double(envVal.toString()),currencyCode,locale));
    }
 else {
      targetBuffer.append(envVal.toString());
    }
  }
 else {
    Debug.logWarning("Could not find value in environment for the name [" + envName + "], inserting nothing.",module);
  }
}
