{
  Map<String,Object> result=FastMap.newInstance();
  boolean checkVerify=false;
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String productStoreId=(String)context.get("productStoreId");
  String itemID=(String)context.get("itemId");
  ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
  try {
    DetailLevelCodeType[] detailLevels=new DetailLevelCodeType[]{DetailLevelCodeType.RETURN_ALL,DetailLevelCodeType.ITEM_RETURN_ATTRIBUTES,DetailLevelCodeType.ITEM_RETURN_DESCRIPTION};
    VerifyAddSecondChanceItemCall verify=new VerifyAddSecondChanceItemCall(apiContext);
    verify.setItemID(itemID);
    verify.setDetailLevel(detailLevels);
    verify.setDuration(SecondChanceOfferDurationCodeType.DAYS_1);
    Map<String,Object> serviceMap=FastMap.newInstance();
    serviceMap.put("itemId",itemID);
    serviceMap.put("productStoreId",productStoreId);
    serviceMap.put("locale",locale);
    serviceMap.put("userLogin",userLogin);
    Map<String,Object> bidderTest=(Map)getEbayAllBidders(dctx,serviceMap);
    List<Map> test=(List)bidderTest.get("allBidders");
    if (test.size() != 0) {
      verify.setRecipientBidderUserID((String)test.get(0).get("userId"));
    }
    VerifyAddSecondChanceItemResponseType verifyResult=verify.verifyAddSecondChanceItem();
    result.put("checkVerify",true);
  }
 catch (  Exception e) {
    result.put("checkVerify",checkVerify);
    result.put("errorMessage","This item ( " + itemID + " ) can not add second chance offer.");
    result.put("responseMessage","error");
    return result;
  }
  return result;
}
