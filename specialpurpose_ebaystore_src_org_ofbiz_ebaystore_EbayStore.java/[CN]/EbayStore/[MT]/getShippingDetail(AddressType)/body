{
  if (UtilValidate.isEmpty(shippingAddress)) {
    return ServiceUtil.returnError("Required shippingAddress parameter.");
  }
  Map<String,Object> result=FastMap.newInstance();
  String buyerName=null;
  String street=null;
  String street1=null;
  String street2=null;
  String cityName=null;
  String stateOrProvince=null;
  String county=null;
  String countryName=null;
  String phone=null;
  String postalCode=null;
  if (UtilValidate.isNotEmpty(shippingAddress.getName())) {
    buyerName=shippingAddress.getName();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getStreet())) {
    street=shippingAddress.getStreet();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getStreet1())) {
    street=shippingAddress.getStreet1();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getStreet2())) {
    street=shippingAddress.getStreet2();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getCityName())) {
    cityName=shippingAddress.getCityName();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getStateOrProvince())) {
    stateOrProvince=shippingAddress.getStateOrProvince();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getCountry())) {
    county=shippingAddress.getCountry().value();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getCountryName())) {
    countryName=shippingAddress.getCountryName();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getPhone())) {
    phone=shippingAddress.getPhone();
  }
  if (UtilValidate.isNotEmpty(shippingAddress.getPostalCode())) {
    postalCode=shippingAddress.getPostalCode();
  }
  result.put("buyerName",buyerName);
  result.put("shippingAddressStreet",street);
  result.put("shippingAddressStreet1",street1);
  result.put("shippingAddressStreet2",street2);
  result.put("shippingAddressCityName",cityName);
  result.put("shippingAddressStateOrProvince",stateOrProvince);
  result.put("shippingAddressCountry",county);
  result.put("countryName",countryName);
  result.put("shippingAddressPhone",phone);
  result.put("shippingAddressPostalCode",postalCode);
  return result;
}
