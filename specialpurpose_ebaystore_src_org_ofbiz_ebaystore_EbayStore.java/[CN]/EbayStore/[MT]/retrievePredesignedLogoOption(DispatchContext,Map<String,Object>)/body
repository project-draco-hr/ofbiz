{
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Map<String,Object> result=FastMap.newInstance();
  Locale locale=(Locale)context.get("locale");
  Delegator delegator=dctx.getDelegator();
  GetStoreOptionsRequestType req=null;
  StoreLogoArrayType returnedLogoArray=null;
  GetStoreOptionsResponseType resp=null;
  try {
    if (context.get("productStoreId") != null) {
      GetStoreOptionsCall call=new GetStoreOptionsCall(EbayStoreHelper.getApiContext((String)context.get("productStoreId"),locale,delegator));
      req=new GetStoreOptionsRequestType();
      resp=(GetStoreOptionsResponseType)call.execute(req);
      if (resp != null && "SUCCESS".equals(resp.getAck().toString())) {
        returnedLogoArray=resp.getLogoArray();
        int i=0;
        List<Map<String,Object>> logoList=FastList.newInstance();
        while (i < returnedLogoArray.getLogoLength()) {
          Map<String,Object> logo=FastMap.newInstance();
          StoreLogoType storeLogoType=returnedLogoArray.getLogo(i);
          logo.put("storeLogoId",storeLogoType.getLogoID());
          logo.put("storeLogoName",storeLogoType.getName());
          logo.put("storeLogoURL",storeLogoType.getURL());
          logoList.add(logo);
          i++;
        }
        result=ServiceUtil.returnSuccess(UtilProperties.getMessage(resource,"EbayStoreLoadLogoSuccess",locale));
        result.put("storeLogoOptList",logoList);
      }
 else {
        EbayStoreHelper.createErrorLogMessage(userLogin,dctx.getDispatcher(),context.get("productStoreId").toString(),resp.getAck().toString(),"Get store option : retrievePredesignedLogoOption",resp.getErrors(0).getLongMessage());
      }
    }
  }
 catch (  ApiException e) {
    e.printStackTrace();
  }
catch (  SdkSoapException e) {
    e.printStackTrace();
  }
catch (  SdkException e) {
    e.printStackTrace();
  }
  return result;
}
