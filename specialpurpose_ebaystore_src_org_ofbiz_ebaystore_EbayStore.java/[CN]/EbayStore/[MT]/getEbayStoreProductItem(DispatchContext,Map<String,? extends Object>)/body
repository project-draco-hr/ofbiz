{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String productStoreId=(String)context.get("productStoreId");
  String itemID=(String)context.get("itemId");
  try {
    ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
    GetItemCall api=new GetItemCall(apiContext);
    DetailLevelCodeType[] detailLevels=new DetailLevelCodeType[]{DetailLevelCodeType.RETURN_ALL,DetailLevelCodeType.ITEM_RETURN_ATTRIBUTES,DetailLevelCodeType.ITEM_RETURN_DESCRIPTION};
    api.setDetailLevel(detailLevels);
    api.getItem(itemID);
    ItemType item=api.getReturnedItem();
    String title=item.getTitle();
    String description=item.getDescription();
    String listingType=item.getListingType().value();
    if (item.getPictureDetails() != null) {
      String url[]=item.getPictureDetails().getPictureURL();
      if (url.length != 0) {
        result.put("pictureURL",url[0]);
      }
 else {
        result.put("pictureURL",null);
      }
    }
 else {
      result.put("pictureURL",null);
    }
    result.put("title",title);
    result.put("description",description);
    AmountType amt=item.getStartPrice();
    result.put("price",amt != null ? (new Double(amt.getValue()).toString()) : "");
    result.put("currencyId",amt.getCurrencyID().toString());
    result.put("listingType",listingType);
  }
 catch (  Exception e) {
    return ServiceUtil.returnError(e.getMessage());
  }
  return result;
}
