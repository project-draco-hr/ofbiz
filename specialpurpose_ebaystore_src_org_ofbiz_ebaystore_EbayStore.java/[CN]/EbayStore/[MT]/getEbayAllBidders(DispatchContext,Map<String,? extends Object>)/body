{
  Map<String,Object> result=FastMap.newInstance();
  List<Map> allBidders=FastList.newInstance();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  String productStoreId=(String)context.get("productStoreId");
  String itemID=(String)context.get("itemId");
  ApiContext apiContext=EbayStoreHelper.getApiContext(productStoreId,locale,delegator);
  try {
    DetailLevelCodeType[] detailLevels=new DetailLevelCodeType[]{DetailLevelCodeType.RETURN_ALL,DetailLevelCodeType.ITEM_RETURN_ATTRIBUTES,DetailLevelCodeType.ITEM_RETURN_DESCRIPTION};
    GetAllBiddersCall api=new GetAllBiddersCall(apiContext);
    api.setDetailLevel(detailLevels);
    api.setItemID(itemID);
    api.setCallMode(GetAllBiddersModeCodeType.VIEW_ALL);
    OfferType[] bidders=api.getAllBidders();
    for (int count=0; count < bidders.length; count++) {
      Map<String,Object> entry=FastMap.newInstance();
      OfferType offer=bidders[count];
      entry.put("userId",offer.getUser().getUserID());
      allBidders.add(entry);
    }
    result.put("allBidders",allBidders);
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
    result.put("allBidders",allBidders);
    return result;
  }
  return result;
}
