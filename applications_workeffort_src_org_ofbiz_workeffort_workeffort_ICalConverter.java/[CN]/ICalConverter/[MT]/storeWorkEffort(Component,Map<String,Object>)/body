{
  PropertyList propertyList=component.getProperties();
  String workEffortId=fromXProperty(propertyList,workEffortIdXPropName);
  GenericDelegator delegator=(GenericDelegator)context.get("delegator");
  GenericValue workEffort=delegator.findOne("WorkEffort",UtilMisc.toMap("workEffortId",workEffortId),false);
  if (workEffort == null) {
    return;
  }
  if (!hasPermission(workEffortId,"UPDATE",context)) {
    return;
  }
  Map<String,Object> serviceMap=FastMap.newInstance();
  serviceMap.put("workEffortId",workEffortId);
  setMapElement(serviceMap,"scopeEnumId",fromClazz(propertyList));
  setMapElement(serviceMap,"description",fromDescription(propertyList));
  setMapElement(serviceMap,"estimatedStartDate",fromDtStart(propertyList));
  setMapElement(serviceMap,"estimatedMilliSeconds",fromDuration(propertyList));
  setMapElement(serviceMap,"lastModifiedDate",fromLastModified(propertyList));
  setMapElement(serviceMap,"locationDesc",fromLocation(propertyList));
  setMapElement(serviceMap,"priority",fromPriority(propertyList));
  setMapElement(serviceMap,"currentStatusId",fromStatus(propertyList));
  setMapElement(serviceMap,"workEffortName",fromSummary(propertyList));
  if ("VTODO".equals(component.getName())) {
    setMapElement(serviceMap,"actualCompletionDate",fromCompleted(propertyList));
    setMapElement(serviceMap,"percentComplete",fromPercentComplete(propertyList));
  }
 else {
    setMapElement(serviceMap,"estimatedCompletionDate",fromDtEnd(propertyList));
  }
  invokeService("updateWorkEffort",serviceMap,context);
}
