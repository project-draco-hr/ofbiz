{
  LocalDispatcher dispatcher=(LocalDispatcher)context.get("dispatcher");
  Map<String,Object> localMap=FastMap.newInstance();
  try {
    ModelService modelService=null;
    modelService=dispatcher.getDispatchContext().getModelService(serviceName);
    for (    ModelParam modelParam : modelService.getInModelParamList()) {
      if (serviceMap.containsKey(modelParam.name)) {
        Object value=serviceMap.get(modelParam.name);
        if (UtilValidate.isNotEmpty(modelParam.type)) {
          value=ObjectType.simpleTypeConvert(value,modelParam.type,null,null,null,true);
        }
        localMap.put(modelParam.name,value);
      }
    }
  }
 catch (  Exception e) {
    String errMsg="Error while creating service Map for service " + serviceName + ": ";
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg + e);
  }
  if (context.get("userLogin") != null) {
    localMap.put("userLogin",context.get("userLogin"));
  }
  localMap.put("locale",context.get("locale"));
  try {
    return dispatcher.runSync(serviceName,localMap);
  }
 catch (  GenericServiceException e) {
    String errMsg="Error while invoking service " + serviceName + ": ";
    Debug.logError(e,errMsg,module);
    return ServiceUtil.returnError(errMsg + e);
  }
}
