{
  GenericValue userLogin=null;
  String username=request.getParameter("USERNAME");
  String password=request.getParameter("PASSWORD");
  if (UtilValidate.isEmpty(username) || UtilValidate.isEmpty(password)) {
    return;
  }
  if ("true".equalsIgnoreCase(UtilProperties.getPropertyValue("security.properties","username.lowercase"))) {
    username=username.toLowerCase();
  }
  if ("true".equalsIgnoreCase(UtilProperties.getPropertyValue("security.properties","password.lowercase"))) {
    password=password.toLowerCase();
  }
  HttpSession session=request.getSession();
  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");
  Map<String,Object> result=dispatcher.runSync("userLogin",UtilMisc.toMap("login.username",username,"login.password",password,"locale",UtilHttp.getLocale(request)));
  if (ModelService.RESPOND_SUCCESS.equals(result.get(ModelService.RESPONSE_MESSAGE))) {
    userLogin=(GenericValue)result.get("userLogin");
    request.setAttribute("userLogin",userLogin);
    session.setAttribute("userLogin",userLogin);
    VisitHandler.getVisitor(request,response);
  }
 else {
    return;
  }
  GenericValue person=userLogin.getRelatedOne("Person");
  GenericValue partyGroup=userLogin.getRelatedOne("PartyGroup");
  if (person != null)   request.setAttribute("person",person);
  if (partyGroup != null)   request.setAttribute("partyGroup",partyGroup);
}
