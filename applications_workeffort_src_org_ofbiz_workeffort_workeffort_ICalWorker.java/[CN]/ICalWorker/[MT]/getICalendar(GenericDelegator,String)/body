{
  GenericValue publishProperties=delegator.findByPrimaryKey("WorkEffort",UtilMisc.toMap("workEffortId",workEffortId));
  if (publishProperties == null || !"PUBLISH_PROPS".equals(publishProperties.get("workEffortTypeId"))) {
    return null;
  }
  net.fortuna.ical4j.model.Calendar calendar=makeCalendar(publishProperties);
  ComponentList components=calendar.getComponents();
  List<GenericValue> workEfforts=getRelatedWorkEfforts(publishProperties);
  for (  GenericValue workEffort : workEfforts) {
    components.add(makeCalendarComponent(workEffort));
  }
  if (Debug.verboseOn()) {
    try {
      calendar.validate(true);
      Debug.logVerbose("iCalendar passes validation",module);
    }
 catch (    ValidationException e) {
      Debug.logVerbose("iCalendar fails validation: " + e,module);
    }
  }
  return calendar;
}
