{
  if (!"Rate".equals(request.getParameter("API"))) {
    Debug.logError("Unsupported API [" + request.getParameter("API") + "]",module);
    return;
  }
  String xmlValue=request.getParameter("XML");
  Document requestDocument=null;
  try {
    requestDocument=UtilXml.readXmlDocument(xmlValue,false);
  }
 catch (  SAXException se) {
    Debug.logError(se,module);
    return;
  }
catch (  ParserConfigurationException pce) {
    Debug.logError(pce,module);
    return;
  }
catch (  IOException xmlReadException) {
    Debug.logError(xmlReadException,module);
    return;
  }
  if (requestDocument == null) {
    Debug.logError("In UspsMockApiSerlvet No XML document found in request, quiting now; XML parameter is: " + xmlValue,module);
    return;
  }
  List<? extends Element> packageElementList=UtilXml.childElementList(requestDocument.getDocumentElement(),"Package");
  if (UtilValidate.isNotEmpty(packageElementList)) {
    Document responseDocument=UtilXml.makeEmptyXmlDocument("RateResponse");
    for (    Element packageElement : packageElementList) {
      Element responsePackageElement=UtilXml.addChildElement(responseDocument.getDocumentElement(),"Package",responseDocument);
      responsePackageElement.setAttribute("ID",packageElement.getAttribute("ID"));
      UtilXml.addChildElementValue(responsePackageElement,"ZipOrigination",UtilXml.childElementValue(packageElement,"ZipOrigination"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"ZipDestination",UtilXml.childElementValue(packageElement,"ZipDestination"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Pounds",UtilXml.childElementValue(packageElement,"Pounds"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Ounces",UtilXml.childElementValue(packageElement,"Ounces"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Container",UtilXml.childElementValue(packageElement,"Container"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Size",UtilXml.childElementValue(packageElement,"Size"),responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Zone","1",responseDocument);
      UtilXml.addChildElementValue(responsePackageElement,"Postage","3.00",responseDocument);
    }
    OutputStream os=new ByteArrayOutputStream();
    try {
      UtilXml.writeXmlDocument(responseDocument,os,"UTF-8",true,false,0);
    }
 catch (    TransformerException e) {
      Debug.log(e,module);
      return;
    }
    response.setContentType("text/xml");
    ServletOutputStream sos=response.getOutputStream();
    sos.print(os.toString());
    sos.flush();
  }
}
