{
  Map<String,Object> context=null;
  try {
    if (!UtilValidate.isEmpty(jobValue.getString("runtimeDataId"))) {
      GenericValue contextObj=jobValue.getRelatedOne("RuntimeData",false);
      if (contextObj != null) {
        context=UtilGenerics.checkMap(XmlSerializer.deserialize(contextObj.getString("runtimeInfo"),delegator),String.class,Object.class);
      }
    }
    if (context == null) {
      context=new HashMap<String,Object>();
    }
    if (!UtilValidate.isEmpty(jobValue.getString("runAsUser"))) {
      context.put("userLogin",ServiceUtil.getUserLogin(dctx,context,jobValue.getString("runAsUser")));
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"PersistedServiceJob.getContext(): Entity Exception",module);
  }
catch (  SerializeException e) {
    Debug.logError(e,"PersistedServiceJob.getContext(): Serialize Exception",module);
  }
catch (  ParserConfigurationException e) {
    Debug.logError(e,"PersistedServiceJob.getContext(): Parse Exception",module);
  }
catch (  SAXException e) {
    Debug.logError(e,"PersistedServiceJob.getContext(): SAXException",module);
  }
catch (  IOException e) {
    Debug.logError(e,"PersistedServiceJob.getContext(): IOException",module);
  }
  if (context == null) {
    Debug.logError("Job context is null",module);
  }
  return context;
}
