{
  UtilCodec.SimpleEncoder encoder=UtilCodec.getEncoder(encoderType);
  String orderItemSeqId=(order.getEntityName().equals("OrderItem") ? order.getString("orderItemSeqId") : "_NA_");
  String cacheKey=orderContentTypeId + SEPARATOR + locale+ SEPARATOR+ mimeTypeId+ SEPARATOR+ order.get("orderId")+ SEPARATOR+ orderItemSeqId;
  try {
    String cachedValue=orderContentCache.get(cacheKey);
    if (cachedValue != null) {
      return cachedValue;
    }
    Writer outWriter=new StringWriter();
    getOrderContentAsText(null,null,order,orderContentTypeId,locale,mimeTypeId,delegator,dispatcher,outWriter,false);
    String outString=outWriter.toString();
    if (UtilValidate.isEmpty(outString)) {
      outString=outString == null ? "" : outString;
    }
    outString=encoder.encode(outString);
    if (orderContentCache != null) {
      orderContentCache.put(cacheKey,outString);
    }
    return outString;
  }
 catch (  GeneralException e) {
    Debug.logError(e,"Error rendering OrderContent, inserting empty String",module);
    return "";
  }
catch (  IOException e) {
    Debug.logError(e,"Error rendering OrderContent, inserting empty String",module);
    return "";
  }
}
