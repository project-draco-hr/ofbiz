{
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  VerifyPickSession pickSession=(VerifyPickSession)context.get("verifyPickSession");
  String orderId=(String)context.get("orderId");
  String shipGroupSeqId=(String)context.get("shipGroupSeqId");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Map<String,?> selectedMap=UtilGenerics.checkMap(context.get("selectedMap"));
  Map<String,String> itemMap=UtilGenerics.checkMap(context.get("itemMap"));
  Map<String,String> productMap=UtilGenerics.checkMap(context.get("productMap"));
  Map<String,String> quantityMap=UtilGenerics.checkMap(context.get("quantityMap"));
  if (selectedMap != null) {
    for (    String rowKey : selectedMap.keySet()) {
      String orderItemSeqId=itemMap.get(rowKey);
      String productId=productMap.get(rowKey);
      BigDecimal quantity=new BigDecimal(quantityMap.get(rowKey));
      if (quantity.compareTo(ZERO) > 0) {
        try {
          pickSession.createRow(orderId,orderItemSeqId,shipGroupSeqId,productId,quantity,locale);
        }
 catch (        Exception ex) {
          return ServiceUtil.returnError(ex.getMessage());
        }
      }
    }
  }
  return ServiceUtil.returnSuccess();
}
