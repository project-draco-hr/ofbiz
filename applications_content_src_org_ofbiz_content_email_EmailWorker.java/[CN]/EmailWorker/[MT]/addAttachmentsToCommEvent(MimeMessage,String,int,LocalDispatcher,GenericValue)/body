{
  int attachmentCount=0;
  Map commEventMap=new HashMap();
  commEventMap.put("communicationEventId",communicationEventId);
  commEventMap.put("contentTypeId","DOCUMENT");
  commEventMap.put("mimeTypeId","text/html");
  commEventMap.put("userLogin",userLogin);
  String subject=message.getSubject();
  Map result=null;
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  Multipart multipart=(Multipart)message.getContent();
  int multipartCount=multipart.getCount();
  for (int i=0; i < multipartCount; i++) {
    Part part=multipart.getBodyPart(i);
    String thisContentTypeRaw=part.getContentType();
    int idx2=thisContentTypeRaw.indexOf(";");
    String thisContentType=thisContentTypeRaw.substring(0,idx2);
    String disposition=part.getDisposition();
    if (((disposition == null) && (i == 0) && (i != bodyContentIndex)&& thisContentType.startsWith("text")) || ((disposition != null) && (disposition.equals(Part.ATTACHMENT) || disposition.equals(Part.INLINE)) && (i != bodyContentIndex))) {
      commEventMap.put("contentName",subject + "-" + i);
      commEventMap.put("drMimeTypeId",thisContentType);
      if (thisContentType.startsWith("text")) {
        String content=(String)part.getContent();
        commEventMap.put("drDataResourceTypeId","ELECTRONIC_TEXT");
        commEventMap.put("textData",content);
      }
 else {
        InputStream is=part.getInputStream();
        int c;
        while ((c=is.read()) > -1) {
          baos.write(c);
        }
        ByteWrapper imageData=new ByteWrapper(baos.toByteArray());
        int len=imageData.getLength();
        if (Debug.infoOn())         Debug.logInfo("imageData length: " + len,module);
        commEventMap.put("imageData",imageData);
        commEventMap.put("drDataResourceTypeId","IMAGE_OBJECT");
        commEventMap.put("_imageData_contentType",thisContentType);
      }
      result=dispatcher.runSync("createCommContentDataResource",commEventMap);
      attachmentCount++;
    }
  }
  return attachmentCount;
}
