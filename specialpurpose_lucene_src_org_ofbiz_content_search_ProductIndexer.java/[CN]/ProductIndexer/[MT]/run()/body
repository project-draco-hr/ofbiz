{
  IndexWriter indexWriter=null;
  int uncommittedDocs=0;
  while (true) {
    String productId;
    try {
      productId=productIndexQueue.take();
    }
 catch (    InterruptedException e) {
      Debug.logError(e,module);
      if (indexWriter != null) {
        try {
          indexWriter.close();
          indexWriter=null;
        }
 catch (        IOException ioe) {
          Debug.logError(ioe,module);
        }
      }
      break;
    }
    Document productDocument=this.prepareProductDocument(productId);
    Term documentIdentifier=new Term("productId",productId);
    if (indexWriter == null) {
      try {
        indexWriter=new IndexWriter(this.indexDirectory,this.indexWriterConfiguration);
      }
 catch (      CorruptIndexException e) {
        Debug.logError("Corrupted lucene index: " + e.getMessage(),module);
        break;
      }
catch (      LockObtainFailedException e) {
        Debug.logError("Could not obtain Lock on lucene index " + e.getMessage(),module);
        break;
      }
catch (      IOException e) {
        Debug.logError(e.getMessage(),module);
        break;
      }
    }
    try {
      if (productDocument == null) {
        indexWriter.deleteDocuments(documentIdentifier);
        if (Debug.infoOn())         Debug.logInfo("Deleted Lucene document for product: " + productId,module);
      }
 else {
        indexWriter.updateDocument(documentIdentifier,productDocument);
        if (Debug.infoOn())         Debug.logInfo("Indexed Lucene document for product: " + productId,module);
      }
    }
 catch (    Exception e) {
      Debug.logError(e,"Error processing Lucene document for product: " + productId,module);
      if (productIndexQueue.peek() == null) {
        try {
          indexWriter.close();
          indexWriter=null;
        }
 catch (        IOException ioe) {
          Debug.logError(ioe,module);
        }
      }
      continue;
    }
    uncommittedDocs++;
    if (uncommittedDocs == UNCOMMITTED_DOC_LIMIT || productIndexQueue.peek() == null) {
      try {
        indexWriter.commit();
      }
 catch (      IOException e) {
        Debug.logError(e,module);
      }
      uncommittedDocs=0;
    }
    if (productIndexQueue.peek() == null) {
      try {
        indexWriter.close();
        indexWriter=null;
      }
 catch (      IOException e) {
        Debug.logError(e,module);
      }
    }
  }
}
