{
  boolean onlyIncludeOrSkipPrim=onlyIncludeOrSkip == null ? true : onlyIncludeOrSkip.booleanValue();
  Map<String,Object> paramMap=FastMap.newInstance();
  String pathInfoStr=request.getPathInfo();
  if (pathInfoStr != null && pathInfoStr.length() > 0) {
    if (!pathInfoStr.endsWith("/"))     pathInfoStr+="/";
    int current=pathInfoStr.indexOf('/');
    int last=current;
    while ((current=pathInfoStr.indexOf('/',last + 1)) != -1) {
      String element=pathInfoStr.substring(last + 1,current);
      last=current;
      if (element.charAt(0) == '~' && element.indexOf('=') > -1) {
        String name=element.substring(1,element.indexOf('='));
        if (nameSet != null && (onlyIncludeOrSkipPrim ^ nameSet.contains(name))) {
          continue;
        }
        String value=element.substring(element.indexOf('=') + 1);
        Object curValue=paramMap.get(name);
        if (curValue != null) {
          List<String> paramList=null;
          if (curValue instanceof List) {
            paramList=UtilGenerics.checkList(curValue);
            paramList.add(value);
          }
 else {
            String paramString=(String)curValue;
            paramList=FastList.newInstance();
            paramList.add(paramString);
            paramList.add(value);
          }
          paramMap.put(name,paramList);
        }
 else {
          paramMap.put(name,value);
        }
      }
    }
  }
  return canonicalizeParameterMap(paramMap);
}
