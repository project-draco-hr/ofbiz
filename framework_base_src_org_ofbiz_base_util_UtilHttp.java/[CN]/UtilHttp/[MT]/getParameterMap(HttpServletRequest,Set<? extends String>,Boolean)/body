{
  boolean onlyIncludeOrSkipPrim=onlyIncludeOrSkip == null ? true : onlyIncludeOrSkip.booleanValue();
  Map<String,Object> paramMap=FastMap.newInstance();
  Enumeration<String> e=UtilGenerics.cast(request.getParameterNames());
  while (e.hasMoreElements()) {
    String name=e.nextElement();
    if (nameSet != null && (onlyIncludeOrSkipPrim ^ nameSet.contains(name))) {
      continue;
    }
    Object value=null;
    String[] paramArr=request.getParameterValues(name);
    if (paramArr != null) {
      if (paramArr.length > 1) {
        value=Arrays.asList(paramArr);
      }
 else {
        value=paramArr[0];
      }
    }
    paramMap.put(name,value);
  }
  paramMap.putAll(getPathInfoOnlyParameterMap(request,nameSet,onlyIncludeOrSkip));
  if (paramMap.size() == 0) {
    Map<String,Object> multiPartMap=UtilGenerics.checkMap(request.getAttribute("multiPartMap"));
    if (UtilValidate.isNotEmpty(multiPartMap)) {
      paramMap.putAll(multiPartMap);
    }
  }
  if (Debug.verboseOn()) {
    Debug.logVerbose("Made Request Parameter Map with [" + paramMap.size() + "] Entries",module);
    Debug.logVerbose("Request Parameter Map Entries: " + System.getProperty("line.separator") + UtilMisc.printMap(paramMap),module);
  }
  return canonicalizeParameterMap(paramMap);
}
