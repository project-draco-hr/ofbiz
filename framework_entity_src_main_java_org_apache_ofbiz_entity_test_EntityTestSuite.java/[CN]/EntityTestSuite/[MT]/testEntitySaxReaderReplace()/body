{
  String xmlContentLoad="<entity-engine-xml>" + "<TestingType testingTypeId=\"create-replace\" description=\"reader create skip\"/>" + "<Testing testingTypeId=\"create-replace\" testingId=\"create-replace-T1\" testingName=\"First test\" testingSize=\"10\" testingDate=\"2010-01-01 00:00:00\"/>"+ "<create-replace>"+ "    <Testing testingTypeId=\"create-replace\" testingId=\"create-replace-T1\" testingName=\"First test replace\" />"+ "</create-replace>"+ "<Testing testingTypeId=\"create-replace\" testingId=\"create-replace-T2\" testingName=\"Second test update\" testingSize=\"20\" testingDate=\"2010-02-01 00:00:00\"/>"+ "</entity-engine-xml>";
  EntitySaxReader reader=new EntitySaxReader(delegator);
  long numberLoaded=reader.parse(xmlContentLoad);
  assertEquals("Replace Entity loaded ",4,numberLoaded);
  GenericValue t1=EntityQuery.use(delegator).from("Testing").where("testingId","create-replace-T1").queryOne();
  GenericValue t2=EntityQuery.use(delegator).from("Testing").where("testingId","create-replace-T2").queryOne();
  assertNotNull("Replace Testing(T1)",t1);
  assertEquals("Replace Testing(T1).testingTypeId","create-replace",t1.getString("testingTypeId"));
  assertEquals("Replace Testing(T1).testingName","First test replace",t1.getString("testingName"));
  assertNull("Replace Testing(T1).testingSize",t1.getLong("testingSize"));
  assertNull("Replace Testing(T1).testingDate",t1.getTimestamp("testingDate"));
  assertNotNull("Replace Testing(T2)",t2);
  assertEquals("Replace Testing(T2).testingTypeId","create-replace",t2.getString("testingTypeId"));
  assertEquals("Replace Testing(T2).testingName","Second test update",t2.getString("testingName"));
  assertEquals("Replace Testing(T2).testingSize",Long.valueOf(20),t2.getLong("testingSize"));
  assertEquals("Replace Testing(T2).testingDate",UtilDateTime.toTimestamp("02/01/2010 00:00:00"),t2.getTimestamp("testingDate"));
}
