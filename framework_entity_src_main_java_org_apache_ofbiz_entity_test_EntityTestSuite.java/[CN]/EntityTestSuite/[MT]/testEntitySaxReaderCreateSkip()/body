{
  String xmlContentLoad="<TestingType testingTypeId=\"reader-create-skip\" description=\"reader create skip\"/>" + "<Testing testingId=\"reader-create-skip\" testingTypeId=\"reader-create-skip\" testingName=\"reader create skip\" testingSize=\"10\" testingDate=\"2010-01-01 00:00:00\"/>";
  EntitySaxReader reader=new EntitySaxReader(delegator);
  long numberLoaded=reader.parse(xmlContentLoad);
  xmlContentLoad="<create>" + "    <Testing testingId=\"reader-create-skip\" testingName=\"reader create skip updated\" testingSize=\"20\" testingDate=\"2012-02-02 02:02:02\"/>" + "</create>";
  reader=new EntitySaxReader(delegator);
  numberLoaded+=reader.parse(xmlContentLoad);
  assertEquals("Create Skip Entity loaded ",3,numberLoaded);
  GenericValue t1=EntityQuery.use(delegator).from("Testing").where("testingId","reader-create-skip").queryOne();
  assertNotNull("Create Skip Testing(T1)",t1);
  assertEquals("Create Skip Testing(T1).testingTypeId","reader-create-skip",t1.getString("testingTypeId"));
  assertEquals("Create Skip Testing(T1).testingName","reader create skip",t1.getString("testingName"));
  assertEquals("Create Skip Testing(T1).testingSize",Long.valueOf(10),t1.getLong("testingSize"));
  assertEquals("Create Skip Testing(T1).testingDate",UtilDateTime.toTimestamp("01/01/2010 00:00:00"),t1.getTimestamp("testingDate"));
}
