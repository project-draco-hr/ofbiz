{
  String xmlContentLoad="<entity-engine-xml>" + "<TestingType testingTypeId=\"create-update\" description=\"create update\"/>" + "<TestingType testingTypeId=\"create-updated\" description=\"create update updated\"/>"+ "<Testing testingId=\"create-update-T3\" testingTypeId=\"create-update\" testingName=\"Test 3\" testingSize=\"10\" testingDate=\"2010-01-01 00:00:00\"/>"+ "<create-update>"+ "    <Testing testingId=\"create-update-T1\" testingTypeId=\"create-update\" testingName=\"First test update\" testingSize=\"20\" testingDate=\"2010-01-01 00:00:00\"/>"+ "    <Testing testingId=\"create-update-T3\" testingTypeId=\"create-updated\" testingName=\"Third test\" testingSize=\"30\" testingDate=\"2010-03-01 00:00:00\"/>"+ "</create-update>"+ "</entity-engine-xml>";
  EntitySaxReader reader=new EntitySaxReader(delegator);
  long numberLoaded=reader.parse(xmlContentLoad);
  assertEquals("Update Entity loaded ",5,numberLoaded);
  GenericValue t1=EntityQuery.use(delegator).from("Testing").where("testingId","create-update-T1").queryOne();
  GenericValue t3=EntityQuery.use(delegator).from("Testing").where("testingId","create-update-T3").queryOne();
  assertNotNull("Update Testing(T1)",t1);
  assertEquals("Update Testing(T1).testingTypeId","create-update",t1.getString("testingTypeId"));
  assertEquals("Update Testing(T1).testingName","First test update",t1.getString("testingName"));
  assertEquals("Update Testing(T1).testingSize",Long.valueOf(20),t1.getLong("testingSize"));
  assertEquals("Update Testing(T1).testingDate",UtilDateTime.toTimestamp("01/01/2010 00:00:00"),t1.getTimestamp("testingDate"));
  assertNotNull("Update Testing(T3)",t3);
  assertEquals("Update Testing(T3).testingTypeId","create-updated",t3.getString("testingTypeId"));
  assertEquals("Update Testing(T3).testingName","Third test",t3.getString("testingName"));
  assertEquals("Update Testing(T3).testingSize",Long.valueOf(30),t3.getLong("testingSize"));
  assertEquals("Update Testing(T3).testingDate",UtilDateTime.toTimestamp("03/01/2010 00:00:00"),t3.getTimestamp("testingDate"));
}
