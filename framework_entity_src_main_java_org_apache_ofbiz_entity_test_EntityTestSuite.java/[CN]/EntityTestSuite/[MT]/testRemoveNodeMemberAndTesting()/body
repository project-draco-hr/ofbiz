{
  flushAndRecreateTree("rnmat");
  createNodeMembers("TEST-RNMAT","remove-node-member-and-testing","rnmat");
  List<GenericValue> values=EntityQuery.use(delegator).from("TestingNodeMember").where(EntityCondition.makeCondition("testingId",EntityOperator.LIKE,"rnmat:%")).queryList();
  ArrayList<GenericValue> testings=new ArrayList<GenericValue>();
  for (  GenericValue nodeMember : values) {
    testings.add(nodeMember.getRelatedOne("Testing",false));
  }
  delegator.removeAll(values);
  values=EntityQuery.use(delegator).from("TestingNodeMember").where(EntityCondition.makeCondition("testingId",EntityOperator.LIKE,"rnmat:%")).queryList();
  assertEquals("No more Node Member entities",0,values.size());
  delegator.removeAll(testings);
  values=EntityQuery.use(delegator).from("Testing").where(EntityCondition.makeCondition("description",EntityOperator.LIKE,"rnmat:%")).queryList();
  assertEquals("No more Testing entities",0,values.size());
}
