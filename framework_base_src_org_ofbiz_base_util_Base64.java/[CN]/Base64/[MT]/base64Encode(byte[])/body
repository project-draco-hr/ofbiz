{
  if (data == null) {
    return null;
  }
  int sidx, didx;
  byte dest[]=new byte[((data.length + 2) / 3) * 4];
  for (sidx=0, didx=0; sidx < data.length - 2; sidx+=3) {
    dest[didx++]=Base64EncMap[(data[sidx] >>> 2) & 077];
    dest[didx++]=Base64EncMap[(data[sidx + 1] >>> 4) & 017 | (data[sidx] << 4) & 077];
    dest[didx++]=Base64EncMap[(data[sidx + 2] >>> 6) & 003 | (data[sidx + 1] << 2) & 077];
    dest[didx++]=Base64EncMap[data[sidx + 2] & 077];
  }
  if (sidx < data.length) {
    dest[didx++]=Base64EncMap[(data[sidx] >>> 2) & 077];
    if (sidx < data.length - 1) {
      dest[didx++]=Base64EncMap[(data[sidx + 1] >>> 4) & 017 | (data[sidx] << 4) & 077];
      dest[didx++]=Base64EncMap[(data[sidx + 1] << 2) & 077];
    }
 else     dest[didx++]=Base64EncMap[(data[sidx] << 4) & 077];
  }
  for (; didx < dest.length; didx++) {
    dest[didx]=(byte)'=';
  }
  return dest;
}
