{
  Locale locale=UtilMisc.ensureLocale(context.get("locale"));
  String mimeTypeId="text/html";
  String expandedContentId=content.getContentId(context);
  String expandedDataResourceId=content.getDataResourceId(context);
  String renderedContent=null;
  LocalDispatcher dispatcher=(LocalDispatcher)context.get("dispatcher");
  GenericDelegator delegator=(GenericDelegator)context.get("delegator");
  Map contentContext=FastMap.newInstance();
  contentContext.putAll(context);
  String dataResourceId=(String)contentContext.get("dataResourceId");
  if (Debug.verboseOn())   Debug.logVerbose("expandedContentId:" + expandedContentId,module);
  try {
    if (UtilValidate.isNotEmpty(dataResourceId)) {
      if (WidgetDataResourceWorker.dataresourceWorker != null) {
        renderedContent=WidgetDataResourceWorker.dataresourceWorker.renderDataResourceAsTextExt(delegator,dataResourceId,contentContext,locale,mimeTypeId,false);
      }
 else {
        Debug.logError("Not rendering content, not WidgetDataResourceWorker.dataresourceWorker found.",module);
      }
    }
 else     if (UtilValidate.isNotEmpty(expandedContentId)) {
      if (WidgetContentWorker.contentWorker != null) {
        renderedContent=WidgetContentWorker.contentWorker.renderContentAsTextExt(dispatcher,delegator,expandedContentId,contentContext,locale,mimeTypeId,true);
      }
 else {
        Debug.logError("Not rendering content, not ContentWorker found.",module);
      }
    }
 else     if (UtilValidate.isNotEmpty(expandedDataResourceId)) {
      if (WidgetDataResourceWorker.dataresourceWorker != null) {
        renderedContent=WidgetDataResourceWorker.dataresourceWorker.renderDataResourceAsTextExt(delegator,expandedDataResourceId,contentContext,locale,mimeTypeId,false);
      }
 else {
        Debug.logError("Not rendering content, not WidgetDataResourceWorker.dataresourceWorker found.",module);
      }
    }
    if (UtilValidate.isEmpty(renderedContent)) {
      String editRequest=content.getEditRequest(context);
      if (UtilValidate.isNotEmpty(editRequest)) {
        if (WidgetContentWorker.contentWorker != null) {
          WidgetContentWorker.contentWorker.renderContentAsTextExt(dispatcher,delegator,"NOCONTENTFOUND",writer,contentContext,locale,mimeTypeId,true);
        }
 else {
          Debug.logError("Not rendering content, not ContentWorker found.",module);
        }
      }
    }
 else {
      if (content.xmlEscape()) {
        renderedContent=UtilFormatOut.encodeXmlValue(renderedContent);
      }
      writer.write(renderedContent);
    }
  }
 catch (  GeneralException e) {
    String errMsg="Error rendering included content with id [" + expandedContentId + "] : "+ e.toString();
    Debug.logError(e,errMsg,module);
  }
catch (  IOException e2) {
    String errMsg="Error rendering included content with id [" + expandedContentId + "] : "+ e2.toString();
    Debug.logError(e2,errMsg,module);
  }
}
