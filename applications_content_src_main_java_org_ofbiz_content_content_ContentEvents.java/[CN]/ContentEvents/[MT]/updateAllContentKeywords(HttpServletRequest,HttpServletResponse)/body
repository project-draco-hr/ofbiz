{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  Security security=(Security)request.getAttribute("security");
  String updateMode="CREATE";
  String errMsg=null;
  String doAll=request.getParameter("doAll");
  if (!security.hasEntityPermission("CONTENTMGR","_" + updateMode,request.getSession())) {
    Map<String,String> messageMap=UtilMisc.toMap("updateMode",updateMode);
    errMsg=UtilProperties.getMessage(resource,"contentevents.not_sufficient_permissions",messageMap,UtilHttp.getLocale(request));
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
  EntityListIterator entityListIterator=null;
  int numConts=0;
  int errConts=0;
  boolean beganTx=false;
  try {
    beganTx=TransactionUtil.begin(7200);
    try {
      EntityQuery contentQuery=EntityQuery.use(delegator).from("Content");
      if (Debug.infoOn()) {
        long count=contentQuery.queryCount();
        Debug.logInfo("========== Found " + count + " contents to index ==========",module);
      }
      entityListIterator=contentQuery.queryIterator();
    }
 catch (    GenericEntityException gee) {
      Debug.logWarning(gee,gee.getMessage(),module);
      Map<String,String> messageMap=UtilMisc.toMap("gee",gee.toString());
      errMsg=UtilProperties.getMessage(resource,"contentevents.error_getting_content_list",messageMap,UtilHttp.getLocale(request));
      request.setAttribute("_ERROR_MESSAGE_",errMsg);
      throw gee;
    }
    GenericValue content;
    while ((content=entityListIterator.next()) != null) {
      try {
        ContentKeywordIndex.indexKeywords(content,"Y".equals(doAll));
      }
 catch (      GenericEntityException e) {
        Debug.logWarning("[ContentEvents.updateAllContentKeywords] Could not create content-keyword (write error); message: " + e.getMessage(),module);
        errConts++;
      }
      numConts++;
      if (numConts % 500 == 0) {
        Debug.logInfo("Keywords indexed for " + numConts + " so far",module);
      }
    }
  }
 catch (  GenericEntityException e) {
    try {
      TransactionUtil.rollback(beganTx,e.getMessage(),e);
    }
 catch (    Exception e1) {
      Debug.logError(e1,module);
    }
    return "error";
  }
catch (  Throwable t) {
    Debug.logError(t,module);
    request.setAttribute("_ERROR_MESSAGE_",t.getMessage());
    try {
      TransactionUtil.rollback(beganTx,t.getMessage(),t);
    }
 catch (    Exception e2) {
      Debug.logError(e2,module);
    }
    return "error";
  }
 finally {
    if (entityListIterator != null) {
      try {
        entityListIterator.close();
      }
 catch (      GenericEntityException gee) {
        Debug.logError(gee,"Error closing EntityListIterator when indexing content keywords.",module);
      }
    }
    try {
      TransactionUtil.commit(beganTx);
    }
 catch (    Exception e) {
      Debug.logError(e,module);
    }
  }
  if (errConts == 0) {
    Map<String,String> messageMap=UtilMisc.toMap("numConts",Integer.toString(numConts));
    errMsg=UtilProperties.getMessage(resource,"contentevents.keyword_creation_complete_for_contents",messageMap,UtilHttp.getLocale(request));
    request.setAttribute("_EVENT_MESSAGE_",errMsg);
    return "success";
  }
 else {
    Map<String,String> messageMap=UtilMisc.toMap("numConts",Integer.toString(numConts));
    messageMap.put("errConts",Integer.toString(errConts));
    errMsg=UtilProperties.getMessage(resource,"contentevents.keyword_creation_complete_for_contents_with_errors",messageMap,UtilHttp.getLocale(request));
    request.setAttribute("_ERROR_MESSAGE_",errMsg);
    return "error";
  }
}
