{
  text=text.trim();
  int startIndex=0, endIndex=text.length();
  boolean descending;
  int caseSensitivity;
  if (text.endsWith(" DESC")) {
    descending=true;
    endIndex-=5;
  }
 else   if (text.endsWith(" ASC")) {
    descending=false;
    endIndex-=4;
  }
 else   if (text.startsWith("-")) {
    descending=true;
    startIndex++;
  }
 else   if (text.startsWith("+")) {
    descending=false;
    startIndex++;
  }
 else {
    descending=false;
  }
  if (startIndex != 0 || endIndex != text.length()) {
    text=text.substring(startIndex,endIndex);
    startIndex=0;
    endIndex=text.length();
  }
  if (text.endsWith(")")) {
    String upperText=text.toUpperCase();
    endIndex--;
    if (upperText.startsWith("UPPER(")) {
      caseSensitivity=UPPER;
      startIndex=6;
    }
 else     if (upperText.startsWith("LOWER(")) {
      caseSensitivity=LOWER;
      startIndex=6;
    }
 else {
      caseSensitivity=DEFAULT;
    }
  }
 else {
    caseSensitivity=DEFAULT;
  }
  if (startIndex != 0 || endIndex != text.length()) {
    text=text.substring(startIndex,endIndex);
    startIndex=0;
    endIndex=text.length();
  }
  EntityConditionValue value=EntityFieldValue.makeFieldValue(text);
switch (caseSensitivity) {
case UPPER:
    value=EntityFunction.UPPER(value);
  break;
case LOWER:
value=EntityFunction.LOWER(value);
break;
}
return new OrderByItem(value,descending);
}
