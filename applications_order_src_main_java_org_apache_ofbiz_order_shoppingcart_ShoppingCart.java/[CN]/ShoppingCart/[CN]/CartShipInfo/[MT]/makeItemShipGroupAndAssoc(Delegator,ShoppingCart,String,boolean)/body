{
  List<GenericValue> values=new LinkedList<GenericValue>();
  if (this.internalContactMechId != null) {
    GenericValue orderCm=delegator.makeValue("OrderContactMech");
    orderCm.set("contactMechPurposeTypeId","SHIPPING_LOCATION");
    orderCm.set("contactMechId",this.internalContactMechId);
    values.add(orderCm);
  }
  GenericValue shipGroup=delegator.makeValue("OrderItemShipGroup");
  shipGroup.set("shipmentMethodTypeId",shipmentMethodTypeId);
  shipGroup.set("carrierRoleTypeId",carrierRoleTypeId);
  shipGroup.set("carrierPartyId",carrierPartyId);
  shipGroup.set("supplierPartyId",supplierPartyId);
  shipGroup.set("shippingInstructions",shippingInstructions);
  shipGroup.set("giftMessage",giftMessage);
  shipGroup.set("contactMechId",this.internalContactMechId);
  shipGroup.set("telecomContactMechId",this.telecomContactMechId);
  shipGroup.set("maySplit",maySplit);
  shipGroup.set("isGift",isGift);
  shipGroup.set("shipGroupSeqId",shipGroupSeqId);
  shipGroup.set("vendorPartyId",vendorPartyId);
  shipGroup.set("facilityId",facilityId);
  if ((shipBeforeDate == null) && (cart.getDefaultShipBeforeDate() != null)) {
    shipGroup.set("shipByDate",cart.getDefaultShipBeforeDate());
  }
 else {
    shipGroup.set("shipByDate",shipBeforeDate);
  }
  if ((shipAfterDate == null) && (cart.getDefaultShipAfterDate() != null)) {
    shipGroup.set("shipAfterDate",cart.getDefaultShipAfterDate());
  }
 else {
    shipGroup.set("shipAfterDate",shipAfterDate);
  }
  values.add(shipGroup);
  LinkedList<Timestamp> estimatedShipDates=new LinkedList<Timestamp>();
  for (  ShoppingCartItem item : shipItemInfo.keySet()) {
    Timestamp estimatedShipDate=item.getEstimatedShipDate();
    if (estimatedShipDate != null) {
      estimatedShipDates.add(estimatedShipDate);
    }
  }
  if (estimatedShipDates.size() > 0) {
    Collections.sort(estimatedShipDates);
    Timestamp estimatedShipDate=estimatedShipDates.getLast();
    shipGroup.set("estimatedShipDate",estimatedShipDate);
  }
  LinkedList<Timestamp> estimatedDeliveryDates=new LinkedList<Timestamp>();
  for (  ShoppingCartItem item : shipItemInfo.keySet()) {
    Timestamp estimatedDeliveryDate=item.getDesiredDeliveryDate();
    if (estimatedDeliveryDate != null) {
      estimatedDeliveryDates.add(estimatedDeliveryDate);
    }
  }
  if (UtilValidate.isNotEmpty(estimatedDeliveryDates)) {
    Collections.sort(estimatedDeliveryDates);
    Timestamp estimatedDeliveryDate=estimatedDeliveryDates.getLast();
    shipGroup.set("estimatedDeliveryDate",estimatedDeliveryDate);
  }
  if (shipEstimate.compareTo(BigDecimal.ZERO) != 0) {
    GenericValue shipAdj=delegator.makeValue("OrderAdjustment");
    shipAdj.set("orderAdjustmentTypeId","SHIPPING_CHARGES");
    shipAdj.set("amount",shipEstimate);
    if ("PURCHASE_ORDER".equals(cart.getOrderType()))     shipAdj.set("isManual","Y");
    shipAdj.set("shipGroupSeqId",shipGroupSeqId);
    values.add(shipAdj);
  }
  for (  GenericValue taxAdj : shipTaxAdj) {
    taxAdj.set("shipGroupSeqId",shipGroupSeqId);
    values.add(taxAdj);
  }
  for (  ShoppingCartItem item : shipItemInfo.keySet()) {
    CartShipItemInfo itemInfo=shipItemInfo.get(item);
    GenericValue assoc=delegator.makeValue("OrderItemShipGroupAssoc");
    assoc.set("orderItemSeqId",item.getOrderItemSeqId());
    assoc.set("shipGroupSeqId",shipGroupSeqId);
    assoc.set("quantity",itemInfo.quantity);
    values.add(assoc);
    for (    GenericValue taxAdj : itemInfo.itemTaxAdj) {
      taxAdj.set("orderItemSeqId",item.getOrderItemSeqId());
      taxAdj.set("shipGroupSeqId",shipGroupSeqId);
      values.add(taxAdj);
    }
  }
  return values;
}
