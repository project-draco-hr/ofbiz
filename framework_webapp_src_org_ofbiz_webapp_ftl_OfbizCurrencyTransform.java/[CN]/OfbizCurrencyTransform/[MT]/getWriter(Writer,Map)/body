{
  final StringBuilder buf=new StringBuilder();
  final BigDecimal amount=OfbizCurrencyTransform.getAmount(args,"amount");
  final String isoCode=OfbizCurrencyTransform.getArg(args,"isoCode");
  final String locale=OfbizCurrencyTransform.getArg(args,"locale");
  Integer roundingNumber=getInteger(args,"rounding");
  if (roundingNumber == null)   roundingNumber=10;
  final int rounding=roundingNumber;
  return new Writer(out){
    @Override public void write(    char cbuf[],    int off,    int len){
      buf.append(cbuf,off,len);
    }
    @Override public void flush() throws IOException {
      out.flush();
    }
    @Override public void close() throws IOException {
      try {
        if (Debug.verboseOn())         Debug.logVerbose("parms: " + amount + " "+ isoCode+ " "+ locale,module);
        if (locale.length() < 1) {
          Environment env=Environment.getCurrentEnvironment();
          BeanModel req=(BeanModel)env.getVariable("request");
          if (req != null) {
            HttpServletRequest request=(HttpServletRequest)req.getWrappedObject();
            out.write(UtilFormatOut.formatCurrency(amount,isoCode,UtilHttp.getLocale(request),rounding));
          }
 else {
            out.write(UtilFormatOut.formatCurrency(amount,isoCode,env.getLocale(),rounding));
          }
        }
 else {
          out.write(UtilFormatOut.formatCurrency(amount,isoCode,new Locale(locale),rounding));
        }
      }
 catch (      TemplateModelException e) {
        throw new IOException(e.getMessage());
      }
    }
  }
;
}
