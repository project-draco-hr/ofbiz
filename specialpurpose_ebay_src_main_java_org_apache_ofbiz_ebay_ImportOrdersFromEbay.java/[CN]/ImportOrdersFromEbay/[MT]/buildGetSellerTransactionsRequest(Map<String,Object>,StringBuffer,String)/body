{
  Locale locale=(Locale)context.get("locale");
  String fromDate=(String)context.get("fromDate");
  String thruDate=(String)context.get("thruDate");
  try {
    Document transDoc=UtilXml.makeEmptyXmlDocument("GetSellerTransactionsRequest");
    Element transElem=transDoc.getDocumentElement();
    transElem.setAttribute("xmlns","urn:ebay:apis:eBLBaseComponents");
    EbayHelper.appendRequesterCredentials(transElem,transDoc,token);
    UtilXml.addChildElementValue(transElem,"DetailLevel","ReturnAll",transDoc);
    UtilXml.addChildElementValue(transElem,"IncludeContainingOrder","true",transDoc);
    String fromDateOut=EbayHelper.convertDate(fromDate,"yyyy-MM-dd HH:mm:ss.SSS","yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
    if (fromDateOut != null) {
      UtilXml.addChildElementValue(transElem,"ModTimeFrom",fromDateOut,transDoc);
    }
 else {
      Debug.logError("Cannot convert from date from yyyy-MM-dd HH:mm:ss.SSS date format to yyyy-MM-dd'T'HH:mm:ss.SSS'Z' date format",module);
      return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.cannotConvertFromDate",locale));
    }
    fromDateOut=EbayHelper.convertDate(thruDate,"yyyy-MM-dd HH:mm:ss.SSS","yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
    if (fromDateOut != null) {
      UtilXml.addChildElementValue(transElem,"ModTimeTo",fromDateOut,transDoc);
    }
 else {
      Debug.logError("Cannot convert thru date from yyyy-MM-dd HH:mm:ss.SSS date format to yyyy-MM-dd'T'HH:mm:ss.SSS'Z' date format",module);
      return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.cannotConvertThruDate",locale));
    }
    dataItemsXml.append(UtilXml.writeXmlDocument(transDoc));
  }
 catch (  Exception e) {
    Debug.logError("Exception during building get seller transactions request",module);
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"ordersImportFromEbay.exceptionDuringBuildingGetSellerTransactionRequest",locale));
  }
  return ServiceUtil.returnSuccess();
}
