{
  String name=engineElement.getAttribute("name").intern();
  if (name.isEmpty()) {
    throw new ServiceConfigException("<engine> element name attribute is empty");
  }
  this.name=name;
  String className=engineElement.getAttribute("class").intern();
  if (className.isEmpty()) {
    throw new ServiceConfigException("<engine> element class attribute is empty");
  }
  this.className=className;
  List<? extends Element> parameterElementList=UtilXml.childElementList(engineElement,"parameter");
  if (parameterElementList.isEmpty()) {
    this.parameters=Collections.emptyList();
    this.parameterMap=Collections.emptyMap();
  }
 else {
    List<Parameter> parameters=new ArrayList<Parameter>(parameterElementList.size());
    Map<String,Parameter> parameterMap=new HashMap<String,Parameter>();
    for (    Element parameterElement : parameterElementList) {
      Parameter parameter=new Parameter(parameterElement);
      parameters.add(parameter);
      parameterMap.put(parameter.getName(),parameter);
    }
    this.parameters=Collections.unmodifiableList(parameters);
    this.parameterMap=Collections.unmodifiableMap(parameterMap);
  }
}
