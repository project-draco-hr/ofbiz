{
  Debug.logInfo("Creating postal address with input map: " + address,module);
  String contactMechId=null;
  try {
    Map<String,Object> context=new HashMap<String,Object>();
    context.put("partyId",partyId);
    context.put("toName",address.get("buyerName"));
    context.put("address1",address.get("shippingAddressStreet1"));
    context.put("address2",address.get("shippingAddressStreet2"));
    context.put("postalCode",address.get("shippingAddressPostalCode"));
    context.put("userLogin",userLogin);
    context.put("contactMechPurposeTypeId",contactMechPurposeTypeId);
    String country=(String)address.get("shippingAddressCountry");
    String state=(String)address.get("shippingAddressStateOrProvince");
    String city=(String)address.get("shippingAddressCityName");
    correctCityStateCountry(dispatcher,context,city,state,country);
    Map<String,Object> summaryResult=dispatcher.runSync("createPartyPostalAddress",context);
    contactMechId=(String)summaryResult.get("contactMechId");
    context=new HashMap<String,Object>();
    context.put("partyId",partyId);
    context.put("contactMechId",contactMechId);
    context.put("contactMechPurposeTypeId","BILLING_LOCATION");
    context.put("userLogin",userLogin);
    dispatcher.runSync("createPartyContactMechPurpose",context);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Failed to createAddress",module);
  }
  return contactMechId;
}
