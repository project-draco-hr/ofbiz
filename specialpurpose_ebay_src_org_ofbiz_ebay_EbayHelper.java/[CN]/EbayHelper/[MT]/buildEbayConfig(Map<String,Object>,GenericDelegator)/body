{
  Map<String,Object> buildEbayConfigContext=FastMap.newInstance();
  Locale locale=(Locale)context.get("locale");
  String productStoreId=(String)context.get("productStoreId");
  if (UtilValidate.isNotEmpty(productStoreId)) {
    GenericValue eBayConfig=null;
    try {
      eBayConfig=delegator.findOne("EbayConfig",false,UtilMisc.toMap("productStoreId",productStoreId));
    }
 catch (    GenericEntityException e) {
      String errMsg=UtilProperties.getMessage(resource,"buildEbayConfig.unableToFindEbayConfig" + e.getMessage(),locale);
      return ServiceUtil.returnError(errMsg);
    }
    if (UtilValidate.isNotEmpty(eBayConfig)) {
      buildEbayConfigContext.put("devID",eBayConfig.getString("devId"));
      buildEbayConfigContext.put("appID",eBayConfig.getString("appId"));
      buildEbayConfigContext.put("certID",eBayConfig.getString("certId"));
      buildEbayConfigContext.put("token",eBayConfig.getString("token"));
      buildEbayConfigContext.put("compatibilityLevel",eBayConfig.getString("compatibilityLevel"));
      buildEbayConfigContext.put("siteID",eBayConfig.getString("siteId"));
      buildEbayConfigContext.put("xmlGatewayUri",eBayConfig.getString("xmlGatewayUri"));
    }
  }
 else {
    buildEbayConfigContext.put("devID",UtilProperties.getPropertyValue(configFileName,"eBayExport.devID"));
    buildEbayConfigContext.put("appID",UtilProperties.getPropertyValue(configFileName,"eBayExport.appID"));
    buildEbayConfigContext.put("certID",UtilProperties.getPropertyValue(configFileName,"eBayExport.certID"));
    buildEbayConfigContext.put("token",UtilProperties.getPropertyValue(configFileName,"eBayExport.token"));
    buildEbayConfigContext.put("compatibilityLevel",UtilProperties.getPropertyValue(configFileName,"eBayExport.compatibilityLevel"));
    buildEbayConfigContext.put("siteID",UtilProperties.getPropertyValue(configFileName,"eBayExport.siteID"));
    buildEbayConfigContext.put("xmlGatewayUri",UtilProperties.getPropertyValue(configFileName,"eBayExport.xmlGatewayUri"));
  }
  return buildEbayConfigContext;
}
