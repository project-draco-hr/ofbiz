{
  optionListPrice=BigDecimal.ZERO;
  optionPrice=BigDecimal.ZERO;
  for (  GenericValue oneComponent : componentList) {
    BigDecimal listPrice=BigDecimal.ZERO;
    BigDecimal price=BigDecimal.ZERO;
    GenericValue oneComponentProduct=oneComponent.getRelatedOne("ProductProduct");
    String variantProductId=componentOptions.get(oneComponent.getString("productId"));
    if (UtilValidate.isNotEmpty(variantProductId)) {
      oneComponentProduct=pcw.delegator.findByPrimaryKey("Product",UtilMisc.toMap("productId",variantProductId));
    }
    Map<String,Object> fieldMap=UtilMisc.toMap("product",oneComponentProduct,"prodCatalogId",pcw.catalogId,"webSiteId",pcw.webSiteId,"currencyUomId",pcw.currencyUomId,"productPricePurposeId","COMPONENT_PRICE","autoUserLogin",pcw.autoUserLogin,"productStoreId",productStoreId);
    Map<String,Object> priceMap=dispatcher.runSync("calculateProductPrice",fieldMap);
    BigDecimal componentListPrice=(BigDecimal)priceMap.get("listPrice");
    BigDecimal componentPrice=(BigDecimal)priceMap.get("price");
    Boolean validPriceFound=(Boolean)priceMap.get("validPriceFound");
    BigDecimal mult=BigDecimal.ONE;
    if (oneComponent.getBigDecimal("quantity") != null) {
      mult=oneComponent.getBigDecimal("quantity");
    }
    if (mult.compareTo(BigDecimal.ZERO) == 0) {
      mult=BigDecimal.ONE;
    }
    if (validPriceFound.booleanValue()) {
      if (componentListPrice != null) {
        listPrice=componentListPrice;
      }
      if (componentPrice != null) {
        price=componentPrice;
      }
    }
 else {
      fieldMap.put("productPricePurposeId","PURCHASE");
      Map<String,Object> purchasePriceResultMap=dispatcher.runSync("calculateProductPrice",fieldMap);
      BigDecimal purchaseListPrice=(BigDecimal)purchasePriceResultMap.get("listPrice");
      BigDecimal purchasePrice=(BigDecimal)purchasePriceResultMap.get("price");
      if (purchaseListPrice != null) {
        listPrice=purchaseListPrice;
      }
      if (purchasePrice != null) {
        price=purchasePrice;
      }
    }
    optionListPrice=optionListPrice.add(listPrice.multiply(mult));
    optionPrice=optionPrice.add(price.multiply(mult));
  }
}
