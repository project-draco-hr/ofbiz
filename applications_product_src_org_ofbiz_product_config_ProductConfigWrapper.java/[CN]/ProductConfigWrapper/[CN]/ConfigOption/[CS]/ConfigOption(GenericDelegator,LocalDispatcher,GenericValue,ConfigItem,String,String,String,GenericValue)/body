{
  configOption=option;
  parentConfigItem=configItem;
  componentList=option.getRelated("ConfigOptionProductConfigProduct");
  for (  GenericValue oneComponent : componentList) {
    double price=0;
    Map<String,Object> fieldMap=UtilMisc.toMap("product",oneComponent.getRelatedOne("ProductProduct"),"prodCatalogId",catalogId,"webSiteId",webSiteId,"currencyUomId",currencyUomId,"productPricePurposeId","COMPONENT_PRICE","autoUserLogin",autoUserLogin);
    Map<String,Object> priceMap=dispatcher.runSync("calculateProductPrice",fieldMap);
    Double componentPrice=(Double)priceMap.get("price");
    Boolean validPriceFound=(Boolean)priceMap.get("validPriceFound");
    double mult=1;
    if (oneComponent.getDouble("quantity") != null) {
      mult=oneComponent.getDouble("quantity").doubleValue();
    }
    if (mult == 0) {
      mult=1;
    }
    if (componentPrice != null && validPriceFound.booleanValue()) {
      price=componentPrice.doubleValue();
    }
 else {
      fieldMap.put("productPricePurposeId","PURCHASE");
      Map<String,Object> purchasePriceResultMap=dispatcher.runSync("calculateProductPrice",fieldMap);
      Double purchasePrice=(Double)purchasePriceResultMap.get("price");
      if (purchasePrice != null) {
        price=purchasePrice.doubleValue();
      }
    }
    optionPrice+=(price * mult);
  }
}
