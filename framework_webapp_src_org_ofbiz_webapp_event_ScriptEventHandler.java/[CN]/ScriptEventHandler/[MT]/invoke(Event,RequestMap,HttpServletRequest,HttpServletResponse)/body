{
  try {
    Map<String,Object> context=new HashMap<String,Object>();
    context.put("request",request);
    context.put("response",response);
    HttpSession session=request.getSession();
    context.put("session",session);
    context.put("dispatcher",request.getAttribute("dispatcher"));
    context.put("delegator",request.getAttribute("delegator"));
    context.put("security",request.getAttribute("security"));
    context.put("locale",UtilHttp.getLocale(request));
    context.put("timeZone",UtilHttp.getTimeZone(request));
    context.put("userLogin",session.getAttribute("userLogin"));
    context.put("parameters",UtilHttp.getCombinedMap(request,UtilMisc.toSet("delegator","dispatcher","security","locale","timeZone","userLogin")));
    Object result=null;
    try {
      ScriptContext scriptContext=ScriptUtil.createScriptContext(context,protectedKeys);
      result=ScriptUtil.executeScript(event.path,event.invoke,scriptContext,new Object[]{context});
      if (result == null) {
        result=scriptContext.getAttribute("result");
      }
    }
 catch (    Exception e) {
      Debug.logWarning(e,"Error running event " + event.path + ": ",module);
      return "error";
    }
    if (result != null && !(result instanceof String)) {
      throw new EventHandlerException("Event did not return a String result, it returned a " + result.getClass().getName());
    }
    return (String)result;
  }
 catch (  Exception e) {
    throw new EventHandlerException("Groovy Event Error",e);
  }
}
