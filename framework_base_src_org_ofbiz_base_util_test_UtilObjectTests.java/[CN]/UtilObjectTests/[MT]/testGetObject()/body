{
  Long one=Long.valueOf(1);
  byte[] oneBytes=UtilObject.getBytes(one);
  assertNotNull("oneBytes",oneBytes);
  assertEquals("one getObject",one,UtilObject.getObject(oneBytes));
  boolean errorOn=Debug.isOn(Debug.ERROR);
  try {
    Debug.set(Debug.ERROR,false);
    assertNull("parse empty array",UtilObject.getObject(new byte[0]));
    Object groovySerializable=GroovyUtil.eval("class foo implements java.io.Serializable { }; return new foo()",new HashMap());
    byte[] groovySerializableBytes=UtilObject.getBytes(groovySerializable);
    assertNotNull("groovySerializableBytes",groovySerializableBytes);
    assertNull("groovyDeserializable",UtilObject.getObject(groovySerializableBytes));
    byte[] injectorBytes=UtilObject.getBytes(new SerializationInjector(false,false));
    assertNotNull("injectorBytes good",injectorBytes);
    assertNotNull("injector good",UtilObject.getObject(injectorBytes));
    injectorBytes=UtilObject.getBytes(new SerializationInjector(true,false));
    assertNotNull("injectorBytes bad",injectorBytes);
    assertNull("injector bad",UtilObject.getObject(injectorBytes));
  }
  finally {
    Debug.set(Debug.ERROR,errorOn);
  }
}
