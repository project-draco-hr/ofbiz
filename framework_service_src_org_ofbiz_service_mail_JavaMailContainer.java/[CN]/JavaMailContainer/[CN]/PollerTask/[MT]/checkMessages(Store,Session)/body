{
  store.connect();
  Folder folder=store.getDefaultFolder();
  if (folder == null) {
    throw new MessagingException("No default folder available");
  }
  folder=folder.getFolder(INBOX);
  if (folder == null) {
    throw new MessagingException("No INBOX folder available");
  }
  folder.open(Folder.READ_WRITE);
  int totalMessages=folder.getMessageCount();
  if (totalMessages == 0) {
    folder.close(false);
    store.close();
    return;
  }
  Message[] messages=folder.getMessages();
  FetchProfile profile=new FetchProfile();
  profile.add(FetchProfile.Item.ENVELOPE);
  profile.add(FetchProfile.Item.FLAGS);
  profile.add("X-Mailer");
  folder.fetch(messages,profile);
  for (int i=0; i < messages.length; i++) {
    if (!messages[i].isSet(Flags.Flag.SEEN)) {
      long messageSize=messages[i].getSize();
      if (messages[i] instanceof MimeMessage && messageSize >= maxSize) {
        Debug.logWarning("Message from: " + messages[i].getFrom()[0] + "not received, too big, size:"+ messageSize+ " cannot be more than "+ maxSize+ " bytes",module);
      }
 else {
        this.processMessage(messages[i],session);
        if (Debug.verboseOn())         Debug.logVerbose("Message from " + UtilMisc.toListArray(messages[i].getFrom()) + " with subject ["+ messages[i].getSubject()+ "]  has been processed.",module);
        messages[i].setFlag(Flags.Flag.SEEN,true);
        if (Debug.verboseOn())         Debug.logVerbose("Message [" + messages[i].getSubject() + "] is marked seen",module);
      }
    }
    if (deleteMail) {
      if (Debug.verboseOn())       Debug.logVerbose("Message [" + messages[i].getSubject() + "] is being deleted",module);
      messages[i].setFlag(Flags.Flag.DELETED,true);
    }
  }
  folder.close(true);
  store.close();
}
