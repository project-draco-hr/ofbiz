{
  String httpsPort=UtilProperties.getPropertyValue("url.properties","port.https","443");
  String httpsServer=UtilProperties.getPropertyValue("url.properties","force.https.host");
  String httpPort=UtilProperties.getPropertyValue("url.properties","port.http","80");
  String httpServer=UtilProperties.getPropertyValue("url.properties","force.http.host");
  boolean useHttps=UtilProperties.propertyValueEqualsIgnoreCase("url.properties","port.https.enabled","Y");
  if (Start.getInstance().getConfig().portOffset != 0) {
    Integer httpPortValue=Integer.valueOf(httpPort);
    httpPortValue+=Start.getInstance().getConfig().portOffset;
    httpPort=httpPortValue.toString();
    Integer httpsPortValue=Integer.valueOf(httpsPort);
    httpsPortValue+=Start.getInstance().getConfig().portOffset;
    httpsPort=httpsPortValue.toString();
  }
  StringBuilder newURL=new StringBuilder();
  if (secure && useHttps) {
    String server=httpsServer;
    if (UtilValidate.isEmpty(server)) {
      server=request.getServerName();
    }
    newURL.append("https://");
    newURL.append(server);
    if (!httpsPort.equals("443")) {
      newURL.append(":").append(httpsPort);
    }
  }
 else {
    String server=httpServer;
    if (UtilValidate.isEmpty(server)) {
      server=request.getServerName();
    }
    newURL.append("http://");
    newURL.append(server);
    if (!httpPort.equals("80")) {
      newURL.append(":").append(httpPort);
    }
  }
  return newURL.toString();
}
