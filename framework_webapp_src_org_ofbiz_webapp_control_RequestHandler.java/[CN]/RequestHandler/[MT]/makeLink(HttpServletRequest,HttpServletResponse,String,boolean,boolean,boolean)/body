{
  WebSiteProperties webSiteProps=(WebSiteProperties)request.getAttribute("_WEBSITE_PROPS_");
  if (webSiteProps == null) {
    try {
      webSiteProps=WebSiteProperties.from(request);
      request.setAttribute("_WEBSITE_PROPS_",webSiteProps);
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Exception thrown while getting web site properties: ",module);
      return null;
    }
  }
  String requestUri=RequestHandler.getRequestUri(url);
  ConfigXMLReader.RequestMap requestMap=null;
  if (requestUri != null) {
    try {
      requestMap=getControllerConfig().getRequestMapMap().get(requestUri);
    }
 catch (    WebAppConfigurationException e) {
      Debug.logError(e,"Exception thrown while parsing controller.xml file: ",module);
      return null;
    }
  }
  StringBuilder newURL=new StringBuilder();
  boolean didFullSecure=false;
  boolean didFullStandard=false;
  if (requestMap != null && (webSiteProps.getEnableHttps() || fullPath || secure)) {
    if (Debug.verboseOn())     Debug.logVerbose("In makeLink requestUri=" + requestUri,module);
    if (secure || (webSiteProps.getEnableHttps() && requestMap.securityHttps && !request.isSecure())) {
      String server=webSiteProps.getHttpsHost();
      if (server.isEmpty()) {
        server=request.getServerName();
      }
      newURL.append("https://");
      newURL.append(server);
      if (!webSiteProps.getHttpsPort().isEmpty()) {
        newURL.append(":").append(webSiteProps.getHttpsPort());
      }
      didFullSecure=true;
    }
 else     if (fullPath || (webSiteProps.getEnableHttps() && !requestMap.securityHttps && request.isSecure())) {
      String server=webSiteProps.getHttpHost();
      if (server.isEmpty()) {
        server=request.getServerName();
      }
      newURL.append("http://");
      newURL.append(server);
      if (!webSiteProps.getHttpPort().isEmpty()) {
        newURL.append(":").append(webSiteProps.getHttpPort());
      }
      didFullStandard=true;
    }
  }
  String controlPath=(String)request.getAttribute("_CONTROL_PATH_");
  newURL.append(controlPath);
  if (!url.startsWith("/")) {
    newURL.append("/");
  }
  newURL.append(url);
  String encodedUrl;
  if (encode) {
    boolean forceManualJsessionid="false".equals(getServletContext().getInitParameter("cookies")) ? true : false;
    boolean isSpider=false;
    if (UtilHttp.checkURLforSpiders(request)) {
      isSpider=true;
    }
    if (!request.isSecure() && didFullSecure) {
      forceManualJsessionid=true;
    }
    if (request.isSecure() && didFullStandard) {
      forceManualJsessionid=true;
    }
    if (response != null && !forceManualJsessionid && !isSpider) {
      encodedUrl=response.encodeURL(newURL.toString());
    }
 else {
      if (!isSpider) {
        String sessionId=";jsessionid=" + request.getSession().getId();
        int questionIndex=newURL.indexOf("?");
        if (questionIndex == -1) {
          newURL.append(sessionId);
        }
 else {
          newURL.insert(questionIndex,sessionId);
        }
      }
      if (response != null) {
        encodedUrl=response.encodeURL(newURL.toString());
      }
 else {
        encodedUrl=newURL.toString();
      }
    }
  }
 else {
    encodedUrl=newURL.toString();
  }
  return encodedUrl;
}
