{
  String entityName=(String)context.get("entityName");
  EntityConditionList entityConditionList=(EntityConditionList)context.get("entityConditionList");
  List<String> orderByList=checkList(context.get("orderByList"),String.class);
  boolean noConditionFind="Y".equals((String)context.get("noConditionFind"));
  boolean distinct="Y".equals((String)context.get("distinct"));
  List fieldList=(List)context.get("fieldList");
  Set fieldSet=null;
  if (fieldList != null) {
    fieldSet=new HashSet(fieldList);
  }
  GenericDelegator delegator=dctx.getDelegator();
  EntityListIterator listIt=null;
  try {
    if (noConditionFind || (entityConditionList != null && entityConditionList.getConditionListSize() > 0)) {
      listIt=delegator.find(entityName,entityConditionList,null,fieldSet,orderByList,new EntityFindOptions(true,EntityFindOptions.TYPE_SCROLL_INSENSITIVE,EntityFindOptions.CONCUR_READ_ONLY,distinct));
    }
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError("Error running Find on the [" + entityName + "] entity: "+ e.getMessage());
  }
  Map<String,Object> results=ServiceUtil.returnSuccess();
  results.put("listIt",listIt);
  return results;
}
