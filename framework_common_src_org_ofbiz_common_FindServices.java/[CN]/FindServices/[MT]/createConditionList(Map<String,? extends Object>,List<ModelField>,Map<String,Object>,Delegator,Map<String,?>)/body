{
  Set<String> processed=new LinkedHashSet<String>();
  Set<String> keys=new LinkedHashSet<String>();
  Map<String,ModelField> fieldMap=new LinkedHashMap<String,ModelField>();
  for (  ModelField modelField : fieldList) {
    fieldMap.put(modelField.getName(),modelField);
  }
  List<EntityCondition> result=new LinkedList<EntityCondition>();
  for (  Map.Entry<String,? extends Object> entry : parameters.entrySet()) {
    String parameterName=entry.getKey();
    if (processed.contains(parameterName)) {
      continue;
    }
    keys.clear();
    String fieldName=parameterName;
    Object fieldValue=null;
    String operation=null;
    boolean ignoreCase=false;
    if (parameterName.endsWith("_ic") || parameterName.endsWith("_op")) {
      fieldName=parameterName.substring(0,parameterName.length() - 3);
    }
 else     if (parameterName.endsWith("_value")) {
      fieldName=parameterName.substring(0,parameterName.length() - 6);
    }
    String key=fieldName.concat("_ic");
    if (parameters.containsKey(key)) {
      keys.add(key);
      ignoreCase="Y".equals(parameters.get(key));
    }
    key=fieldName.concat("_op");
    if (parameters.containsKey(key)) {
      keys.add(key);
      operation=(String)parameters.get(key);
    }
    key=fieldName.concat("_value");
    if (parameters.containsKey(key)) {
      keys.add(key);
      fieldValue=parameters.get(key);
    }
    if (fieldName.endsWith("_fld0") || fieldName.endsWith("_fld1")) {
      if (parameters.containsKey(fieldName)) {
        keys.add(fieldName);
      }
      fieldName=fieldName.substring(0,fieldName.length() - 5);
    }
    if (parameters.containsKey(fieldName)) {
      keys.add(fieldName);
    }
    processed.addAll(keys);
    ModelField modelField=fieldMap.get(fieldName);
    if (modelField == null) {
      continue;
    }
    if (fieldValue == null) {
      fieldValue=parameters.get(fieldName);
    }
    if (ObjectType.isEmpty(fieldValue) && !"empty".equals(operation)) {
      continue;
    }
    result.add(createSingleCondition(modelField,operation,fieldValue,ignoreCase,delegator,context));
    for (    String mapKey : keys) {
      queryStringMap.put(mapKey,parameters.get(mapKey));
    }
  }
  return result;
}
