{
  String entityName=(String)context.get("entityName");
  Delegator delegator=dctx.getDelegator();
  String orderBy=(String)context.get("orderBy");
  Map<String,?> inputFields=checkMap(context.get("inputFields"),String.class,Object.class);
  String noConditionFind=(String)context.get("noConditionFind");
  if (UtilValidate.isEmpty(noConditionFind)) {
    noConditionFind=(String)inputFields.get("noConditionFind");
  }
  if (UtilValidate.isEmpty(noConditionFind)) {
    noConditionFind=EntityUtilProperties.getPropertyValue("widget","widget.defaultNoConditionFind",delegator);
  }
  String filterByDate=(String)context.get("filterByDate");
  if (UtilValidate.isEmpty(filterByDate)) {
    filterByDate=(String)inputFields.get("filterByDate");
  }
  Timestamp filterByDateValue=(Timestamp)context.get("filterByDateValue");
  Map<String,Object> queryStringMap=new LinkedHashMap<String,Object>();
  ModelEntity modelEntity=delegator.getModelEntity(entityName);
  List<EntityCondition> tmpList=createConditionList(inputFields,modelEntity.getFieldsUnmodifiable(),queryStringMap,delegator,context);
  if (tmpList.size() > 0 || "Y".equals(noConditionFind)) {
    if ("Y".equals(filterByDate)) {
      queryStringMap.put("filterByDate",filterByDate);
      if (UtilValidate.isEmpty(filterByDateValue)) {
        EntityCondition filterByDateCondition=EntityUtil.getFilterByDateExpr();
        tmpList.add(filterByDateCondition);
      }
 else {
        queryStringMap.put("filterByDateValue",filterByDateValue);
        EntityCondition filterByDateCondition=EntityUtil.getFilterByDateExpr(filterByDateValue);
        tmpList.add(filterByDateCondition);
      }
    }
  }
  EntityConditionList<EntityCondition> exprList=null;
  if (tmpList.size() > 0) {
    exprList=EntityCondition.makeCondition(tmpList);
  }
  List<String> orderByList=null;
  if (UtilValidate.isNotEmpty(orderBy)) {
    orderByList=StringUtil.split(orderBy,"|");
  }
  Map<String,Object> results=ServiceUtil.returnSuccess();
  queryStringMap.put("noConditionFind",noConditionFind);
  String queryString=UtilHttp.urlEncodeArgs(queryStringMap);
  results.put("queryString",queryString);
  results.put("queryStringMap",queryStringMap);
  results.put("orderByList",orderByList);
  results.put("entityConditionList",exprList);
  return results;
}
