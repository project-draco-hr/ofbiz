{
  Map<String,Map<String,Object>> subMap=null;
  Map<String,Object> subMap2=null;
  Object fieldValue=null;
  EntityCondition cond=null;
  List<EntityCondition> tmpList=new LinkedList<EntityCondition>();
  String opString=null;
  boolean ignoreCase=false;
  List<ModelField> fields=modelEntity.getFieldsUnmodifiable();
  for (  ModelField modelField : fields) {
    String fieldName=modelField.getName();
    subMap=normalizedFields.get(fieldName);
    if (subMap == null) {
      continue;
    }
    subMap2=subMap.get("fld0");
    fieldValue=subMap2.get("value");
    opString=(String)subMap2.get("op");
    if (fieldValue == null && !"empty".equals(opString)) {
      continue;
    }
    ignoreCase="Y".equals(subMap2.get("ic"));
    cond=createSingleCondition(modelField,opString,fieldValue,ignoreCase,delegator,context);
    tmpList.add(cond);
    subMap2=subMap.get("fld1");
    if (subMap2 == null) {
      continue;
    }
    fieldValue=subMap2.get("value");
    opString=(String)subMap2.get("op");
    if (fieldValue == null && !"empty".equals(opString)) {
      continue;
    }
    ignoreCase="Y".equals(subMap2.get("ic"));
    cond=createSingleCondition(modelField,opString,fieldValue,ignoreCase,delegator,context);
    tmpList.add(cond);
    List<Object[]> origList=origValueMap.get(fieldName);
    if (UtilValidate.isNotEmpty(origList)) {
      for (      Object[] arr : origList) {
        queryStringMap.put((String)arr[0],arr[1]);
      }
    }
  }
  return tmpList;
}
