{
  Map parameters=UtilHttp.getParameterMap(request);
  String para=(String)parameters.get("testSuitePath");
  try {
    SeleniumHtml client=new SeleniumHtml();
    client.host=UtilProperties.getPropertyValue("seleniumXml.properties","serverHost","localhost");
    client.port=Integer.parseInt(UtilProperties.getPropertyValue("seleniumXml.properties","proxyPort","4444"));
    client.browser=UtilProperties.getPropertyValue("seleniumXml.properties","browser","*firefox");
    client.baseUrl=UtilProperties.getPropertyValue("seleniumXml.properties","startUrlHttps","https://localhost:8443");
    if (Debug.infoOn()) {
      Debug.logInfo("Parameters used for selenium: host: " + client.host + ", port: "+ client.port+ ", browser: "+ client.browser+ ", baseUrl: "+ client.baseUrl,module);
    }
    File testFile=new File(para.trim());
    if (testFile.exists()) {
      if (Debug.infoOn())       Debug.logInfo("Running this testsuite: " + testFile.getAbsolutePath(),module);
      Map results=client.runSuite(testFile.getAbsolutePath());
      if ("true".equals(results.get("status").toString())) {
        request.setAttribute("_EVENT_MESSAGE_LIST_",results.get("logs"));
      }
 else {
        request.setAttribute("_ERROR_MESSAGE_LIST_",results.get("logs"));
      }
    }
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
    return "error";
  }
  return "success";
}
