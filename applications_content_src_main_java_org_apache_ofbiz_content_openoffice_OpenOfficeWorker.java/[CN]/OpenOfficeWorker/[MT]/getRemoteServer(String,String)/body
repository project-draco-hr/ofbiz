{
  if (UtilValidate.isEmpty(host))   host=UtilProperties.getPropertyValue("openoffice-uno","oo.host","localhost");
  if (UtilValidate.isEmpty(port))   port=UtilProperties.getPropertyValue("openoffice-uno","oo.port","8100");
  XMultiComponentFactory xmulticomponentfactory=null;
  XComponentContext xcomponentcontext=null;
  Object objectUrlResolver=null;
  XUnoUrlResolver xurlresolver=null;
  Object objectInitial=null;
  try {
    xcomponentcontext=com.sun.star.comp.helper.Bootstrap.createInitialComponentContext(null);
    xmulticomponentfactory=xcomponentcontext.getServiceManager();
    objectUrlResolver=xmulticomponentfactory.createInstanceWithContext("com.sun.star.bridge.UnoUrlResolver",xcomponentcontext);
    xurlresolver=(XUnoUrlResolver)UnoRuntime.queryInterface(XUnoUrlResolver.class,objectUrlResolver);
    String url="uno:socket,host=" + host + ",port="+ port+ ";urp;StarOffice.ServiceManager";
    objectInitial=xurlresolver.resolve(url);
    xmulticomponentfactory=(XMultiComponentFactory)UnoRuntime.queryInterface(XMultiComponentFactory.class,objectInitial);
  }
 catch (  Exception e) {
    String errMsg="Error connecting to OpenOffice with host [" + host + "] and port ["+ port+ "]: "+ e.toString();
    Debug.logError(e,errMsg,module);
    throw new IllegalArgumentException(errMsg);
  }
  return xmulticomponentfactory;
}
