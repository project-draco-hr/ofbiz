{
  Map<String,Object> result=new HashMap<String,Object>();
  HttpSolrClient client=null;
  QueryResponse returnMap=new QueryResponse();
  try {
    client=new HttpSolrClient(solrUrl);
    String query="inStock[1 TO *]";
    if (categoryId != null)     query+=" +cat:" + categoryId;
 else     if (productId != null)     query+=" +productId:" + productId;
    SolrQuery solrQuery=new SolrQuery();
    solrQuery.setQuery(query);
    if (catalogId != null)     solrQuery.setFilterQueries("catalog:" + catalogId);
    if (displayproducts) {
      if (viewSize > -1) {
        solrQuery.setRows(viewSize);
      }
 else       solrQuery.setRows(50000);
      if (viewIndex > -1) {
        solrQuery.setStart(viewIndex);
      }
    }
 else {
      solrQuery.setFields("cat");
      solrQuery.setRows(0);
    }
    if (UtilValidate.isNotEmpty(facetPrefix)) {
      solrQuery.setFacetPrefix(facetPrefix);
    }
    solrQuery.setFacetMinCount(0);
    solrQuery.setFacet(true);
    solrQuery.addFacetField("cat");
    solrQuery.setFacetLimit(-1);
    Debug.logVerbose("solr: solrQuery: " + solrQuery,module);
    returnMap=client.query(solrQuery,METHOD.POST);
    result.put("rows",returnMap);
    result.put("numFound",returnMap.getResults().getNumFound());
  }
 catch (  Exception e) {
    Debug.logError(e.getMessage(),module);
  }
  return result;
}
