{
  String configStr=(String)context.get("paymentConfig");
  if (configStr == null) {
    configStr="payment.properties";
  }
  GenericValue cc=(GenericValue)context.get("creditCard");
  String url=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.url");
  String ver=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.version");
  String delimited=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.delimited");
  String delimiter=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.delimiter");
  String method=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.method");
  String emailCustomer=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.emailcustomer");
  String emailMerchant=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.emailmerchant");
  String testReq=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.test");
  String relay=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.relay");
  String login=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.login");
  String transDescription=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.transdescription");
  String tranKey=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.trankey");
  String password=UtilProperties.getPropertyValue(configStr,"payment.authorizedotnet.password");
  if (ver == null || ver.length() == 0) {
    ver="3.0";
  }
  if (login == null || login.length() == 0) {
    Debug.logInfo("the login property in " + configStr + " is not configured.",module);
  }
  if (password == null || password.length() == 0) {
    Debug.logInfo("The password property in " + configStr + " is not configured.",module);
  }
  if (ver.equals("3.1")) {
    if (tranKey == null || tranKey.length() <= 0) {
      Debug.logInfo("Trankey property required for version 3.1 reverting to 3.0",module);
      ver="3.0";
    }
  }
  Properties props=new Properties();
  props.put("url",url);
  props.put("ver",ver);
  props.put("delimited",delimited);
  props.put("delimiter",delimiter);
  props.put("method",method);
  props.put("emailCustomer",emailCustomer);
  props.put("emailMerchant",emailMerchant);
  props.put("testReq",testReq);
  props.put("relay",relay);
  props.put("transDescription",transDescription);
  props.put("login",login);
  props.put("password",password);
  props.put("trankey",tranKey);
  if (cc != null) {
    props.put("cardtype",(String)cc.get("cardType"));
  }
  if (AIMProperties == null) {
    AIMProperties=props;
  }
  if (isTestMode()) {
    Debug.logInfo("Created Authorize.Net properties file: " + props.toString(),module);
  }
  return props;
}
