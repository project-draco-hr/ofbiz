{
  Debug.logInfo("--> Authorize.Net ccAuthCapture Transaction Start <--",module);
  Map results=new HashMap();
  results=ServiceUtil.returnSuccess();
  Map request=new HashMap();
  Properties props=buildAIMProperties(context);
  buildMerchantInfo(context,props,request);
  buildGatewayResponeConfig(context,props,request);
  buildCustomerBillingInfo(context,props,request);
  buildEmailSettings(context,props,request);
  buildInvoiceInfo(context,props,request);
  props.put("transType","AUTH_CAPTURE");
  buildAuthTransaction(context,props,request);
  Map validateResults=validateRequest(context,props,request);
  String respMsg=(String)validateResults.get(ModelService.RESPONSE_MESSAGE);
  if (respMsg != null) {
    if (respMsg.equals(ModelService.RESPOND_ERROR)) {
      results.put(ModelService.ERROR_MESSAGE,"Validation Failed - invalid values");
      Debug.logInfo("Missing transaction values. Aborting transaction.",module);
      Debug.logInfo("<-- Abnormal Transaction End -->\r\n",module);
      return results;
    }
  }
  Map reply=processCard(request,props);
  processAuthCaptureTransResult(reply,results);
  Debug.logInfo("<-- Authorize.net Transaction End -->",module);
  return results;
}
