{
  String productStoreId=(String)context.get("productStoreId");
  Map<String,Object> buildGoogleBaseConfigContext=new HashMap<String,Object>();
  if (UtilValidate.isNotEmpty(productStoreId)) {
    GenericValue googleBaseConfig=null;
    try {
      googleBaseConfig=EntityQuery.use(delegator).from("GoogleBaseConfig").where(UtilMisc.toMap("productStoreId",productStoreId)).queryOne();
    }
 catch (    GenericEntityException e) {
      Debug.logError("Unable to find value for GoogleBaseConfig",module);
      e.printStackTrace();
    }
    if (UtilValidate.isNotEmpty(googleBaseConfig)) {
      buildGoogleBaseConfigContext.put("developerKey",googleBaseConfig.getString("developerKey"));
      buildGoogleBaseConfigContext.put("authenticationUrl",googleBaseConfig.getString("authenticationUrl"));
      buildGoogleBaseConfigContext.put("accountEmail",googleBaseConfig.getString("accountEmail"));
      buildGoogleBaseConfigContext.put("accountPassword",googleBaseConfig.getString("accountPassword"));
      buildGoogleBaseConfigContext.put("postItemsUrl",googleBaseConfig.getString("postItemsUrl"));
    }
  }
 else {
    buildGoogleBaseConfigContext.put("developerKey",EntityUtilProperties.getPropertyValue(configString,"googleBaseExport.developerKey",delegator));
    buildGoogleBaseConfigContext.put("authenticationUrl",EntityUtilProperties.getPropertyValue(configString,"googleBaseExport.authenticationUrl",delegator));
    buildGoogleBaseConfigContext.put("accountEmail",EntityUtilProperties.getPropertyValue(configString,"googleBaseExport.accountEmail",delegator));
    buildGoogleBaseConfigContext.put("accountPassword",EntityUtilProperties.getPropertyValue(configString,"googleBaseExport.accountPassword",delegator));
    buildGoogleBaseConfigContext.put("postItemsUrl",EntityUtilProperties.getPropertyValue(configString,"googleBaseExport.postItemsUrl",delegator));
  }
  return buildGoogleBaseConfigContext;
}
