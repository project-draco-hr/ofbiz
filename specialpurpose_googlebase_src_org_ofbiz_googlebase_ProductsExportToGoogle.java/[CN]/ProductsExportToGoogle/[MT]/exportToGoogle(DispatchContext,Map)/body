{
  Locale locale=(Locale)context.get("locale");
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Map result=null;
  try {
    Map<String,Object> googleBaseConfigResult=buildGoogleBaseConfig(context,delegator);
    StringBuffer dataItemsXml=new StringBuffer();
    result=buildDataItemsXml(dctx,context,dataItemsXml);
    if (!ServiceUtil.isFailure(result) && UtilValidate.isNotEmpty(googleBaseConfigResult)) {
      String token=authenticate(googleBaseConfigResult.get("authenticationUrl").toString(),googleBaseConfigResult.get("accountEmail").toString(),googleBaseConfigResult.get("accountPassword").toString());
      if (token != null) {
        result=postItem(token,googleBaseConfigResult.get("postItemsUrl").toString(),googleBaseConfigResult.get("developerKey").toString(),dataItemsXml,locale,(String)context.get("testMode"),(List)result.get("newProductsInGoogle"),(List)result.get("productsRemovedFromGoogle"),dispatcher,delegator);
      }
 else {
        Debug.logError("Error during authentication to Google Account",module);
        return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"productsExportToGoogle.errorDuringAuthenticationToGoogle",locale));
      }
    }
 else {
      return ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(result));
    }
  }
 catch (  IOException e) {
    return ServiceUtil.returnFailure(ServiceUtil.getErrorMessage(result) + "IO Error loading resource :" + e.getMessage());
  }
  return result;
}
