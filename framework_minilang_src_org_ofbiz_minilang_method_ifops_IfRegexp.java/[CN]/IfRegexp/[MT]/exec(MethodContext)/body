{
  String fieldString=null;
  Object fieldVal=null;
  if (!mapAcsr.isEmpty()) {
    Map<String,? extends Object> fromMap=mapAcsr.get(methodContext);
    if (fromMap == null) {
      if (Debug.infoOn())       Debug.logInfo("Map not found with name " + mapAcsr + ", using empty string for comparison",module);
    }
 else {
      fieldVal=fieldAcsr.get(fromMap,methodContext);
    }
  }
 else {
    fieldVal=fieldAcsr.get(methodContext);
  }
  if (fieldVal != null) {
    try {
      fieldString=(String)MiniLangUtil.convertType(fieldVal,String.class,methodContext.getLocale(),methodContext.getTimeZone(),null);
    }
 catch (    Exception e) {
      Debug.logError(e,"Could not convert object to String, using empty String",module);
    }
  }
  if (fieldString == null)   fieldString="";
  boolean matches=false;
  try {
    matches=compilerMatcher.get().matches(fieldString,methodContext.expandString(this.exprExdr));
  }
 catch (  MalformedPatternException e) {
    Debug.logError(e,"Regular Expression [" + this.exprExdr + "] is mal-formed: "+ e.toString(),module);
  }
  if (matches) {
    return SimpleMethod.runSubOps(subOps,methodContext);
  }
 else {
    if (elseSubOps != null) {
      return SimpleMethod.runSubOps(elseSubOps,methodContext);
    }
 else {
      return true;
    }
  }
}
