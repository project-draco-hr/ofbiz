{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String sessionId=request.getParameter("sessionId");
  String visitId=request.getParameter("visitId");
  sessionId=sessionId.trim();
  visitId=visitId.trim();
  String responseString="ERROR";
  GenericValue visit=null;
  try {
    visit=EntityQuery.use(delegator).from("Visit").where("visitId",visitId).queryOne();
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Cannot Visit Object",module);
  }
  if (visit.getString("sessionId").equals(sessionId)) {
    String currentPage=request.getParameter("currentPage");
    Map<String,String> sessionMap=appletSessions.get(sessionId);
    if (sessionMap != null) {
      String followers=sessionMap.get("followers");
      List<String> folList=StringUtil.split(followers,",");
      for (      String follower : folList) {
        Map<String,String> folSesMap=UtilMisc.toMap("followPage",currentPage);
        appletSessions.put(follower,folSesMap);
      }
    }
    responseString="OK";
  }
  try {
    PrintWriter out=response.getWriter();
    response.setContentType("text/plain");
    out.println(responseString);
    out.close();
  }
 catch (  IOException e) {
    Debug.logError(e,"Problems writing servlet output!",module);
  }
  return "success";
}
