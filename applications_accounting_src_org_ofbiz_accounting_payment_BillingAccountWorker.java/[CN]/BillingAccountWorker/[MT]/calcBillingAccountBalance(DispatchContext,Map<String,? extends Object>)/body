{
  Delegator delegator=dctx.getDelegator();
  String billingAccountId=(String)context.get("billingAccountId");
  Locale locale=(Locale)context.get("locale");
  Map<String,Object> result=ServiceUtil.returnSuccess();
  try {
    GenericValue billingAccount=delegator.findOne("BillingAccount",UtilMisc.toMap("billingAccountId",billingAccountId),false);
    if (billingAccount == null) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"AccountingBillingAccountNotFound",UtilMisc.toMap("billingAccountId",billingAccountId),locale));
    }
    result.put("billingAccount",billingAccount);
    result.put("accountBalance",OrderReadHelper.getBillingAccountBalance(billingAccount));
    result.put("netAccountBalance",getBillingAccountNetBalance(delegator,billingAccountId));
    result.put("availableBalance",getBillingAccountAvailableBalance(billingAccount));
    result.put("availableToCapture",availableToCapture(billingAccount));
    return result;
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"AccountingBillingAccountNotFound",UtilMisc.toMap("billingAccountId",billingAccountId),locale));
  }
}
