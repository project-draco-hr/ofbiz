{
  GenericDelegator delegator=dctx.getDelegator();
  String billingAccountId=(String)context.get("billingAccountId");
  GenericValue billingAccount=null;
  Double accountBalance=null;
  Double netAccountBalance=null;
  Double availableBalance=null;
  try {
    billingAccount=delegator.findByPrimaryKey("BillingAccount",UtilMisc.toMap("billingAccountId",billingAccountId));
    accountBalance=new Double((getBillingAccountBalance(delegator,billingAccountId)).doubleValue());
    netAccountBalance=new Double((getBillingAccountNetBalance(delegator,billingAccountId)).doubleValue());
    availableBalance=new Double(getBillingAccountAvailableBalance(billingAccount).doubleValue());
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError("Error getting billing account or calculating balance for billing account #" + billingAccountId);
  }
  if (billingAccount == null) {
    return ServiceUtil.returnError("Unable to locate billing account #" + billingAccountId);
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("accountBalance",accountBalance);
  result.put("netAccountBalance",netAccountBalance);
  result.put("availableBalance",availableBalance);
  result.put("billingAccount",billingAccount);
  return result;
}
