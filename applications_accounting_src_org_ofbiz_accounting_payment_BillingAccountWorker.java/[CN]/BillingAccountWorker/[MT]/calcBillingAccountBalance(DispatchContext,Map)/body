{
  GenericDelegator delegator=dctx.getDelegator();
  String billingAccountId=(String)context.get("billingAccountId");
  Map result=ServiceUtil.returnSuccess();
  try {
    GenericValue billingAccount=delegator.findByPrimaryKey("BillingAccount",UtilMisc.toMap("billingAccountId",billingAccountId));
    if (billingAccount == null) {
      return ServiceUtil.returnError("Unable to locate billing account #" + billingAccountId);
    }
    result.put("billingAccount",billingAccount);
    result.put("accountBalance",new Double((getBillingAccountBalance(delegator,billingAccountId)).doubleValue()));
    result.put("netAccountBalance",new Double((getBillingAccountNetBalance(delegator,billingAccountId)).doubleValue()));
    result.put("availableBalance",new Double(getBillingAccountAvailableBalance(billingAccount).doubleValue()));
    result.put("availableToCapture",new Double(availableToCapture(billingAccount).doubleValue()));
    return result;
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError("Error getting billing account or calculating balance for billing account #" + billingAccountId);
  }
}
