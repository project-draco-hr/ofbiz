{
  if (isAnd) {
    Set<String> keywordSet=KeywordSearchUtil.makeKeywordSet(this.keywordsString,null,true);
    for (    String keyword : keywordSet) {
      Set<String> expandedSet=new TreeSet<String>();
      boolean replaceEntered=KeywordSearchUtil.expandKeywordForSearch(keyword,expandedSet,contentSearchContext.getDelegator());
      if (!replaceEntered) {
        expandedSet.add(keyword);
      }
      Set<String> fixedSet=KeywordSearchUtil.fixKeywordsForSearch(expandedSet,anyPrefix,anySuffix,removeStems,isAnd);
      Set<String> fixedKeywordSet=FastSet.newInstance();
      fixedKeywordSet.addAll(fixedSet);
      contentSearchContext.keywordFixedOrSetAndList.add(fixedKeywordSet);
    }
  }
 else {
    Set<String> keywordFirstPass=makeFullKeywordSet(contentSearchContext.getDelegator());
    Set<String> keywordSet=KeywordSearchUtil.fixKeywordsForSearch(keywordFirstPass,anyPrefix,anySuffix,removeStems,isAnd);
    contentSearchContext.orKeywordFixedSet.addAll(keywordSet);
  }
  Map<String,String> valueMap=UtilMisc.toMap("constraintName",constraintName,"infoString",this.keywordsString);
  valueMap.put("anyPrefix",this.anyPrefix ? "Y" : "N");
  valueMap.put("anySuffix",this.anySuffix ? "Y" : "N");
  valueMap.put("isAnd",this.isAnd ? "Y" : "N");
  valueMap.put("removeStems",this.removeStems ? "Y" : "N");
  contentSearchContext.contentSearchConstraintList.add(contentSearchContext.getDelegator().makeValue("ContentSearchConstraint",valueMap));
}
