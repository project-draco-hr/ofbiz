{
  super(element,simpleMethod);
  mapAcsr=new ContextAccessor(element.getAttribute("map-name"));
  fieldAcsr=new ContextAccessor(element.getAttribute("field-name"));
  decimalScaleString=element.getAttribute("decimal-scale");
  decimalFormatString=element.getAttribute("decimal-format");
  typeString=element.getAttribute("type");
  roundingModeString=element.getAttribute("rounding-mode");
  List calcopElements=UtilXml.childElementList(element);
  calcops=new Calculate.SubCalc[calcopElements.size()];
  Iterator calcopIter=calcopElements.iterator();
  int i=0;
  while (calcopIter.hasNext()) {
    Element calcopElement=(Element)calcopIter.next();
    String nodeName=calcopElement.getNodeName();
    if ("calcop".equals(nodeName)) {
      calcops[i]=new Calculate.CalcOp(calcopElement);
    }
 else     if ("number".equals(nodeName)) {
      calcops[i]=new Calculate.NumberOp(calcopElement);
    }
 else {
      Debug.logError("Error: calculate operation with type " + nodeName,module);
    }
    i++;
  }
}
