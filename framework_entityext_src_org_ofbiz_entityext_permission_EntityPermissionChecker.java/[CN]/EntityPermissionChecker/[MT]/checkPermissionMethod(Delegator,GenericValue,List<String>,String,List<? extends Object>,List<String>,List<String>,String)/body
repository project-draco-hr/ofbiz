{
  boolean passed=false;
  String lcEntityName=entityName.toLowerCase();
  String userLoginId=null;
  String partyId=null;
  if (userLogin != null) {
    userLoginId=userLogin.getString("userLoginId");
    partyId=userLogin.getString("partyId");
  }
  boolean hasRoleOperation=false;
  if (!(targetOperationList == null) && userLoginId != null) {
    hasRoleOperation=checkHasRoleOperations(partyId,targetOperationList,delegator);
  }
  if (hasRoleOperation) {
    return true;
  }
  ModelEntity modelEntity=delegator.getModelEntity(entityName);
  boolean hasStatusField=false;
  if (modelEntity.getField("statusId") != null)   hasStatusField=true;
  boolean hasPrivilegeField=false;
  if (modelEntity.getField("privilegeEnumId") != null)   hasPrivilegeField=true;
  ModelEntity modelOperationEntity=delegator.getModelEntity(entityName + "PurposeOperation");
  if (modelOperationEntity == null) {
    modelOperationEntity=delegator.getModelEntity(entityName + "Operation");
  }
  if (modelOperationEntity == null) {
    Debug.logError("No operation entity found for " + entityName,module);
    throw new RuntimeException("No operation entity found for " + entityName);
  }
  boolean hasPurposeOp=false;
  if (modelOperationEntity.getField(lcEntityName + "PurposeTypeId") != null)   hasPurposeOp=true;
  boolean hasStatusOp=false;
  if (modelOperationEntity.getField("statusId") != null)   hasStatusOp=true;
  boolean hasPrivilegeOp=false;
  if (modelOperationEntity.getField("privilegeEnumId") != null)   hasPrivilegeOp=true;
  EntityCondition opCond=EntityCondition.makeCondition(lcEntityName + "OperationId",EntityOperator.IN,targetOperationList);
  List<GenericValue> targetOperationEntityList=delegator.findList(modelOperationEntity.getEntityName(),opCond,null,null,null,true);
  Map<String,GenericValue> entities=new HashMap<String,GenericValue>();
  String pkFieldName=modelEntity.getFirstPkFieldName();
  Map<String,List<String>> purposes=new HashMap<String,List<String>>();
  Map<String,List<String>> roles=new HashMap<String,List<String>>();
  for (  Object id : entityIdList) {
    GenericValue entity=getNextEntity(delegator,entityName,pkFieldName,id,entities);
    if (entity == null)     continue;
    String statusId=null;
    if (hasStatusOp && hasStatusField) {
      statusId=entity.getString("statusId");
    }
    if (hasPrivilegeOp && hasPrivilegeField) {
      privilegeEnumId=entity.getString("privilegeEnumId");
      getPrivilegeEnumSeq(delegator,privilegeEnumId);
    }
    passed=hasMatch(entityName,targetOperationEntityList,roleList,hasPurposeOp,purposeList,hasStatusOp,statusId);
    if (passed) {
      break;
    }
  }
  if (passed) {
    return true;
  }
  if (hasPurposeOp) {
    for (    Object id : entityIdList) {
      GenericValue entity=getNextEntity(delegator,entityName,pkFieldName,id,entities);
      if (entity == null)       continue;
      String entityId=entity.getString(pkFieldName);
      purposeList=getRelatedPurposes(entity,null);
      String statusId=null;
      if (hasStatusOp && hasStatusField) {
        statusId=entity.getString("statusId");
      }
      if (purposeList.size() > 0) {
        passed=hasMatch(entityName,targetOperationEntityList,roleList,hasPurposeOp,purposeList,hasStatusOp,statusId);
      }
      if (passed) {
        break;
      }
      purposes.put(entityId,purposeList);
    }
  }
  if (passed)   return true;
  if (userLogin == null)   return false;
  for (  Object id : entityIdList) {
    GenericValue entity=getNextEntity(delegator,entityName,pkFieldName,id,entities);
    if (entity == null)     continue;
    String entityId=entity.getString(pkFieldName);
    List<String> tmpPurposeList=purposes.get(entityId);
    if (purposeList != null) {
      if (tmpPurposeList != null) {
        purposeList.addAll(tmpPurposeList);
      }
    }
 else {
      purposeList=tmpPurposeList;
    }
    List<String> tmpRoleList=getUserRoles(entity,userLogin,delegator);
    if (roleList != null) {
      if (tmpRoleList != null) {
        roleList.addAll(tmpRoleList);
      }
    }
 else {
      roleList=tmpRoleList;
    }
    String statusId=null;
    if (hasStatusOp && hasStatusField) {
      statusId=entity.getString("statusId");
    }
    passed=hasMatch(entityName,targetOperationEntityList,roleList,hasPurposeOp,purposeList,hasStatusOp,statusId);
    if (passed) {
      break;
    }
    roles.put(entityId,roleList);
  }
  if (passed)   return true;
  if (modelEntity.getField("owner" + entityName + "Id") != null) {
    for (    Object id : entityIdList) {
      GenericValue entity=getNextEntity(delegator,entityName,pkFieldName,id,entities);
      if (entity == null)       continue;
      String entityId=entity.getString(pkFieldName);
      List<String> ownedContentIdList=new LinkedList<String>();
      getEntityOwners(delegator,entity,ownedContentIdList,"Content","ownerContentId");
      List<String> ownedContentRoleIds=getUserRolesFromList(delegator,ownedContentIdList,partyId,"contentId","partyId","roleTypeId","ContentRole");
      String statusId=null;
      if (hasStatusOp && hasStatusField) {
        statusId=entity.getString("statusId");
      }
      purposeList=purposes.get(entityId);
      passed=hasMatch(entityName,targetOperationEntityList,ownedContentRoleIds,hasPurposeOp,purposeList,hasStatusOp,statusId);
      if (passed)       break;
    }
  }
  return passed;
}
