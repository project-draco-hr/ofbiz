{
  ClientConnectionManager ccm=new ThreadSafeClientConnManager(supportedSchemes);
  DefaultHttpClient client=new DefaultHttpClient(ccm,defaultParameters);
  client.setKeepAliveStrategy(new DefaultConnectionKeepAliveStrategy());
  HttpEntity entity=null;
  ResponseHandler<String> responseHandler=null;
  try {
    BasicHttpContext localContext=new BasicHttpContext();
    CookieStore cookieStore=new BasicCookieStore();
    localContext.setAttribute(ClientContext.COOKIE_STORE,cookieStore);
    Header sessionHeader=null;
    if (this.loginAsUrl != null) {
      String loginAsUri=this.host + this.loginAsUrl;
      String loginAsParamString="?" + this.loginAsUserParam + "&"+ this.loginAsPasswordParam;
      HttpGet req2=new HttpGet(loginAsUri + loginAsParamString);
      if (Debug.infoOn())       Debug.logInfo("loginAsUrl:" + loginAsUri + loginAsParamString,module);
      req2.setHeader("Connection","Keep-Alive");
      HttpResponse rsp=client.execute(req2,localContext);
      Header[] headers=rsp.getAllHeaders();
      for (      Header hdr : headers) {
        String headerValue=hdr.getValue();
        if (headerValue.startsWith("JSESSIONID")) {
          sessionHeader=hdr;
        }
        if (Debug.infoOn())         Debug.logInfo("login: " + hdr.getName() + " : "+ hdr.getValue(),module);
      }
      List<Cookie> cookies=cookieStore.getCookies();
      if (Debug.infoOn())       Debug.logInfo("cookies.size(): " + cookies.size(),module);
      for (      Cookie cookie : cookies) {
        if (Debug.infoOn())         Debug.logInfo("Local cookie(0): " + cookie,module);
      }
    }
    if (HttpHandleMode.equals(this.responseHandlerMode)) {
    }
 else {
      responseHandler=new JsonResponseHandler(this);
    }
    String paramString=urlEncodeArgs(this.inMap,false);
    String thisUri=null;
    if (sessionHeader != null) {
      String sessionHeaderValue=sessionHeader.getValue();
      int pos1=sessionHeaderValue.indexOf("=");
      int pos2=sessionHeaderValue.indexOf(";");
      String sessionId=sessionHeaderValue.substring(pos1 + 1,pos2);
      thisUri=this.host + this.requestUrl + ";jsessionid="+ sessionId+ "?"+ paramString;
    }
 else {
      thisUri=this.host + this.requestUrl + "?"+ paramString;
    }
    if (Debug.infoOn())     Debug.logInfo("thisUri: " + thisUri,module);
    HttpGet req=new HttpGet(thisUri);
    if (sessionHeader != null) {
      req.setHeader(sessionHeader);
    }
    String responseBody=client.execute(req,responseHandler,localContext);
  }
 catch (  HttpResponseException e) {
    System.out.println(e.getMessage());
  }
catch (  IOException e) {
    System.out.println(e.getMessage());
  }
 finally {
    try {
      if (entity != null)       EntityUtils.consume(entity);
    }
 catch (    IOException e) {
      System.out.println("in 'finally'  " + e.getMessage());
    }
  }
}
