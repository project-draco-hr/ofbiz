{
  String fileSep=System.getProperty("file.separator");
  String javaHome=System.getProperty("java.home");
  String errorMsg="Unable to locate " + jarName + " - ";
  String jarLoc="lib" + fileSep + jarName;
  File tj=null;
  if ("tools.jar".equals(jarName) && javaVendor.startsWith("Apple")) {
    return null;
  }
  tj=new File(ofbizHome + fileSep + jarName);
  if (tj.exists()) {
    return null;
  }
  tj=new File(baseLib + fileSep + jarName);
  if (tj.exists()) {
    return null;
  }
  String jarProps=props.getProperty("java." + jarName,null);
  if (jarProps != null) {
    tj=new File(jarProps);
    if (!tj.exists()) {
      if (required) {
        System.err.println(errorMsg + tj.getAbsolutePath());
      }
    }
 else {
      return jarProps;
    }
  }
  tj=new File(javaHome + fileSep + jarLoc);
  if (!tj.exists()) {
    if (required) {
      System.err.println(errorMsg + tj.getAbsolutePath());
    }
  }
 else {
    return tj.getAbsolutePath();
  }
  String jreExt=fileSep + "jre";
  if (javaHome.toLowerCase().endsWith(jreExt)) {
    javaHome=javaHome.substring(0,javaHome.lastIndexOf(fileSep));
    tj=new File(javaHome + fileSep + jarLoc);
    if (!tj.exists()) {
      if (required) {
        System.err.println(errorMsg + tj.getAbsolutePath());
      }
    }
 else {
      return tj.getAbsolutePath();
    }
  }
  if (javaHome.toLowerCase().charAt(1) == ':') {
    String driveLetter=javaHome.substring(0,2);
    String windowsPath=driveLetter + fileSep + "j2sdk"+ javaVersion;
    tj=new File(windowsPath + fileSep + jarLoc);
    if (!tj.exists()) {
      if (required) {
        System.err.println(errorMsg + tj.getAbsolutePath());
      }
    }
 else {
      return tj.getAbsolutePath();
    }
  }
  if (required) {
    System.err.println("");
    System.err.println("Required library " + jarName + " could not be located.");
    System.err.println("You may need to copy " + jarName + " into a loadable lib directory");
    System.err.println("(i.e. OFBIZ_HOME or OFBIZ_HOME/base/lib)");
    System.err.println("");
    System.exit(-1);
  }
  return null;
}
