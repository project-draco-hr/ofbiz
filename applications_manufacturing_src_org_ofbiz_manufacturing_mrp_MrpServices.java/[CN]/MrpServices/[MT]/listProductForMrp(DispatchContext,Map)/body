{
  Debug.logInfo("listProductForMrp called",module);
  GenericDelegator delegator=ctx.getDelegator();
  Long billOfMaterialLevel=(Long)context.get("billOfMaterialLevel");
  List listResult=null;
  EntityCondition parameters=null;
  if (billOfMaterialLevel.intValue() == 0) {
    parameters=new EntityExpr(new EntityExpr("billOfMaterialLevel",EntityOperator.EQUALS,null),EntityOperator.OR,new EntityExpr("billOfMaterialLevel",EntityOperator.EQUALS,billOfMaterialLevel));
  }
 else {
    parameters=new EntityExpr("billOfMaterialLevel",EntityOperator.EQUALS,billOfMaterialLevel);
  }
  List orderBy=UtilMisc.toList("productId","eventDate");
  try {
    listResult=delegator.findByCondition("MrpInventoryEventPlanned",parameters,null,orderBy);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error : delegator.findByCondition(\"MrpInventoryEventPlanned\", parameters, null, orderBy)",module);
    Debug.logError(e,"Error : parameters = " + parameters,module);
    Debug.logError(e,"Error : orderBy = " + orderBy,module);
    return ServiceUtil.returnError("Problem, we can not find the products, for more detail look at the log");
  }
  Map result=new HashMap();
  result.put("listInventoryEventForMrp",listResult);
  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);
  Debug.logInfo("return from listProductForMrp " + billOfMaterialLevel,module);
  return result;
}
