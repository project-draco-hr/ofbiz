{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Security security=dctx.getSecurity();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  if (!security.hasPermission("ENTITY_MAINT",userLogin)) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"EntityExtServicePermissionNotGranted",locale));
  }
  String rootDirectory=(String)context.get("rootDirectory");
  URL rootDirectoryUrl=UtilURL.fromResource(rootDirectory);
  if (rootDirectoryUrl == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"EntityExtUnableToLocateRootDirectory",UtilMisc.toMap("rootDirectory",rootDirectory),locale));
  }
  String delimiter=(String)context.get("delimiter");
  if (delimiter == null) {
    delimiter="\t";
  }
  File root=null;
  try {
    root=new File(new URI(rootDirectoryUrl.toExternalForm()));
  }
 catch (  URISyntaxException e) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"EntityExtUnableToLocateRootDirectoryURI",locale));
  }
  if (!root.exists() || !root.isDirectory() || !root.canRead()) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"EntityExtRootDirectoryDoesNotExists",locale));
  }
  List<File> files=getFileList(root);
  if (UtilValidate.isNotEmpty(files)) {
    for (    File file : files) {
      try {
        Map<String,Object> serviceCtx=UtilMisc.toMap("file",file,"delimiter",delimiter,"userLogin",userLogin);
        dispatcher.runSyncIgnore("importDelimitedEntityFile",serviceCtx);
      }
 catch (      GenericServiceException e) {
        Debug.logError(e,module);
      }
    }
  }
 else {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"EntityExtNoFileAvailableInTheRootDirectory",UtilMisc.toMap("rootDirectory",rootDirectory),locale));
  }
  return ServiceUtil.returnSuccess();
}
