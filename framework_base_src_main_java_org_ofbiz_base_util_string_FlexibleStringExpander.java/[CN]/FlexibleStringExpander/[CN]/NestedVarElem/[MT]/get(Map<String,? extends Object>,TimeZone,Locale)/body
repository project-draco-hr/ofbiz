{
  StringBuilder expr=new StringBuilder(this.hint);
  for (  FlexibleStringExpander child : this.childElems) {
    expr.append(child.expandString(context,timeZone,locale));
  }
  if (expr.length() == 0) {
    return "";
  }
  try {
    return UelUtil.evaluate(context,openBracket.concat(expr.toString()).concat(closeBracket));
  }
 catch (  PropertyNotFoundException e) {
    if (Debug.verboseOn()) {
      Debug.logVerbose("Error evaluating expression: " + e,module);
    }
  }
catch (  Exception e) {
    Debug.logError("Error evaluating expression: " + e,module);
  }
  return "";
}
