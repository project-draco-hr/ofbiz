{
  String entityName=entityNameFse.expandString(methodContext.getEnvMap());
  String delegatorName=delegatorNameFse.expandString(methodContext.getEnvMap());
  boolean useCache="true".equals(useCacheFse.expandString(methodContext.getEnvMap()));
  boolean useIterator="true".equals(useIteratorFse.expandString(methodContext.getEnvMap()));
  List<String> orderByNames=orderByListFma.get(methodContext.getEnvMap());
  Delegator delegator=methodContext.getDelegator();
  if (!delegatorName.isEmpty()) {
    delegator=DelegatorFactory.getDelegator(delegatorName);
  }
  try {
    if (useIterator) {
      EntityCondition whereCond=null;
      if (!mapFma.isEmpty()) {
        whereCond=EntityCondition.makeCondition(mapFma.get(methodContext.getEnvMap()));
      }
      listFma.put(methodContext.getEnvMap(),delegator.find(entityName,whereCond,null,null,orderByNames,null));
    }
 else {
      listFma.put(methodContext.getEnvMap(),delegator.findByAnd(entityName,mapFma.get(methodContext.getEnvMap()),orderByNames,useCache));
    }
  }
 catch (  GenericEntityException e) {
    String errMsg="Exception thrown while performing entity find: " + e.getMessage();
    Debug.logWarning(e,errMsg,module);
    simpleMethod.addErrorMessage(methodContext,errMsg);
    return false;
  }
  return true;
}
