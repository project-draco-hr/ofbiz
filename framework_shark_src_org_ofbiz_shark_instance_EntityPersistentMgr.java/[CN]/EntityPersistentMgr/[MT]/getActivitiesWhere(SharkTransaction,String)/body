{
  Debug.logInfo(">>>>>>>>>>>>>>>>>>>>>>> getActivitiesWhere(SharkTransaction trans, String sqlWhere)",module);
  Debug.logInfo(">>>>>>>>>>>>>>>>>>>>>>> sqlWhere = " + sqlWhere,module);
  String ProcessId=new String();
  List act_list=new ArrayList();
  StringTokenizer st=null;
  StringTokenizer strtoc=null;
  List returnList=new ArrayList();
  String element=new String();
  String state=null;
  String defId=null;
  if (sqlWhere != null) {
    st=new StringTokenizer(sqlWhere);
    while (st.hasMoreElements()) {
      element=(String)st.nextElement();
      if (element.equals("Id")) {
        st.nextElement();
        ProcessId=(String)st.nextElement();
        strtoc=new StringTokenizer(ProcessId,"\'");
        ProcessId=strtoc.nextToken();
      }
 else       if (element.equals("ActivityStates")) {
        st.nextElement();
        st.nextElement();
        st.nextElement();
        String e=(String)st.nextElement();
        strtoc=new StringTokenizer(e,"\'");
        state=strtoc.nextToken();
      }
 else       if (element.equals("ActivityDefinitionId")) {
        st.nextElement();
        String e=(String)st.nextElement();
        strtoc=new StringTokenizer(e,"\'");
        defId=strtoc.nextToken();
      }
      continue;
    }
    act_list=getAllActivitiesForProcess(ProcessId,trans);
    for (int i=0; i < act_list.size(); i++) {
      if ((state == null) && (defId != null)) {
        if (((Activity)act_list.get(i)).getActivityDefinitionId().equalsIgnoreCase(defId))         returnList.add(act_list.get(i));
      }
 else       if ((state != null) && (defId == null)) {
        if (((Activity)act_list.get(i)).getState().startsWith(new String(state.substring(0,state.length() - 1))))         returnList.add(act_list.get(i));
      }
 else       if ((state != null) && (defId != null)) {
        if ((((Activity)act_list.get(i)).getState().startsWith(new String(state.substring(0,state.length() - 1)))) && (((Activity)act_list.get(i)).getActivityDefinitionId().equalsIgnoreCase(defId)))         returnList.add(act_list.get(i));
      }
    }
  }
 else {
    returnList=getAllActivities(trans);
    return returnList;
  }
  return returnList;
}
