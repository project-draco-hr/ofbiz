{
  EntityCondition newCond=null;
  List exprs=new LinkedList();
  if (packageId != null) {
    exprs.add(EntityCondition.makeCondition(org.ofbiz.shark.SharkConstants.packageId,EntityOperator.EQUALS,packageId));
  }
  if (processDefId != null) {
    exprs.add(EntityCondition.makeCondition(org.ofbiz.shark.SharkConstants.definitionId,EntityOperator.EQUALS,processDefId));
  }
  if (packageVer != null) {
    exprs.add(EntityCondition.makeCondition(org.ofbiz.shark.SharkConstants.packageVer,EntityOperator.EQUALS,packageVer));
  }
  if (finishBefore != null) {
    exprs.add(EntityCondition.makeCondition(org.ofbiz.shark.SharkConstants.lastStateTime,EntityOperator.LESS_THAN,finishBefore));
  }
  if (exprs.size() > 0) {
    newCond=EntityCondition.makeCondition(exprs,EntityJoinOperator.AND);
  }
  if (newCond != null) {
    if (cond != null) {
      return EntityCondition.makeCondition(UtilMisc.toList(cond,newCond),EntityJoinOperator.AND);
    }
 else {
      return newCond;
    }
  }
 else {
    return cond;
  }
}
