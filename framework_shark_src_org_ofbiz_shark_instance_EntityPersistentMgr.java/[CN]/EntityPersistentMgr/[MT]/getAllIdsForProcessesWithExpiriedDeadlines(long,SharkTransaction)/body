{
  if (Debug.infoOn())   Debug.log(":: getAllIdsForProcessesWithExpiriedDeadlines ::",module);
  GenericDelegator delegator=SharkContainer.getDelegator();
  List processIds=new ArrayList();
  DynamicViewEntity view=new DynamicViewEntity();
  view.addMemberEntity("WFDL","WfDeadline");
  view.addMemberEntity("WFPR","WfProcess");
  view.addMemberEntity("WFAC","WfActivity");
  view.addAlias("WFPR","currentState","processState",null,null,null,null);
  view.addAlias("WFAC","currentState","activityState",null,null,null,null);
  view.addViewLink("WFDL","WFPR",Boolean.FALSE,ModelKeyMap.makeKeyMapList("processId"));
  view.addViewLink("WFDL","WFAC",Boolean.FALSE,ModelKeyMap.makeKeyMapList("activityId"));
  EntityListIterator eli=null;
  try {
    EntityCondition procState=new EntityExpr("processState",EntityOperator.EQUALS,"open.running");
    EntityCondition actState1=new EntityExpr("activityState",EntityOperator.EQUALS,"open.not_running.not_started");
    EntityCondition actState2=new EntityExpr("activityState",EntityOperator.EQUALS,"open.running");
    EntityCondition actState=new EntityConditionList(UtilMisc.toList(actState1,actState2),EntityOperator.OR);
    EntityCondition timeCond=new EntityExpr("timeLimit",EntityOperator.LESS_THAN,new Long(l));
    EntityCondition cond=new EntityConditionList(UtilMisc.toList(timeCond,procState,actState),EntityOperator.AND);
    eli=delegator.findListIteratorByCondition(view,cond,null,null,null,null);
    GenericValue v=null;
    while ((v=(GenericValue)eli.next()) != null) {
      processIds.add(v.getString("processId"));
    }
  }
 catch (  GenericEntityException e) {
    throw new PersistenceException(e);
  }
 finally {
    if (eli != null) {
      try {
        eli.close();
      }
 catch (      GenericEntityException e) {
        throw new PersistenceException(e);
      }
    }
  }
  return processIds;
}
