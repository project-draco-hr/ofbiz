{
  Map<String,Object> acroFieldMap=FastMap.newInstance();
  try {
    ByteArrayOutputStream os=new ByteArrayOutputStream();
    Delegator delegator=dctx.getDelegator();
    ByteBuffer byteBuffer=getInputByteBuffer(context,delegator);
    PdfReader r=new PdfReader(byteBuffer.array());
    PdfStamper s=new PdfStamper(r,os);
    AcroFields fs=s.getAcroFields();
    Map<String,Object> map=UtilGenerics.checkMap(fs.getFields());
    s.setFormFlattening(true);
    for (    String fieldName : map.keySet()) {
      String parmValue=fs.getField(fieldName);
      acroFieldMap.put(fieldName,parmValue);
    }
  }
 catch (  DocumentException e) {
    System.err.println(e.getMessage());
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  GeneralException e) {
    System.err.println(e.getMessage());
    return ServiceUtil.returnError(e.getMessage());
  }
catch (  IOException ioe) {
    System.err.println(ioe.getMessage());
    return ServiceUtil.returnError(ioe.getMessage());
  }
  Map<String,Object> results=ServiceUtil.returnSuccess();
  results.put("acroFieldMap",acroFieldMap);
  return results;
}
