{
  Map acroFieldMap=new HashMap();
  try {
    ByteArrayOutputStream os=new ByteArrayOutputStream();
    GenericDelegator delegator=dctx.getDelegator();
    ByteWrapper byteWrapper=getInputByteWrapper(context,delegator);
    PdfReader r=new PdfReader(byteWrapper.getBytes());
    PdfStamper s=new PdfStamper(r,os);
    AcroFields fs=s.getAcroFields();
    HashMap map=fs.getFields();
    s.setFormFlattening(true);
    Iterator iter=map.keySet().iterator();
    while (iter.hasNext()) {
      String fieldName=(String)iter.next();
      String parmValue=fs.getField(fieldName);
      acroFieldMap.put(fieldName,parmValue);
    }
  }
 catch (  DocumentException e) {
    System.err.println(e.getMessage());
    ServiceUtil.returnError(e.getMessage());
  }
catch (  GeneralException e) {
    System.err.println(e.getMessage());
    ServiceUtil.returnError(e.getMessage());
  }
catch (  IOException ioe) {
    System.err.println(ioe.getMessage());
    ServiceUtil.returnError(ioe.getMessage());
  }
  Map results=ServiceUtil.returnSuccess();
  results.put("acroFieldMap",acroFieldMap);
  return results;
}
