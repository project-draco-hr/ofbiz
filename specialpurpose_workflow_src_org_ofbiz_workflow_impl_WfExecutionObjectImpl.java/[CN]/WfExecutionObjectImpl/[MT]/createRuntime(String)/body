{
  GenericValue valueObject=getDefinitionObject();
  GenericValue dataObject=null;
  workEffortId=getDelegator().getNextSeqId("WorkEffort");
  Map dataMap=new HashMap();
  String weType=activityId != null ? "ACTIVITY" : "WORK_FLOW";
  dataMap.put("workEffortId",workEffortId);
  dataMap.put("workEffortTypeId",weType);
  dataMap.put("workEffortParentId",parentId);
  dataMap.put("workflowPackageId",packageId);
  dataMap.put("workflowPackageVersion",packageVersion);
  dataMap.put("workflowProcessId",processId);
  dataMap.put("workflowProcessVersion",processVersion);
  dataMap.put("workEffortName",valueObject.getString("objectName"));
  dataMap.put("description",valueObject.getString("description"));
  dataMap.put("createdDate",new Timestamp((new Date()).getTime()));
  dataMap.put("estimatedStartDate",dataMap.get("createdDate"));
  dataMap.put("lastModifiedDate",dataMap.get("createdDate"));
  dataMap.put("priority",valueObject.getLong("objectPriority"));
  dataMap.put("currentStatusId",WfUtil.getOFBStatus("open.not_running.not_started"));
  if (activityId != null)   dataMap.put("workflowActivityId",activityId);
  if (activityId != null && parentId != null) {
    GenericValue parentWorkEffort=getWorkEffort(parentId);
    if (parentWorkEffort != null && parentWorkEffort.get("sourceReferenceId") != null)     dataMap.put("sourceReferenceId",parentWorkEffort.getString("sourceReferenceId"));
  }
  try {
    dataObject=getDelegator().makeValue("WorkEffort",dataMap);
    getDelegator().create(dataObject);
    String objectId=activityId != null ? activityId : processId;
    if (Debug.verboseOn())     Debug.logVerbose("Created new runtime object [" + objectId + "] (Workeffort: "+ runtimeKey()+ ")",module);
  }
 catch (  GenericEntityException e) {
    throw new WfException(e.getMessage(),e);
  }
}
