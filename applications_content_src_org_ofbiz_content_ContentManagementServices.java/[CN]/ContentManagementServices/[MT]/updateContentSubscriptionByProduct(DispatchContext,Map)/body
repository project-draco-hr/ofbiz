{
  Map result=new HashMap();
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  String productId=(String)context.get("productId");
  Integer qty=(Integer)context.get("quantity");
  if (qty == null) {
    qty=new Integer(1);
  }
  Timestamp orderCreatedDate=(Timestamp)context.get("orderCreatedDate");
  if (orderCreatedDate == null) {
    orderCreatedDate=UtilDateTime.nowTimestamp();
  }
  GenericValue productContent=null;
  try {
    List lst=delegator.findByAndCache("ProductContent",UtilMisc.toMap("productId",productId,"productContentTypeId","ONLINE_ACCESS"));
    List listFiltered=EntityUtil.filterByDate(lst,orderCreatedDate,"purchaseFromDate","purchaseThruDate",true);
    List listOrdered=EntityUtil.orderBy(listFiltered,UtilMisc.toList("purchaseFromDate","purchaseThruDate"));
    List listThrusOnly=EntityUtil.filterOutByCondition(listOrdered,EntityCondition.makeCondition("purchaseThruDate",EntityOperator.EQUALS,null));
    if (listThrusOnly.size() > 0) {
      productContent=(GenericValue)listThrusOnly.get(0);
    }
 else {
      productContent=(GenericValue)listOrdered.get(0);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e.toString(),module);
    return ServiceUtil.returnError(e.toString());
  }
  if (productContent == null) {
    String msg="No ProductContent found for productId:" + productId;
    Debug.logError(msg,module);
    return ServiceUtil.returnError(msg);
  }
  Long useTime=(Long)productContent.get("useTime");
  Integer newUseTime=new Integer(useTime.intValue() * qty.intValue());
  context.put("useTime",newUseTime);
  context.put("useTimeUomId",productContent.get("useTimeUomId"));
  context.put("useRoleTypeId",productContent.get("useRoleTypeId"));
  context.put("contentId",productContent.get("contentId"));
  ModelService subscriptionModel=dispatcher.getDispatchContext().getModelService("updateContentSubscription");
  Map ctx=subscriptionModel.makeValid(context,"IN");
  result=dispatcher.runSync("updateContentSubscription",ctx);
  return result;
}
