{
  Map<String,Object> result=new HashMap<String,Object>();
  Delegator delegator=dctx.getDelegator();
  String contentId=(String)context.get("contentId");
  String contentAssocTypeId=(String)context.get("contentAssocTypeId");
  List<String> typeList=new LinkedList<String>();
  if (UtilValidate.isNotEmpty(contentAssocTypeId)) {
    typeList.add(contentAssocTypeId);
  }
 else {
    typeList=UtilMisc.toList("PUBLISH_LINK","SUB_CONTENT");
  }
  try {
    ContentManagementWorker.updateStatsTopDown(delegator,contentId,typeList);
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(e.toString());
  }
  return result;
}
