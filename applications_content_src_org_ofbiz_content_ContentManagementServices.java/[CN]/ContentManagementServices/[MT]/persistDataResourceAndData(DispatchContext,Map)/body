{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Map result=FastMap.newInstance();
  try {
    ModelService checkPermModel=dispatcher.getDispatchContext().getModelService("checkContentPermission");
    Map ctx=checkPermModel.makeValid(context,"IN");
    Map thisResult=dispatcher.runSync("checkContentPermission",ctx);
    String permissionStatus=(String)thisResult.get("permissionStatus");
    if (UtilValidate.isNotEmpty(permissionStatus) && permissionStatus.equalsIgnoreCase("granted")) {
      result=persistDataResourceAndDataMethod(dctx,context);
    }
 else {
      return ServiceUtil.returnError("no access to upload image");
    }
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,e.toString(),module);
    return ServiceUtil.returnError(e.toString());
  }
catch (  GenericEntityException e) {
    Debug.logError(e,e.toString(),module);
    return ServiceUtil.returnError(e.toString());
  }
catch (  Exception e) {
    Debug.logError(e,e.toString(),module);
    return ServiceUtil.returnError(e.toString());
  }
  String errorMsg=ServiceUtil.getErrorMessage(result);
  if (UtilValidate.isNotEmpty(errorMsg)) {
    return ServiceUtil.returnError(errorMsg);
  }
  return result;
}
