{
  GenericDelegator delegator=dctx.getDelegator();
  String contentId=(String)context.get("contentId");
  String subContentId=(String)context.get("subContentId");
  String mapKey=(String)context.get("mapKey");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  Timestamp fromDate=(Timestamp)context.get("fromDate");
  List assocTypes=(List)context.get("assocTypes");
  String assocTypesString=(String)context.get("assocTypesString");
  if (UtilValidate.isNotEmpty(assocTypesString)) {
    List lst=StringUtil.split(assocTypesString,"|");
    if (assocTypes == null) {
      assocTypes=new ArrayList();
    }
    assocTypes.addAll(lst);
  }
  GenericValue content=null;
  GenericValue view=null;
  try {
    view=ContentWorker.getSubContentCache(delegator,contentId,mapKey,subContentId,userLogin,assocTypes,fromDate,Boolean.FALSE,null);
    content=ContentWorker.getContentFromView(view);
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(e.toString());
  }
  Map results=ServiceUtil.returnSuccess();
  results.put("view",view);
  results.put("content",content);
  return results;
}
