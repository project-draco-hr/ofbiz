{
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  OutputStream out=(OutputStream)context.get("outputStream");
  Map bodyParameters=new HashMap();
  Map confirmBodContext=new HashMap();
  Map oagisMsgInfoContext=new HashMap();
  Map exportMsgResult=new HashMap();
  String bodyScreenUri=UtilProperties.getPropertyValue("oagis.properties","Oagis.Template.ConfirmBod");
  DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSS'Z'Z");
  Date date=new Date();
  String sentDate=null;
  sentDate=dateFormat.format(date);
  try {
    date=dateFormat.parse(sentDate);
  }
 catch (  ParseException e) {
    Debug.logError(e,"Error parsing Date",module);
  }
  Timestamp timestamp=new Timestamp(date.getTime());
  GenericValue userLogin=null;
  try {
    userLogin=delegator.findByPrimaryKey("UserLogin",UtilMisc.toMap("userLoginId","admin"));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error getting userLogin",module);
  }
  String logicalId=UtilProperties.getPropertyValue("oagis.properties","CNTROLAREA.SENDER.LOGICALID");
  String authId=UtilProperties.getPropertyValue("oagis.properties","CNTROLAREA.SENDER.AUTHID");
  String referenceId=delegator.getNextSeqId("OagisMessageInfo");
  String errorLogicalId=(String)context.get("logicalId");
  String errorComponent=(String)context.get("component");
  String errorTask=(String)context.get("task");
  String errorReferenceId=(String)context.get("referenceId");
  String errorDescription=(String)context.get("description");
  String errorReasonCode=(String)context.get("reasonCode");
  bodyParameters.put("logicalId",logicalId);
  bodyParameters.put("referenceId",referenceId);
  bodyParameters.put("authId",authId);
  bodyParameters.put("sentDate",sentDate);
  bodyParameters.put("errorLogicalId",errorLogicalId);
  bodyParameters.put("errorComponent",errorComponent);
  bodyParameters.put("errorTask",errorTask);
  bodyParameters.put("errorReferenceId",errorReferenceId);
  bodyParameters.put("errorDescription",errorDescription);
  bodyParameters.put("errorReasonCode",errorReasonCode);
  if (((String)context.get("orderId")) != null) {
    String origRef=(String)context.get("orderId");
    bodyParameters.put("origRef",origRef);
  }
 else   if (((String)context.get("returnId")) != null) {
    String origRef=(String)context.get("returnId");
    bodyParameters.put("origRef",origRef);
  }
 else   if (((String)context.get("shipmentId")) != null) {
    String origRef=(String)context.get("shipmentId");
    bodyParameters.put("origRef",origRef);
  }
  confirmBodContext.put("bodyParameters",bodyParameters);
  confirmBodContext.put("bodyScreenUri",bodyScreenUri);
  try {
    exportMsgResult=dispatcher.runSync("exportMsgFromScreen",confirmBodContext);
    if (ServiceUtil.isError(exportMsgResult))     return exportMsgResult;
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Error while generating message",module);
  }
  oagisMsgInfoContext.put("logicalId",logicalId);
  oagisMsgInfoContext.put("component","EXCEPTION");
  oagisMsgInfoContext.put("task","RECIEPT");
  oagisMsgInfoContext.put("referenceId",referenceId);
  oagisMsgInfoContext.put("authId",authId);
  oagisMsgInfoContext.put("sentDate",timestamp);
  oagisMsgInfoContext.put("confirmation","0");
  oagisMsgInfoContext.put("bsrVerb","CONFIRM");
  oagisMsgInfoContext.put("bsrNoun","BOD");
  oagisMsgInfoContext.put("bsrRevision","004");
  oagisMsgInfoContext.put("userLogin",userLogin);
  try {
    Map oagisMsgInfoResult=dispatcher.runSync("createOagisMessageInfo",oagisMsgInfoContext);
    if (ServiceUtil.isError(oagisMsgInfoResult))     return ServiceUtil.returnError("Error creating OagisMessageInfo");
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Saving message to database failed",module);
  }
  return ServiceUtil.returnSuccess("Service Completed Successfully");
}
