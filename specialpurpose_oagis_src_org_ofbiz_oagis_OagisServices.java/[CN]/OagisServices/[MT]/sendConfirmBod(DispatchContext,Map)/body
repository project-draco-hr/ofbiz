{
  GenericDelegator delegator=ctx.getDelegator();
  LocalDispatcher dispatcher=ctx.getDispatcher();
  GenericValue userLogin=null;
  try {
    userLogin=delegator.findByPrimaryKey("UserLogin",UtilMisc.toMap("userLoginId","admin"));
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"Error getting userLogin",module);
  }
  String logicalId=UtilProperties.getPropertyValue("oagis.properties","CNTROLAREA.SENDER.LOGICALID");
  String authId=UtilProperties.getPropertyValue("oagis.properties","CNTROLAREA.SENDER.AUTHID");
  MapStack bodyParameters=MapStack.create();
  bodyParameters.put("logicalId",logicalId);
  bodyParameters.put("authId",authId);
  String referenceId=delegator.getNextSeqId("OagisMessageInfo");
  bodyParameters.put("referenceId",referenceId);
  DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSS'Z'Z");
  String sentDate=dateFormat.format(UtilDateTime.nowTimestamp());
  bodyParameters.put("sentDate",sentDate);
  bodyParameters.put("errorLogicalId",context.get("logicalId"));
  bodyParameters.put("errorComponent",context.get("component"));
  bodyParameters.put("errorTask",context.get("task"));
  bodyParameters.put("errorReferenceId",context.get("referenceId"));
  bodyParameters.put("errorDescription",context.get("description"));
  bodyParameters.put("errorReasonCode",context.get("reasonCode"));
  bodyParameters.put("origRef",context.get("origRefId"));
  OutputStream out=(OutputStream)context.get("outputStream");
  String bodyScreenUri=UtilProperties.getPropertyValue("oagis.properties","Oagis.Template.ConfirmBod");
  OagisShipmentServices.writeScreenToOutputStream(out,bodyScreenUri,bodyParameters);
  Writer writer=new OutputStreamWriter(out);
  ScreenRenderer screens=new ScreenRenderer(writer,bodyParameters,new HtmlScreenRenderer());
  try {
    screens.render(bodyScreenUri);
  }
 catch (  Exception e) {
    Debug.logError(e,"Error rendering [text/xml]: ",module);
  }
  Map oagisMsgInfoContext=new HashMap();
  oagisMsgInfoContext.put("logicalId",logicalId);
  oagisMsgInfoContext.put("component","EXCEPTION");
  oagisMsgInfoContext.put("task","RECIEPT");
  oagisMsgInfoContext.put("referenceId",referenceId);
  oagisMsgInfoContext.put("authId",authId);
  oagisMsgInfoContext.put("sentDate",sentDate);
  oagisMsgInfoContext.put("confirmation","0");
  oagisMsgInfoContext.put("bsrVerb","CONFIRM");
  oagisMsgInfoContext.put("bsrNoun","BOD");
  oagisMsgInfoContext.put("bsrRevision","004");
  oagisMsgInfoContext.put("userLogin",userLogin);
  try {
    Map oagisMsgInfoResult=dispatcher.runSync("createOagisMessageInfo",oagisMsgInfoContext);
    if (ServiceUtil.isError(oagisMsgInfoResult))     return ServiceUtil.returnError("Error creating OagisMessageInfo");
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Saving message to database failed",module);
  }
  return ServiceUtil.returnSuccess("Service Completed Successfully");
}
