{
  try {
    Debug.logInfo("[VelocityViewHandler.init] : Loading...",module);
    ve=new VelocityEngine();
    ve.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM_CLASS,"org.apache.velocity.runtime.log.Log4JLogSystem");
    ve.setProperty("runtime.log.logsystem.log4j.category",module);
    Properties props=null;
    try {
      props=UtilProperties.getProperties(context.getResource("/WEB-INF/velocity.properties"));
      Debug.logInfo("[VelocityViewHandler.init] : Loaded /WEB-INF/velocity.properties",module);
    }
 catch (    MalformedURLException e) {
      Debug.logError(e,module);
    }
    if (props == null) {
      props=new Properties();
      Debug.logWarning("[VelocityViewHandler.init] : Cannot load /WEB-INF/velocity.properties. " + "Using default properties.",module);
    }
    if (context.getRealPath("/") != null) {
      props.setProperty("file.resource.loader.path",context.getRealPath("/"));
      Debug.logInfo("[VelocityViewHandler.init] : Got true webapp path, mounting as template path.",module);
    }
    ve.init(props);
  }
 catch (  Exception e) {
    throw new ViewHandlerException(e.getMessage(),e);
  }
}
