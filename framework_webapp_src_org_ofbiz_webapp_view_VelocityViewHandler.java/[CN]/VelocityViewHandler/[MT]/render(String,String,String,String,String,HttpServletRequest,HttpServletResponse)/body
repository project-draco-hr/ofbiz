{
  if (ve == null) {
    throw new ViewHandlerException("Velocity Template Engine has not been initialized");
  }
  if (UtilValidate.isEmpty(page)) {
    throw new ViewHandlerException("Invalid template source");
  }
  Context context=new VelocityContext();
  context.put(REQUEST,request);
  context.put(RESPONSE,response);
  Template template=null;
  try {
    template=ve.getTemplate(page);
  }
 catch (  ResourceNotFoundException rne) {
    throw new ViewHandlerException("Invalid template source",rne);
  }
catch (  Exception e) {
    throw new ViewHandlerException(e.getMessage(),e);
  }
  ServletOutputStream out=null;
  VelocityWriter vw=null;
  try {
    out=response.getOutputStream();
  }
 catch (  IOException e) {
    throw new ViewHandlerException(e.getMessage(),e);
  }
  try {
    vw=(VelocityWriter)writerPool.get();
    if (vw == null)     vw=new VelocityWriter(new OutputStreamWriter(out,encoding),4 * 1024,true);
 else     vw.recycle(new OutputStreamWriter(out,encoding));
    if (vw == null)     Debug.logWarning("[VelocityViewHandler.eval] : VelocityWriter is NULL",module);
    template.merge(context,vw);
  }
 catch (  Exception e) {
    throw new ViewHandlerException(e.getMessage(),e);
  }
 finally {
    try {
      if (vw != null) {
        vw.flush();
        writerPool.put(vw);
      }
    }
 catch (    Exception e) {
      throw new ViewHandlerException(e.getMessage(),e);
    }
  }
}
