{
  Element avResponseElement=rateResponseDocument.getDocumentElement();
  Element responseElement=UtilXml.firstChildElement(avResponseElement,"Response");
  String responseStatusCode=UtilXml.childElementValue(responseElement,"ResponseStatusCode");
  List<Object> errorList=new LinkedList<Object>();
  UpsServices.handleErrors(responseElement,errorList,locale);
  if ("1".equals(responseStatusCode)) {
    List<Map<String,String>> matches=new LinkedList<Map<String,String>>();
    List<? extends Element> avResultList=UtilXml.childElementList(avResponseElement,"AddressValidationResult");
    if (UtilValidate.isNotEmpty(avResultList)) {
      for (      Element avResultElement : avResultList) {
        Map<String,String> match=new HashMap<String,String>();
        match.put("Rank",UtilXml.childElementValue(avResultElement,"Rank"));
        match.put("Quality",UtilXml.childElementValue(avResultElement,"Quality"));
        Element addressElement=UtilXml.firstChildElement(avResultElement,"Address");
        match.put("City",UtilXml.childElementValue(addressElement,"City"));
        match.put("StateProvinceCode",UtilXml.childElementValue(addressElement,"StateProvinceCode"));
        match.put("PostalCodeLowEnd",UtilXml.childElementValue(avResultElement,"PostalCodeLowEnd"));
        match.put("PostalCodeHighEnd",UtilXml.childElementValue(avResultElement,"PostalCodeHighEnd"));
        matches.add(match);
      }
    }
    Map<String,Object> result=ServiceUtil.returnSuccess();
    result.put("matches",matches);
    return result;
  }
 else {
    errorList.add(ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"FacilityShipmentUpsErrorStatusCode",UtilMisc.toMap("responseStatusCode",responseStatusCode),locale)));
    return ServiceUtil.returnError(errorList);
  }
}
