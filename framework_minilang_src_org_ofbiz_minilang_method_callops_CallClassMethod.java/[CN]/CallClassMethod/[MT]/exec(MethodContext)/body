{
  String className=methodContext.expandString(this.className);
  String methodName=methodContext.expandString(this.methodName);
  Class<?> methodClass=null;
  try {
    methodClass=ObjectType.loadClass(className,methodContext.getLoader());
  }
 catch (  ClassNotFoundException e) {
    Debug.logError(e,"Class to create not found with name " + className + " in create-object operation",module);
    String errMsg="ERROR: Could not complete the " + simpleMethod.getShortDescription() + " process [Class to create not found with name "+ className+ ": "+ e.toString()+ "]";
    methodContext.setErrorReturn(errMsg,simpleMethod);
    return false;
  }
  return CallObjectMethod.callMethod(simpleMethod,methodContext,parameters,methodClass,null,methodName,retFieldAcsr,retMapAcsr);
}
