{
  if (product == null) {
    throw new GenericEntityException("product is null");
  }
  if (inDate == null)   inDate=new Date();
  bomTypeId=partBomTypeId;
  List<GenericValue> rows=EntityQuery.use(delegator).from("ProductAssoc").where("productIdTo",product.get("productId"),"productAssocTypeId",partBomTypeId).orderBy("sequenceNum").filterByDate(inDate).queryList();
  if ((UtilValidate.isEmpty(rows)) && substitutedNode != null) {
    rows=EntityQuery.use(delegator).from("ProductAssoc").where("productIdTo",substitutedNode.getProduct().get("productId"),"productAssocTypeId",partBomTypeId).orderBy("sequenceNum").filterByDate(inDate).queryList();
  }
  children=new LinkedList<GenericValue>();
  children.addAll(rows);
  childrenNodes=new LinkedList<BOMNode>();
  BOMNode oneChildNode=null;
  for (  GenericValue oneChild : children) {
    oneChildNode=new BOMNode(oneChild.getString("productId"),delegator,dispatcher,userLogin);
    if (oneChildNode != null) {
      oneChildNode.setParentNode(this);
      oneChildNode.setTree(tree);
      oneChildNode.loadParents(partBomTypeId,inDate,productFeatures);
    }
    childrenNodes.add(oneChildNode);
  }
}
