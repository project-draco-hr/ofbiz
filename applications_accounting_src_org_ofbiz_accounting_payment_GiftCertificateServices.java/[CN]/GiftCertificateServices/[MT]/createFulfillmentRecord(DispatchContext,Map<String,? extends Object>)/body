{
  Delegator delegator=dctx.getDelegator();
  Locale locale=(Locale)context.get("locale");
  GenericValue gcFulFill=delegator.makeValue("GiftCardFulfillment");
  gcFulFill.set("fulfillmentId",delegator.getNextSeqId("GiftCardFulfillment"));
  gcFulFill.set("typeEnumId",context.get("typeEnumId"));
  gcFulFill.set("merchantId",context.get("merchantId"));
  gcFulFill.set("partyId",context.get("partyId"));
  gcFulFill.set("orderId",context.get("orderId"));
  gcFulFill.set("orderItemSeqId",context.get("orderItemSeqId"));
  gcFulFill.set("surveyResponseId",context.get("surveyResponseId"));
  gcFulFill.set("cardNumber",context.get("cardNumber"));
  gcFulFill.set("pinNumber",context.get("pinNumber"));
  gcFulFill.set("amount",context.get("amount"));
  gcFulFill.set("responseCode",context.get("responseCode"));
  gcFulFill.set("referenceNum",context.get("referenceNum"));
  gcFulFill.set("authCode",context.get("authCode"));
  gcFulFill.set("fulfillmentDate",UtilDateTime.nowTimestamp());
  try {
    delegator.create(gcFulFill);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"AccountingGiftCerticateNumberCannotStoreFulfillmentInfo",UtilMisc.toMap("errorString",e.toString()),locale));
  }
  return ServiceUtil.returnSuccess();
}
