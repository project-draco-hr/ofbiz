{
  ByteArrayOutputStream bos=new ByteArrayOutputStream();
  ObjectOutputStream oos=new ObjectOutputStream(new BufferedOutputStream(bos));
  ((StandardSession)session).writeObjectData(oos);
  oos.close();
  oos=null;
  byte[] obs=bos.toByteArray();
  int size=obs.length;
  GenericValue sessionValue=delegator.makeValue(entityName);
  sessionValue.setBytes("sessionInfo",obs);
  sessionValue.set("sessionId",session.getId());
  sessionValue.set("sessionSize",size);
  sessionValue.set("isValid",session.isValid() ? "Y" : "N");
  sessionValue.set("maxIdle",session.getMaxInactiveInterval());
  sessionValue.set("lastAccessed",session.getLastAccessedTime());
  try {
    delegator.createOrStore(sessionValue);
  }
 catch (  GenericEntityException e) {
    throw new IOException(e.getMessage());
  }
  Debug.logInfo("Persisted session [" + session.getId() + "]",module);
}
