{
  amount=amount.setScale(3,rounding);
  boolean addNewAdjustment=true;
  List<GenericValue> adjustments=cartItem.getAdjustments();
  if (UtilValidate.isNotEmpty(adjustments)) {
    for (    GenericValue adjustment : adjustments) {
      if ("PROMOTION_ADJUSTMENT".equals(adjustment.getString("orderAdjustmentTypeId")) && productPromoAction.get("productPromoId").equals(adjustment.getString("productPromoId")) && productPromoAction.get("productPromoRuleId").equals(adjustment.getString("productPromoRuleId"))&& productPromoAction.get("productPromoActionSeqId").equals(adjustment.getString("productPromoActionSeqId"))) {
        BigDecimal newAmount=amount.add(adjustment.getBigDecimal(amountField));
        adjustment.set(amountField,newAmount);
        addNewAdjustment=false;
      }
    }
  }
  if (addNewAdjustment) {
    GenericValue orderAdjustment=delegator.makeValue("OrderAdjustment",UtilMisc.toMap("orderAdjustmentTypeId","PROMOTION_ADJUSTMENT",amountField,amount,"productPromoId",productPromoAction.get("productPromoId"),"productPromoRuleId",productPromoAction.get("productPromoRuleId"),"productPromoActionSeqId",productPromoAction.get("productPromoActionSeqId"),"description",getProductPromoDescription((String)productPromoAction.get("productPromoId"),delegator)));
    if (UtilValidate.isNotEmpty(productPromoAction.getString("orderAdjustmentTypeId"))) {
      orderAdjustment.set("orderAdjustmentTypeId",productPromoAction.get("orderAdjustmentTypeId"));
    }
    cartItem.addAdjustment(orderAdjustment);
  }
}
