{
  super(element,simpleMethod);
  objFieldAcsr=new ContextAccessor<Object>(element.getAttribute("obj-field"),element.getAttribute("obj-field-name"));
  objMapAcsr=new ContextAccessor<Map<String,? extends Object>>(element.getAttribute("obj-map-name"));
  methodName=element.getAttribute("method-name");
  retFieldAcsr=new ContextAccessor<Object>(element.getAttribute("ret-field"),element.getAttribute("ret-field-name"));
  retMapAcsr=new ContextAccessor<Map<String,Object>>(element.getAttribute("ret-map-name"));
  List<? extends Element> parameterElements=UtilXml.childElementList(element);
  if (parameterElements.size() > 0) {
    parameters=FastList.newInstance();
    for (    Element parameterElement : parameterElements) {
      MethodObject methodObject=null;
      if ("string".equals(parameterElement.getNodeName())) {
        methodObject=new StringObject(parameterElement,simpleMethod);
      }
 else       if ("field".equals(parameterElement.getNodeName())) {
        methodObject=new FieldObject<Object>(parameterElement,simpleMethod);
      }
 else {
        Debug.logWarning("Found an unsupported tag under the call-object-method tag: " + parameterElement.getNodeName() + "; ignoring",module);
      }
      if (methodObject != null) {
        parameters.add(methodObject);
      }
    }
  }
}
