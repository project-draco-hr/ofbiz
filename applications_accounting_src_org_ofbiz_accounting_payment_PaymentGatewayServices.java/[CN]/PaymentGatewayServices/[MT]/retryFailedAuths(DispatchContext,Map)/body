{
  GenericDelegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  List exprs=UtilMisc.toList(new EntityExpr("statusId",EntityOperator.EQUALS,"PAYMENT_NOT_AUTH"),new EntityExpr("processAttempt",EntityOperator.GREATER_THAN,new Long(0)));
  EntityListIterator eli=null;
  try {
    eli=delegator.findListIteratorByCondition("OrderPaymentPreference",new EntityConditionList(exprs,EntityOperator.AND),null,UtilMisc.toList("orderId"));
    List processList=new ArrayList();
    if (eli != null) {
      Debug.logInfo("Processing failed order re-auth(s)",module);
      GenericValue value=null;
      while (((value=(GenericValue)eli.next()) != null)) {
        String orderId=value.getString("orderId");
        if (!processList.contains(orderId)) {
          try {
            dispatcher.runAsync("retryFailedOrderAuth",UtilMisc.<String,Object>toMap("orderId",orderId,"userLogin",userLogin));
            processList.add(orderId);
          }
 catch (          GenericServiceException e) {
            Debug.logError(e,module);
          }
        }
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
 finally {
    if (eli != null) {
      try {
        eli.close();
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,module);
      }
    }
  }
  return ServiceUtil.returnSuccess();
}
