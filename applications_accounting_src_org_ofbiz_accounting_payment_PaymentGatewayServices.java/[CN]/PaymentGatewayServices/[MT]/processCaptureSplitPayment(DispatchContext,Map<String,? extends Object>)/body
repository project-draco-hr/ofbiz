{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  GenericDelegator delegator=dctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  GenericValue paymentPref=(GenericValue)context.get("orderPaymentPreference");
  BigDecimal splitAmount=(BigDecimal)context.get("splitAmount");
  String orderId=paymentPref.getString("orderId");
  OrderReadHelper orh=new OrderReadHelper(delegator,orderId);
  String statusId="PAYMENT_NOT_AUTH";
  if ("EXT_BILLACT".equals(paymentPref.getString("paymentMethodTypeId"))) {
    statusId="PAYMENT_NOT_RECEIVED";
  }
 else   if ("EXT_PAYPAL".equals(paymentPref.get("paymentMethodTypeId"))) {
    statusId="PAYMENT_AUTHORIZED";
  }
  Debug.logInfo("Creating payment preference split",module);
  String newPrefId=delegator.getNextSeqId("OrderPaymentPreference");
  GenericValue newPref=delegator.makeValue("OrderPaymentPreference",UtilMisc.toMap("orderPaymentPreferenceId",newPrefId));
  newPref.set("orderId",paymentPref.get("orderId"));
  newPref.set("paymentMethodTypeId",paymentPref.get("paymentMethodTypeId"));
  newPref.set("paymentMethodId",paymentPref.get("paymentMethodId"));
  newPref.set("maxAmount",splitAmount);
  newPref.set("statusId",statusId);
  newPref.set("createdDate",UtilDateTime.nowTimestamp());
  if (userLogin != null) {
    newPref.set("createdByUserLogin",userLogin.getString("userLoginId"));
  }
  if (Debug.verboseOn())   Debug.logVerbose("New preference : " + newPref,module);
  Map<String,Object> processorResult=null;
  try {
    delegator.create(newPref);
    if ("EXT_PAYPAL".equals(paymentPref.get("paymentMethodTypeId"))) {
      String newAuthId=delegator.getNextSeqId("PaymentGatewayResponse");
      GenericValue authTrans=getAuthTransaction(paymentPref);
      GenericValue newAuthTrans=delegator.makeValue("PaymentGatewayResponse",authTrans);
      newAuthTrans.set("paymentGatewayResponseId",newAuthId);
      newAuthTrans.set("orderPaymentPreferenceId",newPref.get("orderPaymentPreferenceId"));
      newAuthTrans.set("amount",splitAmount);
      savePgr(dctx,newAuthTrans);
    }
 else     if ("PAYMENT_NOT_AUTH".equals(statusId)) {
      processorResult=authPayment(dispatcher,userLogin,orh,newPref,splitAmount,false,null);
      if (processorResult != null) {
        boolean authResult=processResult(dctx,processorResult,userLogin,newPref);
        if (!authResult) {
          Debug.logError("Authorization failed : " + newPref + " : "+ processorResult,module);
        }
      }
 else {
        Debug.logError("Payment not authorized : " + newPref + " : "+ processorResult,module);
      }
    }
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,"ERROR: cannot create new payment preference : " + newPref,module);
  }
catch (  GeneralException e) {
    if (processorResult != null) {
      Debug.logError(e,"Trouble processing the auth result: " + newPref + " : "+ processorResult,module);
    }
 else {
      Debug.logError(e,"Trouble authorizing the payment: " + newPref,module);
    }
  }
  return ServiceUtil.returnSuccess();
}
