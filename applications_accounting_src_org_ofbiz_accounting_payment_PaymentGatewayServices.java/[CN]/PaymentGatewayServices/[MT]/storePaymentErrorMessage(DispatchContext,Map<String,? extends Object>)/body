{
  Delegator delegator=dctx.getDelegator();
  GenericValue paymentPref=(GenericValue)context.get("orderPaymentPreference");
  String serviceType=(String)context.get("paymentServiceTypeEnumId");
  String transactionCode=(String)context.get("transCodeEnumId");
  Map<String,Object> result=UtilGenerics.cast(context.get("serviceResultMap"));
  String responseId=delegator.getNextSeqId("PaymentGatewayResponse");
  GenericValue response=delegator.makeValue("PaymentGatewayResponse");
  String message=ServiceUtil.getErrorMessage(result);
  if (message.length() > 255) {
    message=message.substring(0,255);
  }
  response.set("paymentGatewayResponseId",responseId);
  response.set("paymentServiceTypeEnumId",serviceType);
  response.set("orderPaymentPreferenceId",paymentPref.get("orderPaymentPreferenceId"));
  response.set("paymentMethodTypeId",paymentPref.get("paymentMethodTypeId"));
  response.set("paymentMethodId",paymentPref.get("paymentMethodId"));
  response.set("transCodeEnumId",transactionCode);
  response.set("referenceNum","ERROR");
  response.set("gatewayMessage",message);
  response.set("transactionDate",UtilDateTime.nowTimestamp());
  try {
    delegator.create(response);
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
    return ServiceUtil.returnError("Unable to create PaymentGatewayResponse for failed service call!");
  }
  Debug.logInfo("Created PaymentGatewayResponse record for returned error",module);
  return ServiceUtil.returnSuccess();
}
