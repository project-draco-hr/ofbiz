{
  GenericValue paymentMethod=paymentPreference.getRelatedOne("PaymentMethod");
  if (paymentMethod != null && paymentMethod.getString("paymentMethodTypeId").equals("CREDIT_CARD")) {
    GenericValue creditCard=paymentMethod.getRelatedOne("CreditCard");
    GenericValue billingAddress=creditCard.getRelatedOne("PostalAddress");
    toContext.put("creditCard",creditCard);
    toContext.put("billingAddress",billingAddress);
  }
 else   if (paymentMethod != null && paymentMethod.getString("paymentMethodTypeId").equals("EFT_ACCOUNT")) {
    GenericValue eftAccount=paymentMethod.getRelatedOne("EftAccount");
    GenericValue billingAddress=eftAccount.getRelatedOne("PostalAddress");
    toContext.put("eftAccount",eftAccount);
    toContext.put("billingAddress",billingAddress);
  }
 else   if (paymentMethod != null && paymentMethod.getString("paymentMethodTypeId").equals("GIFT_CARD")) {
    GenericValue giftCard=paymentMethod.getRelatedOne("GiftCard");
    toContext.put("giftCard",giftCard);
  }
 else {
    Debug.logError("ERROR: Unsupported PaymentMethodType passed for authorization",module);
    return null;
  }
  GenericValue billToPersonOrGroup=orh.getBillToParty();
  GenericValue billToEmail=null;
  Collection emails=ContactHelper.getContactMech(billToPersonOrGroup.getRelatedOne("Party"),"PRIMARY_EMAIL","EMAIL_ADDRESS",false);
  if (UtilValidate.isNotEmpty(emails)) {
    billToEmail=(GenericValue)emails.iterator().next();
  }
  toContext.put("billToParty",billToPersonOrGroup);
  toContext.put("billToEmail",billToEmail);
  return billToPersonOrGroup.getString("partyId");
}
