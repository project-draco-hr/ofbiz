{
  Timestamp authTime=PaymentGatewayServices.getAuthTime(orderPaymentPreference);
  if (authTime == null) {
    return false;
  }
  String reauthDays=null;
  GenericValue paymentMethod=null;
  try {
    paymentMethod=orderPaymentPreference.getRelatedOne("PaymentMethod");
  }
 catch (  GenericEntityException e) {
    Debug.logError(e,module);
  }
  if (paymentMethod != null && paymentMethod.getString("paymentMethodTypeId").equals("CREDIT_CARD")) {
    GenericValue creditCard=null;
    try {
      creditCard=paymentMethod.getRelatedOne("CreditCard");
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,module);
    }
    if (creditCard != null) {
      String cardType=creditCard.getString("cardType");
      if ("Discover".equals(cardType)) {
        reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.disc.days","90");
      }
 else       if ("AmericanExpress".equals(cardType)) {
        reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.amex.days","30");
      }
 else       if ("MasterCard".equals(cardType)) {
        reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.mc.days","30");
      }
 else       if ("Visa".equals(cardType)) {
        reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.visa.days","7");
      }
 else {
        reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.other.days","7");
      }
    }
  }
 else   if (paymentMethod != null && "EXT_PAYPAL".equals(paymentMethod.get("paymentMethodTypeId"))) {
    reauthDays=UtilProperties.getPropertyValue(paymentConfig,"payment.general.reauth.paypal.days","3");
  }
  if (reauthDays != null) {
    int days=0;
    try {
      days=Integer.parseInt(reauthDays);
    }
 catch (    Exception e) {
      Debug.logError(e,module);
    }
    if (days > 0) {
      Calendar cal=Calendar.getInstance();
      cal.setTimeInMillis(authTime.getTime());
      cal.add(Calendar.DAY_OF_YEAR,days);
      Timestamp validTime=new Timestamp(cal.getTimeInMillis());
      Timestamp nowTime=UtilDateTime.nowTimestamp();
      if (nowTime.after(validTime)) {
        return false;
      }
    }
  }
  return true;
}
