{
  if (keys == null || keys.size() < 1) {
    throw new IllegalArgumentException("No sort fields defined");
  }
  for (  Object key : keys) {
    boolean ascending=true;
    Object o1=null;
    Object o2=null;
    if (key instanceof FlexibleMapAccessor) {
      FlexibleMapAccessor fmaKey=(FlexibleMapAccessor)key;
      ascending=fmaKey.getIsAscending();
      o1=fmaKey.get((Map)map1);
      o2=fmaKey.get((Map)map2);
    }
 else {
      if (key instanceof String) {
        String keyStr=(String)key;
        if (keyStr.charAt(0) == '-') {
          ascending=false;
          key=keyStr.substring(1);
        }
 else         if (keyStr.charAt(0) == '+') {
          ascending=true;
          key=keyStr.substring(1);
        }
      }
      o1=map1.get(key);
      o2=map2.get(key);
    }
    if (o1 == null && o2 == null) {
      continue;
    }
    int compareResult=0;
    if (o1 != null && o2 == null) {
      compareResult=-1;
    }
    if (o1 == null && o2 != null) {
      compareResult=1;
    }
    if (compareResult == 0) {
      try {
        Comparable comp1=(Comparable)o1;
        Comparable comp2=(Comparable)o2;
        compareResult=comp1.compareTo(comp2);
      }
 catch (      Exception e) {
        String errorMessage="Error sorting list of Maps: " + e.toString();
        Debug.logError(e,errorMessage,module);
        throw new RuntimeException(errorMessage);
      }
    }
    if (compareResult != 0) {
      if (ascending) {
        return compareResult;
      }
 else {
        return -compareResult;
      }
    }
  }
  return 0;
}
