{
  super(subNodeElement);
  this.rootNode=modelNode;
  this.nodeNameExdr=FlexibleStringExpander.getInstance(subNodeElement.getAttribute("node-name"));
  ArrayList<ModelAction> actions=new ArrayList<ModelAction>();
  Element actionsElement=UtilXml.firstChildElement(subNodeElement,"actions");
  if (actionsElement != null) {
    actions.addAll(ModelTreeAction.readSubNodeActions(this,actionsElement));
  }
  Element actionElement=UtilXml.firstChildElement(subNodeElement,"entity-and");
  if (actionElement != null) {
    actions.add(new ModelTreeAction.EntityAnd(this,actionElement));
  }
  actionElement=UtilXml.firstChildElement(subNodeElement,"service");
  if (actionElement != null) {
    actions.add(new ModelTreeAction.Service(this,actionElement));
  }
  actionElement=UtilXml.firstChildElement(subNodeElement,"entity-condition");
  if (actionElement != null) {
    actions.add(new ModelTreeAction.EntityCondition(this,actionElement));
  }
  actionElement=UtilXml.firstChildElement(subNodeElement,"script");
  if (actionElement != null) {
    actions.add(new ModelTreeAction.Script(this,actionElement));
  }
  actions.trimToSize();
  this.actions=Collections.unmodifiableList(actions);
  this.iteratorKey=this.rootNode.getName().concat(".").concat(this.nodeNameExdr.getOriginal()).concat(".ITERATOR");
}
