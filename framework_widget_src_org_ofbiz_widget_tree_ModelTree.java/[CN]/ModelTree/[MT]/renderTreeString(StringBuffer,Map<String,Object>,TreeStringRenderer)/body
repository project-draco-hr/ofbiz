{
  Map<String,Object> parameters=UtilGenerics.checkMap(context.get("parameters"));
  ModelNode node=nodeMap.get(rootNodeName);
  String trailName=trailNameExdr.expandString(context);
  String treeString=(String)context.get(trailName);
  if (UtilValidate.isEmpty(treeString)) {
    treeString=(String)parameters.get(trailName);
  }
  List<String> trail=null;
  if (UtilValidate.isNotEmpty(treeString)) {
    trail=StringUtil.split(treeString,"|");
    if (UtilValidate.isEmpty(trail))     throw new RuntimeException("Tree 'trail' value is empty.");
    context.put("rootEntityId",trail.get(0));
    context.put(getDefaultPkName(context),trail.get(0));
  }
 else {
    trail=new LinkedList<String>();
  }
  context.put("targetNodeTrail",trail);
  context.put("currentNodeTrail",new LinkedList());
  StringWriter writer=new StringWriter();
  try {
    node.renderNodeString(writer,context,treeStringRenderer,0);
    buf.append(writer.toString());
  }
 catch (  IOException e2) {
    String errMsg="Error rendering included label with name [" + getName() + "] : "+ e2.toString();
    Debug.logError(e2,errMsg,module);
    throw new RuntimeException(errMsg);
  }
}
