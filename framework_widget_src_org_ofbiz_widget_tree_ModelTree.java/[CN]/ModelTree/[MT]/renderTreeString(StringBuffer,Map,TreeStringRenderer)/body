{
  Map parameters=(Map)context.get("parameters");
  setWidgetBoundaryComments(context);
  ModelNode node=(ModelNode)nodeMap.get(rootNodeName);
  currentNodeTrail=new ArrayList();
  String trailName=trailNameExdr.expandString(context);
  String treeString=(String)context.get(trailName);
  if (UtilValidate.isEmpty(treeString)) {
    treeString=(String)parameters.get(trailName);
  }
  if (UtilValidate.isNotEmpty(treeString)) {
    trail=StringUtil.split(treeString,"|");
    if (trail == null || trail.size() == 0)     throw new RuntimeException("Tree 'trail' value is empty.");
    context.put("rootEntityId",trail.get(0));
    context.put(defaultPkName,trail.get(0));
    context.put("targetNodeTrail",trail);
  }
 else {
    Debug.logError("Trail value is empty.",module);
  }
  StringWriter writer=new StringWriter();
  try {
    node.renderNodeString(writer,context,treeStringRenderer,0,true);
    buf.append(writer.toString());
  }
 catch (  IOException e2) {
    String errMsg="Error rendering included label with name [" + name + "] : "+ e2.toString();
    Debug.logError(e2,errMsg,module);
    throw new RuntimeException(errMsg);
  }
}
