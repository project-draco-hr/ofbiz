{
  try {
    ModelField localModelField=localModelEntity.getField(this.keyFieldName);
    if (this.requireAll) {
      sql.append(" ALL(");
    }
 else {
      sql.append(" ANY(");
    }
    sql.append("SELECT ");
    sql.append(localModelField.getColName());
    sql.append(SqlJdbcUtil.makeFromClause(localModelEntity,datasourceInfo));
    StringBuffer whereString=new StringBuffer();
    String entityCondWhereString="";
    if (this.whereCond != null) {
      entityCondWhereString=this.whereCond.makeWhereString(localModelEntity,entityConditionParams);
    }
    String viewClause=SqlJdbcUtil.makeViewWhereClause(localModelEntity,(datasourceInfo != null ? datasourceInfo.joinStyle : null));
    if (viewClause.length() > 0) {
      if (entityCondWhereString.length() > 0) {
        whereString.append("(");
        whereString.append(entityCondWhereString);
        whereString.append(") AND ");
      }
      whereString.append(viewClause);
    }
 else {
      whereString.append(entityCondWhereString);
    }
    if (whereString.length() > 0) {
      sql.append(" WHERE ");
      sql.append(whereString.toString());
    }
    sql.append(")");
  }
 catch (  GenericEntityException e) {
    String errMsg="Could not generate sub-select SQL: " + e.toString();
    Debug.logError(e,errMsg,module);
  }
}
