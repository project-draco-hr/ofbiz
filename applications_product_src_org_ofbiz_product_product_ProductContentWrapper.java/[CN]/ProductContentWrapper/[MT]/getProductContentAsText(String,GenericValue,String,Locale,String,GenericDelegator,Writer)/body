{
  if (productId == null && product != null) {
    productId=product.getString("productId");
  }
  if (delegator == null && product != null) {
    delegator=product.getDelegator();
  }
  if (UtilValidate.isEmpty(mimeTypeId)) {
    mimeTypeId="text/html";
  }
  if (delegator == null) {
    throw new GeneralRuntimeException("Unable to find a delegator to use!");
  }
  String candidateFieldName=ModelUtil.dbNameToVarName(productContentTypeId);
  ModelEntity productModel=delegator.getModelEntity("Product");
  if (productModel.isField(candidateFieldName)) {
    if (product == null) {
      product=delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",productId));
    }
    if (product != null) {
      String candidateValue=product.getString(candidateFieldName);
      if (UtilValidate.isNotEmpty(candidateValue)) {
        outWriter.write(candidateValue);
        return;
      }
    }
  }
  List productContentList=delegator.findByAndCache("ProductContent",UtilMisc.toMap("productId",productId,"productContentTypeId",productContentTypeId),UtilMisc.toList("-fromDate"));
  productContentList=EntityUtil.filterByDate(productContentList);
  GenericValue productContent=EntityUtil.getFirst(productContentList);
  if (productContent != null) {
    Map inContext=new HashMap();
    inContext.put("product",product);
    inContext.put("productContent",productContent);
    ContentWorker.renderContentAsText(delegator,productContent.getString("contentId"),outWriter,inContext,locale,mimeTypeId,false);
  }
}
