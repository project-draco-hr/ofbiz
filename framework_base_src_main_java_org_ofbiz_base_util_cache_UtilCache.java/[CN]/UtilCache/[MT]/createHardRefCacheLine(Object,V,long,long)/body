{
  return tryRegister(loadTimeNanos,new HardRefCacheLine<V>(value,loadTimeNanos,expireTimeNanos){
    @Override CacheLine<V> changeLine(    boolean useSoftReference,    long expireTimeNanos){
      if (useSoftReference) {
        return createSoftRefCacheLine(key,getValue(),loadTimeNanos,expireTimeNanos);
      }
 else {
        if (differentExpireTime(expireTimeNanos)) {
          return this;
        }
 else {
          return createHardRefCacheLine(key,getValue(),loadTimeNanos,expireTimeNanos);
        }
      }
    }
    @Override void remove(){
      removeInternal(key,this);
    }
  }
);
}
