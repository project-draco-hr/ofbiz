{
  Map<String,Object> results=FastMap.newInstance();
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Boolean bDisplayFailCond=(Boolean)context.get("displayFailCond");
  String contentIdFrom=(String)context.get("contentIdFrom");
  String contentIdTo=(String)context.get("contentIdTo");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String entityAction=(String)context.get("entityOperation");
  Locale locale=(Locale)context.get("locale");
  if (entityAction == null)   entityAction="_ADMIN";
  String permissionStatus=null;
  GenericValue contentTo=null;
  GenericValue contentFrom=null;
  try {
    contentTo=delegator.findByPrimaryKeyCache("Content",UtilMisc.toMap("contentId",contentIdTo));
    contentFrom=delegator.findByPrimaryKeyCache("Content",UtilMisc.toMap("contentId",contentIdFrom));
  }
 catch (  GenericEntityException e) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentContentToOrFromErrorRetriving",locale));
  }
  if (contentTo == null || contentFrom == null) {
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentContentToOrFromIsNull",UtilMisc.toMap("contentTo",contentTo,"contentFrom",contentFrom),locale));
  }
  Map<String,Object> permResults=FastMap.newInstance();
  List<String> relatedPurposes=EntityPermissionChecker.getRelatedPurposes(contentFrom,null);
  List<String> relatedPurposesTo=EntityPermissionChecker.getRelatedPurposes(contentTo,relatedPurposes);
  Map<String,Object> serviceInMap=FastMap.newInstance();
  serviceInMap.put("userLogin",userLogin);
  serviceInMap.put("targetOperationList",UtilMisc.toList("CONTENT_LINK_TO"));
  serviceInMap.put("contentPurposeList",relatedPurposesTo);
  serviceInMap.put("currentContent",contentTo);
  serviceInMap.put("displayFailCond",bDisplayFailCond);
  try {
    permResults=dispatcher.runSync("checkContentPermission",serviceInMap);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Problem checking permissions","ContentServices");
  }
  permissionStatus=(String)permResults.get("permissionStatus");
  if (permissionStatus == null || !permissionStatus.equals("granted")) {
    if (bDisplayFailCond != null && bDisplayFailCond.booleanValue()) {
      String errMsg=(String)permResults.get(ModelService.ERROR_MESSAGE);
      results.put(ModelService.ERROR_MESSAGE,errMsg);
    }
    return results;
  }
  serviceInMap.put("currentContent",contentFrom);
  serviceInMap.put("targetOperationList",UtilMisc.toList("CONTENT_LINK_FROM"));
  serviceInMap.put("contentPurposeList",relatedPurposes);
  try {
    permResults=dispatcher.runSync("checkContentPermission",serviceInMap);
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Problem checking permissions","ContentServices");
  }
  permissionStatus=(String)permResults.get("permissionStatus");
  if (permissionStatus != null && permissionStatus.equals("granted")) {
    results.put("permissionStatus","granted");
  }
 else {
    if (bDisplayFailCond != null && bDisplayFailCond.booleanValue()) {
      String errMsg=(String)permResults.get(ModelService.ERROR_MESSAGE);
      results.put(ModelService.ERROR_MESSAGE,errMsg);
    }
  }
  return results;
}
