{
  String errorMsg=null;
  String parentCategoryId=(String)categoryNode.get("id");
  String currentDataCategoryId=null;
  int sz=categoryTypeIds.size();
  if (depth >= 0 && (sz - depth) > 0) {
    currentDataCategoryId=(String)categoryTypeIds.get(sz - depth - 1);
  }
  String matchValue=null;
  if (parentCategoryId != null) {
    matchValue=parentCategoryId;
  }
 else {
    matchValue=null;
  }
  List categoryValues=delegator.findByAndCache("DataCategory",UtilMisc.toMap("parentCategoryId",matchValue));
  categoryNode.put("count",new Integer(categoryValues.size()));
  List subCategoryIds=FastList.newInstance();
  for (int i=0; i < categoryValues.size(); i++) {
    GenericValue category=(GenericValue)categoryValues.get(i);
    String id=(String)category.get("dataCategoryId");
    String categoryName=(String)category.get("categoryName");
    Map newNode=FastMap.newInstance();
    newNode.put("id",id);
    newNode.put("name",categoryName);
    errorMsg=getDataCategoryMap(delegator,depth + 1,newNode,categoryTypeIds,getAll);
    if (errorMsg != null)     break;
    subCategoryIds.add(newNode);
  }
  if (parentCategoryId == null || parentCategoryId.equals("ROOT") || (currentDataCategoryId != null && currentDataCategoryId.equals(parentCategoryId)) || getAll) {
    categoryNode.put("kids",subCategoryIds);
  }
  return errorMsg;
}
