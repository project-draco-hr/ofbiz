{
  Map<String,Object> permResults=FastMap.newInstance();
  String skipPermissionCheck=(String)context.get("skipPermissionCheck");
  if (Debug.infoOn())   Debug.logInfo("in callDataResourcePermissionCheckResult, skipPermissionCheck:" + skipPermissionCheck,"");
  if (UtilValidate.isEmpty(skipPermissionCheck) || (!"true".equalsIgnoreCase(skipPermissionCheck) && !"granted".equalsIgnoreCase(skipPermissionCheck))) {
    GenericValue userLogin=(GenericValue)context.get("userLogin");
    Map<String,Object> serviceInMap=FastMap.newInstance();
    serviceInMap.put("userLogin",userLogin);
    serviceInMap.put("targetOperationList",context.get("targetOperationList"));
    serviceInMap.put("contentPurposeList",context.get("contentPurposeList"));
    serviceInMap.put("entityOperation",context.get("entityOperation"));
    String ownerContentId=(String)context.get("ownerContentId");
    if (UtilValidate.isNotEmpty(ownerContentId)) {
      try {
        GenericValue content=delegator.findOne("Content",UtilMisc.toMap("contentId",ownerContentId),false);
        if (content != null)         serviceInMap.put("currentContent",content);
      }
 catch (      GenericEntityException e) {
        Debug.logError(e,"e.getMessage()","ContentServices");
      }
    }
    try {
      permResults=dispatcher.runSync("checkContentPermission",serviceInMap);
    }
 catch (    GenericServiceException e) {
      Debug.logError(e,"Problem checking permissions","ContentServices");
    }
  }
 else {
    permResults.put("permissionStatus","granted");
  }
  return permResults;
}
