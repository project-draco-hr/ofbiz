{
  Connection connection=getConnectionLogged(messages);
  if (connection == null) {
    String message="Unable to establish a connection with the database, no additional information available.";
    Debug.logError(message,module);
    if (messages != null)     messages.add(message);
    return null;
  }
  DatabaseMetaData dbData=this.getDatabaseMetaData(connection,messages);
  if (dbData == null) {
    return null;
  }
  printDbMiscData(dbData,connection);
  if (Debug.infoOn())   Debug.logInfo("Getting Table Info From Database",module);
  TreeSet<String> tableNames=new TreeSet<String>();
  ResultSet tableSet=null;
  String lookupSchemaName=null;
  try {
    String[] types={"TABLE","VIEW","ALIAS","SYNONYM"};
    lookupSchemaName=getSchemaName(dbData);
    tableSet=dbData.getTables(null,lookupSchemaName,null,types);
    if (tableSet == null) {
      Debug.logWarning("getTables returned null set",module);
    }
  }
 catch (  SQLException e) {
    String message="Unable to get list of table information, let's try the create anyway... Error was:" + e.toString();
    Debug.logError(message,module);
    if (messages != null)     messages.add(message);
    try {
      connection.close();
    }
 catch (    SQLException e2) {
      String message2="Unable to close database connection, continuing anyway... Error was:" + e2.toString();
      Debug.logError(message2,module);
      if (messages != null)       messages.add(message2);
    }
    return tableNames;
  }
  try {
    boolean needsUpperCase=false;
    try {
      needsUpperCase=dbData.storesLowerCaseIdentifiers() || dbData.storesMixedCaseIdentifiers();
    }
 catch (    SQLException e) {
      String message="Error getting identifier case information... Error was:" + e.toString();
      Debug.logError(message,module);
      if (messages != null)       messages.add(message);
    }
    while (tableSet.next()) {
      try {
        String tableName=tableSet.getString("TABLE_NAME");
        boolean appendSchemaName=false;
        if (tableName != null && lookupSchemaName != null && !tableName.startsWith(lookupSchemaName + "\\.")) {
          appendSchemaName=true;
        }
        if (needsUpperCase && tableName != null) {
          tableName=tableName.toUpperCase();
        }
        if (appendSchemaName) {
          tableName=lookupSchemaName + "." + tableName;
        }
        String tableType=tableSet.getString("TABLE_TYPE");
        if (tableType != null && !"TABLE".equalsIgnoreCase(tableType) && !"VIEW".equalsIgnoreCase(tableType) && !"ALIAS".equalsIgnoreCase(tableType) && !"SYNONYM".equalsIgnoreCase(tableType)) {
          continue;
        }
        tableNames.add(tableName);
      }
 catch (      SQLException e) {
        String message="Error getting table information... Error was:" + e.toString();
        Debug.logError(message,module);
        if (messages != null)         messages.add(message);
        continue;
      }
    }
  }
 catch (  SQLException e) {
    String message="Error getting next table information... Error was:" + e.toString();
    Debug.logError(message,module);
    if (messages != null)     messages.add(message);
  }
 finally {
    try {
      tableSet.close();
    }
 catch (    SQLException e) {
      String message="Unable to close ResultSet for table list, continuing anyway... Error was:" + e.toString();
      Debug.logError(message,module);
      if (messages != null)       messages.add(message);
    }
    try {
      connection.close();
    }
 catch (    SQLException e) {
      String message="Unable to close database connection, continuing anyway... Error was:" + e.toString();
      Debug.logError(message,module);
      if (messages != null)       messages.add(message);
    }
  }
  return tableNames;
}
