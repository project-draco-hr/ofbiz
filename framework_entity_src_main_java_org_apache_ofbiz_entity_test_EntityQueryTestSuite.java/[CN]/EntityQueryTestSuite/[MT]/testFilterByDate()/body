{
  delegator.create("TestingType","testingTypeId","filterByDate-1","description","Filter BY Date");
  delegator.create("Testing","testingId","testing-1","testingTypeId","filterByDate-1");
  delegator.create("Testing","testingId","testing-2","testingTypeId","filterByDate-1");
  delegator.create("Testing","testingId","testing-3","testingTypeId","filterByDate-1");
  delegator.create("Testing","testingId","testing-4","testingTypeId","filterByDate-1");
  delegator.create("TestingNode","testingNodeId","testingNode-1");
  delegator.create("TestingNode","testingNodeId","testingNode-2");
  delegator.create("TestingNode","testingNodeId","testingNode-3");
  delegator.create("TestingNode","testingNodeId","testingNode-4");
  delegator.create("TestingNodeMember","testingNodeId","testingNode-1","testingId","testing-1","fromDate",UtilDateTime.nowTimestamp(),"thruDate",UtilDateTime.getNextDayStart(UtilDateTime.nowTimestamp()));
  delegator.create("TestingNodeMember","testingNodeId","testingNode-2","testingId","testing-2","fromDate",UtilDateTime.nowTimestamp(),"thruDate",UtilDateTime.getNextDayStart(UtilDateTime.nowTimestamp()));
  delegator.create("TestingNodeMember","testingNodeId","testingNode-3","testingId","testing-3","fromDate",UtilDateTime.getNextDayStart(UtilDateTime.nowTimestamp()),"thruDate",UtilDateTime.getWeekEnd(UtilDateTime.nowTimestamp()));
  delegator.create("TestingNodeMember","testingNodeId","testingNode-4","testingId","testing-4","fromDate",UtilDateTime.getMonthStart(UtilDateTime.nowTimestamp()),"thruDate",UtilDateTime.getMonthStart(UtilDateTime.nowTimestamp()));
  List<GenericValue> filteredByEntityUtil=EntityUtil.filterByDate(delegator.findList("TestingNodeMember",null,null,UtilMisc.toList("testingNodeId"),null,false));
  List<GenericValue> filteredByEntityQuery=EntityQuery.use(delegator).from("TestingNodeMember").filterByDate().orderBy("testingNodeId").queryList();
  assertEquals("filterByDate(): Number of records found by both the methods matched",filteredByEntityUtil.size(),filteredByEntityQuery.size());
  assertEquals("filterByDate(): Record matched = testingNodeId",filteredByEntityUtil.get(0).getString("testingNodeId"),filteredByEntityQuery.get(0).getString("testingNodeId"));
  assertEquals("filterByDate(): Record matched = testingId",filteredByEntityUtil.get(0).getString("testingId"),filteredByEntityQuery.get(0).getString("testingId"));
  assertEquals("filterByDate(): Record matched = fromDate",filteredByEntityUtil.get(0).getString("fromDate"),filteredByEntityQuery.get(0).getString("fromDate"));
  assertEquals("filterByDate(): Record matched = thruDate",filteredByEntityUtil.get(0).getString("thruDate"),filteredByEntityQuery.get(0).getString("thruDate"));
}
