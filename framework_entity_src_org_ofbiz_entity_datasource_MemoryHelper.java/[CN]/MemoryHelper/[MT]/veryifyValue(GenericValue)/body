{
  ModelEntity me=value.getModelEntity();
  for (Iterator iterator=me.getPksIterator(); iterator.hasNext(); ) {
    ModelField field=(ModelField)iterator.next();
    if (!value.containsKey(field.getName())) {
      return false;
    }
  }
  for (Iterator iterator=value.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry entry=(Map.Entry)iterator.next();
    if (me.getField((String)entry.getKey()) == null) {
      return false;
    }
  }
  for (Iterator iterator=me.getFieldsIterator(); iterator.hasNext(); ) {
    ModelField field=(ModelField)iterator.next();
    Object o=value.get(field.getName());
    int typeValue=0;
    try {
      typeValue=SqlJdbcUtil.getType(modelFieldTypeReader.getModelFieldType(field.getType()).getJavaType());
    }
 catch (    GenericNotImplementedException e) {
      return false;
    }
    if (o != null) {
switch (typeValue) {
case 1:
        if (!(o instanceof String)) {
          return false;
        }
      break;
case 2:
    if (!(o instanceof java.sql.Timestamp)) {
      return false;
    }
  break;
case 3:
if (!(o instanceof java.sql.Time)) {
  return false;
}
break;
case 4:
if (!(o instanceof java.sql.Date)) {
return false;
}
break;
case 5:
if (!(o instanceof Integer)) {
return false;
}
break;
case 6:
if (!(o instanceof Long)) {
return false;
}
break;
case 7:
if (!(o instanceof Float)) {
return false;
}
break;
case 8:
if (!(o instanceof Double)) {
return false;
}
break;
case 10:
if (!(o instanceof Boolean)) {
return false;
}
break;
}
}
}
return true;
}
