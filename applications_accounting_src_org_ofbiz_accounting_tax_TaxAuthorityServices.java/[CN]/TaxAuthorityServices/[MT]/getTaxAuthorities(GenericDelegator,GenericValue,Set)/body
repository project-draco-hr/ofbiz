{
  Set geoIdSet=FastSet.newInstance();
  if (shippingAddress != null) {
    if (UtilValidate.isNotEmpty(shippingAddress.getString("countryGeoId"))) {
      geoIdSet.add(shippingAddress.getString("countryGeoId"));
    }
    if (UtilValidate.isNotEmpty(shippingAddress.getString("stateProvinceGeoId"))) {
      geoIdSet.add(shippingAddress.getString("stateProvinceGeoId"));
    }
    if (UtilValidate.isNotEmpty(shippingAddress.getString("countyGeoId"))) {
      geoIdSet.add(shippingAddress.getString("countyGeoId"));
    }
    String postalCodeGeoId=ContactMechWorker.getPostalAddressPostalCodeGeoId(shippingAddress,delegator);
    if (UtilValidate.isNotEmpty(postalCodeGeoId)) {
      geoIdSet.add(postalCodeGeoId);
    }
  }
  geoIdSet=GeoWorker.expandGeoRegionDeep(geoIdSet,delegator);
  List taxAuthorityRawList=delegator.findByConditionCache("TaxAuthority",new EntityExpr("taxAuthGeoId",EntityOperator.IN,geoIdSet),null,null);
  taxAuthoritySet.addAll(taxAuthorityRawList);
}
