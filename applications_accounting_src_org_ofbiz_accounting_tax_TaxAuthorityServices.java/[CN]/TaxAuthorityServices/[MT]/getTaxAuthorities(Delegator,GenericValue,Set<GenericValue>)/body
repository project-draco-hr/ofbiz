{
  Map<String,String> geoIdByTypeMap=FastMap.newInstance();
  if (shippingAddress != null) {
    if (UtilValidate.isNotEmpty(shippingAddress.getString("countryGeoId"))) {
      geoIdByTypeMap.put("COUNTRY",shippingAddress.getString("countryGeoId"));
    }
    if (UtilValidate.isNotEmpty(shippingAddress.getString("stateProvinceGeoId"))) {
      geoIdByTypeMap.put("STATE",shippingAddress.getString("stateProvinceGeoId"));
    }
    if (UtilValidate.isNotEmpty(shippingAddress.getString("countyGeoId"))) {
      geoIdByTypeMap.put("COUNTY",shippingAddress.getString("countyGeoId"));
    }
    String postalCodeGeoId=ContactMechWorker.getPostalAddressPostalCodeGeoId(shippingAddress,delegator);
    if (UtilValidate.isNotEmpty(postalCodeGeoId)) {
      geoIdByTypeMap.put("POSTAL_CODE",postalCodeGeoId);
    }
  }
 else {
    Debug.logWarning("shippingAddress was null, adding nothing to taxAuthoritySet",module);
  }
  geoIdByTypeMap=GeoWorker.expandGeoRegionDeep(geoIdByTypeMap,delegator);
  List<GenericValue> taxAuthorityRawList=delegator.findList("TaxAuthority",EntityCondition.makeCondition("taxAuthGeoId",EntityOperator.IN,geoIdByTypeMap.values()),null,null,null,true);
  taxAuthoritySet.addAll(taxAuthorityRawList);
}
