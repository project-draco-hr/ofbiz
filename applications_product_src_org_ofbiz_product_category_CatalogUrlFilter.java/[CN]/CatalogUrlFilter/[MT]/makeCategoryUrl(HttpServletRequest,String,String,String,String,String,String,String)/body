{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  try {
    GenericValue productCategory=delegator.findOne("ProductCategory",UtilMisc.toMap("productCategoryId",productCategoryId),true);
    CategoryContentWrapper wrapper=new CategoryContentWrapper(productCategory,request);
    StringWrapper alternativeUrl=wrapper.get("ALTERNATIVE_URL");
    if (UtilValidate.isNotEmpty(alternativeUrl) && UtilValidate.isNotEmpty(alternativeUrl.toString())) {
      StringBuilder urlBuilder=new StringBuilder();
      urlBuilder.append(request.getSession().getServletContext().getContextPath());
      if (urlBuilder.charAt(urlBuilder.length() - 1) != '/') {
        urlBuilder.append("/");
      }
      urlBuilder.append(alternativeUrl);
      if (UtilValidate.isNotEmpty(viewIndex)) {
        if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
          urlBuilder.append("?");
        }
        urlBuilder.append("viewIndex=" + viewIndex + "&");
      }
      if (UtilValidate.isNotEmpty(viewSize)) {
        if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
          urlBuilder.append("?");
        }
        urlBuilder.append("viewSize=" + viewSize + "&");
      }
      if (UtilValidate.isNotEmpty(viewSort)) {
        if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
          urlBuilder.append("?");
        }
        urlBuilder.append("viewSort=" + viewSort + "&");
      }
      if (UtilValidate.isNotEmpty(searchString)) {
        if (!urlBuilder.toString().endsWith("?") && !urlBuilder.toString().endsWith("&")) {
          urlBuilder.append("?");
        }
        urlBuilder.append("searchString=" + searchString + "&");
      }
      return urlBuilder.toString();
    }
 else {
      return CatalogUrlServlet.makeCatalogUrl(request,productId,productCategoryId,previousCategoryId);
    }
  }
 catch (  GenericEntityException e) {
    Debug.logWarning(e,"Cannot create category's URL for: " + productCategoryId,module);
    return redirectUrl;
  }
}
