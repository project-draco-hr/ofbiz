{
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Delegator delegator=dctx.getDelegator();
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String orderId=(String)context.get("orderId");
  Locale locale=(Locale)context.get("locale");
  OrderReadHelper orh=new OrderReadHelper(delegator,orderId);
  String productStoreId=orh.getProductStoreId();
  GenericValue orderHeader=orh.getOrderHeader();
  String orderStatus=orderHeader.getString("statusId");
  if ("ORDER_CANCELLED".equals(orderStatus) || "ORDER_REJECTED".equals(orderStatus)) {
    return ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"OrderProcessOrderPaymentsStatusInvalid",locale) + orderStatus);
  }
  if (!"PURCHASE_ORDER".equals(orh.getOrderTypeId())) {
    GenericValue productStore=ProductStoreWorker.getProductStore(productStoreId,delegator);
    Map<String,Object> paymentResp=null;
    try {
      Debug.logInfo("Calling process payments...",module);
      paymentResp=CheckOutHelper.processPayment(orderId,orh.getOrderGrandTotal(),orh.getCurrency(),productStore,userLogin,false,false,dispatcher,delegator);
    }
 catch (    GeneralException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
catch (    GeneralRuntimeException e) {
      Debug.logError(e,module);
      return ServiceUtil.returnError(e.getMessage());
    }
    if (ServiceUtil.isError(paymentResp)) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"OrderProcessOrderPayments",locale),null,null,paymentResp);
    }
  }
  return ServiceUtil.returnSuccess();
}
