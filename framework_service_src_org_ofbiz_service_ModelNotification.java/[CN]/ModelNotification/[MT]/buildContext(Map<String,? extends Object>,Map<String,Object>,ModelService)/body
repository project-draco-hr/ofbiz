{
  Map<String,Object> userLogin=UtilGenerics.checkMap(context.get("userLogin"));
  String partyId=null;
  if (userLogin != null) {
    partyId=(String)userLogin.get("partyId");
  }
  String screen=getScreen();
  if (screen == null) {
    throw new GenericServiceException("SCREEN is a required attribute; check serviceengine.xml group definition; cannot generate notification");
  }
  String subject=getSubject();
  String from=buildFrom();
  String bcc=buildBcc();
  String cc=buildCc();
  String to=buildTo();
  if (subject == null || from == null || to == null) {
    throw new GenericServiceException("TO, FROM and SUBJECT are required for notifications; check serviceengine.xml group definition");
  }
  Map<String,Object> notifyContext=FastMap.newInstance();
  Map<String,Object> bodyParams=FastMap.newInstance();
  bodyParams.put("serviceContext",context);
  bodyParams.put("serviceResult",result);
  bodyParams.put("service",model);
  notifyContext.put("bodyParameters",bodyParams);
  notifyContext.put("sendFrom",from);
  notifyContext.put("sendBcc",bcc);
  notifyContext.put("sendCc",cc);
  notifyContext.put("sendTo",to);
  notifyContext.put("subject",subject);
  notifyContext.put("partyId",partyId);
  notifyContext.put("bodyScreenUri",screen);
  return notifyContext;
}
