{
  if (UtilValidate.isEmpty(geoIdByTypeMapOrig)) {
    return geoIdByTypeMapOrig;
  }
  Map<String,String> geoIdByTypeMapTemp=new LinkedHashMap<String,String>();
  for (  Map.Entry<String,String> geoIdByTypeEntry : geoIdByTypeMapOrig.entrySet()) {
    List<GenericValue> geoAssocList=delegator.findByAnd("GeoAssoc",UtilMisc.toMap("geoIdTo",geoIdByTypeEntry.getValue(),"geoAssocTypeId","REGIONS"),null,true);
    for (    GenericValue geoAssoc : geoAssocList) {
      GenericValue newGeo=EntityQuery.use(delegator).from("Geo").where("geoId",geoAssoc.get("geoId")).cache().queryOne();
      geoIdByTypeMapTemp.put(newGeo.getString("geoTypeId"),newGeo.getString("geoId"));
    }
  }
  geoIdByTypeMapTemp=expandGeoRegionDeep(geoIdByTypeMapTemp,delegator);
  Map<String,String> geoIdByTypeMapNew=new LinkedHashMap<String,String>();
  geoIdByTypeMapNew.putAll(geoIdByTypeMapTemp);
  geoIdByTypeMapNew.putAll(geoIdByTypeMapOrig);
  return geoIdByTypeMapNew;
}
