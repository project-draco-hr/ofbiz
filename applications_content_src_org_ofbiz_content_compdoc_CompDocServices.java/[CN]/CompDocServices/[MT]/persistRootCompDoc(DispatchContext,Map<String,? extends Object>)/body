{
  Map<String,Object> result=FastMap.newInstance();
  Delegator delegator=dctx.getDelegator();
  LocalDispatcher dispatcher=dctx.getDispatcher();
  Locale locale=(Locale)context.get("locale");
  GenericValue userLogin=(GenericValue)context.get("userLogin");
  String contentId=(String)context.get("contentId");
  if (UtilValidate.isNotEmpty(contentId)) {
    try {
      EntityQuery.use(delegator).from("Content").where("contentId",contentId).queryOne();
    }
 catch (    GenericEntityException e) {
      Debug.logError(e,"Error running serviceName persistContentAndAssoc",module);
      return ServiceUtil.returnError(UtilProperties.getMessage(CoreEvents.err_resource,"ContentNoContentFound",UtilMisc.toMap("contentId",contentId),locale));
    }
  }
  ModelService modelService=null;
  try {
    modelService=dispatcher.getDispatchContext().getModelService("persistContentAndAssoc");
  }
 catch (  GenericServiceException e) {
    Debug.logError("Error getting model service for serviceName, 'persistContentAndAssoc'. " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(CoreEvents.err_resource,"coreEvents.error_modelservice_for_srv_name",locale));
  }
  Map<String,Object> persistMap=modelService.makeValid(context,ModelService.IN_PARAM);
  persistMap.put("userLogin",userLogin);
  try {
    Map<String,Object> persistContentResult=dispatcher.runSync("persistContentAndAssoc",persistMap);
    if (ServiceUtil.isError(persistContentResult)) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentContentCreatingError",UtilMisc.toMap("serviceName","persistContentAndAssoc"),locale),null,null,persistContentResult);
    }
    contentId=(String)persistContentResult.get("contentId");
    result.putAll(persistContentResult);
    Map<String,Object> contentRevisionMap=FastMap.newInstance();
    contentRevisionMap.put("itemContentId",contentId);
    contentRevisionMap.put("contentId",contentId);
    contentRevisionMap.put("userLogin",userLogin);
    Map<String,Object> persistRevResult=dispatcher.runSync("persistContentRevisionAndItem",contentRevisionMap);
    if (ServiceUtil.isError(persistRevResult)) {
      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentContentCreatingError",UtilMisc.toMap("serviceName","persistContentRevisionAndItem"),locale),null,null,persistRevResult);
    }
    result.putAll(persistRevResult);
    return result;
  }
 catch (  GenericServiceException e) {
    Debug.logError(e,"Error running serviceName, 'persistContentAndAssoc'. " + e.toString(),module);
    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ContentContentCreatingError",UtilMisc.toMap("serviceName","persistContentAndAssoc"),locale) + e.toString());
  }
}
