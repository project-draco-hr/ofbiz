{
  super(element,modelFormField);
  this.allowEmpty="true".equals(element.getAttribute("allow-empty"));
  this.allowMulti="true".equals(element.getAttribute("allow-multiple"));
  Element autoCompleteElement=UtilXml.firstChildElement(element,"auto-complete");
  if (autoCompleteElement != null) {
    this.autoComplete=new AutoComplete(autoCompleteElement);
  }
 else {
    this.autoComplete=null;
  }
  this.current=element.getAttribute("current");
  this.currentDescription=FlexibleStringExpander.getInstance(element.getAttribute("current-description"));
  int otherFieldSize=0;
  String sizeStr=element.getAttribute("other-field-size");
  if (!sizeStr.isEmpty()) {
    try {
      otherFieldSize=Integer.parseInt(sizeStr);
    }
 catch (    NumberFormatException e) {
      Debug.logError("Could not parse the size value of the text element: [" + sizeStr + "], setting to the default of 0",module);
    }
  }
  this.otherFieldSize=otherFieldSize;
  String size=element.getAttribute("size");
  if (size.isEmpty()) {
    size="1";
  }
  this.size=size;
  Element subHyperlinkElement=UtilXml.firstChildElement(element,"sub-hyperlink");
  if (subHyperlinkElement != null) {
    this.subHyperlink=new SubHyperlink(subHyperlinkElement,this.getModelFormField());
  }
 else {
    this.subHyperlink=null;
  }
  String textSize=element.getAttribute("text-size");
  if (textSize.isEmpty()) {
    textSize="0";
  }
  this.textSize=textSize;
}
