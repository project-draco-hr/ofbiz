{
  boolean isEntity="entity".equals(curEntityElement.getNodeName());
  String entityName=UtilXml.checkEmpty(curEntityElement.getAttribute("entity-name")).intern();
  Collection<String> resourceHandlerEntityNames=resourceHandlerEntities.get(entityResourceHandler);
  if (resourceHandlerEntityNames == null) {
    resourceHandlerEntityNames=FastList.newInstance();
    resourceHandlerEntities.put(entityResourceHandler,resourceHandlerEntityNames);
  }
  resourceHandlerEntityNames.add(entityName);
  if (entityCache.containsKey(entityName)) {
    Debug.logWarning("WARNING: Entity " + entityName + " is defined more than once, most recent will over-write "+ "previous definition(s)",module);
    Debug.logWarning("WARNING: Entity " + entityName + " was found in "+ entityResourceHandler+ ", but was already defined in "+ entityResourceHandlerMap.get(entityName).toString(),module);
  }
  entityResourceHandlerMap.put(entityName,entityResourceHandler);
  ModelEntity modelEntity=null;
  if (isEntity) {
    modelEntity=createModelEntity(curEntityElement,null,def);
  }
 else {
    modelEntity=createModelViewEntity(curEntityElement,null,def);
  }
  String resourceLocation=entityResourceHandler.getLocation();
  try {
    resourceLocation=entityResourceHandler.getURL().toExternalForm();
  }
 catch (  GenericConfigException e) {
    Debug.logError(e,"Could not get resource URL",module);
  }
  if (modelEntity != null) {
    modelEntity.setLocation(resourceLocation);
    entityCache.put(entityName,modelEntity);
    if (isEntity) {
      if (Debug.verboseOn())       Debug.logVerbose("-- [Entity]: #" + i + ": "+ entityName,module);
    }
 else {
      if (Debug.verboseOn())       Debug.logVerbose("-- [ViewEntity]: #" + i + ": "+ entityName,module);
    }
  }
 else {
    Debug.logWarning("-- -- ENTITYGEN ERROR:getModelEntity: Could not create " + "entity for entityName: " + entityName,module);
  }
  return modelEntity;
}
