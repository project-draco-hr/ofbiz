{
  GenericDelegator delegator=dctx.getDelegator();
  String categoryId=(String)context.get("categoryId");
  String productId=(String)context.get("productId");
  Integer index=(Integer)context.get("index");
  if (index == null && productId == null) {
    return ServiceUtil.returnError("Both Index and ProductID cannot be null.");
  }
  Map values=getCategoryMembers(dctx,context);
  if (values.containsKey(ModelService.ERROR_MESSAGE)) {
    return values;
  }
  if (!values.containsKey("categoryMembers") || values.get("categoryMembers") == null) {
    return ServiceUtil.returnError("Problem reading category data.");
  }
  Collection memberCol=(Collection)values.get("categoryMembers");
  if (memberCol == null || memberCol.size() == 0) {
    return ServiceUtil.returnSuccess("Product not found in the current category.");
  }
  List memberList=new ArrayList(memberCol);
  if (productId != null && index == null) {
    Iterator i=memberList.iterator();
    while (i.hasNext()) {
      GenericValue v=(GenericValue)i.next();
      if (v.getString("productId").equals(productId))       index=new Integer(memberList.indexOf(v));
    }
  }
  if (index == null) {
    return ServiceUtil.returnSuccess("Product not found in the current category.");
  }
  Map result=ServiceUtil.returnSuccess();
  result.put("category",values.get("category"));
  String previous=null;
  String next=null;
  if (index.intValue() - 1 >= 0 && index.intValue() - 1 < memberList.size()) {
    previous=((GenericValue)memberList.get(index.intValue() - 1)).getString("productId");
    result.put("previousProductId",previous);
  }
 else {
    previous=((GenericValue)memberList.get(memberList.size() - 1)).getString("productId");
    result.put("previousProductId",previous);
  }
  if (index.intValue() + 1 < memberList.size()) {
    next=((GenericValue)memberList.get(index.intValue() + 1)).getString("productId");
    result.put("nextProductId",next);
  }
 else {
    next=((GenericValue)memberList.get(0)).getString("productId");
    result.put("nextProductId",next);
  }
  return result;
}
