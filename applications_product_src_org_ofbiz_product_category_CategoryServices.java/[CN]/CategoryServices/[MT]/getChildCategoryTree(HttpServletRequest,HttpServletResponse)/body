{
  Delegator delegator=(Delegator)request.getAttribute("delegator");
  String productCategoryId=request.getParameter("productCategoryId");
  String isCatalog=request.getParameter("isCatalog");
  String entityName=null;
  String primaryKeyName=null;
  if (isCatalog.equals("true")) {
    entityName="ProdCatalog";
    primaryKeyName="prodCatalogId";
  }
 else {
    entityName="ProductCategory";
    primaryKeyName="productCategoryId";
  }
  List categoryList=FastList.newInstance();
  List<GenericValue> childOfCats;
  try {
    GenericValue category=delegator.findByPrimaryKey(entityName,UtilMisc.toMap(primaryKeyName,productCategoryId));
    if (UtilValidate.isNotEmpty(category)) {
      if (isCatalog.equals("true")) {
        CategoryWorker.getRelatedCategories(request,"ChildCatalogList",CatalogWorker.getCatalogTopCategoryId(request,productCategoryId),true);
        childOfCats=(List<GenericValue>)request.getAttribute("ChildCatalogList");
      }
 else {
        childOfCats=delegator.findByAnd("ProductCategoryRollup",UtilMisc.toMap("parentProductCategoryId",productCategoryId));
      }
      if (UtilValidate.isNotEmpty(childOfCats)) {
        for (        GenericValue childOfCat : childOfCats) {
          Object catId=null;
          String catNameField=null;
          catId=childOfCat.get("productCategoryId");
          catNameField="CATEGORY_NAME";
          Map josonMap=FastMap.newInstance();
          List<GenericValue> childList=null;
          childList=delegator.findByAnd("ProductCategoryRollup",UtilMisc.toMap("parentProductCategoryId",catId));
          GenericValue cate=delegator.findByPrimaryKey("ProductCategory",UtilMisc.toMap("productCategoryId",catId));
          if (UtilValidate.isNotEmpty(childList)) {
            josonMap.put("state","closed");
          }
          Map dataMap=FastMap.newInstance();
          Map dataAttrMap=FastMap.newInstance();
          CategoryContentWrapper categoryContentWrapper=new CategoryContentWrapper(cate,request);
          if (UtilValidate.isNotEmpty(categoryContentWrapper.get(catNameField))) {
            dataMap.put("title",categoryContentWrapper.get(catNameField) + "[" + catId+ "]");
          }
 else {
            dataMap.put("title",catId);
          }
          dataAttrMap.put("onClick","window.location.href='EditCategory?productCategoryId=" + catId + "'; return false;");
          dataMap.put("attr",dataAttrMap);
          josonMap.put("data",dataMap);
          Map attrMap=FastMap.newInstance();
          attrMap.put("id",catId);
          attrMap.put("isCatalog",false);
          attrMap.put("rel","CATEGORY");
          josonMap.put("attr",attrMap);
          categoryList.add(josonMap);
        }
        toJsonObjectList(categoryList,response);
      }
    }
  }
 catch (  GenericEntityException e) {
    e.printStackTrace();
  }
}
